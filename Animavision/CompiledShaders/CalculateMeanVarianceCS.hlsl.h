#if 0
;
; Note: shader requires additional functionality:
;       Wave level operations
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader debug name: 996e73a53d7a405a020f149c8f962061.pdb
; shader hash: 996e73a53d7a405a020f149c8f962061
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer cb
; {
;
;   struct cb
;   {
;
;       struct struct.CalculateMeanVarianceConstantBuffer
;       {
;
;           uint2 textureDim;                         ; Offset:    0
;           uint kernelWidth;                         ; Offset:    8
;           uint kernelRadius;                        ; Offset:   12
;           int doCheckerboardSampling;               ; Offset:   16
;           int areEvenPixelsActive;                  ; Offset:   20
;           uint pixelStepY;                          ; Offset:   24
;           float padding;                            ; Offset:   28
;       
;       } cb;                                         ; Offset:    0
;
;   
;   } cb;                                             ; Offset:    0 Size:    32
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb                                cbuffer      NA          NA     CB0            cb0     1
; g_inValue                         texture     f32          2d      T0             t0     1
; g_outMeanVariance                     UAV     f32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%"class.RWTexture2D<vector<float, 2> >" = type { <2 x float> }
%cb = type { %struct.CalculateMeanVarianceConstantBuffer }
%struct.CalculateMeanVarianceConstantBuffer = type { <2 x i32>, i32, i32, i32, i32, i32, float }

@"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim" = addrspace(3) global [128 x i32] undef, align 4
@"\01?NumValuesCache@@3PAY07$$CAIA.1dim" = addrspace(3) global [128 x i32] undef, align 4
@dx.nothing.a = internal constant [1 x i32] zeroinitializer

define void @main() {
  %g_outMeanVariance_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false), !dbg !184 ; line:91 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_inValue_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false), !dbg !184 ; line:91 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %cb_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false), !dbg !184 ; line:91 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.groupId.i32(i32 94, i32 0), !dbg !191 ; line:192 col:97  ; GroupId(component)
  %2 = call i32 @dx.op.groupId.i32(i32 94, i32 1), !dbg !191 ; line:192 col:97  ; GroupId(component)
  %3 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0), !dbg !191 ; line:192 col:97  ; ThreadIdInGroup(component)
  %4 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1), !dbg !191 ; line:192 col:97  ; ThreadIdInGroup(component)
  %5 = call i32 @dx.op.flattenedThreadIdInGroup.i32(i32 96), !dbg !191 ; line:192 col:97  ; FlattenedThreadIdInGroup()
  %6 = call i32 @dx.op.threadId.i32(i32 93, i32 0), !dbg !191 ; line:192 col:97  ; ThreadId(component)
  %7 = call i32 @dx.op.threadId.i32(i32 93, i32 1), !dbg !191 ; line:192 col:97  ; ThreadId(component)
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !192, metadata !193), !dbg !191 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !192, metadata !194), !dbg !191 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !195, metadata !196), !dbg !197 ; var:"GI" !DIExpression() func:"main"
  call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !198, metadata !193), !dbg !199 ; var:"GTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !198, metadata !194), !dbg !199 ; var:"GTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !200, metadata !193), !dbg !201 ; var:"Gid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !200, metadata !194), !dbg !201 ; var:"Gid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %8 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !202 ; line:194 col:5
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !203, metadata !196), !dbg !204 ; var:"GI" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !205, metadata !193), !dbg !206 ; var:"Gid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !205, metadata !194), !dbg !206 ; var:"Gid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %9 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !207 ; line:58 col:48
  %10 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !208 ; line:58 col:65  ; CBufferLoadLegacy(handle,regIndex)
  %11 = extractvalue %dx.types.CBufRet.i32 %10, 2, !dbg !208 ; line:58 col:65
  %12 = sub i32 %11, 1, !dbg !209 ; line:58 col:77
  %13 = add i32 8, %12, !dbg !210 ; line:58 col:59
  %14 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !211 ; line:58 col:16
  call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !212, metadata !196), !dbg !211 ; var:"NumValuesToLoadPerRowOrColumn" !DIExpression() func:"FilterHorizontally"
  %15 = urem i32 %5, 16, !dbg !213 ; line:63 col:36
  %16 = udiv i32 %5, 16, !dbg !214 ; line:63 col:45
  %17 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !215 ; line:63 col:11
  call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !216, metadata !193), !dbg !215 ; var:"GTid4x16_row0" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !216, metadata !194), !dbg !215 ; var:"GTid4x16_row0" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %18 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !217 ; line:64 col:41
  %.i020 = mul i32 %1, 8, !dbg !218 ; line:64 col:39
  %.i121 = mul i32 %2, 8, !dbg !218 ; line:64 col:39
  %19 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !219 ; line:64 col:59  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.i32 %19, 3, !dbg !219 ; line:64 col:59
  %.i022 = sub i32 %.i020, %20, !dbg !220 ; line:64 col:50
  %.i123 = sub i32 %.i121, %20, !dbg !220 ; line:64 col:50
  %21 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !221 ; line:64 col:87  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.i32 %21, 2, !dbg !221 ; line:64 col:87
  %.i025 = mul i32 %.i022, 1, !dbg !222 ; line:64 col:74
  %.i126 = mul i32 %.i123, %22, !dbg !222 ; line:64 col:74
  %23 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !223 ; line:64 col:16
  call void @llvm.dbg.value(metadata i32 %.i025, i64 0, metadata !224, metadata !193), !dbg !223 ; var:"KernelBasePixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i126, i64 0, metadata !224, metadata !194), !dbg !223 ; var:"KernelBasePixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %WaveGetLaneIndex = call i32 @dx.op.waveGetLaneIndex(i32 111), !dbg !226 ; line:66 col:41  ; WaveGetLaneIndex()
  %24 = udiv i32 %WaveGetLaneIndex, 16, !dbg !227 ; line:66 col:60
  %25 = mul i32 %24, 16, !dbg !228 ; line:66 col:66
  %26 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !229 ; line:66 col:16
  call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !230, metadata !196), !dbg !229 ; var:"Row_BaseWaveLaneIndex" !DIExpression() func:"FilterHorizontally"
  %27 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !231 ; line:69 col:15
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  br label %.lr.ph9, !dbg !233 ; line:69 col:5

.lr.ph9:                                          ; preds = %0
  br label %28, !dbg !233 ; line:69 col:5

; <label>:28                                      ; preds = %.lr.ph9
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  %.i028.53 = add i32 %15, 0, !dbg !234 ; line:71 col:40
  %.i129.54 = add i32 %16, 0, !dbg !234 ; line:71 col:40
  %29 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !235 ; line:71 col:15
  call void @llvm.dbg.value(metadata i32 %.i028.53, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.54, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i028.53, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.54, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %30 = icmp uge i32 %.i129.54, %13, !dbg !237 ; line:72 col:24
  br i1 %30, label %512, label %31, !dbg !239 ; line:72 col:13

; <label>:31                                      ; preds = %28
  %32 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !240 ; line:82 col:82  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.i32 %32, 2, !dbg !240 ; line:82 col:82
  %.i031.55 = mul i32 %.i028.53, 1, !dbg !241 ; line:82 col:69
  %.i132.56 = mul i32 %.i129.54, %33, !dbg !241 ; line:82 col:69
  %.i033.57 = add i32 %.i025, %.i031.55, !dbg !242 ; line:82 col:58
  %.i134.58 = add i32 %.i126, %.i132.56, !dbg !242 ; line:82 col:58
  %34 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !243 ; line:82 col:22
  call void @llvm.dbg.value(metadata i32 %.i033.57, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.58, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i033.57, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.58, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  %35 = add nsw i32 %.i033.57, %.i134.58, !dbg !247 ; line:47 col:34
  %36 = and i32 %35, 1, !dbg !248 ; line:47 col:45
  %37 = icmp eq i32 %36, 0, !dbg !249 ; line:47 col:50
  %38 = zext i1 %37 to i32, !dbg !250 ; line:47 col:10
  %39 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !250 ; line:47 col:10
  call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !251, metadata !196), !dbg !250 ; var:"isEvenPixel" !DIExpression() func:"GetActivePixelIndex"
  %40 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !252 ; line:49 col:12  ; CBufferLoadLegacy(handle,regIndex)
  %41 = extractvalue %dx.types.CBufRet.i32 %40, 0, !dbg !252 ; line:49 col:12
  %42 = icmp ne i32 %41, 0, !dbg !253 ; line:49 col:9
  %43 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !254 ; line:49 col:41  ; CBufferLoadLegacy(handle,regIndex)
  %44 = extractvalue %dx.types.CBufRet.i32 %43, 1, !dbg !254 ; line:49 col:41
  %45 = icmp ne i32 %38, 0, !dbg !255 ; line:49 col:64
  %46 = zext i1 %45 to i32, !dbg !255 ; line:49 col:64
  %47 = icmp ne i32 %44, %46, !dbg !256 ; line:49 col:61
  %48 = and i1 %42, %47, !dbg !257 ; line:49 col:35
  %.i036.59 = add i32 %.i033.57, 0, !dbg !258 ; line:50 col:17
  %.i138.60 = add i32 %.i134.58, 1, !dbg !258 ; line:50 col:17
  %49 = select i1 %48, i32 %.i036.59, i32 %.i033.57, !dbg !253 ; line:49 col:9
  %50 = select i1 %48, i32 %.i138.60, i32 %.i134.58, !dbg !253 ; line:49 col:9
  %51 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !259 ; line:48 col:5
  %52 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !260 ; line:82 col:14
  call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !261, metadata !193), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !261, metadata !194), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %53 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !262 ; line:83 col:15
  call void @llvm.dbg.value(metadata float -1.000000e+00, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %54 = icmp ult i32 %.i028.53, %13, !dbg !264 ; line:89 col:24
  %55 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !265 ; line:89 col:84  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.i32 %55, 0, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %56, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  %57 = extractvalue %dx.types.CBufRet.i32 %55, 1, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %57, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %58 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !269 ; line:89 col:59
  call void @llvm.dbg.value(metadata i32 %56, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %57, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !270, metadata !193), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !270, metadata !194), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %59 = icmp sge i32 %49, 0, !dbg !272 ; line:64 col:20
  %60 = icmp sge i32 %50, 0, !dbg !273 ; line:64 col:36
  %61 = and i1 %59, %60, !dbg !274 ; line:64 col:25
  %62 = icmp slt i32 %49, %56, !dbg !275 ; line:64 col:52
  %63 = and i1 %61, %62, !dbg !276 ; line:64 col:41
  %64 = icmp slt i32 %50, %57, !dbg !277 ; line:64 col:78
  %65 = and i1 %63, %64, !dbg !278 ; line:64 col:67
  %66 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !279 ; line:64 col:5
  %67 = and i1 %54, %65, !dbg !280 ; line:89 col:56
  br i1 %67, label %68, label %71, !dbg !281 ; line:89 col:13

; <label>:68                                      ; preds = %31
  %TextureLoad.61 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inValue_texture_2d, i32 0, i32 %49, i32 %50, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !184 ; line:91 col:21  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.f32 %TextureLoad.61, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %69 = extractvalue %dx.types.ResRet.f32 %TextureLoad.61, 0, !dbg !184 ; line:91 col:21
  %70 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !282 ; line:91 col:19
  br label %71, !dbg !283 ; line:92 col:9

; <label>:71                                      ; preds = %68, %31
  %value.i.0.62 = phi float [ %69, %68 ], [ -1.000000e+00, %31 ]
  call void @llvm.dbg.value(metadata float %value.i.0.62, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %72 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !284 ; line:97 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %73 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !287 ; line:98 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %74 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !289 ; line:99 col:18
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %75 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !291 ; line:106 col:30
  %76 = icmp ult i32 %.i028.53, 8, !dbg !293 ; line:106 col:28
  %77 = fcmp fast une float %value.i.0.62, -1.000000e+00, !dbg !294 ; line:106 col:50
  %78 = and i1 %76, %77, !dbg !295 ; line:106 col:41
  br i1 %78, label %79, label %84, !dbg !296 ; line:106 col:17

; <label>:79                                      ; preds = %71
  %80 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !297 ; line:108 col:26
  call void @llvm.dbg.value(metadata float %value.i.0.62, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %81 = fmul fast float %value.i.0.62, %value.i.0.62, !dbg !299 ; line:109 col:41
  %82 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !300 ; line:109 col:33
  call void @llvm.dbg.value(metadata float %81, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %83 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !301 ; line:110 col:26
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %84, !dbg !302 ; line:111 col:13

; <label>:84                                      ; preds = %79, %71
  %valueSum.i.0.63 = phi float [ %value.i.0.62, %79 ], [ 0.000000e+00, %71 ]
  %squaredValueSum.i.0.64 = phi float [ %81, %79 ], [ 0.000000e+00, %71 ]
  %numValues.i.0.65 = phi i32 [ 1, %79 ], [ 0, %71 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.0.65, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.0.63, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.0.64, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %85 = add i32 %25, 1, !dbg !303 ; line:116 col:17
  %86 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !304 ; line:117 col:33
  %87 = icmp ult i32 %.i028.53, 8, !dbg !305 ; line:117 col:31
  %88 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !306 ; line:119 col:37
  %89 = sub i32 %.i028.53, 8, !dbg !307 ; line:119 col:35
  %90 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !308 ; line:119 col:54  ; CBufferLoadLegacy(handle,regIndex)
  %91 = extractvalue %dx.types.CBufRet.i32 %90, 3, !dbg !308 ; line:119 col:54
  %92 = add i32 %89, %91, !dbg !309 ; line:119 col:49
  %93 = select i1 %87, i32 %.i028.53, i32 %92, !dbg !310 ; line:117 col:20
  %94 = add i32 %85, %93, !dbg !311 ; line:117 col:17
  %95 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !312 ; line:114 col:18
  call void @llvm.dbg.value(metadata i32 %94, i64 0, metadata !313, metadata !196), !dbg !312 ; var:"Row_KernelStartLaneIndex" !DIExpression() func:"FilterHorizontally"
  %96 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !314 ; line:121 col:23
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %97 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %98 = extractvalue %dx.types.CBufRet.i32 %97, 3, !dbg !317 ; line:121 col:37
  %99 = icmp ult i32 0, %98, !dbg !319 ; line:121 col:32
  br i1 %99, label %.lr.ph7.66, label %119, !dbg !320 ; line:121 col:13

.lr.ph7.66:                                       ; preds = %84
  br label %100, !dbg !320 ; line:121 col:13

; <label>:100                                     ; preds = %113, %.lr.ph7.66
  %valueSum.i.1.67 = phi float [ %valueSum.i.0.63, %.lr.ph7.66 ], [ %valueSum.i.2.72, %113 ]
  %squaredValueSum.i.1.68 = phi float [ %squaredValueSum.i.0.64, %.lr.ph7.66 ], [ %squaredValueSum.i.2.73, %113 ]
  %numValues.i.1.69 = phi i32 [ %numValues.i.0.65, %.lr.ph7.66 ], [ %numValues.i.2.74, %113 ]
  %c.i.0.70 = phi i32 [ 0, %.lr.ph7.66 ], [ %114, %113 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.1.69, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.1.68, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.1.67, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %c.i.0.70, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %101 = add i32 %94, %c.i.0.70, !dbg !321 ; line:123 col:64
  %102 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !323 ; line:123 col:22
  call void @llvm.dbg.value(metadata i32 %101, i64 0, metadata !324, metadata !196), !dbg !323 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt.71 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %value.i.0.62, i32 %101), !dbg !325 ; line:124 col:32  ; WaveReadLaneAt(value,lane)
  %103 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !326 ; line:124 col:23
  call void @llvm.dbg.value(metadata float %WaveReadLaneAt.71, i64 0, metadata !327, metadata !196), !dbg !326 ; var:"cValue" !DIExpression() func:"FilterHorizontally"
  %104 = fcmp fast une float %WaveReadLaneAt.71, -1.000000e+00, !dbg !328 ; line:125 col:28
  br i1 %104, label %105, label %113, !dbg !330 ; line:125 col:21

; <label>:105                                     ; preds = %100
  %106 = fadd fast float %valueSum.i.1.67, %WaveReadLaneAt.71, !dbg !331 ; line:127 col:30
  %107 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !331 ; line:127 col:30
  call void @llvm.dbg.value(metadata float %106, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %108 = fmul fast float %WaveReadLaneAt.71, %WaveReadLaneAt.71, !dbg !333 ; line:128 col:47
  %109 = fadd fast float %squaredValueSum.i.1.68, %108, !dbg !334 ; line:128 col:37
  %110 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !334 ; line:128 col:37
  call void @llvm.dbg.value(metadata float %109, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %111 = add i32 %numValues.i.1.69, 1, !dbg !335 ; line:129 col:30
  %112 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !335 ; line:129 col:30
  call void @llvm.dbg.value(metadata i32 %111, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %113, !dbg !336 ; line:130 col:17

; <label>:113                                     ; preds = %105, %100
  %valueSum.i.2.72 = phi float [ %106, %105 ], [ %valueSum.i.1.67, %100 ]
  %squaredValueSum.i.2.73 = phi float [ %109, %105 ], [ %squaredValueSum.i.1.68, %100 ]
  %numValues.i.2.74 = phi i32 [ %111, %105 ], [ %numValues.i.1.69, %100 ]
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.2.73, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.2.74, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.2.72, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %114 = add i32 %c.i.0.70, 1, !dbg !337 ; line:121 col:52
  %115 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !337 ; line:121 col:52
  call void @llvm.dbg.value(metadata i32 %114, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %116 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %117 = extractvalue %dx.types.CBufRet.i32 %116, 3, !dbg !317 ; line:121 col:37
  %118 = icmp ult i32 %114, %117, !dbg !319 ; line:121 col:32
  br i1 %118, label %100, label %._crit_edge.75, !dbg !320 ; line:121 col:13

._crit_edge.75:                                   ; preds = %113
  br label %119, !dbg !320 ; line:121 col:13

; <label>:119                                     ; preds = %._crit_edge.75, %84
  %valueSum.i.310.76 = phi float [ %valueSum.i.2.72, %._crit_edge.75 ], [ %valueSum.i.0.63, %84 ]
  %squaredValueSum.i.3.77 = phi float [ %squaredValueSum.i.2.73, %._crit_edge.75 ], [ %squaredValueSum.i.0.64, %84 ]
  %numValues.i.3.78 = phi i32 [ %numValues.i.2.74, %._crit_edge.75 ], [ %numValues.i.0.65, %84 ]
  call void @llvm.dbg.value(metadata float %valueSum.i.310.76, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.3.78, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.3.77, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %120 = add i32 %25, %.i028.53, !dbg !338 ; line:134 col:85
  %121 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !339 ; line:134 col:100
  %122 = add i32 %120, 8, !dbg !340 ; line:134 col:98
  %WaveGetLaneCount.79 = call i32 @dx.op.waveGetLaneCount(i32 112), !dbg !341 ; line:134 col:39  ; WaveGetLaneCount()
  %123 = sub i32 %WaveGetLaneCount.79, 1, !dbg !342 ; line:134 col:58
  %UMin.80 = call i32 @dx.op.binary.i32(i32 40, i32 %123, i32 %122), !dbg !343 ; line:134 col:35  ; UMin(a,b)
  %124 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !344 ; line:134 col:18
  call void @llvm.dbg.value(metadata i32 %UMin.80, i64 0, metadata !345, metadata !196), !dbg !344 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt12.81 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %valueSum.i.310.76, i32 %UMin.80), !dbg !346 ; line:135 col:25  ; WaveReadLaneAt(value,lane)
  %125 = fadd fast float %valueSum.i.310.76, %WaveReadLaneAt12.81, !dbg !347 ; line:135 col:22
  %126 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !347 ; line:135 col:22
  call void @llvm.dbg.value(metadata float %125, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt11.82 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %squaredValueSum.i.3.77, i32 %UMin.80), !dbg !348 ; line:136 col:32  ; WaveReadLaneAt(value,lane)
  %127 = fadd fast float %squaredValueSum.i.3.77, %WaveReadLaneAt11.82, !dbg !349 ; line:136 col:29
  %128 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !349 ; line:136 col:29
  call void @llvm.dbg.value(metadata float %127, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt14.83 = call i32 @dx.op.waveReadLaneAt.i32(i32 117, i32 %numValues.i.3.78, i32 %UMin.80), !dbg !350 ; line:137 col:26  ; WaveReadLaneAt(value,lane)
  %129 = add i32 %numValues.i.3.78, %WaveReadLaneAt14.83, !dbg !351 ; line:137 col:23
  %130 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !351 ; line:137 col:23
  call void @llvm.dbg.value(metadata i32 %129, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %131 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !352 ; line:140 col:30
  %132 = icmp ult i32 %.i028.53, 8, !dbg !354 ; line:140 col:28
  br i1 %132, label %133, label %147, !dbg !355 ; line:140 col:17

; <label>:133                                     ; preds = %119
  %134 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !356 ; line:142 col:64
  call void @llvm.dbg.value(metadata float %125, i64 0, metadata !358, metadata !193), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 0, 32) func:"Float2ToHalf"
  call void @llvm.dbg.value(metadata float %127, i64 0, metadata !358, metadata !194), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 32, 32) func:"Float2ToHalf"
  %135 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !361 ; line:38 col:10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF1615.84 = call i32 @dx.op.legacyF32ToF16(i32 130, float %125), !dbg !363 ; line:39 col:14  ; LegacyF32ToF16(value)
  %136 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !364 ; line:39 col:12
  call void @llvm.dbg.value(metadata i32 %LegacyF32ToF1615.84, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF16.85 = call i32 @dx.op.legacyF32ToF16(i32 130, float %127), !dbg !365 ; line:40 col:15  ; LegacyF32ToF16(value)
  %137 = shl i32 %LegacyF32ToF16.85, 16, !dbg !366 ; line:40 col:31
  %138 = or i32 %LegacyF32ToF1615.84, %137, !dbg !367 ; line:40 col:12
  %139 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !367 ; line:40 col:12
  call void @llvm.dbg.value(metadata i32 %138, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %140 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !368 ; line:41 col:5
  %141 = mul i32 %.i129.54, 8, !dbg !369 ; line:142 col:17
  %142 = add i32 %.i028.53, %141, !dbg !369 ; line:142 col:17
  %143 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim", i32 0, i32 %142, !dbg !369 ; line:142 col:17
  store i32 %138, i32 addrspace(3)* %143, align 4, !dbg !370 ; line:142 col:62
  %144 = mul i32 %.i129.54, 8, !dbg !371 ; line:143 col:17
  %145 = add i32 %.i028.53, %144, !dbg !371 ; line:143 col:17
  %146 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim", i32 0, i32 %145, !dbg !371 ; line:143 col:17
  store i32 %129, i32 addrspace(3)* %146, align 4, !dbg !372 ; line:143 col:56
  br label %147, !dbg !373 ; line:144 col:13

; <label>:147                                     ; preds = %133, %119
  %148 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !374 ; line:69 col:51
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  br label %149, !dbg !233, !llvm.loop !375 ; line:69 col:5

; <label>:149                                     ; preds = %147
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  %.i028.87 = add i32 %15, 0, !dbg !234 ; line:71 col:40
  %.i129.88 = add i32 %16, 4, !dbg !234 ; line:71 col:40
  %150 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !235 ; line:71 col:15
  call void @llvm.dbg.value(metadata i32 %.i028.87, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.88, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i028.87, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.88, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %151 = icmp uge i32 %.i129.88, %13, !dbg !237 ; line:72 col:24
  br i1 %151, label %512, label %152, !dbg !239 ; line:72 col:13

; <label>:152                                     ; preds = %149
  %153 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !240 ; line:82 col:82  ; CBufferLoadLegacy(handle,regIndex)
  %154 = extractvalue %dx.types.CBufRet.i32 %153, 2, !dbg !240 ; line:82 col:82
  %.i031.89 = mul i32 %.i028.87, 1, !dbg !241 ; line:82 col:69
  %.i132.90 = mul i32 %.i129.88, %154, !dbg !241 ; line:82 col:69
  %.i033.91 = add i32 %.i025, %.i031.89, !dbg !242 ; line:82 col:58
  %.i134.92 = add i32 %.i126, %.i132.90, !dbg !242 ; line:82 col:58
  %155 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !243 ; line:82 col:22
  call void @llvm.dbg.value(metadata i32 %.i033.91, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.92, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i033.91, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.92, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  %156 = add nsw i32 %.i033.91, %.i134.92, !dbg !247 ; line:47 col:34
  %157 = and i32 %156, 1, !dbg !248 ; line:47 col:45
  %158 = icmp eq i32 %157, 0, !dbg !249 ; line:47 col:50
  %159 = zext i1 %158 to i32, !dbg !250 ; line:47 col:10
  %160 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !250 ; line:47 col:10
  call void @llvm.dbg.value(metadata i32 %159, i64 0, metadata !251, metadata !196), !dbg !250 ; var:"isEvenPixel" !DIExpression() func:"GetActivePixelIndex"
  %161 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !252 ; line:49 col:12  ; CBufferLoadLegacy(handle,regIndex)
  %162 = extractvalue %dx.types.CBufRet.i32 %161, 0, !dbg !252 ; line:49 col:12
  %163 = icmp ne i32 %162, 0, !dbg !253 ; line:49 col:9
  %164 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !254 ; line:49 col:41  ; CBufferLoadLegacy(handle,regIndex)
  %165 = extractvalue %dx.types.CBufRet.i32 %164, 1, !dbg !254 ; line:49 col:41
  %166 = icmp ne i32 %159, 0, !dbg !255 ; line:49 col:64
  %167 = zext i1 %166 to i32, !dbg !255 ; line:49 col:64
  %168 = icmp ne i32 %165, %167, !dbg !256 ; line:49 col:61
  %169 = and i1 %163, %168, !dbg !257 ; line:49 col:35
  %.i036.93 = add i32 %.i033.91, 0, !dbg !258 ; line:50 col:17
  %.i138.94 = add i32 %.i134.92, 1, !dbg !258 ; line:50 col:17
  %170 = select i1 %169, i32 %.i036.93, i32 %.i033.91, !dbg !253 ; line:49 col:9
  %171 = select i1 %169, i32 %.i138.94, i32 %.i134.92, !dbg !253 ; line:49 col:9
  %172 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !259 ; line:48 col:5
  %173 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !260 ; line:82 col:14
  call void @llvm.dbg.value(metadata i32 %170, i64 0, metadata !261, metadata !193), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %171, i64 0, metadata !261, metadata !194), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %174 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !262 ; line:83 col:15
  call void @llvm.dbg.value(metadata float -1.000000e+00, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %175 = icmp ult i32 %.i028.87, %13, !dbg !264 ; line:89 col:24
  %176 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !265 ; line:89 col:84  ; CBufferLoadLegacy(handle,regIndex)
  %177 = extractvalue %dx.types.CBufRet.i32 %176, 0, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %177, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  %178 = extractvalue %dx.types.CBufRet.i32 %176, 1, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %178, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %179 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !269 ; line:89 col:59
  call void @llvm.dbg.value(metadata i32 %177, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %178, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %170, i64 0, metadata !270, metadata !193), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %171, i64 0, metadata !270, metadata !194), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %180 = icmp sge i32 %170, 0, !dbg !272 ; line:64 col:20
  %181 = icmp sge i32 %171, 0, !dbg !273 ; line:64 col:36
  %182 = and i1 %180, %181, !dbg !274 ; line:64 col:25
  %183 = icmp slt i32 %170, %177, !dbg !275 ; line:64 col:52
  %184 = and i1 %182, %183, !dbg !276 ; line:64 col:41
  %185 = icmp slt i32 %171, %178, !dbg !277 ; line:64 col:78
  %186 = and i1 %184, %185, !dbg !278 ; line:64 col:67
  %187 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !279 ; line:64 col:5
  %188 = and i1 %175, %186, !dbg !280 ; line:89 col:56
  br i1 %188, label %189, label %192, !dbg !281 ; line:89 col:13

; <label>:189                                     ; preds = %152
  %TextureLoad.95 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inValue_texture_2d, i32 0, i32 %170, i32 %171, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !184 ; line:91 col:21  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.f32 %TextureLoad.95, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %190 = extractvalue %dx.types.ResRet.f32 %TextureLoad.95, 0, !dbg !184 ; line:91 col:21
  %191 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !282 ; line:91 col:19
  br label %192, !dbg !283 ; line:92 col:9

; <label>:192                                     ; preds = %189, %152
  %value.i.0.96 = phi float [ %190, %189 ], [ -1.000000e+00, %152 ]
  call void @llvm.dbg.value(metadata float %value.i.0.96, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %193 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !284 ; line:97 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %194 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !287 ; line:98 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %195 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !289 ; line:99 col:18
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %196 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !291 ; line:106 col:30
  %197 = icmp ult i32 %.i028.87, 8, !dbg !293 ; line:106 col:28
  %198 = fcmp fast une float %value.i.0.96, -1.000000e+00, !dbg !294 ; line:106 col:50
  %199 = and i1 %197, %198, !dbg !295 ; line:106 col:41
  br i1 %199, label %200, label %205, !dbg !296 ; line:106 col:17

; <label>:200                                     ; preds = %192
  %201 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !297 ; line:108 col:26
  call void @llvm.dbg.value(metadata float %value.i.0.96, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %202 = fmul fast float %value.i.0.96, %value.i.0.96, !dbg !299 ; line:109 col:41
  %203 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !300 ; line:109 col:33
  call void @llvm.dbg.value(metadata float %202, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %204 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !301 ; line:110 col:26
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %205, !dbg !302 ; line:111 col:13

; <label>:205                                     ; preds = %200, %192
  %valueSum.i.0.97 = phi float [ %value.i.0.96, %200 ], [ 0.000000e+00, %192 ]
  %squaredValueSum.i.0.98 = phi float [ %202, %200 ], [ 0.000000e+00, %192 ]
  %numValues.i.0.99 = phi i32 [ 1, %200 ], [ 0, %192 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.0.99, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.0.97, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.0.98, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %206 = add i32 %25, 1, !dbg !303 ; line:116 col:17
  %207 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !304 ; line:117 col:33
  %208 = icmp ult i32 %.i028.87, 8, !dbg !305 ; line:117 col:31
  %209 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !306 ; line:119 col:37
  %210 = sub i32 %.i028.87, 8, !dbg !307 ; line:119 col:35
  %211 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !308 ; line:119 col:54  ; CBufferLoadLegacy(handle,regIndex)
  %212 = extractvalue %dx.types.CBufRet.i32 %211, 3, !dbg !308 ; line:119 col:54
  %213 = add i32 %210, %212, !dbg !309 ; line:119 col:49
  %214 = select i1 %208, i32 %.i028.87, i32 %213, !dbg !310 ; line:117 col:20
  %215 = add i32 %206, %214, !dbg !311 ; line:117 col:17
  %216 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !312 ; line:114 col:18
  call void @llvm.dbg.value(metadata i32 %215, i64 0, metadata !313, metadata !196), !dbg !312 ; var:"Row_KernelStartLaneIndex" !DIExpression() func:"FilterHorizontally"
  %217 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !314 ; line:121 col:23
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %218 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %219 = extractvalue %dx.types.CBufRet.i32 %218, 3, !dbg !317 ; line:121 col:37
  %220 = icmp ult i32 0, %219, !dbg !319 ; line:121 col:32
  br i1 %220, label %.lr.ph7.100, label %240, !dbg !320 ; line:121 col:13

.lr.ph7.100:                                      ; preds = %205
  br label %221, !dbg !320 ; line:121 col:13

; <label>:221                                     ; preds = %234, %.lr.ph7.100
  %valueSum.i.1.101 = phi float [ %valueSum.i.0.97, %.lr.ph7.100 ], [ %valueSum.i.2.106, %234 ]
  %squaredValueSum.i.1.102 = phi float [ %squaredValueSum.i.0.98, %.lr.ph7.100 ], [ %squaredValueSum.i.2.107, %234 ]
  %numValues.i.1.103 = phi i32 [ %numValues.i.0.99, %.lr.ph7.100 ], [ %numValues.i.2.108, %234 ]
  %c.i.0.104 = phi i32 [ 0, %.lr.ph7.100 ], [ %235, %234 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.1.103, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.1.102, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.1.101, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %c.i.0.104, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %222 = add i32 %215, %c.i.0.104, !dbg !321 ; line:123 col:64
  %223 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !323 ; line:123 col:22
  call void @llvm.dbg.value(metadata i32 %222, i64 0, metadata !324, metadata !196), !dbg !323 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt.105 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %value.i.0.96, i32 %222), !dbg !325 ; line:124 col:32  ; WaveReadLaneAt(value,lane)
  %224 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !326 ; line:124 col:23
  call void @llvm.dbg.value(metadata float %WaveReadLaneAt.105, i64 0, metadata !327, metadata !196), !dbg !326 ; var:"cValue" !DIExpression() func:"FilterHorizontally"
  %225 = fcmp fast une float %WaveReadLaneAt.105, -1.000000e+00, !dbg !328 ; line:125 col:28
  br i1 %225, label %226, label %234, !dbg !330 ; line:125 col:21

; <label>:226                                     ; preds = %221
  %227 = fadd fast float %valueSum.i.1.101, %WaveReadLaneAt.105, !dbg !331 ; line:127 col:30
  %228 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !331 ; line:127 col:30
  call void @llvm.dbg.value(metadata float %227, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %229 = fmul fast float %WaveReadLaneAt.105, %WaveReadLaneAt.105, !dbg !333 ; line:128 col:47
  %230 = fadd fast float %squaredValueSum.i.1.102, %229, !dbg !334 ; line:128 col:37
  %231 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !334 ; line:128 col:37
  call void @llvm.dbg.value(metadata float %230, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %232 = add i32 %numValues.i.1.103, 1, !dbg !335 ; line:129 col:30
  %233 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !335 ; line:129 col:30
  call void @llvm.dbg.value(metadata i32 %232, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %234, !dbg !336 ; line:130 col:17

; <label>:234                                     ; preds = %226, %221
  %valueSum.i.2.106 = phi float [ %227, %226 ], [ %valueSum.i.1.101, %221 ]
  %squaredValueSum.i.2.107 = phi float [ %230, %226 ], [ %squaredValueSum.i.1.102, %221 ]
  %numValues.i.2.108 = phi i32 [ %232, %226 ], [ %numValues.i.1.103, %221 ]
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.2.107, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.2.108, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.2.106, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %235 = add i32 %c.i.0.104, 1, !dbg !337 ; line:121 col:52
  %236 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !337 ; line:121 col:52
  call void @llvm.dbg.value(metadata i32 %235, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %237 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %238 = extractvalue %dx.types.CBufRet.i32 %237, 3, !dbg !317 ; line:121 col:37
  %239 = icmp ult i32 %235, %238, !dbg !319 ; line:121 col:32
  br i1 %239, label %221, label %._crit_edge.109, !dbg !320 ; line:121 col:13

._crit_edge.109:                                  ; preds = %234
  br label %240, !dbg !320 ; line:121 col:13

; <label>:240                                     ; preds = %._crit_edge.109, %205
  %valueSum.i.310.110 = phi float [ %valueSum.i.2.106, %._crit_edge.109 ], [ %valueSum.i.0.97, %205 ]
  %squaredValueSum.i.3.111 = phi float [ %squaredValueSum.i.2.107, %._crit_edge.109 ], [ %squaredValueSum.i.0.98, %205 ]
  %numValues.i.3.112 = phi i32 [ %numValues.i.2.108, %._crit_edge.109 ], [ %numValues.i.0.99, %205 ]
  call void @llvm.dbg.value(metadata float %valueSum.i.310.110, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.3.112, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.3.111, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %241 = add i32 %25, %.i028.87, !dbg !338 ; line:134 col:85
  %242 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !339 ; line:134 col:100
  %243 = add i32 %241, 8, !dbg !340 ; line:134 col:98
  %WaveGetLaneCount.113 = call i32 @dx.op.waveGetLaneCount(i32 112), !dbg !341 ; line:134 col:39  ; WaveGetLaneCount()
  %244 = sub i32 %WaveGetLaneCount.113, 1, !dbg !342 ; line:134 col:58
  %UMin.114 = call i32 @dx.op.binary.i32(i32 40, i32 %244, i32 %243), !dbg !343 ; line:134 col:35  ; UMin(a,b)
  %245 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !344 ; line:134 col:18
  call void @llvm.dbg.value(metadata i32 %UMin.114, i64 0, metadata !345, metadata !196), !dbg !344 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt12.115 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %valueSum.i.310.110, i32 %UMin.114), !dbg !346 ; line:135 col:25  ; WaveReadLaneAt(value,lane)
  %246 = fadd fast float %valueSum.i.310.110, %WaveReadLaneAt12.115, !dbg !347 ; line:135 col:22
  %247 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !347 ; line:135 col:22
  call void @llvm.dbg.value(metadata float %246, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt11.116 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %squaredValueSum.i.3.111, i32 %UMin.114), !dbg !348 ; line:136 col:32  ; WaveReadLaneAt(value,lane)
  %248 = fadd fast float %squaredValueSum.i.3.111, %WaveReadLaneAt11.116, !dbg !349 ; line:136 col:29
  %249 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !349 ; line:136 col:29
  call void @llvm.dbg.value(metadata float %248, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt14.117 = call i32 @dx.op.waveReadLaneAt.i32(i32 117, i32 %numValues.i.3.112, i32 %UMin.114), !dbg !350 ; line:137 col:26  ; WaveReadLaneAt(value,lane)
  %250 = add i32 %numValues.i.3.112, %WaveReadLaneAt14.117, !dbg !351 ; line:137 col:23
  %251 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !351 ; line:137 col:23
  call void @llvm.dbg.value(metadata i32 %250, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %252 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !352 ; line:140 col:30
  %253 = icmp ult i32 %.i028.87, 8, !dbg !354 ; line:140 col:28
  br i1 %253, label %254, label %268, !dbg !355 ; line:140 col:17

; <label>:254                                     ; preds = %240
  %255 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !356 ; line:142 col:64
  call void @llvm.dbg.value(metadata float %246, i64 0, metadata !358, metadata !193), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 0, 32) func:"Float2ToHalf"
  call void @llvm.dbg.value(metadata float %248, i64 0, metadata !358, metadata !194), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 32, 32) func:"Float2ToHalf"
  %256 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !361 ; line:38 col:10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF1615.118 = call i32 @dx.op.legacyF32ToF16(i32 130, float %246), !dbg !363 ; line:39 col:14  ; LegacyF32ToF16(value)
  %257 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !364 ; line:39 col:12
  call void @llvm.dbg.value(metadata i32 %LegacyF32ToF1615.118, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF16.119 = call i32 @dx.op.legacyF32ToF16(i32 130, float %248), !dbg !365 ; line:40 col:15  ; LegacyF32ToF16(value)
  %258 = shl i32 %LegacyF32ToF16.119, 16, !dbg !366 ; line:40 col:31
  %259 = or i32 %LegacyF32ToF1615.118, %258, !dbg !367 ; line:40 col:12
  %260 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !367 ; line:40 col:12
  call void @llvm.dbg.value(metadata i32 %259, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %261 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !368 ; line:41 col:5
  %262 = mul i32 %.i129.88, 8, !dbg !369 ; line:142 col:17
  %263 = add i32 %.i028.87, %262, !dbg !369 ; line:142 col:17
  %264 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim", i32 0, i32 %263, !dbg !369 ; line:142 col:17
  store i32 %259, i32 addrspace(3)* %264, align 4, !dbg !370 ; line:142 col:62
  %265 = mul i32 %.i129.88, 8, !dbg !371 ; line:143 col:17
  %266 = add i32 %.i028.87, %265, !dbg !371 ; line:143 col:17
  %267 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim", i32 0, i32 %266, !dbg !371 ; line:143 col:17
  store i32 %250, i32 addrspace(3)* %267, align 4, !dbg !372 ; line:143 col:56
  br label %268, !dbg !373 ; line:144 col:13

; <label>:268                                     ; preds = %254, %240
  %269 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !374 ; line:69 col:51
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  br label %270, !dbg !233, !llvm.loop !375 ; line:69 col:5

; <label>:270                                     ; preds = %268
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  %.i028.121 = add i32 %15, 0, !dbg !234 ; line:71 col:40
  %.i129.122 = add i32 %16, 8, !dbg !234 ; line:71 col:40
  %271 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !235 ; line:71 col:15
  call void @llvm.dbg.value(metadata i32 %.i028.121, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.122, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i028.121, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.122, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %272 = icmp uge i32 %.i129.122, %13, !dbg !237 ; line:72 col:24
  br i1 %272, label %512, label %273, !dbg !239 ; line:72 col:13

; <label>:273                                     ; preds = %270
  %274 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !240 ; line:82 col:82  ; CBufferLoadLegacy(handle,regIndex)
  %275 = extractvalue %dx.types.CBufRet.i32 %274, 2, !dbg !240 ; line:82 col:82
  %.i031.123 = mul i32 %.i028.121, 1, !dbg !241 ; line:82 col:69
  %.i132.124 = mul i32 %.i129.122, %275, !dbg !241 ; line:82 col:69
  %.i033.125 = add i32 %.i025, %.i031.123, !dbg !242 ; line:82 col:58
  %.i134.126 = add i32 %.i126, %.i132.124, !dbg !242 ; line:82 col:58
  %276 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !243 ; line:82 col:22
  call void @llvm.dbg.value(metadata i32 %.i033.125, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.126, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i033.125, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.126, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  %277 = add nsw i32 %.i033.125, %.i134.126, !dbg !247 ; line:47 col:34
  %278 = and i32 %277, 1, !dbg !248 ; line:47 col:45
  %279 = icmp eq i32 %278, 0, !dbg !249 ; line:47 col:50
  %280 = zext i1 %279 to i32, !dbg !250 ; line:47 col:10
  %281 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !250 ; line:47 col:10
  call void @llvm.dbg.value(metadata i32 %280, i64 0, metadata !251, metadata !196), !dbg !250 ; var:"isEvenPixel" !DIExpression() func:"GetActivePixelIndex"
  %282 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !252 ; line:49 col:12  ; CBufferLoadLegacy(handle,regIndex)
  %283 = extractvalue %dx.types.CBufRet.i32 %282, 0, !dbg !252 ; line:49 col:12
  %284 = icmp ne i32 %283, 0, !dbg !253 ; line:49 col:9
  %285 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !254 ; line:49 col:41  ; CBufferLoadLegacy(handle,regIndex)
  %286 = extractvalue %dx.types.CBufRet.i32 %285, 1, !dbg !254 ; line:49 col:41
  %287 = icmp ne i32 %280, 0, !dbg !255 ; line:49 col:64
  %288 = zext i1 %287 to i32, !dbg !255 ; line:49 col:64
  %289 = icmp ne i32 %286, %288, !dbg !256 ; line:49 col:61
  %290 = and i1 %284, %289, !dbg !257 ; line:49 col:35
  %.i036.127 = add i32 %.i033.125, 0, !dbg !258 ; line:50 col:17
  %.i138.128 = add i32 %.i134.126, 1, !dbg !258 ; line:50 col:17
  %291 = select i1 %290, i32 %.i036.127, i32 %.i033.125, !dbg !253 ; line:49 col:9
  %292 = select i1 %290, i32 %.i138.128, i32 %.i134.126, !dbg !253 ; line:49 col:9
  %293 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !259 ; line:48 col:5
  %294 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !260 ; line:82 col:14
  call void @llvm.dbg.value(metadata i32 %291, i64 0, metadata !261, metadata !193), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %292, i64 0, metadata !261, metadata !194), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %295 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !262 ; line:83 col:15
  call void @llvm.dbg.value(metadata float -1.000000e+00, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %296 = icmp ult i32 %.i028.121, %13, !dbg !264 ; line:89 col:24
  %297 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !265 ; line:89 col:84  ; CBufferLoadLegacy(handle,regIndex)
  %298 = extractvalue %dx.types.CBufRet.i32 %297, 0, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %298, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  %299 = extractvalue %dx.types.CBufRet.i32 %297, 1, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %299, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %300 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !269 ; line:89 col:59
  call void @llvm.dbg.value(metadata i32 %298, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %299, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %291, i64 0, metadata !270, metadata !193), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %292, i64 0, metadata !270, metadata !194), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %301 = icmp sge i32 %291, 0, !dbg !272 ; line:64 col:20
  %302 = icmp sge i32 %292, 0, !dbg !273 ; line:64 col:36
  %303 = and i1 %301, %302, !dbg !274 ; line:64 col:25
  %304 = icmp slt i32 %291, %298, !dbg !275 ; line:64 col:52
  %305 = and i1 %303, %304, !dbg !276 ; line:64 col:41
  %306 = icmp slt i32 %292, %299, !dbg !277 ; line:64 col:78
  %307 = and i1 %305, %306, !dbg !278 ; line:64 col:67
  %308 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !279 ; line:64 col:5
  %309 = and i1 %296, %307, !dbg !280 ; line:89 col:56
  br i1 %309, label %310, label %313, !dbg !281 ; line:89 col:13

; <label>:310                                     ; preds = %273
  %TextureLoad.129 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inValue_texture_2d, i32 0, i32 %291, i32 %292, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !184 ; line:91 col:21  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.f32 %TextureLoad.129, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %311 = extractvalue %dx.types.ResRet.f32 %TextureLoad.129, 0, !dbg !184 ; line:91 col:21
  %312 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !282 ; line:91 col:19
  br label %313, !dbg !283 ; line:92 col:9

; <label>:313                                     ; preds = %310, %273
  %value.i.0.130 = phi float [ %311, %310 ], [ -1.000000e+00, %273 ]
  call void @llvm.dbg.value(metadata float %value.i.0.130, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %314 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !284 ; line:97 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %315 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !287 ; line:98 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %316 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !289 ; line:99 col:18
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %317 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !291 ; line:106 col:30
  %318 = icmp ult i32 %.i028.121, 8, !dbg !293 ; line:106 col:28
  %319 = fcmp fast une float %value.i.0.130, -1.000000e+00, !dbg !294 ; line:106 col:50
  %320 = and i1 %318, %319, !dbg !295 ; line:106 col:41
  br i1 %320, label %321, label %326, !dbg !296 ; line:106 col:17

; <label>:321                                     ; preds = %313
  %322 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !297 ; line:108 col:26
  call void @llvm.dbg.value(metadata float %value.i.0.130, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %323 = fmul fast float %value.i.0.130, %value.i.0.130, !dbg !299 ; line:109 col:41
  %324 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !300 ; line:109 col:33
  call void @llvm.dbg.value(metadata float %323, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %325 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !301 ; line:110 col:26
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %326, !dbg !302 ; line:111 col:13

; <label>:326                                     ; preds = %321, %313
  %valueSum.i.0.131 = phi float [ %value.i.0.130, %321 ], [ 0.000000e+00, %313 ]
  %squaredValueSum.i.0.132 = phi float [ %323, %321 ], [ 0.000000e+00, %313 ]
  %numValues.i.0.133 = phi i32 [ 1, %321 ], [ 0, %313 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.0.133, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.0.131, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.0.132, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %327 = add i32 %25, 1, !dbg !303 ; line:116 col:17
  %328 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !304 ; line:117 col:33
  %329 = icmp ult i32 %.i028.121, 8, !dbg !305 ; line:117 col:31
  %330 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !306 ; line:119 col:37
  %331 = sub i32 %.i028.121, 8, !dbg !307 ; line:119 col:35
  %332 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !308 ; line:119 col:54  ; CBufferLoadLegacy(handle,regIndex)
  %333 = extractvalue %dx.types.CBufRet.i32 %332, 3, !dbg !308 ; line:119 col:54
  %334 = add i32 %331, %333, !dbg !309 ; line:119 col:49
  %335 = select i1 %329, i32 %.i028.121, i32 %334, !dbg !310 ; line:117 col:20
  %336 = add i32 %327, %335, !dbg !311 ; line:117 col:17
  %337 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !312 ; line:114 col:18
  call void @llvm.dbg.value(metadata i32 %336, i64 0, metadata !313, metadata !196), !dbg !312 ; var:"Row_KernelStartLaneIndex" !DIExpression() func:"FilterHorizontally"
  %338 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !314 ; line:121 col:23
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %339 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %340 = extractvalue %dx.types.CBufRet.i32 %339, 3, !dbg !317 ; line:121 col:37
  %341 = icmp ult i32 0, %340, !dbg !319 ; line:121 col:32
  br i1 %341, label %.lr.ph7.134, label %361, !dbg !320 ; line:121 col:13

.lr.ph7.134:                                      ; preds = %326
  br label %342, !dbg !320 ; line:121 col:13

; <label>:342                                     ; preds = %355, %.lr.ph7.134
  %valueSum.i.1.135 = phi float [ %valueSum.i.0.131, %.lr.ph7.134 ], [ %valueSum.i.2.140, %355 ]
  %squaredValueSum.i.1.136 = phi float [ %squaredValueSum.i.0.132, %.lr.ph7.134 ], [ %squaredValueSum.i.2.141, %355 ]
  %numValues.i.1.137 = phi i32 [ %numValues.i.0.133, %.lr.ph7.134 ], [ %numValues.i.2.142, %355 ]
  %c.i.0.138 = phi i32 [ 0, %.lr.ph7.134 ], [ %356, %355 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.1.137, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.1.136, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.1.135, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %c.i.0.138, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %343 = add i32 %336, %c.i.0.138, !dbg !321 ; line:123 col:64
  %344 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !323 ; line:123 col:22
  call void @llvm.dbg.value(metadata i32 %343, i64 0, metadata !324, metadata !196), !dbg !323 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt.139 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %value.i.0.130, i32 %343), !dbg !325 ; line:124 col:32  ; WaveReadLaneAt(value,lane)
  %345 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !326 ; line:124 col:23
  call void @llvm.dbg.value(metadata float %WaveReadLaneAt.139, i64 0, metadata !327, metadata !196), !dbg !326 ; var:"cValue" !DIExpression() func:"FilterHorizontally"
  %346 = fcmp fast une float %WaveReadLaneAt.139, -1.000000e+00, !dbg !328 ; line:125 col:28
  br i1 %346, label %347, label %355, !dbg !330 ; line:125 col:21

; <label>:347                                     ; preds = %342
  %348 = fadd fast float %valueSum.i.1.135, %WaveReadLaneAt.139, !dbg !331 ; line:127 col:30
  %349 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !331 ; line:127 col:30
  call void @llvm.dbg.value(metadata float %348, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %350 = fmul fast float %WaveReadLaneAt.139, %WaveReadLaneAt.139, !dbg !333 ; line:128 col:47
  %351 = fadd fast float %squaredValueSum.i.1.136, %350, !dbg !334 ; line:128 col:37
  %352 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !334 ; line:128 col:37
  call void @llvm.dbg.value(metadata float %351, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %353 = add i32 %numValues.i.1.137, 1, !dbg !335 ; line:129 col:30
  %354 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !335 ; line:129 col:30
  call void @llvm.dbg.value(metadata i32 %353, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %355, !dbg !336 ; line:130 col:17

; <label>:355                                     ; preds = %347, %342
  %valueSum.i.2.140 = phi float [ %348, %347 ], [ %valueSum.i.1.135, %342 ]
  %squaredValueSum.i.2.141 = phi float [ %351, %347 ], [ %squaredValueSum.i.1.136, %342 ]
  %numValues.i.2.142 = phi i32 [ %353, %347 ], [ %numValues.i.1.137, %342 ]
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.2.141, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.2.142, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.2.140, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %356 = add i32 %c.i.0.138, 1, !dbg !337 ; line:121 col:52
  %357 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !337 ; line:121 col:52
  call void @llvm.dbg.value(metadata i32 %356, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %358 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %359 = extractvalue %dx.types.CBufRet.i32 %358, 3, !dbg !317 ; line:121 col:37
  %360 = icmp ult i32 %356, %359, !dbg !319 ; line:121 col:32
  br i1 %360, label %342, label %._crit_edge.143, !dbg !320 ; line:121 col:13

._crit_edge.143:                                  ; preds = %355
  br label %361, !dbg !320 ; line:121 col:13

; <label>:361                                     ; preds = %._crit_edge.143, %326
  %valueSum.i.310.144 = phi float [ %valueSum.i.2.140, %._crit_edge.143 ], [ %valueSum.i.0.131, %326 ]
  %squaredValueSum.i.3.145 = phi float [ %squaredValueSum.i.2.141, %._crit_edge.143 ], [ %squaredValueSum.i.0.132, %326 ]
  %numValues.i.3.146 = phi i32 [ %numValues.i.2.142, %._crit_edge.143 ], [ %numValues.i.0.133, %326 ]
  call void @llvm.dbg.value(metadata float %valueSum.i.310.144, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.3.146, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.3.145, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %362 = add i32 %25, %.i028.121, !dbg !338 ; line:134 col:85
  %363 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !339 ; line:134 col:100
  %364 = add i32 %362, 8, !dbg !340 ; line:134 col:98
  %WaveGetLaneCount.147 = call i32 @dx.op.waveGetLaneCount(i32 112), !dbg !341 ; line:134 col:39  ; WaveGetLaneCount()
  %365 = sub i32 %WaveGetLaneCount.147, 1, !dbg !342 ; line:134 col:58
  %UMin.148 = call i32 @dx.op.binary.i32(i32 40, i32 %365, i32 %364), !dbg !343 ; line:134 col:35  ; UMin(a,b)
  %366 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !344 ; line:134 col:18
  call void @llvm.dbg.value(metadata i32 %UMin.148, i64 0, metadata !345, metadata !196), !dbg !344 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt12.149 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %valueSum.i.310.144, i32 %UMin.148), !dbg !346 ; line:135 col:25  ; WaveReadLaneAt(value,lane)
  %367 = fadd fast float %valueSum.i.310.144, %WaveReadLaneAt12.149, !dbg !347 ; line:135 col:22
  %368 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !347 ; line:135 col:22
  call void @llvm.dbg.value(metadata float %367, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt11.150 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %squaredValueSum.i.3.145, i32 %UMin.148), !dbg !348 ; line:136 col:32  ; WaveReadLaneAt(value,lane)
  %369 = fadd fast float %squaredValueSum.i.3.145, %WaveReadLaneAt11.150, !dbg !349 ; line:136 col:29
  %370 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !349 ; line:136 col:29
  call void @llvm.dbg.value(metadata float %369, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt14.151 = call i32 @dx.op.waveReadLaneAt.i32(i32 117, i32 %numValues.i.3.146, i32 %UMin.148), !dbg !350 ; line:137 col:26  ; WaveReadLaneAt(value,lane)
  %371 = add i32 %numValues.i.3.146, %WaveReadLaneAt14.151, !dbg !351 ; line:137 col:23
  %372 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !351 ; line:137 col:23
  call void @llvm.dbg.value(metadata i32 %371, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %373 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !352 ; line:140 col:30
  %374 = icmp ult i32 %.i028.121, 8, !dbg !354 ; line:140 col:28
  br i1 %374, label %375, label %389, !dbg !355 ; line:140 col:17

; <label>:375                                     ; preds = %361
  %376 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !356 ; line:142 col:64
  call void @llvm.dbg.value(metadata float %367, i64 0, metadata !358, metadata !193), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 0, 32) func:"Float2ToHalf"
  call void @llvm.dbg.value(metadata float %369, i64 0, metadata !358, metadata !194), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 32, 32) func:"Float2ToHalf"
  %377 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !361 ; line:38 col:10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF1615.152 = call i32 @dx.op.legacyF32ToF16(i32 130, float %367), !dbg !363 ; line:39 col:14  ; LegacyF32ToF16(value)
  %378 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !364 ; line:39 col:12
  call void @llvm.dbg.value(metadata i32 %LegacyF32ToF1615.152, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF16.153 = call i32 @dx.op.legacyF32ToF16(i32 130, float %369), !dbg !365 ; line:40 col:15  ; LegacyF32ToF16(value)
  %379 = shl i32 %LegacyF32ToF16.153, 16, !dbg !366 ; line:40 col:31
  %380 = or i32 %LegacyF32ToF1615.152, %379, !dbg !367 ; line:40 col:12
  %381 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !367 ; line:40 col:12
  call void @llvm.dbg.value(metadata i32 %380, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %382 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !368 ; line:41 col:5
  %383 = mul i32 %.i129.122, 8, !dbg !369 ; line:142 col:17
  %384 = add i32 %.i028.121, %383, !dbg !369 ; line:142 col:17
  %385 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim", i32 0, i32 %384, !dbg !369 ; line:142 col:17
  store i32 %380, i32 addrspace(3)* %385, align 4, !dbg !370 ; line:142 col:62
  %386 = mul i32 %.i129.122, 8, !dbg !371 ; line:143 col:17
  %387 = add i32 %.i028.121, %386, !dbg !371 ; line:143 col:17
  %388 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim", i32 0, i32 %387, !dbg !371 ; line:143 col:17
  store i32 %371, i32 addrspace(3)* %388, align 4, !dbg !372 ; line:143 col:56
  br label %389, !dbg !373 ; line:144 col:13

; <label>:389                                     ; preds = %375, %361
  %390 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !374 ; line:69 col:51
  call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  br label %391, !dbg !233, !llvm.loop !375 ; line:69 col:5

; <label>:391                                     ; preds = %389
  call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  %.i028.155 = add i32 %15, 0, !dbg !234 ; line:71 col:40
  %.i129.156 = add i32 %16, 12, !dbg !234 ; line:71 col:40
  %392 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !235 ; line:71 col:15
  call void @llvm.dbg.value(metadata i32 %.i028.155, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.156, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i028.155, i64 0, metadata !236, metadata !193), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %.i129.156, i64 0, metadata !236, metadata !194), !dbg !235 ; var:"GTid4x16" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %393 = icmp uge i32 %.i129.156, %13, !dbg !237 ; line:72 col:24
  br i1 %393, label %512, label %394, !dbg !239 ; line:72 col:13

; <label>:394                                     ; preds = %391
  %395 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !240 ; line:82 col:82  ; CBufferLoadLegacy(handle,regIndex)
  %396 = extractvalue %dx.types.CBufRet.i32 %395, 2, !dbg !240 ; line:82 col:82
  %.i031.157 = mul i32 %.i028.155, 1, !dbg !241 ; line:82 col:69
  %.i132.158 = mul i32 %.i129.156, %396, !dbg !241 ; line:82 col:69
  %.i033.159 = add i32 %.i025, %.i031.157, !dbg !242 ; line:82 col:58
  %.i134.160 = add i32 %.i126, %.i132.158, !dbg !242 ; line:82 col:58
  %397 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !243 ; line:82 col:22
  call void @llvm.dbg.value(metadata i32 %.i033.159, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.160, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i033.159, i64 0, metadata !244, metadata !193), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %.i134.160, i64 0, metadata !244, metadata !194), !dbg !245 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  %398 = add nsw i32 %.i033.159, %.i134.160, !dbg !247 ; line:47 col:34
  %399 = and i32 %398, 1, !dbg !248 ; line:47 col:45
  %400 = icmp eq i32 %399, 0, !dbg !249 ; line:47 col:50
  %401 = zext i1 %400 to i32, !dbg !250 ; line:47 col:10
  %402 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !250 ; line:47 col:10
  call void @llvm.dbg.value(metadata i32 %401, i64 0, metadata !251, metadata !196), !dbg !250 ; var:"isEvenPixel" !DIExpression() func:"GetActivePixelIndex"
  %403 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !252 ; line:49 col:12  ; CBufferLoadLegacy(handle,regIndex)
  %404 = extractvalue %dx.types.CBufRet.i32 %403, 0, !dbg !252 ; line:49 col:12
  %405 = icmp ne i32 %404, 0, !dbg !253 ; line:49 col:9
  %406 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !254 ; line:49 col:41  ; CBufferLoadLegacy(handle,regIndex)
  %407 = extractvalue %dx.types.CBufRet.i32 %406, 1, !dbg !254 ; line:49 col:41
  %408 = icmp ne i32 %401, 0, !dbg !255 ; line:49 col:64
  %409 = zext i1 %408 to i32, !dbg !255 ; line:49 col:64
  %410 = icmp ne i32 %407, %409, !dbg !256 ; line:49 col:61
  %411 = and i1 %405, %410, !dbg !257 ; line:49 col:35
  %.i036.161 = add i32 %.i033.159, 0, !dbg !258 ; line:50 col:17
  %.i138.162 = add i32 %.i134.160, 1, !dbg !258 ; line:50 col:17
  %412 = select i1 %411, i32 %.i036.161, i32 %.i033.159, !dbg !253 ; line:49 col:9
  %413 = select i1 %411, i32 %.i138.162, i32 %.i134.160, !dbg !253 ; line:49 col:9
  %414 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !259 ; line:48 col:5
  %415 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !260 ; line:82 col:14
  call void @llvm.dbg.value(metadata i32 %412, i64 0, metadata !261, metadata !193), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %413, i64 0, metadata !261, metadata !194), !dbg !260 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterHorizontally"
  %416 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !262 ; line:83 col:15
  call void @llvm.dbg.value(metadata float -1.000000e+00, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %417 = icmp ult i32 %.i028.155, %13, !dbg !264 ; line:89 col:24
  %418 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !265 ; line:89 col:84  ; CBufferLoadLegacy(handle,regIndex)
  %419 = extractvalue %dx.types.CBufRet.i32 %418, 0, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %419, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  %420 = extractvalue %dx.types.CBufRet.i32 %418, 1, !dbg !265 ; line:89 col:84
  call void @llvm.dbg.value(metadata i32 %420, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %421 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !269 ; line:89 col:59
  call void @llvm.dbg.value(metadata i32 %419, i64 0, metadata !266, metadata !193), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %420, i64 0, metadata !266, metadata !194), !dbg !267 ; var:"dimensions" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %412, i64 0, metadata !270, metadata !193), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 0, 32) func:"IsWithinBounds"
  call void @llvm.dbg.value(metadata i32 %413, i64 0, metadata !270, metadata !194), !dbg !271 ; var:"index" !DIExpression(DW_OP_bit_piece, 32, 32) func:"IsWithinBounds"
  %422 = icmp sge i32 %412, 0, !dbg !272 ; line:64 col:20
  %423 = icmp sge i32 %413, 0, !dbg !273 ; line:64 col:36
  %424 = and i1 %422, %423, !dbg !274 ; line:64 col:25
  %425 = icmp slt i32 %412, %419, !dbg !275 ; line:64 col:52
  %426 = and i1 %424, %425, !dbg !276 ; line:64 col:41
  %427 = icmp slt i32 %413, %420, !dbg !277 ; line:64 col:78
  %428 = and i1 %426, %427, !dbg !278 ; line:64 col:67
  %429 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !279 ; line:64 col:5
  %430 = and i1 %417, %428, !dbg !280 ; line:89 col:56
  br i1 %430, label %431, label %434, !dbg !281 ; line:89 col:13

; <label>:431                                     ; preds = %394
  %TextureLoad.163 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_inValue_texture_2d, i32 0, i32 %412, i32 %413, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !184 ; line:91 col:21  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.f32 %TextureLoad.163, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %432 = extractvalue %dx.types.ResRet.f32 %TextureLoad.163, 0, !dbg !184 ; line:91 col:21
  %433 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !282 ; line:91 col:19
  br label %434, !dbg !283 ; line:92 col:9

; <label>:434                                     ; preds = %431, %394
  %value.i.0.164 = phi float [ %432, %431 ], [ -1.000000e+00, %394 ]
  call void @llvm.dbg.value(metadata float %value.i.0.164, i64 0, metadata !263, metadata !196), !dbg !262 ; var:"value" !DIExpression() func:"FilterHorizontally"
  %435 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !284 ; line:97 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %436 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !287 ; line:98 col:19
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %437 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !289 ; line:99 col:18
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %438 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !291 ; line:106 col:30
  %439 = icmp ult i32 %.i028.155, 8, !dbg !293 ; line:106 col:28
  %440 = fcmp fast une float %value.i.0.164, -1.000000e+00, !dbg !294 ; line:106 col:50
  %441 = and i1 %439, %440, !dbg !295 ; line:106 col:41
  br i1 %441, label %442, label %447, !dbg !296 ; line:106 col:17

; <label>:442                                     ; preds = %434
  %443 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !297 ; line:108 col:26
  call void @llvm.dbg.value(metadata float %value.i.0.164, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %444 = fmul fast float %value.i.0.164, %value.i.0.164, !dbg !299 ; line:109 col:41
  %445 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !300 ; line:109 col:33
  call void @llvm.dbg.value(metadata float %444, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %446 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !301 ; line:110 col:26
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %447, !dbg !302 ; line:111 col:13

; <label>:447                                     ; preds = %442, %434
  %valueSum.i.0.165 = phi float [ %value.i.0.164, %442 ], [ 0.000000e+00, %434 ]
  %squaredValueSum.i.0.166 = phi float [ %444, %442 ], [ 0.000000e+00, %434 ]
  %numValues.i.0.167 = phi i32 [ 1, %442 ], [ 0, %434 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.0.167, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.0.165, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.0.166, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %448 = add i32 %25, 1, !dbg !303 ; line:116 col:17
  %449 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !304 ; line:117 col:33
  %450 = icmp ult i32 %.i028.155, 8, !dbg !305 ; line:117 col:31
  %451 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !306 ; line:119 col:37
  %452 = sub i32 %.i028.155, 8, !dbg !307 ; line:119 col:35
  %453 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !308 ; line:119 col:54  ; CBufferLoadLegacy(handle,regIndex)
  %454 = extractvalue %dx.types.CBufRet.i32 %453, 3, !dbg !308 ; line:119 col:54
  %455 = add i32 %452, %454, !dbg !309 ; line:119 col:49
  %456 = select i1 %450, i32 %.i028.155, i32 %455, !dbg !310 ; line:117 col:20
  %457 = add i32 %448, %456, !dbg !311 ; line:117 col:17
  %458 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !312 ; line:114 col:18
  call void @llvm.dbg.value(metadata i32 %457, i64 0, metadata !313, metadata !196), !dbg !312 ; var:"Row_KernelStartLaneIndex" !DIExpression() func:"FilterHorizontally"
  %459 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !314 ; line:121 col:23
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %460 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %461 = extractvalue %dx.types.CBufRet.i32 %460, 3, !dbg !317 ; line:121 col:37
  %462 = icmp ult i32 0, %461, !dbg !319 ; line:121 col:32
  br i1 %462, label %.lr.ph7.168, label %482, !dbg !320 ; line:121 col:13

.lr.ph7.168:                                      ; preds = %447
  br label %463, !dbg !320 ; line:121 col:13

; <label>:463                                     ; preds = %476, %.lr.ph7.168
  %valueSum.i.1.169 = phi float [ %valueSum.i.0.165, %.lr.ph7.168 ], [ %valueSum.i.2.174, %476 ]
  %squaredValueSum.i.1.170 = phi float [ %squaredValueSum.i.0.166, %.lr.ph7.168 ], [ %squaredValueSum.i.2.175, %476 ]
  %numValues.i.1.171 = phi i32 [ %numValues.i.0.167, %.lr.ph7.168 ], [ %numValues.i.2.176, %476 ]
  %c.i.0.172 = phi i32 [ 0, %.lr.ph7.168 ], [ %477, %476 ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.1.171, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.1.170, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.1.169, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %c.i.0.172, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %464 = add i32 %457, %c.i.0.172, !dbg !321 ; line:123 col:64
  %465 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !323 ; line:123 col:22
  call void @llvm.dbg.value(metadata i32 %464, i64 0, metadata !324, metadata !196), !dbg !323 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt.173 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %value.i.0.164, i32 %464), !dbg !325 ; line:124 col:32  ; WaveReadLaneAt(value,lane)
  %466 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !326 ; line:124 col:23
  call void @llvm.dbg.value(metadata float %WaveReadLaneAt.173, i64 0, metadata !327, metadata !196), !dbg !326 ; var:"cValue" !DIExpression() func:"FilterHorizontally"
  %467 = fcmp fast une float %WaveReadLaneAt.173, -1.000000e+00, !dbg !328 ; line:125 col:28
  br i1 %467, label %468, label %476, !dbg !330 ; line:125 col:21

; <label>:468                                     ; preds = %463
  %469 = fadd fast float %valueSum.i.1.169, %WaveReadLaneAt.173, !dbg !331 ; line:127 col:30
  %470 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !331 ; line:127 col:30
  call void @llvm.dbg.value(metadata float %469, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %471 = fmul fast float %WaveReadLaneAt.173, %WaveReadLaneAt.173, !dbg !333 ; line:128 col:47
  %472 = fadd fast float %squaredValueSum.i.1.170, %471, !dbg !334 ; line:128 col:37
  %473 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !334 ; line:128 col:37
  call void @llvm.dbg.value(metadata float %472, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %474 = add i32 %numValues.i.1.171, 1, !dbg !335 ; line:129 col:30
  %475 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !335 ; line:129 col:30
  call void @llvm.dbg.value(metadata i32 %474, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  br label %476, !dbg !336 ; line:130 col:17

; <label>:476                                     ; preds = %468, %463
  %valueSum.i.2.174 = phi float [ %469, %468 ], [ %valueSum.i.1.169, %463 ]
  %squaredValueSum.i.2.175 = phi float [ %472, %468 ], [ %squaredValueSum.i.1.170, %463 ]
  %numValues.i.2.176 = phi i32 [ %474, %468 ], [ %numValues.i.1.171, %463 ]
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.2.175, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.2.176, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %valueSum.i.2.174, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %477 = add i32 %c.i.0.172, 1, !dbg !337 ; line:121 col:52
  %478 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !337 ; line:121 col:52
  call void @llvm.dbg.value(metadata i32 %477, i64 0, metadata !316, metadata !196), !dbg !314 ; var:"c" !DIExpression() func:"FilterHorizontally"
  %479 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !317 ; line:121 col:37  ; CBufferLoadLegacy(handle,regIndex)
  %480 = extractvalue %dx.types.CBufRet.i32 %479, 3, !dbg !317 ; line:121 col:37
  %481 = icmp ult i32 %477, %480, !dbg !319 ; line:121 col:32
  br i1 %481, label %463, label %._crit_edge.177, !dbg !320 ; line:121 col:13

._crit_edge.177:                                  ; preds = %476
  br label %482, !dbg !320 ; line:121 col:13

; <label>:482                                     ; preds = %._crit_edge.177, %447
  %valueSum.i.310.178 = phi float [ %valueSum.i.2.174, %._crit_edge.177 ], [ %valueSum.i.0.165, %447 ]
  %squaredValueSum.i.3.179 = phi float [ %squaredValueSum.i.2.175, %._crit_edge.177 ], [ %squaredValueSum.i.0.166, %447 ]
  %numValues.i.3.180 = phi i32 [ %numValues.i.2.176, %._crit_edge.177 ], [ %numValues.i.0.167, %447 ]
  call void @llvm.dbg.value(metadata float %valueSum.i.310.178, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata i32 %numValues.i.3.180, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.3.179, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %483 = add i32 %25, %.i028.155, !dbg !338 ; line:134 col:85
  %484 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !339 ; line:134 col:100
  %485 = add i32 %483, 8, !dbg !340 ; line:134 col:98
  %WaveGetLaneCount.181 = call i32 @dx.op.waveGetLaneCount(i32 112), !dbg !341 ; line:134 col:39  ; WaveGetLaneCount()
  %486 = sub i32 %WaveGetLaneCount.181, 1, !dbg !342 ; line:134 col:58
  %UMin.182 = call i32 @dx.op.binary.i32(i32 40, i32 %486, i32 %485), !dbg !343 ; line:134 col:35  ; UMin(a,b)
  %487 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !344 ; line:134 col:18
  call void @llvm.dbg.value(metadata i32 %UMin.182, i64 0, metadata !345, metadata !196), !dbg !344 ; var:"laneToReadFrom" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt12.183 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %valueSum.i.310.178, i32 %UMin.182), !dbg !346 ; line:135 col:25  ; WaveReadLaneAt(value,lane)
  %488 = fadd fast float %valueSum.i.310.178, %WaveReadLaneAt12.183, !dbg !347 ; line:135 col:22
  %489 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !347 ; line:135 col:22
  call void @llvm.dbg.value(metadata float %488, i64 0, metadata !286, metadata !196), !dbg !284 ; var:"valueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt11.184 = call float @dx.op.waveReadLaneAt.f32(i32 117, float %squaredValueSum.i.3.179, i32 %UMin.182), !dbg !348 ; line:136 col:32  ; WaveReadLaneAt(value,lane)
  %490 = fadd fast float %squaredValueSum.i.3.179, %WaveReadLaneAt11.184, !dbg !349 ; line:136 col:29
  %491 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !349 ; line:136 col:29
  call void @llvm.dbg.value(metadata float %490, i64 0, metadata !288, metadata !196), !dbg !287 ; var:"squaredValueSum" !DIExpression() func:"FilterHorizontally"
  %WaveReadLaneAt14.185 = call i32 @dx.op.waveReadLaneAt.i32(i32 117, i32 %numValues.i.3.180, i32 %UMin.182), !dbg !350 ; line:137 col:26  ; WaveReadLaneAt(value,lane)
  %492 = add i32 %numValues.i.3.180, %WaveReadLaneAt14.185, !dbg !351 ; line:137 col:23
  %493 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !351 ; line:137 col:23
  call void @llvm.dbg.value(metadata i32 %492, i64 0, metadata !290, metadata !196), !dbg !289 ; var:"numValues" !DIExpression() func:"FilterHorizontally"
  %494 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !352 ; line:140 col:30
  %495 = icmp ult i32 %.i028.155, 8, !dbg !354 ; line:140 col:28
  br i1 %495, label %496, label %510, !dbg !355 ; line:140 col:17

; <label>:496                                     ; preds = %482
  %497 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !356 ; line:142 col:64
  call void @llvm.dbg.value(metadata float %488, i64 0, metadata !358, metadata !193), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 0, 32) func:"Float2ToHalf"
  call void @llvm.dbg.value(metadata float %490, i64 0, metadata !358, metadata !194), !dbg !359 ; var:"val" !DIExpression(DW_OP_bit_piece, 32, 32) func:"Float2ToHalf"
  %498 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !361 ; line:38 col:10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF1615.186 = call i32 @dx.op.legacyF32ToF16(i32 130, float %488), !dbg !363 ; line:39 col:14  ; LegacyF32ToF16(value)
  %499 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !364 ; line:39 col:12
  call void @llvm.dbg.value(metadata i32 %LegacyF32ToF1615.186, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %LegacyF32ToF16.187 = call i32 @dx.op.legacyF32ToF16(i32 130, float %490), !dbg !365 ; line:40 col:15  ; LegacyF32ToF16(value)
  %500 = shl i32 %LegacyF32ToF16.187, 16, !dbg !366 ; line:40 col:31
  %501 = or i32 %LegacyF32ToF1615.186, %500, !dbg !367 ; line:40 col:12
  %502 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !367 ; line:40 col:12
  call void @llvm.dbg.value(metadata i32 %501, i64 0, metadata !362, metadata !196), !dbg !361 ; var:"result" !DIExpression() func:"Float2ToHalf"
  %503 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !368 ; line:41 col:5
  %504 = mul i32 %.i129.156, 8, !dbg !369 ; line:142 col:17
  %505 = add i32 %.i028.155, %504, !dbg !369 ; line:142 col:17
  %506 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim", i32 0, i32 %505, !dbg !369 ; line:142 col:17
  store i32 %501, i32 addrspace(3)* %506, align 4, !dbg !370 ; line:142 col:62
  %507 = mul i32 %.i129.156, 8, !dbg !371 ; line:143 col:17
  %508 = add i32 %.i028.155, %507, !dbg !371 ; line:143 col:17
  %509 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim", i32 0, i32 %508, !dbg !371 ; line:143 col:17
  store i32 %492, i32 addrspace(3)* %509, align 4, !dbg !372 ; line:143 col:56
  br label %510, !dbg !373 ; line:144 col:13

; <label>:510                                     ; preds = %496, %482
  %511 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !374 ; line:69 col:51
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !232, metadata !196), !dbg !231 ; var:"i" !DIExpression() func:"FilterHorizontally"
  br label %".\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit.loopexit_crit_edge", !dbg !233, !llvm.loop !375 ; line:69 col:5

; <label>:512                                     ; preds = %391, %270, %149, %28
  %.i129.lcssa = phi i32 [ %.i129.54, %28 ], [ %.i129.88, %149 ], [ %.i129.122, %270 ], [ %.i129.156, %391 ]
  %.i028.lcssa = phi i32 [ %.i028.53, %28 ], [ %.i028.87, %149 ], [ %.i028.121, %270 ], [ %.i028.155, %391 ]
  %513 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !377 ; line:74 col:30
  %514 = icmp ult i32 %.i028.lcssa, 8, !dbg !380 ; line:74 col:28
  br i1 %514, label %515, label %519, !dbg !381 ; line:74 col:17

; <label>:515                                     ; preds = %512
  %516 = mul i32 %.i129.lcssa, 8, !dbg !382 ; line:76 col:17
  %517 = add i32 %.i028.lcssa, %516, !dbg !382 ; line:76 col:17
  %518 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim", i32 0, i32 %517, !dbg !382 ; line:76 col:17
  store i32 0, i32 addrspace(3)* %518, align 4, !dbg !384 ; line:76 col:56
  br label %519, !dbg !385 ; line:77 col:13

; <label>:519                                     ; preds = %515, %512
  br label %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit", !dbg !202 ; line:194 col:5

".\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit.loopexit_crit_edge": ; preds = %510
  br label %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit.loopexit", !dbg !233 ; line:69 col:5

"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit.loopexit": ; preds = %".\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit.loopexit_crit_edge"
  br label %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit", !dbg !386 ; line:147 col:1

"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit": ; preds = %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit.loopexit", %519
  %520 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !386 ; line:147 col:1
  call void @dx.op.barrier(i32 80, i32 9), !dbg !387 ; line:195 col:5  ; Barrier(barrierMode)
  %521 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !388 ; line:197 col:5
  call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !389, metadata !193), !dbg !390 ; var:"GTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterVertically"
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !389, metadata !194), !dbg !390 ; var:"GTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterVertically"
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !392, metadata !193), !dbg !393 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterVertically"
  call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !392, metadata !194), !dbg !393 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterVertically"
  %522 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !394 ; line:151 col:11
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !395, metadata !196), !dbg !394 ; var:"valueSum" !DIExpression() func:"FilterVertically"
  %523 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !396 ; line:152 col:11
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !397, metadata !196), !dbg !396 ; var:"squaredValueSum" !DIExpression() func:"FilterVertically"
  %524 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !398 ; line:153 col:10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !399, metadata !196), !dbg !398 ; var:"numValues" !DIExpression() func:"FilterVertically"
  %525 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !400 ; line:155 col:64  ; CBufferLoadLegacy(handle,regIndex)
  %526 = extractvalue %dx.types.CBufRet.i32 %525, 2, !dbg !400 ; line:155 col:64
  %527 = mul i32 %7, %526, !dbg !401 ; line:155 col:59
  %528 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !402 ; line:155 col:19
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !244, metadata !193), !dbg !403 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetActivePixelIndex"
  call void @llvm.dbg.value(metadata i32 %527, i64 0, metadata !244, metadata !194), !dbg !403 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetActivePixelIndex"
  %529 = add nsw i32 %6, %527, !dbg !405 ; line:47 col:34
  %530 = and i32 %529, 1, !dbg !406 ; line:47 col:45
  %531 = icmp eq i32 %530, 0, !dbg !407 ; line:47 col:50
  %532 = zext i1 %531 to i32, !dbg !408 ; line:47 col:10
  %533 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !408 ; line:47 col:10
  call void @llvm.dbg.value(metadata i32 %532, i64 0, metadata !251, metadata !196), !dbg !408 ; var:"isEvenPixel" !DIExpression() func:"GetActivePixelIndex"
  %534 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !409 ; line:49 col:12  ; CBufferLoadLegacy(handle,regIndex)
  %535 = extractvalue %dx.types.CBufRet.i32 %534, 0, !dbg !409 ; line:49 col:12
  %536 = icmp ne i32 %535, 0, !dbg !410 ; line:49 col:9
  %537 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !411 ; line:49 col:41  ; CBufferLoadLegacy(handle,regIndex)
  %538 = extractvalue %dx.types.CBufRet.i32 %537, 1, !dbg !411 ; line:49 col:41
  %539 = icmp ne i32 %532, 0, !dbg !412 ; line:49 col:64
  %540 = zext i1 %539 to i32, !dbg !412 ; line:49 col:64
  %541 = icmp ne i32 %538, %540, !dbg !413 ; line:49 col:61
  %542 = and i1 %536, %541, !dbg !414 ; line:49 col:35
  %.i040 = add i32 %6, 0, !dbg !415 ; line:50 col:17
  %.i142 = add i32 %527, 1, !dbg !415 ; line:50 col:17
  %543 = select i1 %542, i32 %.i040, i32 %6, !dbg !410 ; line:49 col:9
  %544 = select i1 %542, i32 %.i142, i32 %527, !dbg !410 ; line:49 col:9
  %545 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !416 ; line:48 col:5
  %546 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !417 ; line:155 col:11
  call void @llvm.dbg.value(metadata i32 %543, i64 0, metadata !418, metadata !193), !dbg !417 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterVertically"
  call void @llvm.dbg.value(metadata i32 %544, i64 0, metadata !418, metadata !194), !dbg !417 ; var:"pixel" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterVertically"
  %547 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !419 ; line:159 col:15
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !421, metadata !196), !dbg !419 ; var:"r" !DIExpression() func:"FilterVertically"
  %548 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !422 ; line:159 col:29  ; CBufferLoadLegacy(handle,regIndex)
  %549 = extractvalue %dx.types.CBufRet.i32 %548, 2, !dbg !422 ; line:159 col:29
  %550 = icmp ult i32 0, %549, !dbg !424 ; line:159 col:24
  br i1 %550, label %.lr.ph, label %"\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit", !dbg !425 ; line:159 col:5

.lr.ph:                                           ; preds = %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit"
  br label %551, !dbg !425 ; line:159 col:5

; <label>:551                                     ; preds = %579, %.lr.ph
  %numValues.i.5.0 = phi i32 [ 0, %.lr.ph ], [ %numValues.i.5.1, %579 ]
  %squaredValueSum.i.4.0 = phi float [ 0.000000e+00, %.lr.ph ], [ %squaredValueSum.i.4.1, %579 ]
  %valueSum.i.3.0 = phi float [ 0.000000e+00, %.lr.ph ], [ %valueSum.i.3.1, %579 ]
  %r.i.0 = phi i32 [ 0, %.lr.ph ], [ %580, %579 ]
  call void @llvm.dbg.value(metadata i32 %r.i.0, i64 0, metadata !421, metadata !196), !dbg !419 ; var:"r" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata float %valueSum.i.3.0, i64 0, metadata !395, metadata !196), !dbg !394 ; var:"valueSum" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata i32 %numValues.i.5.0, i64 0, metadata !399, metadata !196), !dbg !398 ; var:"numValues" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.4.0, i64 0, metadata !397, metadata !196), !dbg !396 ; var:"squaredValueSum" !DIExpression() func:"FilterVertically"
  %552 = add i32 %4, %r.i.0, !dbg !426 ; line:161 col:29
  %553 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !428 ; line:161 col:14
  call void @llvm.dbg.value(metadata i32 %552, i64 0, metadata !429, metadata !196), !dbg !428 ; var:"rowID" !DIExpression() func:"FilterVertically"
  %554 = mul i32 %552, 8, !dbg !430 ; line:162 col:27
  %555 = add i32 %3, %554, !dbg !430 ; line:162 col:27
  %556 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim", i32 0, i32 %555, !dbg !430 ; line:162 col:27
  %557 = load i32, i32 addrspace(3)* %556, align 4, !dbg !430 ; line:162 col:27
  %558 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !431 ; line:162 col:14
  call void @llvm.dbg.value(metadata i32 %557, i64 0, metadata !432, metadata !196), !dbg !431 ; var:"rNumValues" !DIExpression() func:"FilterVertically"
  %559 = icmp ugt i32 %557, 0, !dbg !433 ; line:164 col:24
  br i1 %559, label %560, label %579, !dbg !435 ; line:164 col:13

; <label>:560                                     ; preds = %551
  %561 = mul i32 %552, 8, !dbg !436 ; line:166 col:50
  %562 = add i32 %3, %561, !dbg !436 ; line:166 col:50
  %563 = getelementptr [128 x i32], [128 x i32] addrspace(3)* @"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim", i32 0, i32 %562, !dbg !436 ; line:166 col:50
  %564 = load i32, i32 addrspace(3)* %563, align 4, !dbg !436 ; line:166 col:50
  %565 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !438 ; line:166 col:37
  call void @llvm.dbg.value(metadata i32 %564, i64 0, metadata !439, metadata !196), !dbg !440 ; var:"val" !DIExpression() func:"HalfToFloat2"
  %LegacyF16ToF3216 = call float @dx.op.legacyF16ToF32(i32 131, i32 %564), !dbg !442 ; line:47 col:16  ; LegacyF16ToF32(value)
  %566 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !443 ; line:47 col:14
  call void @llvm.dbg.value(metadata float %LegacyF16ToF3216, i64 0, metadata !444, metadata !193), !dbg !445 ; var:"result" !DIExpression(DW_OP_bit_piece, 0, 32) func:"HalfToFloat2"
  %567 = lshr i32 %564, 16, !dbg !446 ; line:48 col:29
  %LegacyF16ToF32 = call float @dx.op.legacyF16ToF32(i32 131, i32 %567), !dbg !447 ; line:48 col:16  ; LegacyF16ToF32(value)
  %568 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !448 ; line:48 col:14
  call void @llvm.dbg.value(metadata float %LegacyF16ToF3216, i64 0, metadata !444, metadata !193), !dbg !445 ; var:"result" !DIExpression(DW_OP_bit_piece, 0, 32) func:"HalfToFloat2"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !444, metadata !194), !dbg !445 ; var:"result" !DIExpression(DW_OP_bit_piece, 32, 32) func:"HalfToFloat2"
  %569 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !449 ; line:49 col:5
  %570 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !450 ; line:166 col:20
  call void @llvm.dbg.value(metadata float %LegacyF16ToF3216, i64 0, metadata !451, metadata !193), !dbg !450 ; var:"unpackedRowSum" !DIExpression(DW_OP_bit_piece, 0, 32) func:"FilterVertically"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !451, metadata !194), !dbg !450 ; var:"unpackedRowSum" !DIExpression(DW_OP_bit_piece, 32, 32) func:"FilterVertically"
  %571 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !452 ; line:167 col:19
  call void @llvm.dbg.value(metadata float %LegacyF16ToF3216, i64 0, metadata !453, metadata !196), !dbg !452 ; var:"rValueSum" !DIExpression() func:"FilterVertically"
  %572 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !454 ; line:168 col:19
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !455, metadata !196), !dbg !454 ; var:"rSquaredValueSum" !DIExpression() func:"FilterVertically"
  %573 = fadd fast float %valueSum.i.3.0, %LegacyF16ToF3216, !dbg !456 ; line:170 col:22
  %574 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !456 ; line:170 col:22
  call void @llvm.dbg.value(metadata float %573, i64 0, metadata !395, metadata !196), !dbg !394 ; var:"valueSum" !DIExpression() func:"FilterVertically"
  %575 = fadd fast float %squaredValueSum.i.4.0, %LegacyF16ToF32, !dbg !457 ; line:171 col:29
  %576 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !457 ; line:171 col:29
  call void @llvm.dbg.value(metadata float %575, i64 0, metadata !397, metadata !196), !dbg !396 ; var:"squaredValueSum" !DIExpression() func:"FilterVertically"
  %577 = add i32 %numValues.i.5.0, %557, !dbg !458 ; line:172 col:23
  %578 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !458 ; line:172 col:23
  call void @llvm.dbg.value(metadata i32 %577, i64 0, metadata !399, metadata !196), !dbg !398 ; var:"numValues" !DIExpression() func:"FilterVertically"
  br label %579, !dbg !459 ; line:173 col:9

; <label>:579                                     ; preds = %560, %551
  %numValues.i.5.1 = phi i32 [ %577, %560 ], [ %numValues.i.5.0, %551 ]
  %squaredValueSum.i.4.1 = phi float [ %575, %560 ], [ %squaredValueSum.i.4.0, %551 ]
  %valueSum.i.3.1 = phi float [ %573, %560 ], [ %valueSum.i.3.0, %551 ]
  call void @llvm.dbg.value(metadata float undef, i64 0, metadata !444, metadata !193), !dbg !445 ; var:"result" !DIExpression(DW_OP_bit_piece, 0, 32) func:"HalfToFloat2"
  call void @llvm.dbg.value(metadata float undef, i64 0, metadata !444, metadata !194), !dbg !445 ; var:"result" !DIExpression(DW_OP_bit_piece, 32, 32) func:"HalfToFloat2"
  call void @llvm.dbg.value(metadata float %valueSum.i.3.1, i64 0, metadata !395, metadata !196), !dbg !394 ; var:"valueSum" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata i32 %numValues.i.5.1, i64 0, metadata !399, metadata !196), !dbg !398 ; var:"numValues" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.4.1, i64 0, metadata !397, metadata !196), !dbg !396 ; var:"squaredValueSum" !DIExpression() func:"FilterVertically"
  %580 = add i32 %r.i.0, 1, !dbg !460 ; line:159 col:43
  %581 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !460 ; line:159 col:43
  call void @llvm.dbg.value(metadata i32 %580, i64 0, metadata !421, metadata !196), !dbg !419 ; var:"r" !DIExpression() func:"FilterVertically"
  %582 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !422 ; line:159 col:29  ; CBufferLoadLegacy(handle,regIndex)
  %583 = extractvalue %dx.types.CBufRet.i32 %582, 2, !dbg !422 ; line:159 col:29
  %584 = icmp ult i32 %580, %583, !dbg !424 ; line:159 col:24
  br i1 %584, label %551, label %".\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit_crit_edge", !dbg !425 ; line:159 col:5

".\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit_crit_edge": ; preds = %579
  %valueSum.i.3.1.lcssa = phi float [ %valueSum.i.3.1, %579 ]
  %squaredValueSum.i.4.1.lcssa = phi float [ %squaredValueSum.i.4.1, %579 ]
  %numValues.i.5.1.lcssa = phi i32 [ %numValues.i.5.1, %579 ]
  br label %"\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit", !dbg !425 ; line:159 col:5

"\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit": ; preds = %".\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit_crit_edge", %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit"
  %numValues.i.5.2 = phi i32 [ %numValues.i.5.1.lcssa, %".\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit_crit_edge" ], [ 0, %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit" ]
  %squaredValueSum.i.4.2 = phi float [ %squaredValueSum.i.4.1.lcssa, %".\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit_crit_edge" ], [ 0.000000e+00, %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit" ]
  %valueSum.i.3.2 = phi float [ %valueSum.i.3.1.lcssa, %".\01?FilterVertically@@YAXV?$vector@I$01@@0@Z.exit_crit_edge" ], [ 0.000000e+00, %"\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z.exit" ]
  call void @llvm.dbg.value(metadata i32 %numValues.i.5.2, i64 0, metadata !399, metadata !196), !dbg !398 ; var:"numValues" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata float %valueSum.i.3.2, i64 0, metadata !395, metadata !196), !dbg !394 ; var:"valueSum" !DIExpression() func:"FilterVertically"
  call void @llvm.dbg.value(metadata float %squaredValueSum.i.4.2, i64 0, metadata !397, metadata !196), !dbg !396 ; var:"squaredValueSum" !DIExpression() func:"FilterVertically"
  %UMax13 = call i32 @dx.op.binary.i32(i32 39, i32 %numValues.i.5.2, i32 1), !dbg !461 ; line:177 col:24  ; UMax(a,b)
  %585 = uitofp i32 %UMax13 to float, !dbg !461 ; line:177 col:24
  %586 = fdiv fast float 1.000000e+00, %585, !dbg !462 ; line:177 col:22
  %587 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !463 ; line:177 col:11
  call void @llvm.dbg.value(metadata float %586, i64 0, metadata !464, metadata !196), !dbg !463 ; var:"invN" !DIExpression() func:"FilterVertically"
  %588 = fmul fast float %586, %valueSum.i.3.2, !dbg !465 ; line:178 col:23
  %589 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !466 ; line:178 col:11
  call void @llvm.dbg.value(metadata float %588, i64 0, metadata !467, metadata !196), !dbg !466 ; var:"mean" !DIExpression() func:"FilterVertically"
  %590 = uitofp i32 %numValues.i.5.2 to float, !dbg !468 ; line:182 col:30
  %UMax = call i32 @dx.op.binary.i32(i32 39, i32 %numValues.i.5.2, i32 2), !dbg !469 ; line:182 col:48  ; UMax(a,b)
  %591 = sub i32 %UMax, 1, !dbg !470 ; line:182 col:66
  %592 = uitofp i32 %591 to float, !dbg !469 ; line:182 col:48
  %593 = fdiv fast float %590, %592, !dbg !471 ; line:182 col:40
  %594 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !472 ; line:182 col:11
  call void @llvm.dbg.value(metadata float %593, i64 0, metadata !473, metadata !196), !dbg !472 ; var:"besselCorrection" !DIExpression() func:"FilterVertically"
  %595 = fmul fast float %586, %squaredValueSum.i.4.2, !dbg !474 ; line:183 col:47
  %596 = fmul fast float %588, %588, !dbg !475 ; line:183 col:72
  %597 = fsub fast float %595, %596, !dbg !476 ; line:183 col:65
  %598 = fmul fast float %593, %597, !dbg !477 ; line:183 col:39
  %599 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !478 ; line:183 col:11
  call void @llvm.dbg.value(metadata float %598, i64 0, metadata !479, metadata !196), !dbg !478 ; var:"variance" !DIExpression() func:"FilterVertically"
  %FMax = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %598), !dbg !480 ; line:185 col:16  ; FMax(a,b)
  %600 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !481 ; line:185 col:14
  call void @llvm.dbg.value(metadata float %FMax, i64 0, metadata !479, metadata !196), !dbg !478 ; var:"variance" !DIExpression() func:"FilterVertically"
  %601 = icmp ugt i32 %numValues.i.5.2, 0, !dbg !482 ; line:187 col:42
  %602 = select i1 %601, float %588, float -1.000000e+00, !dbg !483 ; line:187 col:32
  %603 = select i1 %601, float %FMax, float -1.000000e+00, !dbg !483 ; line:187 col:32
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %g_outMeanVariance_UAV_2d, i32 %543, i32 %544, i32 undef, float %602, float %603, float %602, float %602, i8 15), !dbg !484 ; line:187 col:30  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %604 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !485 ; line:188 col:1
  %605 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !486 ; line:198 col:1
  ret void, !dbg !486 ; line:198 col:1
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.flattenedThreadIdInGroup.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.waveGetLaneCount(i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.waveGetLaneIndex(i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind
declare float @dx.op.waveReadLaneAt.f32(i32, float, i32) #3

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind
declare i32 @dx.op.waveReadLaneAt.i32(i32, i32, i32) #3

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { noduplicate nounwind }
attributes #2 = { nounwind readonly }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!145, !146}
!llvm.ident = !{!147}
!dx.source.contents = !{!148, !149, !150, !151, !152, !153}
!dx.source.defines = !{!2}
!dx.source.mainFileName = !{!154}
!dx.source.args = !{!155}
!dx.version = !{!156}
!dx.valver = !{!157}
!dx.shaderModel = !{!158}
!dx.resources = !{!159}
!dx.typeAnnotations = !{!167, !178}
!dx.entryPoints = !{!181}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 3.7 (tags/RELEASE_370/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !29, globals: !54)
!1 = !DIFile(filename: "RTAO\5CShaders\5CDenoising\5CCalculateMeanVarianceCS.hlsl", directory: "")
!2 = !{}
!3 = !{!4, !13, !14, !21, !25}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint2", file: !1, line: 40, baseType: !5)
!5 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<unsigned int, 2>", file: !1, line: 40, size: 64, align: 32, elements: !6, templateParams: !10)
!6 = !{!7, !9}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5, file: !1, line: 40, baseType: !8, size: 32, align: 32, flags: DIFlagPublic)
!8 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5, file: !1, line: 40, baseType: !8, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!10 = !{!11, !12}
!11 = !DITemplateTypeParameter(name: "element", type: !8)
!12 = !DITemplateValueParameter(name: "element_count", type: !13, value: i32 2)
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "int2", file: !1, line: 64, baseType: !15)
!15 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<int, 2>", file: !1, line: 64, size: 64, align: 32, elements: !16, templateParams: !19)
!16 = !{!17, !18}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !15, file: !1, line: 64, baseType: !13, size: 32, align: 32, flags: DIFlagPublic)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !15, file: !1, line: 64, baseType: !13, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!19 = !{!20, !12}
!20 = !DITemplateTypeParameter(name: "element", type: !13)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "float2", file: !1, line: 142, baseType: !22)
!22 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 2>", file: !1, line: 31, size: 64, align: 32, elements: !23, templateParams: !27)
!23 = !{!24, !26}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !22, file: !1, line: 31, baseType: !25, size: 32, align: 32, flags: DIFlagPublic)
!25 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !22, file: !1, line: 31, baseType: !25, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!27 = !{!28, !12}
!28 = !DITemplateTypeParameter(name: "element", type: !25)
!29 = !{!30, !34, !37, !40, !45, !48, !51}
!30 = !DISubprogram(name: "main", scope: !1, file: !1, line: 192, type: !31, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @main)
!31 = !DISubroutineType(types: !32)
!32 = !{null, !4, !4, !33, !4}
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !1, line: 39, baseType: !8)
!34 = !DISubprogram(name: "FilterHorizontally", linkageName: "\01?FilterHorizontally@@YAXV?$vector@I$01@@I@Z", scope: !1, file: !1, line: 55, type: !35, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false)
!35 = !DISubroutineType(types: !36)
!36 = !{null, !4, !33}
!37 = !DISubprogram(name: "GetActivePixelIndex", linkageName: "\01?GetActivePixelIndex@@YA?AV?$vector@H$01@@V1@@Z", scope: !1, file: !1, line: 45, type: !38, isLocal: false, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false)
!38 = !DISubroutineType(types: !39)
!39 = !{!14, !14}
!40 = !DISubprogram(name: "IsWithinBounds", linkageName: "\01?IsWithinBounds@@YA_NV?$vector@H$01@@0@Z", scope: !41, file: !41, line: 62, type: !42, isLocal: false, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: false)
!41 = !DIFile(filename: "./RTAO/shaders\5CRaytracingShaderHelper.hlsli", directory: "")
!42 = !DISubroutineType(types: !43)
!43 = !{!44, !14, !14}
!44 = !DIBasicType(name: "bool", size: 32, align: 32, encoding: DW_ATE_boolean)
!45 = !DISubprogram(name: "Float2ToHalf", linkageName: "\01?Float2ToHalf@@YAIV?$vector@M$01@@@Z", scope: !41, file: !41, line: 36, type: !46, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false)
!46 = !DISubroutineType(types: !47)
!47 = !{!33, !21}
!48 = !DISubprogram(name: "FilterVertically", linkageName: "\01?FilterVertically@@YAXV?$vector@I$01@@0@Z", scope: !1, file: !1, line: 149, type: !49, isLocal: false, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: false)
!49 = !DISubroutineType(types: !50)
!50 = !{null, !4, !4}
!51 = !DISubprogram(name: "HalfToFloat2", linkageName: "\01?HalfToFloat2@@YA?AV?$vector@M$01@@I@Z", scope: !41, file: !41, line: 44, type: !52, isLocal: false, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: false)
!52 = !DISubroutineType(types: !53)
!53 = !{!21, !33}
!54 = !{!55, !61, !66, !67, !69, !71, !76, !77, !79, !91, !95, !96, !99, !103, !107, !108, !123, !125, !127, !129, !131, !133, !135, !137, !139, !144}
!55 = !DIGlobalVariable(name: "InstanceMask", linkageName: "\01?InstanceMask@TraceRayParameters@@3IB", scope: !56, file: !57, line: 506, type: !58, isLocal: true, isDefinition: true)
!56 = !DINamespace(name: "TraceRayParameters", scope: null, file: !57, line: 504)
!57 = !DIFile(filename: "C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRaytracingHlslCompat.h", directory: "")
!58 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !59)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !60, line: 20, baseType: !33)
!60 = !DIFile(filename: "./SampleCore/shaders\5CHlslCompat.hlsli", directory: "")
!61 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@HitGroup@TraceRayParameters@@3QBIB", scope: !62, file: !57, line: 508, type: !63, isLocal: true, isDefinition: true)
!62 = !DINamespace(name: "HitGroup", scope: !56, file: !57, line: 507)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 64, align: 32, elements: !64)
!64 = !{!65}
!65 = !DISubrange(count: 2)
!66 = !DIGlobalVariable(name: "GeometryStride", linkageName: "\01?GeometryStride@HitGroup@TraceRayParameters@@3IB", scope: !62, file: !57, line: 513, type: !58, isLocal: true, isDefinition: true)
!67 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@MissShader@TraceRayParameters@@3QBIB", scope: !68, file: !57, line: 516, type: !63, isLocal: true, isDefinition: true)
!68 = !DINamespace(name: "MissShader", scope: !56, file: !57, line: 515)
!69 = !DIGlobalVariable(name: "InstanceMask", linkageName: "\01?InstanceMask@RTAOTraceRayParameters@@3IB", scope: !70, file: !57, line: 526, type: !58, isLocal: true, isDefinition: true)
!70 = !DINamespace(name: "RTAOTraceRayParameters", scope: null, file: !57, line: 524)
!71 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@HitGroup@RTAOTraceRayParameters@@3QBIB", scope: !72, file: !57, line: 528, type: !73, isLocal: true, isDefinition: true)
!72 = !DINamespace(name: "HitGroup", scope: !70, file: !57, line: 527)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, align: 32, elements: !74)
!74 = !{!75}
!75 = !DISubrange(count: 1)
!76 = !DIGlobalVariable(name: "GeometryStride", linkageName: "\01?GeometryStride@HitGroup@RTAOTraceRayParameters@@3IB", scope: !72, file: !57, line: 534, type: !58, isLocal: true, isDefinition: true)
!77 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@MissShader@RTAOTraceRayParameters@@3QBIB", scope: !78, file: !57, line: 537, type: !73, isLocal: true, isDefinition: true)
!78 = !DINamespace(name: "MissShader", scope: !70, file: !57, line: 536)
!79 = !DIGlobalVariable(name: "BackgroundColor", scope: !0, file: !57, line: 544, type: !80, isLocal: true, isDefinition: true)
!80 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !81)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMFLOAT4", file: !60, line: 17, baseType: !82)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "float4", file: !1, line: 544, baseType: !83)
!83 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 4>", file: !1, line: 544, size: 128, align: 32, elements: !84, templateParams: !89)
!84 = !{!85, !86, !87, !88}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !83, file: !1, line: 544, baseType: !25, size: 32, align: 32, flags: DIFlagPublic)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !83, file: !1, line: 544, baseType: !25, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !83, file: !1, line: 544, baseType: !25, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !83, file: !1, line: 544, baseType: !25, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!89 = !{!28, !90}
!90 = !DITemplateValueParameter(name: "element_count", type: !13, value: i32 4)
!91 = !DIGlobalVariable(name: "RayHitDistanceOnMiss", linkageName: "\01?RayHitDistanceOnMiss@RTAO@@3MB", scope: !92, file: !93, line: 15, type: !94, isLocal: true, isDefinition: true)
!92 = !DINamespace(name: "RTAO", scope: null, file: !93, line: 14)
!93 = !DIFile(filename: "C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRTAO/Shaders/RTAO.hlsli", directory: "")
!94 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !25)
!95 = !DIGlobalVariable(name: "InvalidAOCoefficientValue", linkageName: "\01?InvalidAOCoefficientValue@RTAO@@3MB", scope: !92, file: !93, line: 16, type: !94, isLocal: true, isDefinition: true)
!96 = !DIGlobalVariable(name: "g_inValue", linkageName: "\01?g_inValue@@3V?$Texture2D@M@@A", scope: !0, file: !1, line: 30, type: !97, isLocal: false, isDefinition: true)
!97 = !DICompositeType(tag: DW_TAG_class_type, name: "Texture2D<float>", file: !1, line: 30, size: 64, align: 32, elements: !2, templateParams: !98)
!98 = !{!28}
!99 = !DIGlobalVariable(name: "g_outMeanVariance", linkageName: "\01?g_outMeanVariance@@3V?$RWTexture2D@V?$vector@M$01@@@@A", scope: !0, file: !1, line: 31, type: !100, isLocal: false, isDefinition: true)
!100 = !DICompositeType(tag: DW_TAG_class_type, name: "RWTexture2D<vector<float, 2> >", file: !1, line: 31, size: 64, align: 32, elements: !2, templateParams: !101)
!101 = !{!102}
!102 = !DITemplateTypeParameter(name: "element", type: !22)
!103 = !DIGlobalVariable(name: "g_outDebug1", linkageName: "\01?g_outDebug1@@3V?$RWTexture2D@V?$vector@M$03@@@@A", scope: !0, file: !1, line: 33, type: !104, isLocal: false, isDefinition: true)
!104 = !DICompositeType(tag: DW_TAG_class_type, name: "RWTexture2D<vector<float, 4> >", file: !1, line: 33, size: 128, align: 32, elements: !2, templateParams: !105)
!105 = !{!106}
!106 = !DITemplateTypeParameter(name: "element", type: !83)
!107 = !DIGlobalVariable(name: "g_outDebug2", linkageName: "\01?g_outDebug2@@3V?$RWTexture2D@V?$vector@M$03@@@@A", scope: !0, file: !1, line: 34, type: !104, isLocal: false, isDefinition: true)
!108 = !DIGlobalVariable(name: "cb", linkageName: "\01?cb@@3U?$ConstantBuffer@UCalculateMeanVarianceConstantBuffer@@@@A", scope: !0, file: !1, line: 36, type: !109, isLocal: false, isDefinition: true)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "ConstantBuffer<CalculateMeanVarianceConstantBuffer>", file: !1, line: 36, size: 32, align: 32, elements: !2, templateParams: !110)
!110 = !{!111}
!111 = !DITemplateTypeParameter(name: "T", type: !112)
!112 = !DICompositeType(tag: DW_TAG_structure_type, name: "CalculateMeanVarianceConstantBuffer", file: !57, line: 150, size: 256, align: 32, elements: !113)
!113 = !{!114, !116, !117, !118, !120, !121, !122}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "textureDim", scope: !112, file: !57, line: 152, baseType: !115, size: 64, align: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMUINT2", file: !60, line: 21, baseType: !4)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "kernelWidth", scope: !112, file: !57, line: 153, baseType: !59, size: 32, align: 32, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "kernelRadius", scope: !112, file: !57, line: 154, baseType: !59, size: 32, align: 32, offset: 96)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "doCheckerboardSampling", scope: !112, file: !57, line: 156, baseType: !119, size: 32, align: 32, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "BOOL", file: !60, line: 24, baseType: !13)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "areEvenPixelsActive", scope: !112, file: !57, line: 157, baseType: !119, size: 32, align: 32, offset: 160)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "pixelStepY", scope: !112, file: !57, line: 158, baseType: !59, size: 32, align: 32, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !112, file: !57, line: 159, baseType: !25, size: 32, align: 32, offset: 224)
!123 = !DIGlobalVariable(name: "GroupDim", scope: !34, file: !1, line: 57, type: !124, isLocal: true, isDefinition: true)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!125 = !DIGlobalVariable(name: "NumRowsToLoadPerThread", scope: !34, file: !1, line: 65, type: !126, isLocal: true, isDefinition: true)
!126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!127 = !DIGlobalVariable(name: "BackgroundColor.1", linkageName: "BackgroundColor.1", scope: !0, file: !57, line: 544, type: !128, isLocal: false, isDefinition: true)
!128 = !DIDerivedType(tag: DW_TAG_member, name: ".1", baseType: !80, size: 32, align: 4, offset: 32)
!129 = !DIGlobalVariable(name: "GroupDim.1", linkageName: "\01?GroupDim@?1??FilterHorizontally@@YAXV?$vector@I$01@@I@Z@3V2@B.1", scope: !34, file: !1, line: 57, type: !130, isLocal: false, isDefinition: true)
!130 = !DIDerivedType(tag: DW_TAG_member, name: ".1", baseType: !124, size: 32, align: 4, offset: 32)
!131 = !DIGlobalVariable(name: "BackgroundColor.2", linkageName: "BackgroundColor.2", scope: !0, file: !57, line: 544, type: !132, isLocal: false, isDefinition: true)
!132 = !DIDerivedType(tag: DW_TAG_member, name: ".2", baseType: !80, size: 32, align: 4, offset: 64)
!133 = !DIGlobalVariable(name: "BackgroundColor.0", linkageName: "BackgroundColor.0", scope: !0, file: !57, line: 544, type: !134, isLocal: false, isDefinition: true)
!134 = !DIDerivedType(tag: DW_TAG_member, name: ".0", baseType: !80, size: 32, align: 4)
!135 = !DIGlobalVariable(name: "BackgroundColor.3", linkageName: "BackgroundColor.3", scope: !0, file: !57, line: 544, type: !136, isLocal: false, isDefinition: true)
!136 = !DIDerivedType(tag: DW_TAG_member, name: ".3", baseType: !80, size: 32, align: 4, offset: 96)
!137 = !DIGlobalVariable(name: "GroupDim.0", linkageName: "\01?GroupDim@?1??FilterHorizontally@@YAXV?$vector@I$01@@I@Z@3V2@B.0", scope: !34, file: !1, line: 57, type: !138, isLocal: false, isDefinition: true)
!138 = !DIDerivedType(tag: DW_TAG_member, name: ".0", baseType: !124, size: 32, align: 4)
!139 = !DIGlobalVariable(name: "PackedRowResultCache", linkageName: "\01?PackedRowResultCache@@3PAY07$$CAIA.1dim", scope: !0, file: !1, line: 39, type: !140, isLocal: false, isDefinition: true, variable: [128 x i32] addrspace(3)* @"\01?PackedRowResultCache@@3PAY07$$CAIA.1dim")
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 4096, align: 32, elements: !141)
!141 = !{!142, !143}
!142 = !DISubrange(count: 16)
!143 = !DISubrange(count: 8)
!144 = !DIGlobalVariable(name: "NumValuesCache", linkageName: "\01?NumValuesCache@@3PAY07$$CAIA.1dim", scope: !0, file: !1, line: 40, type: !140, isLocal: false, isDefinition: true, variable: [128 x i32] addrspace(3)* @"\01?NumValuesCache@@3PAY07$$CAIA.1dim")
!145 = !{i32 2, !"Dwarf Version", i32 4}
!146 = !{i32 2, !"Debug Info Version", i32 3}
!147 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!148 = !{!"RTAO\5CShaders\5CDenoising\5CCalculateMeanVarianceCS.hlsl", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A// Desc: Calculate Local Mean and Variance via a separable kernel and using wave intrinsics.\0D\0A// Requirements:\0D\0A//  - Wave lane size 16 or higher.\0D\0A//  - WaveReadLaneAt() with any to any to wave read lane support.\0D\0A// Supports:\0D\0A//  - up to 9x9 kernels.\0D\0A//  - checkerboard ON/OFF input. If enabled, outputs only for active pixels.\0D\0A//     Active pixel is a pixel on the checkerboard pattern and has a valid / \0D\0A//     generated value for it. The kernel is stretched in y direction \0D\0A//    to sample only from active pixels. \0D\0A// Performance:\0D\0A// - 4K, 2080Ti, 9x9 kernel: 0.37ms (separable) -> 0.305 ms (separable + wave intrinsics)\0D\0A\0D\0A#define HLSL\0D\0A#include \22RaytracingHlslCompat.h\22\0D\0A#include \22RaytracingShaderHelper.hlsli\22\0D\0A#include \22RTAO/Shaders/RTAO.hlsli\22\0D\0A\0D\0ATexture2D<float> g_inValue : register(t0);\0D\0ARWTexture2D<float2> g_outMeanVariance : register(u0);\0D\0A\0D\0ARWTexture2D<float4> g_outDebug1 : register(u3);\0D\0ARWTexture2D<float4> g_outDebug2 : register(u4);\0D\0A\0D\0AConstantBuffer<CalculateMeanVarianceConstantBuffer> cb: register(b0);\0D\0A\0D\0A// Group shared memory cache for the row aggregated results.\0D\0Agroupshared uint PackedRowResultCache[16][8];            // 16bit float valueSum, squaredValueSum.\0D\0Agroupshared uint NumValuesCache[16][8]; \0D\0A\0D\0A\0D\0A// Adjust an index to a pixel that had a valid value generated for it.\0D\0A// Inactive pixel indices get increased by 1 in the y direction.\0D\0Aint2 GetActivePixelIndex(int2 pixel)\0D\0A{\0D\0A    bool isEvenPixel = ((pixel.x + pixel.y) & 1) == 0;\0D\0A    return\0D\0A        cb.doCheckerboardSampling && cb.areEvenPixelsActive != isEvenPixel\0D\0A        ? pixel + int2(0, 1)\0D\0A        : pixel;\0D\0A}\0D\0A// Load up to 16x16 pixels and filter them horizontally.\0D\0A// The output is cached in Shared Memory and contains NumRows x 8 results.\0D\0Avoid FilterHorizontally(in uint2 Gid, in uint GI)\0D\0A{\0D\0A    const uint2 GroupDim = uint2(8, 8);\0D\0A    const uint NumValuesToLoadPerRowOrColumn = GroupDim.x + (cb.kernelWidth - 1);\0D\0A\0D\0A    // Processes the thread group as row-major 4x16, where each sub group of 16 threads processes one row.\0D\0A    // Each thread loads up to 4 values, with the sub groups loading rows interleaved.\0D\0A    // Loads up to 4x16x4 == 256 input values.\0D\0A    uint2 GTid4x16_row0 = uint2(GI % 16, GI / 16);\0D\0A    const int2 KernelBasePixel = (Gid * GroupDim - int(cb.kernelRadius)) * int2(1, cb.pixelStepY);\0D\0A    const uint NumRowsToLoadPerThread = 4;\0D\0A    const uint Row_BaseWaveLaneIndex = (WaveGetLaneIndex() / 16) * 16;\0D\0A\0D\0A    [unroll]\0D\0A    for (uint i = 0; i < NumRowsToLoadPerThread; i++)\0D\0A    {\0D\0A        uint2 GTid4x16 = GTid4x16_row0 + uint2(0, i * 4);\0D\0A        if (GTid4x16.y >= NumValuesToLoadPerRowOrColumn)\0D\0A        {\0D\0A            if (GTid4x16.x < GroupDim.x)\0D\0A            {\0D\0A                NumValuesCache[GTid4x16.y][GTid4x16.x] = 0;\0D\0A            }\0D\0A            break;\0D\0A        }\0D\0A\0D\0A        // Load all the contributing columns for each row.\0D\0A        int2 pixel = GetActivePixelIndex(KernelBasePixel + GTid4x16 * int2(1, cb.pixelStepY));\0D\0A        float value = RTAO::InvalidAOCoefficientValue;\0D\0A\0D\0A        // The lane is out of bounds of the GroupDim + kernel, \0D\0A        // but could be within bounds of the input texture,\0D\0A        // so don't read it from the texture.\0D\0A        // However, we need to keep it as an active lane for a below split sum.\0D\0A        if (GTid4x16.x < NumValuesToLoadPerRowOrColumn && IsWithinBounds(pixel, cb.textureDim))\0D\0A        {\0D\0A            value = g_inValue[pixel];\0D\0A        }\0D\0A\0D\0A        // Filter the values for the first GroupDim columns.\0D\0A        {\0D\0A            // Accumulate for the whole kernel width.\0D\0A            float valueSum = 0;\0D\0A            float squaredValueSum = 0;\0D\0A            uint numValues = 0;\0D\0A\0D\0A            // Since a row uses 16 lanes, but we only need to calculate the aggregate for the first half (8) lanes,\0D\0A            // split the kernel wide aggregation among the first 8 and the second 8 lanes, and then combine them.\0D\0A            \0D\0A            // Initialize the first 8 lanes to the first cell contribution of the kernel. \0D\0A            // This covers the remainder of 1 in cb.kernelWidth / 2 used in the loop below. \0D\0A            if (GTid4x16.x < GroupDim.x && value != RTAO::InvalidAOCoefficientValue)\0D\0A            {\0D\0A                valueSum = value;\0D\0A                squaredValueSum = value * value;\0D\0A                numValues++;\0D\0A            }\0D\0A\0D\0A            // Get the lane index that has the first value for a kernel in this lane.\0D\0A            uint Row_KernelStartLaneIndex =\0D\0A                Row_BaseWaveLaneIndex\0D\0A                + 1     // Skip over the already accumulated first cell of the kernel.\0D\0A                + (GTid4x16.x < GroupDim.x\0D\0A                    ? GTid4x16.x\0D\0A                    : (GTid4x16.x - GroupDim.x) + cb.kernelRadius);\0D\0A\0D\0A            for (uint c = 0; c < cb.kernelRadius; c++)\0D\0A            {\0D\0A                uint laneToReadFrom = Row_KernelStartLaneIndex + c;\0D\0A                float cValue = WaveReadLaneAt(value, laneToReadFrom);\0D\0A                if (cValue != RTAO::InvalidAOCoefficientValue)\0D\0A                {\0D\0A                    valueSum += cValue;\0D\0A                    squaredValueSum += cValue * cValue;\0D\0A                    numValues++;\0D\0A                }\0D\0A            }\0D\0A            \0D\0A            // Combine the sub-results.\0D\0A            uint laneToReadFrom = min(WaveGetLaneCount() - 1, Row_BaseWaveLaneIndex + GTid4x16.x + GroupDim.x);\0D\0A            valueSum += WaveReadLaneAt(valueSum, laneToReadFrom);\0D\0A            squaredValueSum += WaveReadLaneAt(squaredValueSum, laneToReadFrom);\0D\0A            numValues += WaveReadLaneAt(numValues, laneToReadFrom);\0D\0A\0D\0A            // Store only the valid results, i.e. first GroupDim columns.\0D\0A            if (GTid4x16.x < GroupDim.x)\0D\0A            {\0D\0A                PackedRowResultCache[GTid4x16.y][GTid4x16.x] = Float2ToHalf(float2(valueSum, squaredValueSum));\0D\0A                NumValuesCache[GTid4x16.y][GTid4x16.x] = numValues;\0D\0A            }\0D\0A        }\0D\0A    }\0D\0A}\0D\0A\0D\0Avoid FilterVertically(uint2 DTid, in uint2 GTid)\0D\0A{\0D\0A    float valueSum = 0;\0D\0A    float squaredValueSum = 0;\0D\0A    uint numValues = 0;\0D\0A\0D\0A    uint2 pixel = GetActivePixelIndex(int2(DTid.x, DTid.y * cb.pixelStepY));\0D\0A\0D\0A    float4 val1, val2;\0D\0A    // Accumulate for the whole kernel.\0D\0A    for (uint r = 0; r < cb.kernelWidth; r++)\0D\0A    {\0D\0A        uint rowID = GTid.y + r;\0D\0A        uint rNumValues = NumValuesCache[rowID][GTid.x];\0D\0A\0D\0A        if (rNumValues > 0)\0D\0A        {\0D\0A            float2 unpackedRowSum = HalfToFloat2(PackedRowResultCache[rowID][GTid.x]);\0D\0A            float rValueSum = unpackedRowSum.x;\0D\0A            float rSquaredValueSum = unpackedRowSum.y;\0D\0A\0D\0A            valueSum += rValueSum;\0D\0A            squaredValueSum += rSquaredValueSum;\0D\0A            numValues += rNumValues;\0D\0A        }\0D\0A    }\0D\0A\0D\0A    // Calculate mean and variance.\0D\0A    float invN = 1.f / max(numValues, 1);\0D\0A    float mean = invN * valueSum;\0D\0A\0D\0A    // Apply Bessel's correction to the estimated variance, multiply by N/N-1, \0D\0A    // since the true population mean is not known; it is only estimated as the sample mean.\0D\0A    float besselCorrection = numValues / float(max(numValues, 2) - 1);\0D\0A    float variance = besselCorrection * (invN * squaredValueSum - mean * mean);\0D\0A\0D\0A    variance = max(0, variance);    // Ensure variance doesn't go negative due to imprecision.\0D\0A\0D\0A    g_outMeanVariance[pixel] = numValues > 0 ? float2(mean, variance) : RTAO::InvalidAOCoefficientValue;\0D\0A}\0D\0A\0D\0A\0D\0A[numthreads(DefaultComputeShaderParams::ThreadGroup::Width, DefaultComputeShaderParams::ThreadGroup::Height, 1)]\0D\0Avoid main(uint2 Gid : SV_GroupID, uint2 GTid : SV_GroupThreadID, uint GI : SV_GroupIndex, uint2 DTid : SV_DispatchThreadID)\0D\0A{\0D\0A    FilterHorizontally(Gid, GI);\0D\0A    GroupMemoryBarrierWithGroupSync();\0D\0A\0D\0A    FilterVertically(DTid, GTid);\0D\0A}\0D\0A"}
!149 = !{!".\5CRTAO\5Cshaders\5CRaytracingShaderHelper.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A#ifndef RAYTRACINGSHADERHELPER_H\0D\0A#define RAYTRACINGSHADERHELPER_H\0D\0A\0D\0A#include \22RayTracingHlslCompat.h\22\0D\0A#include \22RTAO/Shaders/RTAO.hlsli\22\0D\0A\0D\0A#define INFINITY (1.0/0.0)\0D\0A\0D\0A#define FLT_EPSILON     1.192092896e-07 // Smallest number such that 1.0 + FLT_EPSILON != 1.0\0D\0A#define FLT_MIN         1.175494351e-38 \0D\0A#define FLT_MAX         3.402823466e+38 \0D\0A#define FLT_10BIT_MIN   6.1e-5\0D\0A#define FLT_10BIT_MAX   6.5e4\0D\0A#define PI              3.1415926535897f\0D\0A\0D\0Afloat length_toPow2(float2 p)\0D\0A{\0D\0A    return dot(p, p);\0D\0A}\0D\0A\0D\0Afloat length_toPow2(float3 p)\0D\0A{\0D\0A    return dot(p, p);\0D\0A}\0D\0A\0D\0Auint Float2ToHalf(in float2 val)\0D\0A{\0D\0A    uint result = 0;\0D\0A    result = f32tof16(val.x);\0D\0A    result |= f32tof16(val.y) << 16;\0D\0A    return result;\0D\0A}\0D\0A\0D\0Afloat2 HalfToFloat2(in uint val)\0D\0A{\0D\0A    float2 result;\0D\0A    result.x = f16tof32(val);\0D\0A    result.y = f16tof32(val >> 16);\0D\0A    return result;\0D\0A}\0D\0A\0D\0Auint2 EncodeMaterial16b(uint materialID, float3 diffuse)\0D\0A{\0D\0A    uint2 result;\0D\0A    result.x = materialID;\0D\0A    result.x |= f32tof16(diffuse.r) << 16;\0D\0A    result.y = Float2ToHalf(diffuse.gb);\0D\0A\0D\0A    return result;\0D\0A}\0D\0A\0D\0Abool IsWithinBounds(in int2 index, in int2 dimensions)\0D\0A{\0D\0A    return index.x >= 0 && index.y >= 0 && index.x < dimensions.x && index.y < dimensions.y;\0D\0A}\0D\0A\0D\0Avoid DecodeMaterial16b(in uint2 material, out uint materialID, out float3 diffuse)\0D\0A{\0D\0A    materialID = material.x & 0xffff;\0D\0A    diffuse.r = f16tof32(material.x >> 16);\0D\0A    diffuse.gb = HalfToFloat2(material.y);\0D\0A}\0D\0A\0D\0A// Remaps a value to [0,1] for a given range.\0D\0Afloat RemapToRange(in float value, in float rangeMin, in float rangeMax)\0D\0A{\0D\0A\09return saturate((value - rangeMin) / (rangeMax - rangeMin));\0D\0A}\0D\0A\0D\0A// Returns a cycling <0 -> 1 -> 0> animation interpolant \0D\0Afloat CalculateAnimationInterpolant(in float elapsedTime, in float cycleDuration)\0D\0A{\0D\0A    float curLinearCycleTime = fmod(elapsedTime, cycleDuration) / cycleDuration;\0D\0A    curLinearCycleTime = (curLinearCycleTime <= 0.5f) ? 2 * curLinearCycleTime : 1 - 2 * (curLinearCycleTime - 0.5f);\0D\0A    return smoothstep(0, 1, curLinearCycleTime);\0D\0A}\0D\0A\0D\0Avoid swap(inout float a, inout float b)\0D\0A{\0D\0A    float temp = a;\0D\0A    a = b;\0D\0A    b = temp;\0D\0A}\0D\0A\0D\0Abool IsInRange(in uint val, in uint min, in float max)\0D\0A{\0D\0A    return (val >= min && val <= max);\0D\0A}\0D\0A\0D\0Abool IsInRange(in float val, in float min, in float max)\0D\0A{\0D\0A    return (val >= min && val <= max);\0D\0A}\0D\0A\0D\0Afloat RGBtoLuminance(in float3 color)\0D\0A{\0D\0A    return 0.2126f * color.r + 0.7152f * color.g + 0.0722f * color.b;\0D\0A}\0D\0A\0D\0A// Load three 16 bit indices from a byte addressed buffer.\0D\0Astatic\0D\0Auint3 Load3x16BitIndices(uint offsetBytes, ByteAddressBuffer Indices)\0D\0A{\0D\0A    uint3 indices;\0D\0A\0D\0A    // ByteAdressBuffer loads must be aligned at a 4 byte boundary.\0D\0A    // Since we need to read three 16 bit indices: { 0, 1, 2 } \0D\0A    // aligned at a 4 byte boundary as: { 0 1 } { 2 0 } { 1 2 } { 0 1 } ...\0D\0A    // we will load 8 bytes (~ 4 indices { a b | c d }) to handle two possible index triplet layouts,\0D\0A    // based on first index's offsetBytes being aligned at the 4 byte boundary or not:\0D\0A    //  Aligned:     { 0 1 | 2 - }\0D\0A    //  Not aligned: { - 0 | 1 2 }\0D\0A    const uint dwordAlignedOffset = offsetBytes & ~3;\0D\0A    const uint2 four16BitIndices = Indices.Load2(dwordAlignedOffset);\0D\0A\0D\0A    // Aligned: { 0 1 | 2 - } => retrieve first three 16bit indices\0D\0A    if (dwordAlignedOffset == offsetBytes)\0D\0A    {\0D\0A        indices.x = four16BitIndices.x & 0xffff;\0D\0A        indices.y = (four16BitIndices.x >> 16) & 0xffff;\0D\0A        indices.z = four16BitIndices.y & 0xffff;\0D\0A    }\0D\0A    else // Not aligned: { - 0 | 1 2 } => retrieve last three 16bit indices\0D\0A    {\0D\0A        indices.x = (four16BitIndices.x >> 16) & 0xffff;\0D\0A        indices.y = four16BitIndices.y & 0xffff;\0D\0A        indices.z = (four16BitIndices.y >> 16) & 0xffff;\0D\0A    }\0D\0A\0D\0A    return indices;\0D\0A}\0D\0A\0D\0A// Retrieve hit world position.\0D\0Afloat3 HitWorldPosition()\0D\0A{\0D\0A    return WorldRayOrigin() + RayTCurrent() * WorldRayDirection();\0D\0A}\0D\0A\0D\0A// Retrieve hit object space position.\0D\0Afloat3 HitObjectPosition()\0D\0A{\0D\0A    return ObjectRayOrigin() + RayTCurrent() * ObjectRayDirection();\0D\0A}\0D\0A\0D\0Afloat2 ClipSpaceToTexturePosition(in float4 clipSpacePosition)\0D\0A{\0D\0A    float3 NDCposition = clipSpacePosition.xyz / clipSpacePosition.w;   // Perspective divide to get Normal Device Coordinates: {[-1,1], [-1,1], (0, 1]}\0D\0A    NDCposition.y = -NDCposition.y;                                     // Invert Y for DirectX-style coordinates.\0D\0A    float2 texturePosition = (NDCposition.xy + 1) * 0.5f;               // [-1,1] -> [0, 1]\0D\0A    return texturePosition;\0D\0A}\0D\0A\0D\0A// Retrieve attribute at a hit position interpolated from vertex attributes using the hit's barycentrics.\0D\0Afloat3 HitAttribute(float3 vertexAttribute[3], BuiltInTriangleIntersectionAttributes attr)\0D\0A{\0D\0A    return vertexAttribute[0] +\0D\0A        attr.barycentrics.x * (vertexAttribute[1] - vertexAttribute[0]) +\0D\0A        attr.barycentrics.y * (vertexAttribute[2] - vertexAttribute[0]);\0D\0A}\0D\0A\0D\0A// Retrieve attribute at a hit position interpolated from vertex attributes using the hit's barycentrics.\0D\0Afloat2 HitAttribute(float2 vertexAttribute[3], BuiltInTriangleIntersectionAttributes attr)\0D\0A{\0D\0A    return vertexAttribute[0] +\0D\0A        attr.barycentrics.x * (vertexAttribute[1] - vertexAttribute[0]) +\0D\0A        attr.barycentrics.y * (vertexAttribute[2] - vertexAttribute[0]);\0D\0A}\0D\0A\0D\0A// Generate camera's forward direction ray\0D\0Ainline float3 GenerateForwardCameraRayDirection(in float4x4 projectionToWorldWithCameraAtOrigin)\0D\0A{\0D\0A\09float2 screenPos = float2(0, 0);\0D\0A\09\0D\0A\09// Unproject the pixel coordinate into a world positon.\0D\0A\09float4 world = mul(float4(screenPos, 0, 1), projectionToWorldWithCameraAtOrigin);\0D\0A\09return normalize(world.xyz);\0D\0A}\0D\0A\0D\0Ainline Ray GenerateForwardCameraRay(in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin)\0D\0A{\0D\0A    float2 screenPos = float2(0, 0);\0D\0A\0D\0A    // Unproject the pixel coordinate into a world positon.\0D\0A    float4 world = mul(float4(screenPos, 0, 1), projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    Ray ray;\0D\0A    ray.origin = cameraPosition;\0D\0A    // Since the camera's eye was at 0,0,0 in projectionToWorldWithCameraAtOrigin \0D\0A    // the world.xyz is the direction.\0D\0A    ray.direction = normalize(world.xyz);\0D\0A\0D\0A    return ray;\0D\0A}\0D\0A\0D\0A\0D\0A// Generate a ray in world space for a camera pixel corresponding to an index from the dispatched 2D grid.\0D\0Ainline Ray GenerateCameraRay(uint2 index, in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin, float2 jitter = float2(0, 0))\0D\0A{\0D\0A    float2 xy = index + 0.5f; // center in the middle of the pixel.\0D\0A\09xy += jitter;\0D\0A    float2 screenPos = xy / DispatchRaysDimensions().xy * 2.0 - 1.0;\0D\0A\0D\0A    // Invert Y for DirectX-style coordinates.\0D\0A    screenPos.y = -screenPos.y;\0D\0A\0D\0A    // Unproject the pixel coordinate into a world positon.\0D\0A    float4 world = mul(float4(screenPos, 0, 1), projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    Ray ray;\0D\0A    ray.origin = cameraPosition;\0D\0A\09// Since the camera's eye was at 0,0,0 in projectionToWorldWithCameraAtOrigin \0D\0A\09// the world.xyz is the direction.\0D\0A\09ray.direction = normalize(world.xyz);\0D\0A\0D\0A    return ray;\0D\0A}\0D\0A\0D\0A// Texture coordinates on a horizontal plane.\0D\0Afloat2 TexCoords(in float3 position)\0D\0A{\0D\0A    return position.xz;\0D\0A}\0D\0A\0D\0A// Calculate ray differentials.\0D\0Avoid CalculateRayDifferentials(out float2 ddx_uv, out float2 ddy_uv, in float2 uv, in float3 hitPosition, in float3 surfaceNormal, in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin)\0D\0A{\0D\0A    // Compute ray differentials by intersecting the tangent plane to the  surface.\0D\0A    Ray ddx = GenerateCameraRay(DispatchRaysIndex().xy + uint2(1, 0), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    Ray ddy = GenerateCameraRay(DispatchRaysIndex().xy + uint2(0, 1), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    // Compute ray differentials.\0D\0A    float3 ddx_pos = ddx.origin - ddx.direction * dot(ddx.origin - hitPosition, surfaceNormal) / dot(ddx.direction, surfaceNormal);\0D\0A    float3 ddy_pos = ddy.origin - ddy.direction * dot(ddy.origin - hitPosition, surfaceNormal) / dot(ddy.direction, surfaceNormal);\0D\0A\0D\0A    // Calculate texture sampling footprint.\0D\0A    ddx_uv = TexCoords(ddx_pos) - uv;\0D\0A    ddy_uv = TexCoords(ddy_pos) - uv;\0D\0A}\0D\0A\0D\0A// Forward declaration.\0D\0Afloat CheckersGridTextureBoxFilter(in float2 uv, in float2 dpdx, in float2 dpdy, in uint ratio);\0D\0A\0D\0A// Return analytically integrated checkerboard texture (box filter).\0D\0Afloat AnalyticalCheckersGridTexture(in float3 hitPosition, in float3 surfaceNormal, in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin )\0D\0A{\0D\0A    float2 ddx_uv;\0D\0A    float2 ddy_uv;\0D\0A    float2 uv = TexCoords(hitPosition);\0D\0A\0D\0A    CalculateRayDifferentials(ddx_uv, ddy_uv, uv, hitPosition, surfaceNormal, cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    return CheckersGridTextureBoxFilter(uv, ddx_uv, ddy_uv, 50);\0D\0A}\0D\0A\0D\0A// Fresnel reflectance - schlick approximation.\0D\0Afloat3 FresnelReflectanceSchlick(in float3 I, in float3 N, in float3 F0)\0D\0A{\0D\0A    float cosi = saturate(dot(-I, N));\0D\0A    return F0 + (1 - F0)*pow(1 - cosi, 5);\0D\0A}\0D\0A\0D\0Afloat3 RemoveSRGB(float3 x)\0D\0A{\0D\0A\09return x < 0.04045 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\0D\0A}\0D\0A\0D\0Afloat3 ApplySRGB(float3 x)\0D\0A{\0D\0A\09return x < 0.0031308 ? 12.92 * x : 1.055 * pow(abs(x), 1.0 / 2.4) - 0.055;\0D\0A}\0D\0A\0D\0Auint SmallestPowerOf2GreaterThan(in uint x)\0D\0A{\0D\0A    // Set all the bits behind the most significant non-zero bit in x to 1.\0D\0A    // Essentially giving us the largest value that is smaller than the\0D\0A    // next power of 2 we're looking for.\0D\0A    x |= x >> 1;\0D\0A    x |= x >> 2;\0D\0A    x |= x >> 4;\0D\0A    x |= x >> 8;\0D\0A    x |= x >> 16;\0D\0A\0D\0A    // Return the next power of two value.\0D\0A    return x + 1;\0D\0A}\0D\0A\0D\0A// Returns float precision for a given float value.\0D\0A// Values within (value -precision, value + precision) map to the same value. \0D\0A// Precision = exponentRange/MaxMantissaValue = (2^e+1 - 2^e) / (2^NumMantissaBits)\0D\0A// Ref: https://blog.demofox.org/2017/11/21/floating-point-precision/\0D\0Afloat FloatPrecision(in float x, in uint NumMantissaBits)\0D\0A{\0D\0A    // Find the exponent range the value is in.\0D\0A    uint nextPowerOfTwo = SmallestPowerOf2GreaterThan(x);\0D\0A    float exponentRange = nextPowerOfTwo - (nextPowerOfTwo >> 1);\0D\0A\0D\0A    float MaxMantissaValue = 1 << NumMantissaBits;\0D\0A\0D\0A    return exponentRange / MaxMantissaValue;\0D\0A}\0D\0A\0D\0Afloat FloatPrecisionR10(in float x)\0D\0A{\0D\0A    return FloatPrecision(x, 5);\0D\0A}\0D\0A\0D\0Afloat FloatPrecisionR16(in float x)\0D\0A{\0D\0A    return FloatPrecision(x, 10);\0D\0A}\0D\0A\0D\0Afloat FloatPrecisionR32(in float x)\0D\0A{\0D\0A    return FloatPrecision(x, 23);\0D\0A}\0D\0A\0D\0A\0D\0A/***************************************************************/\0D\0A// Normal encoding\0D\0A// Ref: https://knarkowicz.wordpress.com/2014/04/16/octahedron-normal-vector-encoding/\0D\0Afloat2 OctWrap(float2 v)\0D\0A{\0D\0A    return (1.0 - abs(v.yx)) * (v.xy >= 0.0 ? 1.0 : -1.0);\0D\0A}\0D\0A\0D\0A// Converts a 3D unit vector to a 2D vector with <0,1> range. \0D\0Afloat2 EncodeNormal(float3 n)\0D\0A{\0D\0A    n /= (abs(n.x) + abs(n.y) + abs(n.z));\0D\0A    n.xy = n.z >= 0.0 ? n.xy : OctWrap(n.xy);\0D\0A    n.xy = n.xy * 0.5 + 0.5;\0D\0A    return n.xy;\0D\0A}\0D\0A\0D\0Afloat3 DecodeNormal(float2 f)\0D\0A{\0D\0A    f = f * 2.0 - 1.0;\0D\0A\0D\0A    // https://twitter.com/Stubbesaurus/status/937994790553227264\0D\0A    float3 n = float3(f.x, f.y, 1.0 - abs(f.x) - abs(f.y));\0D\0A    float t = saturate(-n.z);\0D\0A    n.xy += n.xy >= 0.0 ? -t : t;\0D\0A    return normalize(n);\0D\0A}\0D\0A/***************************************************************/\0D\0A\0D\0A\0D\0A\0D\0A// Pack [0.0, 1.0] float to 8 bit uint. \0D\0Auint Pack_R8_FLOAT(float r)\0D\0A{\0D\0A    return clamp(round(r * 255), 0, 255);\0D\0A}\0D\0A\0D\0Afloat Unpack_R8_FLOAT(uint r)\0D\0A{\0D\0A    return (r & 0xFF) / 255.0;\0D\0A}\0D\0A\0D\0A// pack two 8 bit uint2 into a 16 bit uint.\0D\0Auint Pack_R8G8_to_R16_UINT(in uint r, in uint g)\0D\0A{\0D\0A    return (r & 0xff) | ((g & 0xff) << 8);\0D\0A}\0D\0A\0D\0Avoid Unpack_R16_to_R8G8_UINT(in uint v, out uint r, out uint g)\0D\0A{\0D\0A    r = v & 0xFF;\0D\0A    g = (v >> 8) & 0xFF;\0D\0A}\0D\0A\0D\0A\0D\0A// Pack unsigned floating point, where \0D\0A// - rgb.rg are in [0, 1] range stored as two 8 bit uints.\0D\0A// - rgb.b in [0, FLT_16_BIT_MAX] range stored as a 16bit float.\0D\0Auint Pack_R8G8B16_FLOAT(float3 rgb)\0D\0A{\0D\0A    uint r = Pack_R8_FLOAT(rgb.r);\0D\0A    uint g = Pack_R8_FLOAT(rgb.g) << 8;\0D\0A    uint b = f32tof16(rgb.b) << 16;\0D\0A    return r | g | b;\0D\0A}\0D\0A\0D\0Afloat3 Unpack_R8G8B16_FLOAT(uint rgb)\0D\0A{\0D\0A    float r = Unpack_R8_FLOAT(rgb);\0D\0A    float g = Unpack_R8_FLOAT(rgb >> 8);\0D\0A    float b = f16tof32(rgb >> 16);\0D\0A    return float3(r, g, b);\0D\0A}\0D\0A\0D\0Auint NormalizedFloat3ToByte3(float3 v)\0D\0A{\0D\0A    return\0D\0A        (uint(v.x * 255) << 16) +\0D\0A        (uint(v.y * 255) << 8) +\0D\0A        uint(v.z * 255);\0D\0A}\0D\0A\0D\0Afloat3 Byte3ToNormalizedFloat3(uint v)\0D\0A{\0D\0A    return float3(\0D\0A        (v >> 16) & 0xff,\0D\0A        (v >> 8) & 0xff,\0D\0A        v & 0xff) / 255;\0D\0A}\0D\0A\0D\0A// Encode normal and depth with 16 bits allocated for each.\0D\0Auint EncodeNormalDepth_N16D16(in float3 normal, in float depth)\0D\0A{\0D\0A    float3 encodedNormalDepth = float3(EncodeNormal(normal), depth);\0D\0A    return Pack_R8G8B16_FLOAT(encodedNormalDepth);\0D\0A}\0D\0A\0D\0A\0D\0A// Decoded 16 bit normal and 16bit depth.\0D\0Avoid DecodeNormalDepth_N16D16(in uint packedEncodedNormalAndDepth, out float3 normal, out float depth)\0D\0A{\0D\0A    float3 encodedNormalDepth = Unpack_R8G8B16_FLOAT(packedEncodedNormalAndDepth);\0D\0A    normal = DecodeNormal(encodedNormalDepth.xy);\0D\0A    depth = encodedNormalDepth.z;\0D\0A}\0D\0A\0D\0Auint EncodeNormalDepth(in float3 normal, in float depth)\0D\0A{\0D\0A    return EncodeNormalDepth_N16D16(normal, depth);\0D\0A}\0D\0A\0D\0Avoid DecodeNormalDepth(in uint encodedNormalDepth, out float3 normal, out float depth)\0D\0A{\0D\0A    DecodeNormalDepth_N16D16(encodedNormalDepth, normal, depth);\0D\0A}\0D\0A\0D\0Avoid DecodeNormal(in uint encodedNormalDepth, out float3 normal)\0D\0A{\0D\0A    float depthDummy;\0D\0A    DecodeNormalDepth_N16D16(encodedNormalDepth, normal, depthDummy);\0D\0A}\0D\0A\0D\0Avoid UnpackEncodedNormalDepth(in uint packedEncodedNormalDepth, out float2 encodedNormal, out float depth)\0D\0A{\0D\0A    float3 encodedNormalDepth = Unpack_R8G8B16_FLOAT(packedEncodedNormalDepth);\0D\0A    encodedNormal = encodedNormalDepth.xy;\0D\0A    depth = encodedNormalDepth.z;\0D\0A}\0D\0A\0D\0A/***************************************************************/\0D\0A// 3D value noise\0D\0A// Ref: https://www.shadertoy.com/view/XsXfRH\0D\0A// The MIT License\0D\0A// Copyright \EC\A7\A4 2017 Inigo Quilez\0D\0A// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \22Software\22), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \22AS IS\22, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\0D\0Afloat hash(float3 p)\0D\0A{\0D\0A    p = frac(p*0.3183099 + .1);\0D\0A    p *= 17.0;\0D\0A    return frac(p.x*p.y*p.z*(p.x + p.y + p.z));\0D\0A}\0D\0A/***************************************************************/\0D\0A\0D\0A\0D\0A// Sample normal map, convert to signed, apply tangent-to-world space transform.\0D\0Afloat3 BumpMapNormalToWorldSpaceNormal(float3 bumpNormal, float3 surfaceNormal, float3 tangent)\0D\0A{\0D\0A    // Compute tangent frame.\0D\0A    surfaceNormal = normalize(surfaceNormal);\0D\0A    tangent = normalize(tangent);\0D\0A\0D\0A    float3 bitangent = normalize(cross(tangent, surfaceNormal));\0D\0A    float3x3 tangentSpaceToWorldSpace = float3x3(tangent, bitangent, surfaceNormal);\0D\0A\0D\0A    return mul(bumpNormal, tangentSpaceToWorldSpace);\0D\0A}\0D\0A\0D\0A// Calculate a tangent from triangle's vertices and their uv coordinates.\0D\0A// Ref: http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/\0D\0Afloat3 CalculateTangent(in float3 v0, in float3 v1, in float3 v2, in float2 uv0, in float2 uv1, in float2 uv2)\0D\0A{\0D\0A    // Calculate edges\0D\0A    // Position delta\0D\0A    float3 deltaPos1 = v1 - v0;\0D\0A    float3 deltaPos2 = v2 - v0;\0D\0A\0D\0A    // UV delta\0D\0A    float2 deltaUV1 = uv1 - uv0;\0D\0A    float2 deltaUV2 = uv2 - uv0;\0D\0A\0D\0A    float r = 1.0f / (deltaUV1.x * deltaUV2.y - deltaUV1.y * deltaUV2.x);\0D\0A    return (deltaPos1 * deltaUV2.y - deltaPos2 * deltaUV1.y) * r;\0D\0A}\0D\0A\0D\0Afloat3 RayPlaneIntersection(float3 planeOrigin, float3 planeNormal, float3 rayOrigin, float3 rayDirection)\0D\0A{\0D\0A    float d = -dot(planeNormal, planeOrigin);\0D\0A    float t = (-dot(planeNormal, rayOrigin) - d) / dot(planeNormal, rayDirection);\0D\0A    return rayOrigin + t * rayDirection;\0D\0A}\0D\0A\0D\0Abool Inverse2x2(float2x2 mat, out float2x2 inverse)\0D\0A{\0D\0A    float determinant = mat[0][0] * mat[1][1] - mat[1][0] * mat[0][1];\0D\0A\0D\0A    float rcpDeterminant = rcp(determinant);\0D\0A    inverse[0][0] = mat[1][1];\0D\0A    inverse[1][1] = mat[0][0];\0D\0A    inverse[1][0] = -mat[1][0];\0D\0A    inverse[0][1] = -mat[0][1];\0D\0A    inverse = rcpDeterminant * inverse;\0D\0A\0D\0A    return abs(determinant) > 0.00000001;\0D\0A}\0D\0A\0D\0A\0D\0A/*\0D\0A Using implementation described in PBRT, finding the partial derivative of the (change in position)/(change in UV coordinates)\0D\0A a.k.a dp/du and dp/dv\0D\0A\0D\0A Given the 3 UV and 3 triangle points, this can be represented as a linear equation:\0D\0A\0D\0A (uv0.u - uv2.u, uv0.v - uv2.v)   (dp/du)   =     (p0 - p2)\0D\0A (uv1.u - uv2.u, uv1.v - uv2.v)   (dp/dv)   =     (p1 - p2)\0D\0A\0D\0A To solve for dp/du, we invert the 2x2 matrix on the left side to get\0D\0A\0D\0A (dp/du)   = (uv0.u - uv2.u, uv0.v - uv2.v)^-1  (p0 - p2)\0D\0A (dp/dv)   = (uv1.u - uv2.u, uv1.v - uv2.v)     (p1 - p2)\0D\0A*/\0D\0Avoid CalculateTrianglePartialDerivatives(float2 uv0, float2 uv1, float2 uv2, float3 p0, float3 p1, float3 p2, out float3 dpdu, out float3 dpdv)\0D\0A{\0D\0A    float2x2 linearEquation;\0D\0A    linearEquation[0] = uv0 - uv2;\0D\0A    linearEquation[1] = uv1 - uv2;\0D\0A\0D\0A    float2x3 pointVector;\0D\0A    pointVector[0] = p0 - p2;\0D\0A    pointVector[1] = p1 - p2;\0D\0A\0D\0A    float2x2 inverse;\0D\0A    Inverse2x2(linearEquation, inverse);\0D\0A\0D\0A    dpdu = inverse[0][0] * pointVector[0] + inverse[0][1] * pointVector[1];\0D\0A    dpdv = inverse[1][0] * pointVector[0] + inverse[1][1] * pointVector[1];\0D\0A}\0D\0A\0D\0A/*\0D\0AUsing implementation described in PBRT, finding the derivative for the UVs (dU, dV)  in both the x and y directions\0D\0A\0D\0AGiven the original point and the offset points (pX and pY) + the partial derivatives, the linear equation can be formed:\0D\0ANote described only with pX, but the same is also applied to pY\0D\0A\0D\0A( dpdu.x, dpdv.x)          =   (pX.x - p.x)\0D\0A( dpdu.y, dpdv.y)   (dU)   =   (pX.y - p.y)\0D\0A( dpdu.z, dpdv.z)   (dV)   =   (pX.z - p.z)\0D\0A\0D\0ABecause the problem is over-constrained (3 equations and only 2 unknowns), we pick 2 channels. Since one of the equations can\0D\0Abe degenerate, we pick the other 2 - namely 2 with least magnitude in their cross product, which are conveniently available in n.\0D\0ATHen we solve for dU, dV by inverting the matrix\0D\0A\0D\0AdU    =   ( dpdu.x, dpdv.x)^-1  (pX.x - p.x)\0D\0AdV    =   ( dpdu.y, dpdv.y)     (pX.y - p.y)\0D\0A*/\0D\0Avoid CalculateUVDerivatives(float3 normal, float3 dpdu, float3 dpdv, float3 p, float3 pX, float3 pY, out float2 ddx, out float2 ddy)\0D\0A{\0D\0A    int2 indices;\0D\0A    float3 absNormal = abs(normal);\0D\0A    if (absNormal.x > absNormal.y && absNormal.x > absNormal.z)\0D\0A    {\0D\0A        indices = int2(1, 2);\0D\0A    }\0D\0A    else if (absNormal.y > absNormal.z)\0D\0A    {\0D\0A        indices = int2(0, 2);\0D\0A    }\0D\0A    else\0D\0A    {\0D\0A        indices = int2(0, 1);\0D\0A    }\0D\0A\0D\0A    float2x2 linearEquation;\0D\0A    linearEquation[0] = float2(dpdu[indices.x], dpdv[indices.x]);\0D\0A    linearEquation[1] = float2(dpdu[indices.y], dpdv[indices.y]);\0D\0A\0D\0A    float2x2 inverse;\0D\0A    Inverse2x2(linearEquation, inverse);\0D\0A\0D\0A    float2 pointOffset = float2(pX[indices.x] - p[indices.x], pX[indices.y] - p[indices.y]);\0D\0A    ddx = abs(mul(inverse, pointOffset));\0D\0A\0D\0A    pointOffset = float2(pY[indices.x] - p[indices.x], pY[indices.y] - p[indices.y]);\0D\0A    ddy = abs(mul(inverse, pointOffset));\0D\0A}\0D\0A\0D\0A\0D\0Avoid CalculateUVDerivatives(\0D\0A    in float2 uv, in float3 hitPosition, in float3 triangleNormal,\0D\0A    in float3 p0, in float3 p1, in float3 p2, \0D\0A    in float2 uv0, in float2 uv1, in float2 uv2,\0D\0A    in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin,\0D\0A    out float2 ddx, out float2 ddy)\0D\0A{\0D\0A    Ray ray10 = GenerateCameraRay(DispatchRaysIndex().xy + uint2(1, 0), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    Ray ray01 = GenerateCameraRay(DispatchRaysIndex().xy + uint2(0, 1), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    float3 xOffsetPoint = RayPlaneIntersection(hitPosition, triangleNormal, ray10.origin, ray10.direction);\0D\0A    float3 yOffsetPoint = RayPlaneIntersection(hitPosition, triangleNormal, ray01.origin, ray01.direction);\0D\0A\0D\0A    float3 dpdu, dpdv;\0D\0A    CalculateTrianglePartialDerivatives(uv0, uv1, uv2, p0, p1, p2, dpdu, dpdv);\0D\0A    CalculateUVDerivatives(triangleNormal, dpdu, dpdv, hitPosition, xOffsetPoint, yOffsetPoint, ddx, ddy);\0D\0A}\0D\0A\0D\0A// Calculate derivatives of texture coordinates on a given triangle.\0D\0Avoid CalculateUVDerivatives(\0D\0A    in float3 hitPosition, in float2 uv, in float3 tangent, in float3 bitangent, in float3 triangleNormal,\0D\0A    in float3 p0,                      // Current ray's intersection point with the triangle.\0D\0A    in Ray rx, in Ray ry,              // Auxilary rays\0D\0A    in float2 uv0, in float2 uv1, in float2 uv2,    // UV coordinates at the triangle's vertices.\0D\0A    in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin,\0D\0A    out float2 ddx, out float2 ddy,    // UV derivatives\0D\0A    out float3 px, out float3 py)      // Auxilary rays' intersection points with the triangle.)\0D\0A{\0D\0A    px = RayPlaneIntersection(hitPosition, triangleNormal, rx.origin, rx.direction);\0D\0A    py = RayPlaneIntersection(hitPosition, triangleNormal, ry.origin, ry.direction);\0D\0A\0D\0A    CalculateUVDerivatives(triangleNormal, tangent, bitangent, hitPosition, px, py, ddx, ddy);\0D\0A}\0D\0A\0D\0A// Retrieves auxilary camera rays offset by one pixel in x and y directions in screen space. \0D\0Avoid GetAuxilaryCameraRays(in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin, out Ray rx, out Ray ry)\0D\0A{\0D\0A    rx = GenerateCameraRay(DispatchRaysIndex().xy + uint2(1, 0), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    ry = GenerateCameraRay(DispatchRaysIndex().xy + uint2(0, 1), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A}\0D\0A\0D\0Afloat min4(in float4 v)\0D\0A{\0D\0A    return min(min(v.x, v.y), min(v.z, v.w));\0D\0A}\0D\0A\0D\0Afloat max4(in float4 v)\0D\0A{\0D\0A    return max(max(v.x, v.y), max(v.z, v.w));\0D\0A}\0D\0A\0D\0Auint2 Get2DQuadIndexOffset(in uint i)\0D\0A{\0D\0A    const uint2 indexOffsets[4] = { {0, 0}, {1, 0}, {0, 1}, {1, 1} };\0D\0A    return indexOffsets[i];\0D\0A}\0D\0A\0D\0Auint GetIndexOfValueClosestToTheReference(in float refValue, in float2 vValues)\0D\0A{\0D\0A    float2 delta = abs(refValue - vValues);\0D\0A\0D\0A    uint outIndex = delta[1] < delta[0] ? 1 : 0;\0D\0A\0D\0A    return outIndex;\0D\0A}\0D\0A\0D\0Auint GetIndexOfValueClosestToTheReference(in float refValue, in float4 vValues)\0D\0A{\0D\0A    float4 delta = abs(refValue - vValues);\0D\0A\0D\0A    uint outIndex = delta[1] < delta[0] ? 1 : 0;\0D\0A    outIndex = delta[2] < delta[outIndex] ? 2 : outIndex;\0D\0A    outIndex = delta[3] < delta[outIndex] ? 3 : outIndex;\0D\0A\0D\0A    return outIndex;\0D\0A}\0D\0A\0D\0A// Remap partial depth derivatives at z0 from [1,1] pixel offset to a new pixel offset.\0D\0Afloat2 RemapDdxy(in float z0, in float2 ddxy, in float2 pixelOffset)\0D\0A{    \0D\0A    // Perspective correction for non-linear depth interpolation.\0D\0A    // Ref: https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/visibility-problem-depth-buffer-depth-interpolation\0D\0A    // Given a linear depth interpolation for finding z at offset q along z0 to z1\0D\0A    //      z =  1 / (1 / z0 * (1 - q) + 1 / z1 * q)\0D\0A    // and z1 = z0 + ddxy, where z1 is at a unit pixel offset [1, 1]\0D\0A    // z can be calculated via ddxy as\0D\0A    //\0D\0A    //      z = (z0 + ddxy) / (1 + (1-q) / z0 * ddxy) \0D\0A    float2 z = (z0 + ddxy) / (1 + ((1 - pixelOffset) / z0) * ddxy);\0D\0A    return sign(pixelOffset) * (z - z0);\0D\0A}\0D\0A\0D\0Afloat GetDepthAtPixelOffset(in float z0, in float2 ddxy, in float2 pixelOffset)\0D\0A{\0D\0A    float2 newDdxy = RemapDdxy(z0, ddxy, pixelOffset);\0D\0A    return z0 + dot(1, newDdxy);\0D\0A}\0D\0A\0D\0A// Returns an approximate surface dimensions covered in a pixel. \0D\0A// This is a simplified model assuming pixel to pixel view angles are the same.\0D\0A// z - linear depth of the surface at the pixel\0D\0A// ddxy - partial depth derivatives\0D\0A// tan_a - tangent of a per pixel view angle \0D\0Afloat2 ApproximateProjectedSurfaceDimensionsPerPixel(in float z, in float2 ddxy, in float tan_a)\0D\0A{\0D\0A    // Surface dimensions for a surface parallel at z.\0D\0A    float2 dx = tan_a * z;\0D\0A    \0D\0A    // Using Pythagorean theorem approximate the surface dimensions given the ddxy.\0D\0A    float2 w = sqrt(dx * dx + ddxy * ddxy);\0D\0A\0D\0A    return w;\0D\0A}\0D\0A\0D\0A// Ensure only valid samples are interpolated. \0D\0A// Defaults to an average or an invalid value if none are valid.\0D\0Afloat InterpolateValidValues(\0D\0A    in float4 weights,\0D\0A    in float4 SampleValues,\0D\0A    in float minWeight = 1e-6,\0D\0A    in float invalidValue = RTAO::InvalidAOCoefficientValue)\0D\0A{\0D\0A    float4 validSamples = SampleValues != invalidValue;\0D\0A    weights *= validSamples;\0D\0A    float weightSum = dot(weights, 1);\0D\0A    if (weightSum < minWeight)\0D\0A    {\0D\0A        float numValidSamples = dot(validSamples, 1);\0D\0A        if (numValidSamples > 1e-6)\0D\0A        {\0D\0A            return dot(validSamples, SampleValues) / numValidSamples;\0D\0A        }\0D\0A        else\0D\0A        {\0D\0A            return invalidValue;\0D\0A        }\0D\0A    }\0D\0A\0D\0A    return dot(weights, SampleValues) / dot(weights, 1);\0D\0A}\0D\0A\0D\0A#endif // RAYTRACINGSHADERHELPER_H\0D\0A"}
!150 = !{!".\5CSampleCore\5Cshaders\5CHlslCompat.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef HLSLCOMPAT_H\0D\0A#define HLSLCOMPAT_H\0D\0A\0D\0Atypedef float2 XMFLOAT2;\0D\0Atypedef float3 XMFLOAT3;\0D\0Atypedef float4 XMFLOAT4;\0D\0Atypedef float4 XMVECTOR;\0D\0Atypedef float4x4 XMMATRIX;\0D\0Atypedef uint UINT;\0D\0Atypedef uint2 XMUINT2;\0D\0Atypedef uint3 XMUINT3;\0D\0Atypedef int2 XMINT2;\0D\0Atypedef int BOOL;\0D\0A\0D\0A#endif // HLSLCOMPAT_H"}
!151 = !{!"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRTAO\5CShaders\5CRTAO.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A#ifndef RTAO_HLSLI\0D\0A#define RTAO_HLSLI\0D\0A\0D\0Anamespace RTAO {\0D\0A    static const float RayHitDistanceOnMiss = 0;\0D\0A    static const float InvalidAOCoefficientValue = -1;\0D\0A    bool HasAORayHitAnyGeometry(in float tHit)\0D\0A    {\0D\0A        return tHit != RayHitDistanceOnMiss;\0D\0A    }\0D\0A}\0D\0A\0D\0A#endif // RTAO_HLSLI"}
!152 = !{!"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRayTracingHlslCompat.h", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef RAYTRACINGHLSLCOMPAT_H\0D\0A#define RAYTRACINGHLSLCOMPAT_H\0D\0A\0D\0A//**********************************************************************************************\0D\0A//\0D\0A// RaytracingHLSLCompat.h\0D\0A//\0D\0A// A header with shared definitions for C++ and HLSL source files. \0D\0A//\0D\0A//**********************************************************************************************\0D\0A\0D\0A//************************** Global Overrides **************************************************\0D\0A#define RENDER_GRASS_GEOMETRY 1\0D\0A#define PRINT_OUT_CAMERA_CONFIG 0\0D\0A\0D\0A#ifdef _DEBUG\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 // Set to 1 to speed up application start on debug.\0D\0A#else\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 \0D\0A#endif\0D\0A//**********************************************************************************************\0D\0A\0D\0A#define FOVY 45.f\0D\0A#define NEAR_PLANE 0.001f\0D\0A#define FAR_PLANE 1000.0f\0D\0A#define HitDistanceOnMiss 0\0D\0A#define SAMPLER_FILTER D3D12_FILTER_ANISOTROPIC\0D\0A\0D\0A#ifdef HLSL\0D\0Atypedef uint NormalDepthTexFormat;\0D\0A#else\0D\0A#define COMPACT_NORMAL_DEPTH_DXGI_FORMAT DXGI_FORMAT_R32_UINT\0D\0A#endif\0D\0A\0D\0Anamespace ReduceSumCS {\0D\0A\09namespace ThreadGroup {\0D\0A\09\09enum Enum { Width = 8, Height = 16, Size = Width * Height, NumElementsToLoadPerThread = 10 };\09\0D\0A\09}\0D\0A}\0D\0A\0D\0Anamespace AtrousWaveletTransformFilterCS {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 16, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace DefaultComputeShaderParams {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 8, Height = 8, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0A\0D\0A#ifdef HLSL\0D\0A#include \22HlslCompat.hlsli\22\0D\0Atypedef UINT Index;\0D\0A#else\0D\0Ausing namespace DirectX;\0D\0A\0D\0Atypedef UINT Index;\0D\0A#endif\0D\0A\0D\0Astruct Ray\0D\0A{\0D\0A    XMFLOAT3 origin;\0D\0A    XMFLOAT3 direction;\0D\0A};\0D\0A\0D\0A// GBuffer data collected during pathtracing \0D\0A// for subsequent Ambient Occlusion ray trace pass and denoising.\0D\0Astruct AmbientOcclusionGBuffer\0D\0A{\0D\0A    float tHit;\0D\0A    XMFLOAT3 hitPosition;           // Position of the hit for which to calculate Ambient coefficient.\0D\0A    UINT diffuseByte3;              // Diffuse reflectivity of the hit surface.\0D\0A    // TODO: RTAO pipeline uses 16b encoded normal, therefore same bit enconding could be applied here \0D\0A    //  to lower the struct's size and potentially improve Pathtracer's perf without much/any quality loss in RTAO.\0D\0A    //  Furthermore, _encodedNormal below could use lower bit range too.\0D\0A    XMFLOAT2 encodedNormal;         // Normal of the hit surface. \0D\0A\0D\0A    // Members for Motion Vector calculation.\0D\0A    XMFLOAT3 _virtualHitPosition;   // virtual hitPosition in the previous frame.\0D\0A                                    // For non-reflected points this is a true world position of a hit.\0D\0A                                    // For reflected points, this is a world position of a hit reflected across the reflected surface \0D\0A                                    //   ultimately giving the same screen space coords when projected and the depth corresponding to the ray depth.\0D\0A    XMFLOAT2 _encodedNormal;        // surface normal in the previous frame\0D\0A};\0D\0A\0D\0A\0D\0Astruct PathtracerRayPayload\0D\0A{\0D\0A    UINT rayRecursionDepth;\0D\0A    XMFLOAT3 radiance;              // TODO encode\0D\0A    AmbientOcclusionGBuffer AOGBuffer;\0D\0A};\0D\0A\0D\0Astruct ShadowRayPayload\0D\0A{\0D\0A    float tHit;         // Hit time <0,..> on Hit. -1 on miss.\0D\0A};\0D\0A\0D\0Astruct AtrousWaveletTransformFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float depthWeightCutoff;\0D\0A    bool usingBilateralDownsampledBuffers;\0D\0A\0D\0A    BOOL useAdaptiveKernelSize;\0D\0A    float kernelRadiusLerfCoef;\0D\0A    UINT minKernelWidth;\0D\0A    UINT maxKernelWidth;\0D\0A\0D\0A    float rayHitDistanceToKernelWidthScale;\0D\0A    float rayHitDistanceToKernelSizeScaleExponent;\0D\0A    BOOL perspectiveCorrectDepthInterpolation;\0D\0A    float minVarianceToDenoise;\0D\0A\0D\0A    float valueSigma;\0D\0A    float depthSigma;\0D\0A    float normalSigma;\0D\0A    UINT DepthNumMantissaBits;\0D\0A};\0D\0A\0D\0Astruct CalculateVariance_BilateralFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float normalSigma;\0D\0A    float depthSigma;\0D\0A\0D\0A    BOOL outputMean;\0D\0A    BOOL useDepthWeights;\0D\0A    BOOL useNormalWeights;\0D\0A    UINT kernelWidth;\0D\0A\0D\0A    UINT kernelRadius;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0Astruct CalculateMeanVarianceConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT kernelWidth;\0D\0A    UINT kernelRadius;\0D\0A\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A    UINT pixelStepY;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct RayGenConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    BOOL doCheckerboardRayGeneration;\0D\0A    BOOL checkerboardGenerateRaysForEvenPixels;\0D\0A    \0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A};\0D\0A\0D\0Astruct SortRaysConstantBuffer\0D\0A{\0D\0A    XMUINT2 dim;\0D\0A    BOOL useOctahedralRayDirectionQuantization;\0D\0A    // Depth for a bin within which to sort further based on direction.\0D\0A    float binDepthSize;\0D\0A};\0D\0A\0D\0Anamespace SortRays {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 64, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A\0D\0A    namespace RayGroup {\0D\0A        enum Enum { NumElementPairsPerThread = 4, Width = ThreadGroup::Width, Height = NumElementPairsPerThread * 2 * ThreadGroup::Height, Size = Width * Height };\0D\0A    }\0D\0A#ifndef HLSL\0D\0A    static_assert( RayGroup::Width <= 64 \0D\0A                && RayGroup::Height <= 128\0D\0A                && RayGroup::Size <= 8192, \22Ray group dimensions are outside the supported limits set by the Counting Sort shader.\22);\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct PathtracerConstantBuffer\0D\0A{\0D\0A    XMMATRIX projectionToWorldWithCameraAtOrigin;\0D\0A    XMFLOAT3 cameraPosition;\0D\0A    BOOL     useBaseAlbedoFromMaterial;\0D\0A    XMFLOAT3 lightPosition;     \0D\0A    BOOL     useNormalMaps;\0D\0A    XMFLOAT3 lightColor;\0D\0A    float    defaultAmbientIntensity;\0D\0A\0D\0A    XMMATRIX prevFrameViewProj;\0D\0A    XMMATRIX prevFrameProjToViewCameraAtOrigin;\0D\0A    XMFLOAT3 prevFrameCameraPosition;\0D\0A    float    padding;\0D\0A\0D\0A\09float Znear;\0D\0A\09float Zfar;\0D\0A    UINT  maxRadianceRayRecursionDepth;\0D\0A    UINT  maxShadowRayRecursionDepth;\0D\0A\0D\0A};\0D\0A\0D\0Astruct RTAOConstantBuffer\0D\0A{\0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A\0D\0A    float maxAORayHitTime;             // Max AO ray hit time used for tMax in TraceRay.\0D\0A    BOOL approximateInterreflections;      // Approximate interreflections. \0D\0A    float diffuseReflectanceScale;         // Diffuse reflectance from occluding surfaces. \0D\0A    float minimumAmbientIllumination;      // Ambient illumination coef when a ray is occluded.\0D\0A\0D\0A    float maxTheoreticalAORayHitTime;  // Max AO ray hit time used in falloff computation accounting for\0D\0A                                       // exponentialFalloffMinOcclusionCutoff and maxAORayHitTime.    \0D\0A    BOOL useSortedRays;\0D\0A    XMUINT2 raytracingDim;\0D\0A\0D\0A    BOOL applyExponentialFalloff;     // Apply exponential falloff to AO coefficient based on ray hit distance.    \0D\0A    float exponentialFalloffDecayConstant;\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A\0D\0A    UINT spp;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0A \0D\0A// Final render output composition modes.\0D\0Aenum CompositionType {\0D\0A    PBRShading = 0,\0D\0A    AmbientOcclusionOnly_Denoised,\0D\0A    AmbientOcclusionOnly_RawOneFrame,\0D\0A    AmbientOcclusionAndDisocclusionMap,\0D\0A    AmbientOcclusionVariance,\0D\0A    AmbientOcclusionLocalVariance,\0D\0A    RTAOHitDistance,\0D\0A    NormalsOnly,\0D\0A    DepthOnly,\0D\0A    Albedo,\0D\0A    BaseMaterialAlbedo,\0D\0A    Count\0D\0A};\0D\0A\0D\0Anamespace TextureResourceFormatRGB\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32B32A32_FLOAT = 0,\0D\0A        R16G16B16A16_FLOAT,\0D\0A        R11G11B10_FLOAT,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32B32A32_FLOAT: return DXGI_FORMAT_R32G32B32A32_FLOAT;\0D\0A        case R16G16B16A16_FLOAT: return DXGI_FORMAT_R16G16B16A16_FLOAT;\0D\0A        case R11G11B10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Anamespace TextureResourceFormatR\0D\0A{\0D\0A    enum Type {\0D\0A        R32_FLOAT = 0,\0D\0A        R16_FLOAT,\0D\0A        R8_UNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32_FLOAT: return DXGI_FORMAT_R32_FLOAT;\0D\0A        case R16_FLOAT: return DXGI_FORMAT_R16_FLOAT;\0D\0A        case R8_UNORM: return DXGI_FORMAT_R8_UNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TextureResourceFormatRG\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32_FLOAT = 0,\0D\0A        R16G16_FLOAT,\0D\0A        R8G8_SNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32_FLOAT: return DXGI_FORMAT_R32G32_FLOAT;\0D\0A        case R16G16_FLOAT: return DXGI_FORMAT_R16G16_FLOAT;\0D\0A        case R8G8_SNORM: return DXGI_FORMAT_R8G8_SNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct ComposeRenderPassesConstantBuffer\0D\0A{\0D\0A    CompositionType compositionType;\0D\0A    UINT isAOEnabled;\0D\0A    float RTAO_MaxRayHitDistance;\0D\0A    float defaultAmbientIntensity;\0D\0A    \0D\0A    BOOL variance_visualizeStdDeviation;\0D\0A    float variance_scale;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct TextureDimConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A};\0D\0A\0D\0Astruct FilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT step;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_ReverseReprojectConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A\0D\0A    float depthSigma;\0D\0A    UINT DepthNumMantissaBits;      // Number of Mantissa Bits in the floating format of the input depth resources format.\0D\0A    BOOL usingBilateralDownsampledBuffers;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_BlendWithCurrentFrameConstantBuffer\0D\0A{\0D\0A    float stdDevGamma;\0D\0A    BOOL clampCachedValues;\0D\0A    float clamping_minStdDevTolerance;\0D\0A    float padding;\0D\0A\0D\0A    float clampDifferenceToTsppScale;\0D\0A    BOOL forceUseMinSmoothingFactor;\0D\0A    float minSmoothingFactor;\0D\0A    UINT minTsppToUseTemporalVariance;\0D\0A\0D\0A    UINT blurStrength_MaxTspp;\0D\0A    float blurDecayStrength;\0D\0A    BOOL checkerboard_enabled;\0D\0A    BOOL checkerboard_areEvenPixelsActive;\0D\0A};\0D\0A\0D\0Astruct CalculatePartialDerivativesConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct DownAndUpsampleFilterConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invHiResTextureDim;\0D\0A    XMFLOAT2 invLowResTextureDim;\0D\0A};\0D\0A\0D\0A// Grass Geometry\0D\0A#define N_GRASS_TRIANGLES 5\0D\0A#define N_GRASS_VERTICES 7\0D\0A#define MAX_GRASS_STRAWS_1D 100\0D\0Astruct GenerateGrassStrawsConstantBuffer_AppParams\0D\0A{\0D\0A    XMUINT2 activePatchDim; // Dimensions of active grass straws.\0D\0A    XMUINT2 maxPatchDim;    // Dimensions of the whole vertex buffer.\0D\0A\0D\0A    XMFLOAT2 timeOffset;\0D\0A    float grassHeight;\0D\0A    float grassScale;\0D\0A    \0D\0A    XMFLOAT3 patchSize;\0D\0A    float grassThickness;\0D\0A\0D\0A    XMFLOAT3 windDirection;\0D\0A    float windStrength;\0D\0A\0D\0A    float positionJitterStrength;\0D\0A    float bendStrengthAlongTangent;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct GenerateGrassStrawsConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invActivePatchDim;\0D\0A    float padding1;\0D\0A    float padding2;\0D\0A    GenerateGrassStrawsConstantBuffer_AppParams p;\0D\0A};\0D\0A\0D\0A\0D\0A// Attributes per primitive type.\0D\0Astruct PrimitiveConstantBuffer\0D\0A{\0D\0A\09UINT     materialID;          \0D\0A    UINT     isVertexAnimated; \0D\0A    UINT     padding[2];\0D\0A};\0D\0A\0D\0Anamespace MaterialType {\0D\0A    enum Type {\0D\0A        Default,\0D\0A        Matte,      // Lambertian scattering\0D\0A        Mirror,     // Specular reflector that isn't modified by the Fresnel equations.\0D\0A        AnalyticalCheckerboardTexture\0D\0A    };\0D\0A}\0D\0A\0D\0Astruct PrimitiveMaterialBuffer\0D\0A{\0D\0A\09XMFLOAT3 Kd;\0D\0A\09XMFLOAT3 Ks;\0D\0A    XMFLOAT3 Kr;\0D\0A    XMFLOAT3 Kt;\0D\0A    XMFLOAT3 opacity;\0D\0A    XMFLOAT3 eta;\0D\0A    float roughness;\0D\0A    BOOL hasDiffuseTexture;\0D\0A    BOOL hasNormalTexture;\0D\0A    BOOL hasPerVertexTangents;\0D\0A    MaterialType::Type type;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct AlignedUnitSquareSample2D\0D\0A{\0D\0A    XMFLOAT2 value;\0D\0A    XMUINT2 padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct AlignedHemisphereSample3D\0D\0A{\0D\0A    XMFLOAT3 value;\0D\0A    UINT padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct Vertex\0D\0A{\0D\0A    XMFLOAT3 position;\0D\0A    XMFLOAT3 normal;\0D\0A};\0D\0A\0D\0Astruct VertexPositionNormalTextureTangent\0D\0A{\0D\0A\09XMFLOAT3 position;\0D\0A\09XMFLOAT3 normal;\0D\0A\09XMFLOAT2 textureCoordinate;\0D\0A\09XMFLOAT3 tangent;\0D\0A};\0D\0A\0D\0A// Ray types traced in this sample.\0D\0Anamespace PathtracerRayType {\0D\0A    enum Enum {\0D\0A        Radiance = 0,\09// ~ Radiance ray generating color and GBuffer data\0D\0A        Shadow,         // ~ Shadow/visibility rays\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0Anamespace RTAORayType {\0D\0A    enum Enum {\0D\0A        AO = 0,\09\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A\09\09static const UINT GeometryStride = PathtracerRayType::Count;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace RTAOTraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A        // Since there is only one closest hit shader across shader records in RTAO, \0D\0A        // always access the first shader record of each BLAS instance shader record range.\0D\0A        static const UINT GeometryStride = 0;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Astatic const XMFLOAT4 BackgroundColor = XMFLOAT4(0.79f, 0.88f, 0.98f, 1.0f);\0D\0A\0D\0A#endif // RAYTRACINGHLSLCOMPAT_H"}
!153 = !{!"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRaytracingHlslCompat.h", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef RAYTRACINGHLSLCOMPAT_H\0D\0A#define RAYTRACINGHLSLCOMPAT_H\0D\0A\0D\0A//**********************************************************************************************\0D\0A//\0D\0A// RaytracingHLSLCompat.h\0D\0A//\0D\0A// A header with shared definitions for C++ and HLSL source files. \0D\0A//\0D\0A//**********************************************************************************************\0D\0A\0D\0A//************************** Global Overrides **************************************************\0D\0A#define RENDER_GRASS_GEOMETRY 1\0D\0A#define PRINT_OUT_CAMERA_CONFIG 0\0D\0A\0D\0A#ifdef _DEBUG\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 // Set to 1 to speed up application start on debug.\0D\0A#else\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 \0D\0A#endif\0D\0A//**********************************************************************************************\0D\0A\0D\0A#define FOVY 45.f\0D\0A#define NEAR_PLANE 0.001f\0D\0A#define FAR_PLANE 1000.0f\0D\0A#define HitDistanceOnMiss 0\0D\0A#define SAMPLER_FILTER D3D12_FILTER_ANISOTROPIC\0D\0A\0D\0A#ifdef HLSL\0D\0Atypedef uint NormalDepthTexFormat;\0D\0A#else\0D\0A#define COMPACT_NORMAL_DEPTH_DXGI_FORMAT DXGI_FORMAT_R32_UINT\0D\0A#endif\0D\0A\0D\0Anamespace ReduceSumCS {\0D\0A\09namespace ThreadGroup {\0D\0A\09\09enum Enum { Width = 8, Height = 16, Size = Width * Height, NumElementsToLoadPerThread = 10 };\09\0D\0A\09}\0D\0A}\0D\0A\0D\0Anamespace AtrousWaveletTransformFilterCS {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 16, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace DefaultComputeShaderParams {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 8, Height = 8, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0A\0D\0A#ifdef HLSL\0D\0A#include \22HlslCompat.hlsli\22\0D\0Atypedef UINT Index;\0D\0A#else\0D\0Ausing namespace DirectX;\0D\0A\0D\0Atypedef UINT Index;\0D\0A#endif\0D\0A\0D\0Astruct Ray\0D\0A{\0D\0A    XMFLOAT3 origin;\0D\0A    XMFLOAT3 direction;\0D\0A};\0D\0A\0D\0A// GBuffer data collected during pathtracing \0D\0A// for subsequent Ambient Occlusion ray trace pass and denoising.\0D\0Astruct AmbientOcclusionGBuffer\0D\0A{\0D\0A    float tHit;\0D\0A    XMFLOAT3 hitPosition;           // Position of the hit for which to calculate Ambient coefficient.\0D\0A    UINT diffuseByte3;              // Diffuse reflectivity of the hit surface.\0D\0A    // TODO: RTAO pipeline uses 16b encoded normal, therefore same bit enconding could be applied here \0D\0A    //  to lower the struct's size and potentially improve Pathtracer's perf without much/any quality loss in RTAO.\0D\0A    //  Furthermore, _encodedNormal below could use lower bit range too.\0D\0A    XMFLOAT2 encodedNormal;         // Normal of the hit surface. \0D\0A\0D\0A    // Members for Motion Vector calculation.\0D\0A    XMFLOAT3 _virtualHitPosition;   // virtual hitPosition in the previous frame.\0D\0A                                    // For non-reflected points this is a true world position of a hit.\0D\0A                                    // For reflected points, this is a world position of a hit reflected across the reflected surface \0D\0A                                    //   ultimately giving the same screen space coords when projected and the depth corresponding to the ray depth.\0D\0A    XMFLOAT2 _encodedNormal;        // surface normal in the previous frame\0D\0A};\0D\0A\0D\0A\0D\0Astruct PathtracerRayPayload\0D\0A{\0D\0A    UINT rayRecursionDepth;\0D\0A    XMFLOAT3 radiance;              // TODO encode\0D\0A    AmbientOcclusionGBuffer AOGBuffer;\0D\0A};\0D\0A\0D\0Astruct ShadowRayPayload\0D\0A{\0D\0A    float tHit;         // Hit time <0,..> on Hit. -1 on miss.\0D\0A};\0D\0A\0D\0Astruct AtrousWaveletTransformFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float depthWeightCutoff;\0D\0A    bool usingBilateralDownsampledBuffers;\0D\0A\0D\0A    BOOL useAdaptiveKernelSize;\0D\0A    float kernelRadiusLerfCoef;\0D\0A    UINT minKernelWidth;\0D\0A    UINT maxKernelWidth;\0D\0A\0D\0A    float rayHitDistanceToKernelWidthScale;\0D\0A    float rayHitDistanceToKernelSizeScaleExponent;\0D\0A    BOOL perspectiveCorrectDepthInterpolation;\0D\0A    float minVarianceToDenoise;\0D\0A\0D\0A    float valueSigma;\0D\0A    float depthSigma;\0D\0A    float normalSigma;\0D\0A    UINT DepthNumMantissaBits;\0D\0A};\0D\0A\0D\0Astruct CalculateVariance_BilateralFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float normalSigma;\0D\0A    float depthSigma;\0D\0A\0D\0A    BOOL outputMean;\0D\0A    BOOL useDepthWeights;\0D\0A    BOOL useNormalWeights;\0D\0A    UINT kernelWidth;\0D\0A\0D\0A    UINT kernelRadius;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0Astruct CalculateMeanVarianceConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT kernelWidth;\0D\0A    UINT kernelRadius;\0D\0A\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A    UINT pixelStepY;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct RayGenConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    BOOL doCheckerboardRayGeneration;\0D\0A    BOOL checkerboardGenerateRaysForEvenPixels;\0D\0A    \0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A};\0D\0A\0D\0Astruct SortRaysConstantBuffer\0D\0A{\0D\0A    XMUINT2 dim;\0D\0A    BOOL useOctahedralRayDirectionQuantization;\0D\0A    // Depth for a bin within which to sort further based on direction.\0D\0A    float binDepthSize;\0D\0A};\0D\0A\0D\0Anamespace SortRays {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 64, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A\0D\0A    namespace RayGroup {\0D\0A        enum Enum { NumElementPairsPerThread = 4, Width = ThreadGroup::Width, Height = NumElementPairsPerThread * 2 * ThreadGroup::Height, Size = Width * Height };\0D\0A    }\0D\0A#ifndef HLSL\0D\0A    static_assert( RayGroup::Width <= 64 \0D\0A                && RayGroup::Height <= 128\0D\0A                && RayGroup::Size <= 8192, \22Ray group dimensions are outside the supported limits set by the Counting Sort shader.\22);\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct PathtracerConstantBuffer\0D\0A{\0D\0A    XMMATRIX projectionToWorldWithCameraAtOrigin;\0D\0A    XMFLOAT3 cameraPosition;\0D\0A    BOOL     useBaseAlbedoFromMaterial;\0D\0A    XMFLOAT3 lightPosition;     \0D\0A    BOOL     useNormalMaps;\0D\0A    XMFLOAT3 lightColor;\0D\0A    float    defaultAmbientIntensity;\0D\0A\0D\0A    XMMATRIX prevFrameViewProj;\0D\0A    XMMATRIX prevFrameProjToViewCameraAtOrigin;\0D\0A    XMFLOAT3 prevFrameCameraPosition;\0D\0A    float    padding;\0D\0A\0D\0A\09float Znear;\0D\0A\09float Zfar;\0D\0A    UINT  maxRadianceRayRecursionDepth;\0D\0A    UINT  maxShadowRayRecursionDepth;\0D\0A\0D\0A};\0D\0A\0D\0Astruct RTAOConstantBuffer\0D\0A{\0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A\0D\0A    float maxAORayHitTime;             // Max AO ray hit time used for tMax in TraceRay.\0D\0A    BOOL approximateInterreflections;      // Approximate interreflections. \0D\0A    float diffuseReflectanceScale;         // Diffuse reflectance from occluding surfaces. \0D\0A    float minimumAmbientIllumination;      // Ambient illumination coef when a ray is occluded.\0D\0A\0D\0A    float maxTheoreticalAORayHitTime;  // Max AO ray hit time used in falloff computation accounting for\0D\0A                                       // exponentialFalloffMinOcclusionCutoff and maxAORayHitTime.    \0D\0A    BOOL useSortedRays;\0D\0A    XMUINT2 raytracingDim;\0D\0A\0D\0A    BOOL applyExponentialFalloff;     // Apply exponential falloff to AO coefficient based on ray hit distance.    \0D\0A    float exponentialFalloffDecayConstant;\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A\0D\0A    UINT spp;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0A \0D\0A// Final render output composition modes.\0D\0Aenum CompositionType {\0D\0A    PBRShading = 0,\0D\0A    AmbientOcclusionOnly_Denoised,\0D\0A    AmbientOcclusionOnly_RawOneFrame,\0D\0A    AmbientOcclusionAndDisocclusionMap,\0D\0A    AmbientOcclusionVariance,\0D\0A    AmbientOcclusionLocalVariance,\0D\0A    RTAOHitDistance,\0D\0A    NormalsOnly,\0D\0A    DepthOnly,\0D\0A    Albedo,\0D\0A    BaseMaterialAlbedo,\0D\0A    Count\0D\0A};\0D\0A\0D\0Anamespace TextureResourceFormatRGB\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32B32A32_FLOAT = 0,\0D\0A        R16G16B16A16_FLOAT,\0D\0A        R11G11B10_FLOAT,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32B32A32_FLOAT: return DXGI_FORMAT_R32G32B32A32_FLOAT;\0D\0A        case R16G16B16A16_FLOAT: return DXGI_FORMAT_R16G16B16A16_FLOAT;\0D\0A        case R11G11B10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Anamespace TextureResourceFormatR\0D\0A{\0D\0A    enum Type {\0D\0A        R32_FLOAT = 0,\0D\0A        R16_FLOAT,\0D\0A        R8_UNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32_FLOAT: return DXGI_FORMAT_R32_FLOAT;\0D\0A        case R16_FLOAT: return DXGI_FORMAT_R16_FLOAT;\0D\0A        case R8_UNORM: return DXGI_FORMAT_R8_UNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TextureResourceFormatRG\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32_FLOAT = 0,\0D\0A        R16G16_FLOAT,\0D\0A        R8G8_SNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32_FLOAT: return DXGI_FORMAT_R32G32_FLOAT;\0D\0A        case R16G16_FLOAT: return DXGI_FORMAT_R16G16_FLOAT;\0D\0A        case R8G8_SNORM: return DXGI_FORMAT_R8G8_SNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct ComposeRenderPassesConstantBuffer\0D\0A{\0D\0A    CompositionType compositionType;\0D\0A    UINT isAOEnabled;\0D\0A    float RTAO_MaxRayHitDistance;\0D\0A    float defaultAmbientIntensity;\0D\0A    \0D\0A    BOOL variance_visualizeStdDeviation;\0D\0A    float variance_scale;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct TextureDimConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A};\0D\0A\0D\0Astruct FilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT step;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_ReverseReprojectConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A\0D\0A    float depthSigma;\0D\0A    UINT DepthNumMantissaBits;      // Number of Mantissa Bits in the floating format of the input depth resources format.\0D\0A    BOOL usingBilateralDownsampledBuffers;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_BlendWithCurrentFrameConstantBuffer\0D\0A{\0D\0A    float stdDevGamma;\0D\0A    BOOL clampCachedValues;\0D\0A    float clamping_minStdDevTolerance;\0D\0A    float padding;\0D\0A\0D\0A    float clampDifferenceToTsppScale;\0D\0A    BOOL forceUseMinSmoothingFactor;\0D\0A    float minSmoothingFactor;\0D\0A    UINT minTsppToUseTemporalVariance;\0D\0A\0D\0A    UINT blurStrength_MaxTspp;\0D\0A    float blurDecayStrength;\0D\0A    BOOL checkerboard_enabled;\0D\0A    BOOL checkerboard_areEvenPixelsActive;\0D\0A};\0D\0A\0D\0Astruct CalculatePartialDerivativesConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct DownAndUpsampleFilterConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invHiResTextureDim;\0D\0A    XMFLOAT2 invLowResTextureDim;\0D\0A};\0D\0A\0D\0A// Grass Geometry\0D\0A#define N_GRASS_TRIANGLES 5\0D\0A#define N_GRASS_VERTICES 7\0D\0A#define MAX_GRASS_STRAWS_1D 100\0D\0Astruct GenerateGrassStrawsConstantBuffer_AppParams\0D\0A{\0D\0A    XMUINT2 activePatchDim; // Dimensions of active grass straws.\0D\0A    XMUINT2 maxPatchDim;    // Dimensions of the whole vertex buffer.\0D\0A\0D\0A    XMFLOAT2 timeOffset;\0D\0A    float grassHeight;\0D\0A    float grassScale;\0D\0A    \0D\0A    XMFLOAT3 patchSize;\0D\0A    float grassThickness;\0D\0A\0D\0A    XMFLOAT3 windDirection;\0D\0A    float windStrength;\0D\0A\0D\0A    float positionJitterStrength;\0D\0A    float bendStrengthAlongTangent;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct GenerateGrassStrawsConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invActivePatchDim;\0D\0A    float padding1;\0D\0A    float padding2;\0D\0A    GenerateGrassStrawsConstantBuffer_AppParams p;\0D\0A};\0D\0A\0D\0A\0D\0A// Attributes per primitive type.\0D\0Astruct PrimitiveConstantBuffer\0D\0A{\0D\0A\09UINT     materialID;          \0D\0A    UINT     isVertexAnimated; \0D\0A    UINT     padding[2];\0D\0A};\0D\0A\0D\0Anamespace MaterialType {\0D\0A    enum Type {\0D\0A        Default,\0D\0A        Matte,      // Lambertian scattering\0D\0A        Mirror,     // Specular reflector that isn't modified by the Fresnel equations.\0D\0A        AnalyticalCheckerboardTexture\0D\0A    };\0D\0A}\0D\0A\0D\0Astruct PrimitiveMaterialBuffer\0D\0A{\0D\0A\09XMFLOAT3 Kd;\0D\0A\09XMFLOAT3 Ks;\0D\0A    XMFLOAT3 Kr;\0D\0A    XMFLOAT3 Kt;\0D\0A    XMFLOAT3 opacity;\0D\0A    XMFLOAT3 eta;\0D\0A    float roughness;\0D\0A    BOOL hasDiffuseTexture;\0D\0A    BOOL hasNormalTexture;\0D\0A    BOOL hasPerVertexTangents;\0D\0A    MaterialType::Type type;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct AlignedUnitSquareSample2D\0D\0A{\0D\0A    XMFLOAT2 value;\0D\0A    XMUINT2 padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct AlignedHemisphereSample3D\0D\0A{\0D\0A    XMFLOAT3 value;\0D\0A    UINT padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct Vertex\0D\0A{\0D\0A    XMFLOAT3 position;\0D\0A    XMFLOAT3 normal;\0D\0A};\0D\0A\0D\0Astruct VertexPositionNormalTextureTangent\0D\0A{\0D\0A\09XMFLOAT3 position;\0D\0A\09XMFLOAT3 normal;\0D\0A\09XMFLOAT2 textureCoordinate;\0D\0A\09XMFLOAT3 tangent;\0D\0A};\0D\0A\0D\0A// Ray types traced in this sample.\0D\0Anamespace PathtracerRayType {\0D\0A    enum Enum {\0D\0A        Radiance = 0,\09// ~ Radiance ray generating color and GBuffer data\0D\0A        Shadow,         // ~ Shadow/visibility rays\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0Anamespace RTAORayType {\0D\0A    enum Enum {\0D\0A        AO = 0,\09\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A\09\09static const UINT GeometryStride = PathtracerRayType::Count;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace RTAOTraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A        // Since there is only one closest hit shader across shader records in RTAO, \0D\0A        // always access the first shader record of each BLAS instance shader record range.\0D\0A        static const UINT GeometryStride = 0;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Astatic const XMFLOAT4 BackgroundColor = XMFLOAT4(0.79f, 0.88f, 0.98f, 1.0f);\0D\0A\0D\0A#endif // RAYTRACINGHLSLCOMPAT_H"}
!154 = !{!"RTAO\5CShaders\5CDenoising\5CCalculateMeanVarianceCS.hlsl"}
!155 = !{!"-E", !"main", !"-T", !"cs_6_3", !"/I", !"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5C", !"/I", !"RTAO/shaders", !"/I", !"SampleCore/shaders", !"/I", !"SampleCore/shaders/util", !"/Od", !"/Zi", !"-Qembed_debug"}
!156 = !{i32 1, i32 3}
!157 = !{i32 1, i32 6}
!158 = !{!"cs", i32 6, i32 3}
!159 = !{!160, !163, !165, null}
!160 = !{!161}
!161 = !{i32 0, %"class.Texture2D<float>"* undef, !"g_inValue", i32 0, i32 0, i32 1, i32 2, i32 0, !162}
!162 = !{i32 0, i32 9}
!163 = !{!164}
!164 = !{i32 0, %"class.RWTexture2D<vector<float, 2> >"* undef, !"g_outMeanVariance", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !162}
!165 = !{!166}
!166 = !{i32 0, %cb* undef, !"cb", i32 0, i32 0, i32 1, i32 32, null}
!167 = !{i32 0, %struct.CalculateMeanVarianceConstantBuffer undef, !168, %cb undef, !176}
!168 = !{i32 32, !169, !170, !171, !172, !173, !174, !175}
!169 = !{i32 6, !"textureDim", i32 3, i32 0, i32 7, i32 5}
!170 = !{i32 6, !"kernelWidth", i32 3, i32 8, i32 7, i32 5}
!171 = !{i32 6, !"kernelRadius", i32 3, i32 12, i32 7, i32 5}
!172 = !{i32 6, !"doCheckerboardSampling", i32 3, i32 16, i32 7, i32 4}
!173 = !{i32 6, !"areEvenPixelsActive", i32 3, i32 20, i32 7, i32 4}
!174 = !{i32 6, !"pixelStepY", i32 3, i32 24, i32 7, i32 5}
!175 = !{i32 6, !"padding", i32 3, i32 28, i32 7, i32 9}
!176 = !{i32 32, !177}
!177 = !{i32 6, !"cb", i32 3, i32 0}
!178 = !{i32 1, void ()* @main, !179}
!179 = !{!180}
!180 = !{i32 0, !2, !2}
!181 = !{void ()* @main, !"main", null, !159, !182}
!182 = !{i32 0, i64 524289, i32 4, !183}
!183 = !{i32 8, i32 8, i32 1}
!184 = !DILocation(line: 91, column: 21, scope: !185, inlinedAt: !190)
!185 = distinct !DILexicalBlock(scope: !186, file: !1, line: 90, column: 9)
!186 = distinct !DILexicalBlock(scope: !187, file: !1, line: 89, column: 13)
!187 = distinct !DILexicalBlock(scope: !188, file: !1, line: 70, column: 5)
!188 = distinct !DILexicalBlock(scope: !189, file: !1, line: 69, column: 5)
!189 = distinct !DILexicalBlock(scope: !34, file: !1, line: 69, column: 5)
!190 = distinct !DILocation(line: 194, column: 5, scope: !30)
!191 = !DILocation(line: 192, column: 97, scope: !30)
!192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "DTid", arg: 4, scope: !30, file: !1, line: 192, type: !4)
!193 = !DIExpression(DW_OP_bit_piece, 0, 32)
!194 = !DIExpression(DW_OP_bit_piece, 32, 32)
!195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "GI", arg: 3, scope: !30, file: !1, line: 192, type: !33)
!196 = !DIExpression()
!197 = !DILocation(line: 192, column: 71, scope: !30)
!198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "GTid", arg: 2, scope: !30, file: !1, line: 192, type: !4)
!199 = !DILocation(line: 192, column: 41, scope: !30)
!200 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Gid", arg: 1, scope: !30, file: !1, line: 192, type: !4)
!201 = !DILocation(line: 192, column: 17, scope: !30)
!202 = !DILocation(line: 194, column: 5, scope: !30)
!203 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "GI", arg: 2, scope: !34, file: !1, line: 55, type: !33)
!204 = !DILocation(line: 55, column: 47, scope: !34, inlinedAt: !190)
!205 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Gid", arg: 1, scope: !34, file: !1, line: 55, type: !4)
!206 = !DILocation(line: 55, column: 34, scope: !34, inlinedAt: !190)
!207 = !DILocation(line: 58, column: 48, scope: !34, inlinedAt: !190)
!208 = !DILocation(line: 58, column: 65, scope: !34, inlinedAt: !190)
!209 = !DILocation(line: 58, column: 77, scope: !34, inlinedAt: !190)
!210 = !DILocation(line: 58, column: 59, scope: !34, inlinedAt: !190)
!211 = !DILocation(line: 58, column: 16, scope: !34, inlinedAt: !190)
!212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "NumValuesToLoadPerRowOrColumn", scope: !34, file: !1, line: 58, type: !126)
!213 = !DILocation(line: 63, column: 36, scope: !34, inlinedAt: !190)
!214 = !DILocation(line: 63, column: 45, scope: !34, inlinedAt: !190)
!215 = !DILocation(line: 63, column: 11, scope: !34, inlinedAt: !190)
!216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "GTid4x16_row0", scope: !34, file: !1, line: 63, type: !4)
!217 = !DILocation(line: 64, column: 41, scope: !34, inlinedAt: !190)
!218 = !DILocation(line: 64, column: 39, scope: !34, inlinedAt: !190)
!219 = !DILocation(line: 64, column: 59, scope: !34, inlinedAt: !190)
!220 = !DILocation(line: 64, column: 50, scope: !34, inlinedAt: !190)
!221 = !DILocation(line: 64, column: 87, scope: !34, inlinedAt: !190)
!222 = !DILocation(line: 64, column: 74, scope: !34, inlinedAt: !190)
!223 = !DILocation(line: 64, column: 16, scope: !34, inlinedAt: !190)
!224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "KernelBasePixel", scope: !34, file: !1, line: 64, type: !225)
!225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!226 = !DILocation(line: 66, column: 41, scope: !34, inlinedAt: !190)
!227 = !DILocation(line: 66, column: 60, scope: !34, inlinedAt: !190)
!228 = !DILocation(line: 66, column: 66, scope: !34, inlinedAt: !190)
!229 = !DILocation(line: 66, column: 16, scope: !34, inlinedAt: !190)
!230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Row_BaseWaveLaneIndex", scope: !34, file: !1, line: 66, type: !126)
!231 = !DILocation(line: 69, column: 15, scope: !189, inlinedAt: !190)
!232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !189, file: !1, line: 69, type: !33)
!233 = !DILocation(line: 69, column: 5, scope: !189, inlinedAt: !190)
!234 = !DILocation(line: 71, column: 40, scope: !187, inlinedAt: !190)
!235 = !DILocation(line: 71, column: 15, scope: !187, inlinedAt: !190)
!236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "GTid4x16", scope: !187, file: !1, line: 71, type: !4)
!237 = !DILocation(line: 72, column: 24, scope: !238, inlinedAt: !190)
!238 = distinct !DILexicalBlock(scope: !187, file: !1, line: 72, column: 13)
!239 = !DILocation(line: 72, column: 13, scope: !187, inlinedAt: !190)
!240 = !DILocation(line: 82, column: 82, scope: !187, inlinedAt: !190)
!241 = !DILocation(line: 82, column: 69, scope: !187, inlinedAt: !190)
!242 = !DILocation(line: 82, column: 58, scope: !187, inlinedAt: !190)
!243 = !DILocation(line: 82, column: 22, scope: !187, inlinedAt: !190)
!244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pixel", arg: 1, scope: !37, file: !1, line: 45, type: !14)
!245 = !DILocation(line: 45, column: 31, scope: !37, inlinedAt: !246)
!246 = distinct !DILocation(line: 82, column: 22, scope: !187, inlinedAt: !190)
!247 = !DILocation(line: 47, column: 34, scope: !37, inlinedAt: !246)
!248 = !DILocation(line: 47, column: 45, scope: !37, inlinedAt: !246)
!249 = !DILocation(line: 47, column: 50, scope: !37, inlinedAt: !246)
!250 = !DILocation(line: 47, column: 10, scope: !37, inlinedAt: !246)
!251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isEvenPixel", scope: !37, file: !1, line: 47, type: !44)
!252 = !DILocation(line: 49, column: 12, scope: !37, inlinedAt: !246)
!253 = !DILocation(line: 49, column: 9, scope: !37, inlinedAt: !246)
!254 = !DILocation(line: 49, column: 41, scope: !37, inlinedAt: !246)
!255 = !DILocation(line: 49, column: 64, scope: !37, inlinedAt: !246)
!256 = !DILocation(line: 49, column: 61, scope: !37, inlinedAt: !246)
!257 = !DILocation(line: 49, column: 35, scope: !37, inlinedAt: !246)
!258 = !DILocation(line: 50, column: 17, scope: !37, inlinedAt: !246)
!259 = !DILocation(line: 48, column: 5, scope: !37, inlinedAt: !246)
!260 = !DILocation(line: 82, column: 14, scope: !187, inlinedAt: !190)
!261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixel", scope: !187, file: !1, line: 82, type: !14)
!262 = !DILocation(line: 83, column: 15, scope: !187, inlinedAt: !190)
!263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !187, file: !1, line: 83, type: !25)
!264 = !DILocation(line: 89, column: 24, scope: !186, inlinedAt: !190)
!265 = !DILocation(line: 89, column: 84, scope: !186, inlinedAt: !190)
!266 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dimensions", arg: 2, scope: !40, file: !41, line: 62, type: !14)
!267 = !DILocation(line: 62, column: 44, scope: !40, inlinedAt: !268)
!268 = distinct !DILocation(line: 89, column: 59, scope: !186, inlinedAt: !190)
!269 = !DILocation(line: 89, column: 59, scope: !186, inlinedAt: !190)
!270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 1, scope: !40, file: !41, line: 62, type: !14)
!271 = !DILocation(line: 62, column: 29, scope: !40, inlinedAt: !268)
!272 = !DILocation(line: 64, column: 20, scope: !40, inlinedAt: !268)
!273 = !DILocation(line: 64, column: 36, scope: !40, inlinedAt: !268)
!274 = !DILocation(line: 64, column: 25, scope: !40, inlinedAt: !268)
!275 = !DILocation(line: 64, column: 52, scope: !40, inlinedAt: !268)
!276 = !DILocation(line: 64, column: 41, scope: !40, inlinedAt: !268)
!277 = !DILocation(line: 64, column: 78, scope: !40, inlinedAt: !268)
!278 = !DILocation(line: 64, column: 67, scope: !40, inlinedAt: !268)
!279 = !DILocation(line: 64, column: 5, scope: !40, inlinedAt: !268)
!280 = !DILocation(line: 89, column: 56, scope: !186, inlinedAt: !190)
!281 = !DILocation(line: 89, column: 13, scope: !187, inlinedAt: !190)
!282 = !DILocation(line: 91, column: 19, scope: !185, inlinedAt: !190)
!283 = !DILocation(line: 92, column: 9, scope: !185, inlinedAt: !190)
!284 = !DILocation(line: 97, column: 19, scope: !285, inlinedAt: !190)
!285 = distinct !DILexicalBlock(scope: !187, file: !1, line: 95, column: 9)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "valueSum", scope: !285, file: !1, line: 97, type: !25)
!287 = !DILocation(line: 98, column: 19, scope: !285, inlinedAt: !190)
!288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "squaredValueSum", scope: !285, file: !1, line: 98, type: !25)
!289 = !DILocation(line: 99, column: 18, scope: !285, inlinedAt: !190)
!290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numValues", scope: !285, file: !1, line: 99, type: !33)
!291 = !DILocation(line: 106, column: 30, scope: !292, inlinedAt: !190)
!292 = distinct !DILexicalBlock(scope: !285, file: !1, line: 106, column: 17)
!293 = !DILocation(line: 106, column: 28, scope: !292, inlinedAt: !190)
!294 = !DILocation(line: 106, column: 50, scope: !292, inlinedAt: !190)
!295 = !DILocation(line: 106, column: 41, scope: !292, inlinedAt: !190)
!296 = !DILocation(line: 106, column: 17, scope: !285, inlinedAt: !190)
!297 = !DILocation(line: 108, column: 26, scope: !298, inlinedAt: !190)
!298 = distinct !DILexicalBlock(scope: !292, file: !1, line: 107, column: 13)
!299 = !DILocation(line: 109, column: 41, scope: !298, inlinedAt: !190)
!300 = !DILocation(line: 109, column: 33, scope: !298, inlinedAt: !190)
!301 = !DILocation(line: 110, column: 26, scope: !298, inlinedAt: !190)
!302 = !DILocation(line: 111, column: 13, scope: !298, inlinedAt: !190)
!303 = !DILocation(line: 116, column: 17, scope: !285, inlinedAt: !190)
!304 = !DILocation(line: 117, column: 33, scope: !285, inlinedAt: !190)
!305 = !DILocation(line: 117, column: 31, scope: !285, inlinedAt: !190)
!306 = !DILocation(line: 119, column: 37, scope: !285, inlinedAt: !190)
!307 = !DILocation(line: 119, column: 35, scope: !285, inlinedAt: !190)
!308 = !DILocation(line: 119, column: 54, scope: !285, inlinedAt: !190)
!309 = !DILocation(line: 119, column: 49, scope: !285, inlinedAt: !190)
!310 = !DILocation(line: 117, column: 20, scope: !285, inlinedAt: !190)
!311 = !DILocation(line: 117, column: 17, scope: !285, inlinedAt: !190)
!312 = !DILocation(line: 114, column: 18, scope: !285, inlinedAt: !190)
!313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Row_KernelStartLaneIndex", scope: !285, file: !1, line: 114, type: !33)
!314 = !DILocation(line: 121, column: 23, scope: !315, inlinedAt: !190)
!315 = distinct !DILexicalBlock(scope: !285, file: !1, line: 121, column: 13)
!316 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !315, file: !1, line: 121, type: !33)
!317 = !DILocation(line: 121, column: 37, scope: !318, inlinedAt: !190)
!318 = distinct !DILexicalBlock(scope: !315, file: !1, line: 121, column: 13)
!319 = !DILocation(line: 121, column: 32, scope: !318, inlinedAt: !190)
!320 = !DILocation(line: 121, column: 13, scope: !315, inlinedAt: !190)
!321 = !DILocation(line: 123, column: 64, scope: !322, inlinedAt: !190)
!322 = distinct !DILexicalBlock(scope: !318, file: !1, line: 122, column: 13)
!323 = !DILocation(line: 123, column: 22, scope: !322, inlinedAt: !190)
!324 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "laneToReadFrom", scope: !322, file: !1, line: 123, type: !33)
!325 = !DILocation(line: 124, column: 32, scope: !322, inlinedAt: !190)
!326 = !DILocation(line: 124, column: 23, scope: !322, inlinedAt: !190)
!327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cValue", scope: !322, file: !1, line: 124, type: !25)
!328 = !DILocation(line: 125, column: 28, scope: !329, inlinedAt: !190)
!329 = distinct !DILexicalBlock(scope: !322, file: !1, line: 125, column: 21)
!330 = !DILocation(line: 125, column: 21, scope: !322, inlinedAt: !190)
!331 = !DILocation(line: 127, column: 30, scope: !332, inlinedAt: !190)
!332 = distinct !DILexicalBlock(scope: !329, file: !1, line: 126, column: 17)
!333 = !DILocation(line: 128, column: 47, scope: !332, inlinedAt: !190)
!334 = !DILocation(line: 128, column: 37, scope: !332, inlinedAt: !190)
!335 = !DILocation(line: 129, column: 30, scope: !332, inlinedAt: !190)
!336 = !DILocation(line: 130, column: 17, scope: !332, inlinedAt: !190)
!337 = !DILocation(line: 121, column: 52, scope: !318, inlinedAt: !190)
!338 = !DILocation(line: 134, column: 85, scope: !285, inlinedAt: !190)
!339 = !DILocation(line: 134, column: 100, scope: !285, inlinedAt: !190)
!340 = !DILocation(line: 134, column: 98, scope: !285, inlinedAt: !190)
!341 = !DILocation(line: 134, column: 39, scope: !285, inlinedAt: !190)
!342 = !DILocation(line: 134, column: 58, scope: !285, inlinedAt: !190)
!343 = !DILocation(line: 134, column: 35, scope: !285, inlinedAt: !190)
!344 = !DILocation(line: 134, column: 18, scope: !285, inlinedAt: !190)
!345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "laneToReadFrom", scope: !285, file: !1, line: 134, type: !33)
!346 = !DILocation(line: 135, column: 25, scope: !285, inlinedAt: !190)
!347 = !DILocation(line: 135, column: 22, scope: !285, inlinedAt: !190)
!348 = !DILocation(line: 136, column: 32, scope: !285, inlinedAt: !190)
!349 = !DILocation(line: 136, column: 29, scope: !285, inlinedAt: !190)
!350 = !DILocation(line: 137, column: 26, scope: !285, inlinedAt: !190)
!351 = !DILocation(line: 137, column: 23, scope: !285, inlinedAt: !190)
!352 = !DILocation(line: 140, column: 30, scope: !353, inlinedAt: !190)
!353 = distinct !DILexicalBlock(scope: !285, file: !1, line: 140, column: 17)
!354 = !DILocation(line: 140, column: 28, scope: !353, inlinedAt: !190)
!355 = !DILocation(line: 140, column: 17, scope: !285, inlinedAt: !190)
!356 = !DILocation(line: 142, column: 64, scope: !357, inlinedAt: !190)
!357 = distinct !DILexicalBlock(scope: !353, file: !1, line: 141, column: 13)
!358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 1, scope: !45, file: !41, line: 36, type: !21)
!359 = !DILocation(line: 36, column: 29, scope: !45, inlinedAt: !360)
!360 = distinct !DILocation(line: 142, column: 64, scope: !357, inlinedAt: !190)
!361 = !DILocation(line: 38, column: 10, scope: !45, inlinedAt: !360)
!362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !45, file: !41, line: 38, type: !33)
!363 = !DILocation(line: 39, column: 14, scope: !45, inlinedAt: !360)
!364 = !DILocation(line: 39, column: 12, scope: !45, inlinedAt: !360)
!365 = !DILocation(line: 40, column: 15, scope: !45, inlinedAt: !360)
!366 = !DILocation(line: 40, column: 31, scope: !45, inlinedAt: !360)
!367 = !DILocation(line: 40, column: 12, scope: !45, inlinedAt: !360)
!368 = !DILocation(line: 41, column: 5, scope: !45, inlinedAt: !360)
!369 = !DILocation(line: 142, column: 17, scope: !357, inlinedAt: !190)
!370 = !DILocation(line: 142, column: 62, scope: !357, inlinedAt: !190)
!371 = !DILocation(line: 143, column: 17, scope: !357, inlinedAt: !190)
!372 = !DILocation(line: 143, column: 56, scope: !357, inlinedAt: !190)
!373 = !DILocation(line: 144, column: 13, scope: !357, inlinedAt: !190)
!374 = !DILocation(line: 69, column: 51, scope: !188, inlinedAt: !190)
!375 = distinct !{!375, !376}
!376 = !{!"llvm.loop.unroll.full"}
!377 = !DILocation(line: 74, column: 30, scope: !378, inlinedAt: !190)
!378 = distinct !DILexicalBlock(scope: !379, file: !1, line: 74, column: 17)
!379 = distinct !DILexicalBlock(scope: !238, file: !1, line: 73, column: 9)
!380 = !DILocation(line: 74, column: 28, scope: !378, inlinedAt: !190)
!381 = !DILocation(line: 74, column: 17, scope: !379, inlinedAt: !190)
!382 = !DILocation(line: 76, column: 17, scope: !383, inlinedAt: !190)
!383 = distinct !DILexicalBlock(scope: !378, file: !1, line: 75, column: 13)
!384 = !DILocation(line: 76, column: 56, scope: !383, inlinedAt: !190)
!385 = !DILocation(line: 77, column: 13, scope: !383, inlinedAt: !190)
!386 = !DILocation(line: 147, column: 1, scope: !34, inlinedAt: !190)
!387 = !DILocation(line: 195, column: 5, scope: !30)
!388 = !DILocation(line: 197, column: 5, scope: !30)
!389 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "GTid", arg: 2, scope: !48, file: !1, line: 149, type: !4)
!390 = !DILocation(line: 149, column: 44, scope: !48, inlinedAt: !391)
!391 = distinct !DILocation(line: 197, column: 5, scope: !30)
!392 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "DTid", arg: 1, scope: !48, file: !1, line: 149, type: !4)
!393 = !DILocation(line: 149, column: 29, scope: !48, inlinedAt: !391)
!394 = !DILocation(line: 151, column: 11, scope: !48, inlinedAt: !391)
!395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "valueSum", scope: !48, file: !1, line: 151, type: !25)
!396 = !DILocation(line: 152, column: 11, scope: !48, inlinedAt: !391)
!397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "squaredValueSum", scope: !48, file: !1, line: 152, type: !25)
!398 = !DILocation(line: 153, column: 10, scope: !48, inlinedAt: !391)
!399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numValues", scope: !48, file: !1, line: 153, type: !33)
!400 = !DILocation(line: 155, column: 64, scope: !48, inlinedAt: !391)
!401 = !DILocation(line: 155, column: 59, scope: !48, inlinedAt: !391)
!402 = !DILocation(line: 155, column: 19, scope: !48, inlinedAt: !391)
!403 = !DILocation(line: 45, column: 31, scope: !37, inlinedAt: !404)
!404 = distinct !DILocation(line: 155, column: 19, scope: !48, inlinedAt: !391)
!405 = !DILocation(line: 47, column: 34, scope: !37, inlinedAt: !404)
!406 = !DILocation(line: 47, column: 45, scope: !37, inlinedAt: !404)
!407 = !DILocation(line: 47, column: 50, scope: !37, inlinedAt: !404)
!408 = !DILocation(line: 47, column: 10, scope: !37, inlinedAt: !404)
!409 = !DILocation(line: 49, column: 12, scope: !37, inlinedAt: !404)
!410 = !DILocation(line: 49, column: 9, scope: !37, inlinedAt: !404)
!411 = !DILocation(line: 49, column: 41, scope: !37, inlinedAt: !404)
!412 = !DILocation(line: 49, column: 64, scope: !37, inlinedAt: !404)
!413 = !DILocation(line: 49, column: 61, scope: !37, inlinedAt: !404)
!414 = !DILocation(line: 49, column: 35, scope: !37, inlinedAt: !404)
!415 = !DILocation(line: 50, column: 17, scope: !37, inlinedAt: !404)
!416 = !DILocation(line: 48, column: 5, scope: !37, inlinedAt: !404)
!417 = !DILocation(line: 155, column: 11, scope: !48, inlinedAt: !391)
!418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixel", scope: !48, file: !1, line: 155, type: !4)
!419 = !DILocation(line: 159, column: 15, scope: !420, inlinedAt: !391)
!420 = distinct !DILexicalBlock(scope: !48, file: !1, line: 159, column: 5)
!421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !420, file: !1, line: 159, type: !33)
!422 = !DILocation(line: 159, column: 29, scope: !423, inlinedAt: !391)
!423 = distinct !DILexicalBlock(scope: !420, file: !1, line: 159, column: 5)
!424 = !DILocation(line: 159, column: 24, scope: !423, inlinedAt: !391)
!425 = !DILocation(line: 159, column: 5, scope: !420, inlinedAt: !391)
!426 = !DILocation(line: 161, column: 29, scope: !427, inlinedAt: !391)
!427 = distinct !DILexicalBlock(scope: !423, file: !1, line: 160, column: 5)
!428 = !DILocation(line: 161, column: 14, scope: !427, inlinedAt: !391)
!429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rowID", scope: !427, file: !1, line: 161, type: !33)
!430 = !DILocation(line: 162, column: 27, scope: !427, inlinedAt: !391)
!431 = !DILocation(line: 162, column: 14, scope: !427, inlinedAt: !391)
!432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rNumValues", scope: !427, file: !1, line: 162, type: !33)
!433 = !DILocation(line: 164, column: 24, scope: !434, inlinedAt: !391)
!434 = distinct !DILexicalBlock(scope: !427, file: !1, line: 164, column: 13)
!435 = !DILocation(line: 164, column: 13, scope: !427, inlinedAt: !391)
!436 = !DILocation(line: 166, column: 50, scope: !437, inlinedAt: !391)
!437 = distinct !DILexicalBlock(scope: !434, file: !1, line: 165, column: 9)
!438 = !DILocation(line: 166, column: 37, scope: !437, inlinedAt: !391)
!439 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 1, scope: !51, file: !41, line: 44, type: !33)
!440 = !DILocation(line: 44, column: 29, scope: !51, inlinedAt: !441)
!441 = distinct !DILocation(line: 166, column: 37, scope: !437, inlinedAt: !391)
!442 = !DILocation(line: 47, column: 16, scope: !51, inlinedAt: !441)
!443 = !DILocation(line: 47, column: 14, scope: !51, inlinedAt: !441)
!444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !51, file: !41, line: 46, type: !21)
!445 = !DILocation(line: 46, column: 12, scope: !51, inlinedAt: !441)
!446 = !DILocation(line: 48, column: 29, scope: !51, inlinedAt: !441)
!447 = !DILocation(line: 48, column: 16, scope: !51, inlinedAt: !441)
!448 = !DILocation(line: 48, column: 14, scope: !51, inlinedAt: !441)
!449 = !DILocation(line: 49, column: 5, scope: !51, inlinedAt: !441)
!450 = !DILocation(line: 166, column: 20, scope: !437, inlinedAt: !391)
!451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unpackedRowSum", scope: !437, file: !1, line: 166, type: !21)
!452 = !DILocation(line: 167, column: 19, scope: !437, inlinedAt: !391)
!453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rValueSum", scope: !437, file: !1, line: 167, type: !25)
!454 = !DILocation(line: 168, column: 19, scope: !437, inlinedAt: !391)
!455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rSquaredValueSum", scope: !437, file: !1, line: 168, type: !25)
!456 = !DILocation(line: 170, column: 22, scope: !437, inlinedAt: !391)
!457 = !DILocation(line: 171, column: 29, scope: !437, inlinedAt: !391)
!458 = !DILocation(line: 172, column: 23, scope: !437, inlinedAt: !391)
!459 = !DILocation(line: 173, column: 9, scope: !437, inlinedAt: !391)
!460 = !DILocation(line: 159, column: 43, scope: !423, inlinedAt: !391)
!461 = !DILocation(line: 177, column: 24, scope: !48, inlinedAt: !391)
!462 = !DILocation(line: 177, column: 22, scope: !48, inlinedAt: !391)
!463 = !DILocation(line: 177, column: 11, scope: !48, inlinedAt: !391)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "invN", scope: !48, file: !1, line: 177, type: !25)
!465 = !DILocation(line: 178, column: 23, scope: !48, inlinedAt: !391)
!466 = !DILocation(line: 178, column: 11, scope: !48, inlinedAt: !391)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mean", scope: !48, file: !1, line: 178, type: !25)
!468 = !DILocation(line: 182, column: 30, scope: !48, inlinedAt: !391)
!469 = !DILocation(line: 182, column: 48, scope: !48, inlinedAt: !391)
!470 = !DILocation(line: 182, column: 66, scope: !48, inlinedAt: !391)
!471 = !DILocation(line: 182, column: 40, scope: !48, inlinedAt: !391)
!472 = !DILocation(line: 182, column: 11, scope: !48, inlinedAt: !391)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "besselCorrection", scope: !48, file: !1, line: 182, type: !25)
!474 = !DILocation(line: 183, column: 47, scope: !48, inlinedAt: !391)
!475 = !DILocation(line: 183, column: 72, scope: !48, inlinedAt: !391)
!476 = !DILocation(line: 183, column: 65, scope: !48, inlinedAt: !391)
!477 = !DILocation(line: 183, column: 39, scope: !48, inlinedAt: !391)
!478 = !DILocation(line: 183, column: 11, scope: !48, inlinedAt: !391)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "variance", scope: !48, file: !1, line: 183, type: !25)
!480 = !DILocation(line: 185, column: 16, scope: !48, inlinedAt: !391)
!481 = !DILocation(line: 185, column: 14, scope: !48, inlinedAt: !391)
!482 = !DILocation(line: 187, column: 42, scope: !48, inlinedAt: !391)
!483 = !DILocation(line: 187, column: 32, scope: !48, inlinedAt: !391)
!484 = !DILocation(line: 187, column: 30, scope: !48, inlinedAt: !391)
!485 = !DILocation(line: 188, column: 1, scope: !48, inlinedAt: !391)
!486 = !DILocation(line: 198, column: 1, scope: !30)

#endif

const unsigned char g_pCalculateMeanVarianceCS[] = {
  0x44, 0x58, 0x42, 0x43, 0x13, 0x1d, 0xf6, 0x83, 0xd3, 0xb2, 0xd5, 0x19,
  0xf6, 0x2b, 0x19, 0x16, 0x6d, 0xd2, 0x4a, 0xea, 0x01, 0x00, 0x00, 0x00,
  0x38, 0x5c, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x0c, 0x01, 0x00, 0x00, 0xb0, 0x38, 0x01, 0x00, 0xec, 0x42, 0x01, 0x00,
  0x20, 0x43, 0x01, 0x00, 0x3c, 0x43, 0x01, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0x90, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x42, 0x9c, 0x37, 0x01, 0x00,
  0x63, 0x00, 0x05, 0x00, 0xe7, 0x4d, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x84, 0x37, 0x01, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xde, 0x4d, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0xc0, 0x00, 0xd2, 0x06, 0x63,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x80, 0x6a, 0x03, 0x41, 0xfc,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe0, 0xc1, 0x1c, 0x01, 0x18, 0x24, 0x60,
  0x00, 0x30, 0x88, 0x10, 0x0c, 0x19, 0x00, 0xd0, 0x30, 0x02, 0x50, 0x82,
  0x82, 0x8c, 0x81, 0x80, 0x39, 0x02, 0x50, 0x28, 0x45, 0x81, 0x24, 0x08,
  0x42, 0x4a, 0x19, 0x00, 0x00, 0x20, 0xa6, 0x08, 0x00, 0x40, 0x4e, 0x19,
  0x0a, 0x00, 0x20, 0x68, 0x06, 0xe0, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21,
  0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x21, 0x49,
  0x92, 0x04, 0xcc, 0x11, 0x20, 0x44, 0xdd, 0x33, 0x5c, 0xfe, 0x84, 0x3d,
  0x84, 0xe4, 0x87, 0x40, 0x33, 0x2c, 0x04, 0x0a, 0xaa, 0xa2, 0x4c, 0x80,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x85, 0x90, 0x00, 0x09, 0xa0,
  0xac, 0x10, 0x00, 0x00, 0x00, 0xb4, 0x95, 0x01, 0x00, 0x24, 0xea, 0x0a,
  0x21, 0x01, 0x92, 0x44, 0x5f, 0x59, 0x0a, 0xc0, 0x02, 0x00, 0x40, 0x92,
  0x24, 0x89, 0xa2, 0xb0, 0x0c, 0x12, 0x00, 0xd0, 0x78, 0xd4, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93, 0x8f, 0xdc,
  0x36, 0x22, 0x00, 0x00, 0x00, 0x0a, 0x51, 0x02, 0x16, 0x40, 0xe6, 0x1c,
  0x41, 0x50, 0x0c, 0x0b, 0xa0, 0x00, 0x00, 0xa5, 0x74, 0xa6, 0x30, 0x18,
  0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0,
  0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0x30,
  0x07, 0x76, 0x78, 0x87, 0x70, 0xa0, 0x07, 0x3f, 0xd0, 0x03, 0x3d, 0x68,
  0x87, 0x74, 0x80, 0x87, 0x79, 0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28,
  0x07, 0x14, 0x00, 0x33, 0x59, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4,
  0xe0, 0x07, 0x48, 0x90, 0x56, 0x62, 0x87, 0x11, 0x04, 0x69, 0x26, 0x32,
  0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0x90, 0x85, 0x5b,
  0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39,
  0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79,
  0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30,
  0x90, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0x40, 0x81, 0x4b, 0xef, 0x30, 0x82,
  0x00, 0x9c, 0x1a, 0x48, 0x53, 0x44, 0x09, 0x93, 0xcf, 0x01, 0x8b, 0x40,
  0x2d, 0xc0, 0x44, 0x98, 0x04, 0xd0, 0xbc, 0x40, 0x84, 0x00, 0x8d, 0x40,
  0x70, 0x4e, 0x23, 0x4d, 0x40, 0x33, 0x6d, 0x54, 0x51, 0x10, 0x11, 0x3a,
  0x62, 0x00, 0x00, 0x00, 0x40, 0x3a, 0x41, 0x08, 0x50, 0x20, 0xd3, 0x4c,
  0xc0, 0x14, 0xc0, 0x20, 0x02, 0x30, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x44, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xe6,
  0xb8, 0x01, 0x98, 0x39, 0x6e, 0x00, 0xe6, 0x83, 0x1a, 0x0c, 0x86, 0x3c,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0x14, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0xf2, 0x30, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x30, 0xe4, 0x61, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x01, 0x02, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x04, 0x04, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x07, 0x08, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x2e, 0x20,
  0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x64,
  0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0xd9, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0xb3, 0x01, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0xa7, 0x03, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0xcf, 0x07, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x30, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x18, 0x00, 0x01, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x0c, 0x80, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93, 0x06,
  0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x05,
  0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x8a, 0xa0, 0x10, 0xca, 0xa0, 0x04, 0x8a, 0x61, 0x04, 0xa0, 0x24, 0x0a,
  0xa8, 0x1c, 0x4a, 0xa1, 0x20, 0x0a, 0xa3, 0x40, 0x0a, 0xa5, 0x60, 0x0a,
  0x67, 0x06, 0x80, 0xd0, 0x11, 0x00, 0x4a, 0x4a, 0x10, 0x10, 0x88, 0x86,
  0x11, 0x00, 0x92, 0xc6, 0x08, 0x40, 0x10, 0x04, 0xf1, 0x5f, 0x18, 0x01,
  0x98, 0x01, 0xa0, 0x60, 0x06, 0x80, 0xda, 0x19, 0x00, 0x82, 0x67, 0x00,
  0x48, 0x9e, 0x01, 0xa0, 0x79, 0x06, 0x80, 0xe8, 0x19, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x1f, 0x38, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0xcc, 0x03, 0x09, 0x64, 0x08, 0x91, 0x21, 0xa3, 0x91, 0xc0, 0x04, 0x71,
  0x0e, 0xa4, 0xa8, 0x82, 0x9e, 0xb8, 0xa6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4,
  0xe6, 0xb8, 0x88, 0xca, 0xdc, 0xde, 0xd2, 0xe6, 0xd2, 0xdc, 0xce, 0xb8,
  0x86, 0xc2, 0xd8, 0xc6, 0xea, 0xd8, 0xc2, 0xe8, 0xca, 0x9a, 0xca, 0xc2,
  0xdc, 0xac, 0xc2, 0xe4, 0xd2, 0xc2, 0xdc, 0xc6, 0xca, 0x86, 0xa6, 0x5c,
  0xd0, 0xd8, 0xe6, 0xd8, 0x06, 0x0d, 0x40, 0x00, 0x50, 0x0d, 0xc6, 0xd8,
  0xc2, 0xdc, 0xce, 0x40, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0x40,
  0x66, 0x5c, 0x6e, 0x40, 0x50, 0xe8, 0xc2, 0xce, 0xe6, 0x5e, 0xa4, 0x8a,
  0x98, 0x8a, 0x82, 0xa6, 0x8a, 0xbe, 0x66, 0x6e, 0x60, 0x5e, 0xcc, 0xd2,
  0xdc, 0xc2, 0xd8, 0x52, 0x36, 0x00, 0x2c, 0xea, 0xd2, 0xdc, 0xe8, 0x64,
  0x78, 0xd9, 0x95, 0x8d, 0xd1, 0xbd, 0xc9, 0xf1, 0xd4, 0xb9, 0xcd, 0xa5,
  0x9d, 0xb9, 0x95, 0x91, 0x81, 0xa4, 0xb9, 0xd1, 0xb1, 0x80, 0xc8, 0xf8,
  0x30, 0xc0, 0x23, 0x53, 0xe7, 0x36, 0x97, 0x76, 0xe6, 0x56, 0x46, 0x06,
  0x92, 0xe6, 0x46, 0xb7, 0xc7, 0x00, 0xc8, 0x00, 0x01, 0x03, 0x30, 0x38,
  0x16, 0x31, 0x40, 0x73, 0x08, 0x68, 0x60, 0x25, 0x60, 0x00, 0x06, 0xc0,
  0x00, 0x30, 0xc8, 0x5b, 0xc4, 0x00, 0xcd, 0x22, 0xa0, 0x81, 0x95, 0x80,
  0x01, 0x18, 0x80, 0xc1, 0x00, 0x6c, 0x10, 0x14, 0x86, 0x47, 0x19, 0x5b,
  0x59, 0x5b, 0x99, 0x1b, 0xdd, 0xb2, 0x01, 0x70, 0x12, 0x36, 0x65, 0x6c,
  0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1c,
  0xd2, 0xdc, 0xe8, 0xf6, 0x18, 0x00, 0x19, 0x44, 0x60, 0x00, 0x06, 0xc5,
  0x04, 0x01, 0xb0, 0xa6, 0x15, 0x00, 0x1c, 0x40, 0xd2, 0xb4, 0x41, 0x78,
  0xa8, 0x49, 0x10, 0x20, 0x18, 0x02, 0x1a, 0x00, 0x00, 0x28, 0x80, 0x01,
  0x00, 0x34, 0x00, 0x50, 0x01, 0x8b, 0x18, 0xc0, 0x2a, 0x04, 0x34, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x80, 0x44, 0x9a, 0x1b, 0x9d, 0x0c, 0x1d, 0xbb,
  0xb2, 0x31, 0xba, 0x37, 0x39, 0x9e, 0x34, 0x37, 0x3a, 0x16, 0x10, 0x19,
  0x9f, 0x45, 0x0c, 0xd0, 0x1c, 0x02, 0x28, 0x7c, 0x12, 0x18, 0x80, 0x01,
  0x30, 0x00, 0x8b, 0x18, 0xa0, 0x59, 0x04, 0x50, 0xf8, 0x24, 0x30, 0x00,
  0x03, 0x30, 0x18, 0x80, 0x0d, 0x82, 0xb6, 0x2d, 0x1b, 0x00, 0x47, 0xda,
  0x20, 0x74, 0xd4, 0x24, 0x08, 0x10, 0x32, 0x01, 0x14, 0x00, 0x00, 0x14,
  0xc0, 0x00, 0x00, 0x38, 0x00, 0xf0, 0x80, 0x45, 0x0c, 0x60, 0x61, 0x02,
  0x28, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x40, 0xc3, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x86, 0x90, 0x5d, 0xd9, 0x18, 0xdd, 0x9b, 0x1c, 0x8f, 0x19, 0xdb,
  0x5b, 0x18, 0x1d, 0x0b, 0x88, 0x8c, 0x0f, 0x0b, 0x33, 0xb6, 0xb7, 0x30,
  0xba, 0x3d, 0x06, 0x40, 0x06, 0x63, 0x00, 0x06, 0x60, 0x40, 0x2c, 0x62,
  0x80, 0xe6, 0x10, 0x3e, 0x35, 0x20, 0x03, 0x30, 0x00, 0x03, 0x60, 0x00,
  0x16, 0x31, 0x40, 0xb3, 0x08, 0x9f, 0x1a, 0x90, 0x01, 0x18, 0x80, 0x01,
  0x18, 0x0c, 0xc0, 0x06, 0xa1, 0x0c, 0xcc, 0x60, 0xd9, 0x00, 0x38, 0x64,
  0xb0, 0x41, 0x40, 0x03, 0x6a, 0x12, 0x04, 0x08, 0x62, 0x20, 0x7c, 0x00,
  0x00, 0x0a, 0x60, 0x00, 0x00, 0x67, 0x00, 0x00, 0x69, 0x00, 0x2c, 0x62,
  0x00, 0x2b, 0x0c, 0x04, 0x97, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x00, 0xd8,
  0x50, 0x5c, 0x12, 0x18, 0xac, 0x01, 0x19, 0x90, 0x68, 0x0b, 0x4b, 0x73,
  0x23, 0x51, 0x97, 0xe6, 0x46, 0xb7, 0x88, 0x01, 0x2c, 0x37, 0x10, 0xce,
  0x00, 0x48, 0x00, 0x00, 0x00, 0x80, 0x0d, 0x05, 0x70, 0x5d, 0x6f, 0x70,
  0x6d, 0x1a, 0x00, 0x00, 0x0e, 0x26, 0x08, 0xc7, 0xb0, 0x6a, 0x02, 0x84,
  0x36, 0x00, 0x04, 0xd0, 0x88, 0x03, 0x20, 0x08, 0x0d, 0x00, 0x00, 0x40,
  0x04, 0x90, 0x03, 0x00, 0x00, 0x28, 0x19, 0xa5, 0xb1, 0xd1, 0x95, 0xc9,
  0x21, 0xbd, 0xc9, 0xa5, 0xe9, 0xbd, 0xb9, 0xd1, 0x85, 0xb1, 0xb1, 0xe5,
  0x91, 0x0d, 0x02, 0x7e, 0x8c, 0xd2, 0xd8, 0xe8, 0xca, 0xe4, 0x90, 0xde,
  0xe4, 0xd2, 0xf4, 0xde, 0xdc, 0xe8, 0xc2, 0xd8, 0xd8, 0xf2, 0x80, 0x80,
  0xb2, 0x82, 0xb0, 0xac, 0x7e, 0x48, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4,
  0x80, 0x92, 0x48, 0x60, 0x62, 0x80, 0x80, 0x92, 0x80, 0xb4, 0x36, 0x0c,
  0xc0, 0xf5, 0x06, 0x9b, 0x06, 0x00, 0xb0, 0x83, 0x55, 0x13, 0x20, 0xd0,
  0x41, 0x1d, 0x08, 0x77, 0x70, 0x07, 0x40, 0x80, 0x07, 0x00, 0x00, 0x80,
  0x08, 0x00, 0x00, 0x00, 0xc0, 0xe9, 0xa8, 0x8c, 0x2e, 0x68, 0x8c, 0x2e,
  0xcd, 0xae, 0x0c, 0x2a, 0x0d, 0xaf, 0x8c, 0x2d, 0xc9, 0x8d, 0xac, 0x0c,
  0x8f, 0x70, 0x10, 0xf0, 0x73, 0x54, 0x46, 0x17, 0x34, 0x46, 0x97, 0x66,
  0x57, 0x06, 0x95, 0x86, 0x57, 0xc6, 0x96, 0xe4, 0x46, 0x56, 0x86, 0x07,
  0x04, 0x94, 0x15, 0xf4, 0x13, 0x64, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46,
  0xf7, 0x26, 0x07, 0x84, 0x44, 0x02, 0x13, 0x03, 0x04, 0x64, 0x15, 0x03,
  0x04, 0xa4, 0xb5, 0x41, 0x00, 0x03, 0x30, 0xd8, 0x34, 0x00, 0xc0, 0x1e,
  0xac, 0x9a, 0x00, 0x21, 0x0f, 0xf4, 0x40, 0x68, 0x03, 0x3e, 0x00, 0x02,
  0x37, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0xae, 0x81, 0xcb,
  0x8b, 0x14, 0x55, 0xd0, 0xd3, 0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0xdc,
  0x1c, 0x97, 0x54, 0x58, 0x1e, 0x9d, 0x5c, 0xd8, 0x58, 0x9a, 0xdb, 0xd9,
  0x14, 0x5a, 0x18, 0x59, 0x99, 0x1c, 0x52, 0x19, 0x1b, 0x5c, 0x99, 0x9c,
  0x0b, 0x1a, 0xdb, 0x1c, 0x5b, 0xda, 0xa0, 0x01, 0xf0, 0x03, 0x80, 0x4e,
  0xd2, 0xdc, 0x55, 0x1a, 0x1d, 0x5a, 0x9a, 0x9b, 0xd0, 0x5b, 0x9d, 0x1b,
  0xd9, 0x1c, 0xd3, 0x20, 0xe0, 0x27, 0x69, 0xee, 0x2a, 0x8d, 0x0e, 0x2d,
  0xcd, 0x4d, 0xe8, 0xad, 0xce, 0x8d, 0x6c, 0x0e, 0x08, 0x28, 0x2b, 0xe8,
  0xcb, 0xc9, 0xea, 0x87, 0xc4, 0xae, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0x08,
  0x89, 0x04, 0x26, 0x06, 0x08, 0x08, 0x06, 0x48, 0x8b, 0x84, 0xd8, 0xdb,
  0x1b, 0xdb, 0x1e, 0x03, 0x20, 0x03, 0x51, 0x00, 0x03, 0x30, 0x10, 0x36,
  0x0c, 0xa3, 0x00, 0x06, 0x60, 0xb0, 0x69, 0x00, 0x00, 0x52, 0x58, 0x35,
  0x01, 0x7f, 0x00, 0x0a, 0xa1, 0xf0, 0x07, 0x7e, 0x50, 0x0a, 0x40, 0xf0,
  0x07, 0x00, 0x00, 0x80, 0x08, 0x00, 0x00, 0x00, 0x40, 0xc6, 0x88, 0xed,
  0x2d, 0x8c, 0x4e, 0x86, 0xea, 0x0d, 0x29, 0x8c, 0xcd, 0x8c, 0x65, 0x10,
  0xf0, 0x63, 0xc4, 0xf6, 0x16, 0x46, 0x27, 0x43, 0xf5, 0x86, 0x14, 0xc6,
  0x66, 0x06, 0x04, 0x94, 0x15, 0x94, 0x64, 0xf5, 0x43, 0x62, 0x57, 0x36,
  0x46, 0xf7, 0x26, 0x07, 0xd4, 0x44, 0x02, 0x13, 0x03, 0x04, 0x04, 0xa4,
  0xb5, 0x41, 0x78, 0x83, 0x35, 0xd8, 0x34, 0x00, 0x40, 0x2a, 0xac, 0x9a,
  0x80, 0x3f, 0x38, 0x05, 0x54, 0xf8, 0x03, 0x32, 0x50, 0x05, 0x20, 0x28,
  0x03, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x20, 0x64, 0x94, 0xc6,
  0x46, 0x57, 0x26, 0x67, 0x55, 0x26, 0x47, 0x97, 0x36, 0x16, 0xc6, 0xc6,
  0x96, 0x47, 0x35, 0x08, 0xf8, 0x31, 0x4a, 0x63, 0xa3, 0x2b, 0x93, 0xb3,
  0x2a, 0x93, 0xa3, 0x4b, 0x1b, 0x0b, 0x63, 0x63, 0xcb, 0x03, 0x02, 0xca,
  0x0a, 0xc2, 0xb2, 0xfa, 0x21, 0xb1, 0x2b, 0x1b, 0xa3, 0x7b, 0x93, 0x03,
  0x4a, 0x22, 0x81, 0x89, 0x01, 0x02, 0x82, 0x01, 0xd2, 0xda, 0x30, 0x00,
  0xd7, 0xb5, 0x69, 0x00, 0x00, 0x57, 0x58, 0x35, 0x01, 0x02, 0x2b, 0xb4,
  0x82, 0x50, 0x13, 0xaf, 0x00, 0x04, 0x36, 0x01, 0x00, 0x00, 0x88, 0x00,
  0x00, 0x00, 0x00, 0x64, 0x90, 0xc2, 0xd8, 0xcc, 0xa8, 0xde, 0x8c, 0xd8,
  0xde, 0xc2, 0xe8, 0x64, 0x78, 0x06, 0x01, 0x3f, 0x48, 0x61, 0x6c, 0x66,
  0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x40, 0x40, 0x59, 0x41,
  0x3f, 0x41, 0x56, 0x3f, 0x24, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x40,
  0x4d, 0x24, 0x30, 0x31, 0x40, 0x40, 0x49, 0x40, 0x5a, 0x1b, 0x84, 0x35,
  0x78, 0x83, 0x4d, 0x03, 0x00, 0xcc, 0xc2, 0xaa, 0x09, 0xf8, 0x83, 0x58,
  0x90, 0x85, 0x3f, 0x60, 0x03, 0x5a, 0x00, 0x82, 0x36, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x80, 0x0d, 0xc7, 0x1c, 0xe0, 0x41, 0x1f, 0x98,
  0xc2, 0x2a, 0xc0, 0x42, 0x2d, 0x30, 0x27, 0x86, 0x74, 0xb8, 0xaa, 0xe6,
  0xca, 0xe4, 0xe6, 0xb8, 0xea, 0xe6, 0xca, 0xe4, 0xb8, 0x88, 0xca, 0xe6,
  0xd6, 0xe8, 0xde, 0xe0, 0xb8, 0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xb0,
  0x5a, 0x8e, 0xe4, 0xc2, 0xe0, 0xd0, 0xd2, 0xc6, 0xe6, 0x5a, 0xa6, 0xc2,
  0xda, 0xe0, 0xd8, 0xca, 0xe6, 0xb8, 0xa6, 0xc2, 0xda, 0xe0, 0xd8, 0xca,
  0xe6, 0xb8, 0x88, 0xca, 0xe6, 0xd6, 0xe8, 0xde, 0xe0, 0xb8, 0x88, 0x66,
  0x88, 0x62, 0x64, 0xa4, 0xc2, 0xf2, 0xe8, 0xe4, 0xc2, 0xc6, 0xd2, 0xdc,
  0xce, 0xb8, 0xe6, 0xe4, 0xc6, 0xb8, 0x88, 0x66, 0x88, 0x62, 0x64, 0xa4,
  0xc2, 0xf2, 0xe8, 0xe4, 0xc2, 0xc6, 0xd2, 0xdc, 0xce, 0xa4, 0xca, 0xc2,
  0xd8, 0xa8, 0xd2, 0xda, 0xca, 0x88, 0xca, 0xdc, 0xde, 0xd2, 0xe6, 0xca,
  0xc8, 0x82, 0xda, 0xc4, 0xd2, 0xca, 0xdc, 0xe8, 0x9e, 0xc6, 0xc6, 0xd8,
  0xea, 0xe6, 0xd2, 0xde, 0xdc, 0xb8, 0xa4, 0xc2, 0xf2, 0xe8, 0xe4, 0xc2,
  0xc6, 0xd2, 0xdc, 0xce, 0x90, 0xd8, 0xe6, 0xd8, 0x86, 0xde, 0xda, 0xe0,
  0xc2, 0xe8, 0x5c, 0xd0, 0x06, 0x0d, 0xc0, 0x2d, 0x00, 0x94, 0xa8, 0xe4,
  0xc2, 0xc6, 0xca, 0xa4, 0xc2, 0xf2, 0xa0, 0xc2, 0xe4, 0xc2, 0xda, 0xca,
  0xe8, 0xca, 0xe4, 0xe6, 0x86, 0x15, 0x00, 0x80, 0x0b, 0xb9, 0x80, 0x3f,
  0x64, 0x92, 0xdc, 0xe6, 0xe8, 0xc2, 0xdc, 0xc6, 0xca, 0x9a, 0xc2, 0xe6,
  0xd6, 0x58, 0x06, 0x2e, 0x2f, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43,
  0x6f, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c,
  0x48, 0x6c, 0x73, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x2e, 0x68,
  0x6c, 0x73, 0x6c, 0x69, 0x83, 0x06, 0x80, 0x17, 0x00, 0x12, 0x55, 0x49,
  0x4e, 0x54, 0x8b, 0x18, 0xc0, 0xf2, 0x85, 0x5e, 0xa0, 0x80, 0x37, 0x00,
  0x00, 0x00, 0x00, 0x16, 0x31, 0x80, 0x19, 0x00, 0x00, 0x00, 0xfc, 0x02,
  0x00, 0x00, 0x00, 0x40, 0x33, 0x08, 0xf8, 0x49, 0x72, 0x9b, 0xa3, 0x0b,
  0x73, 0x1b, 0x2b, 0x6b, 0x0a, 0x9b, 0x5b, 0x03, 0xa2, 0x92, 0x0b, 0x1b,
  0x2b, 0x93, 0x0a, 0xcb, 0x83, 0x0a, 0x93, 0x0b, 0x6b, 0x2b, 0xa3, 0x2b,
  0x93, 0x9b, 0x03, 0x02, 0x9a, 0x49, 0x12, 0xda, 0xb6, 0x00, 0xba, 0xb0,
  0x0b, 0xe1, 0x80, 0x0b, 0xfa, 0x03, 0x0e, 0x41, 0x00, 0x00, 0x44, 0x90,
  0xd2, 0xe8, 0x8e, 0xe4, 0xde, 0xea, 0xe0, 0x86, 0x15, 0x80, 0x2e, 0xe0,
  0xc2, 0x38, 0xec, 0x0f, 0x8d, 0x27, 0x33, 0xb3, 0xb9, 0x32, 0xba, 0x35,
  0x03, 0x20, 0x00, 0x1b, 0x02, 0x73, 0x98, 0x04, 0x01, 0x01, 0x00, 0x00,
  0x00, 0x38, 0x80, 0x02, 0x18, 0x00, 0xc0, 0x39, 0x00, 0x00, 0x00, 0x70,
  0x0d, 0x02, 0x7e, 0x9e, 0xcc, 0xcc, 0xe6, 0xca, 0xe8, 0x80, 0x90, 0xd2,
  0xe8, 0x8e, 0xe4, 0xde, 0xea, 0xe0, 0x80, 0xa8, 0xe4, 0xc2, 0xc6, 0xca,
  0xa4, 0xc2, 0xf2, 0xa0, 0xc2, 0xe4, 0xc2, 0xda, 0xca, 0xe8, 0xca, 0xe4,
  0xe6, 0x80, 0x80, 0x66, 0xa2, 0x84, 0x92, 0x84, 0xb6, 0x2d, 0x00, 0x39,
  0x94, 0x43, 0x3a, 0xe0, 0x02, 0xff, 0xa0, 0x43, 0x10, 0x00, 0x00, 0x9d,
  0xa3, 0xb2, 0xb7, 0xb6, 0x32, 0x3a, 0xb9, 0xbc, 0x29, 0x3a, 0xb9, 0x34,
  0xb2, 0x32, 0xc6, 0x41, 0xc0, 0xcf, 0x51, 0xd9, 0x5b, 0x5b, 0x19, 0x9d,
  0x5c, 0xde, 0x14, 0x9d, 0x5c, 0x1a, 0x59, 0x19, 0x10, 0x52, 0x1a, 0xdd,
  0x91, 0xdc, 0x5b, 0x1d, 0x1c, 0x10, 0x95, 0x5c, 0xd8, 0x58, 0x99, 0x54,
  0x58, 0x1e, 0x54, 0x98, 0x5c, 0x58, 0x5b, 0x19, 0x5d, 0x99, 0xdc, 0x1c,
  0x10, 0xd0, 0x4c, 0x92, 0xd0, 0xb6, 0x05, 0x20, 0x87, 0x75, 0x60, 0x07,
  0x5c, 0x08, 0x21, 0x70, 0x08, 0x02, 0x00, 0xa0, 0xd2, 0x94, 0x36, 0x37,
  0x37, 0x85, 0x16, 0x46, 0x56, 0x26, 0x37, 0xac, 0x00, 0x74, 0x01, 0x17,
  0xdc, 0x61, 0x84, 0xd8, 0x06, 0x01, 0x3f, 0x4f, 0x66, 0x66, 0x73, 0x65,
  0x74, 0x40, 0x4d, 0x69, 0x73, 0x73, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
  0x40, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x61, 0x79, 0x50, 0x61, 0x72,
  0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x40, 0x40, 0x33, 0x51, 0x42,
  0x49, 0x42, 0xdb, 0x16, 0xe0, 0x1d, 0xca, 0x01, 0x1e, 0x70, 0x81, 0x84,
  0xd0, 0x21, 0x08, 0x00, 0x80, 0x96, 0x14, 0x55, 0xd0, 0x13, 0x95, 0x5c,
  0xd8, 0x58, 0x99, 0x54, 0x58, 0x1e, 0x54, 0x98, 0x5c, 0x58, 0x5b, 0x19,
  0x5d, 0x99, 0xdc, 0xdc, 0xb0, 0x02, 0x00, 0x70, 0x41, 0x1e, 0x58, 0x88,
  0x6a, 0x10, 0xf0, 0x93, 0xe4, 0x36, 0x47, 0x17, 0xe6, 0x36, 0x56, 0xd6,
  0x14, 0x36, 0xb7, 0x06, 0x24, 0x45, 0x15, 0xf4, 0x44, 0x25, 0x17, 0x36,
  0x56, 0x26, 0x15, 0x96, 0x07, 0x15, 0x26, 0x17, 0xd6, 0x56, 0x46, 0x57,
  0x26, 0x37, 0x07, 0x04, 0x34, 0x93, 0x24, 0xb4, 0x6d, 0x01, 0xe6, 0x61,
  0x17, 0xe8, 0x01, 0x17, 0x5c, 0x08, 0x1c, 0x82, 0x00, 0x00, 0x86, 0x15,
  0xc0, 0x3c, 0xe0, 0xc2, 0x38, 0xbc, 0xd0, 0x9a, 0x01, 0x08, 0x80, 0x0d,
  0xc1, 0x3d, 0x4c, 0x82, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xc0, 0x00,
  0x0c, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xf8, 0x06, 0x01, 0x3f, 0x4f,
  0x66, 0x66, 0x73, 0x65, 0x74, 0x40, 0x48, 0x69, 0x74, 0x47, 0x72, 0x6f,
  0x75, 0x70, 0x40, 0x52, 0x54, 0x41, 0x4f, 0x54, 0x72, 0x61, 0x63, 0x65,
  0x52, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
  0x73, 0x40, 0x40, 0x33, 0x51, 0x42, 0x49, 0x42, 0xdb, 0x16, 0xc0, 0x1e,
  0xca, 0x41, 0x1f, 0x70, 0x01, 0x86, 0xf2, 0x21, 0x08, 0x00, 0x80, 0x75,
  0x10, 0xf0, 0x73, 0x54, 0xf6, 0xd6, 0x56, 0x46, 0x27, 0x97, 0x37, 0x45,
  0x27, 0x97, 0x46, 0x56, 0x06, 0x84, 0x94, 0x46, 0x77, 0x24, 0xf7, 0x56,
  0x07, 0x07, 0x24, 0x45, 0x15, 0xf4, 0x44, 0x25, 0x17, 0x36, 0x56, 0x26,
  0x15, 0x96, 0x07, 0x15, 0x26, 0x17, 0xd6, 0x56, 0x46, 0x57, 0x26, 0x37,
  0x07, 0x04, 0x34, 0x93, 0x24, 0xb4, 0x6d, 0x01, 0xec, 0x61, 0x1d, 0xf8,
  0x01, 0x17, 0x6c, 0x08, 0x1c, 0x82, 0x00, 0x00, 0x86, 0x15, 0xc0, 0x3c,
  0xe0, 0x82, 0x3b, 0xe0, 0x10, 0xe3, 0x20, 0xe0, 0xe7, 0xc9, 0xcc, 0x6c,
  0xae, 0x8c, 0x0e, 0xa8, 0x29, 0x6d, 0x6e, 0x6e, 0x0a, 0x2d, 0x8c, 0xac,
  0x4c, 0x0e, 0x48, 0x8a, 0x2a, 0xe8, 0x89, 0x4a, 0x2e, 0x6c, 0xac, 0x4c,
  0x2a, 0x2c, 0x0f, 0x2a, 0x4c, 0x2e, 0xac, 0xad, 0x8c, 0xae, 0x4c, 0x6e,
  0x0e, 0x08, 0x68, 0x26, 0x4a, 0x28, 0x49, 0x68, 0xdb, 0x02, 0xf8, 0x43,
  0x39, 0xfc, 0x03, 0x2e, 0xe4, 0x50, 0x3e, 0x04, 0x01, 0x00, 0xf0, 0x11,
  0x0a, 0x1b, 0x5b, 0x3b, 0x93, 0x7b, 0xab, 0x73, 0x23, 0x1b, 0x7a, 0x63,
  0x7b, 0x93, 0x23, 0x82, 0xd5, 0x64, 0xc4, 0xf4, 0x14, 0x44, 0x45, 0x43,
  0xc3, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x86, 0x90, 0x5d, 0xd9, 0x18, 0xdd,
  0x9b, 0x1c, 0x8f, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0b, 0x08, 0x8d, 0xcf,
  0x22, 0x06, 0x68, 0x0e, 0x01, 0x8c, 0x5e, 0x82, 0x0c, 0xc0, 0x00, 0x0c,
  0x80, 0x01, 0x58, 0xc4, 0x00, 0xcd, 0x22, 0x80, 0xd1, 0x4b, 0x90, 0x01,
  0x18, 0x80, 0x01, 0x18, 0x0c, 0x00, 0x03, 0xbd, 0x45, 0x0c, 0xd0, 0x9c,
  0x84, 0x00, 0x46, 0x2f, 0x41, 0x06, 0x60, 0x00, 0x06, 0xa0, 0x30, 0x00,
  0x0c, 0xee, 0x16, 0x31, 0x40, 0x93, 0x12, 0x02, 0x18, 0xbd, 0x04, 0x19,
  0x80, 0x01, 0x18, 0x80, 0xc3, 0x00, 0x6c, 0x20, 0x4a, 0xc2, 0x24, 0x50,
  0x42, 0x25, 0x26, 0x08, 0xc0, 0x35, 0xad, 0x00, 0xe0, 0x00, 0x92, 0x58,
  0x62, 0x83, 0x80, 0x06, 0x2d, 0x31, 0x09, 0x02, 0x04, 0x92, 0x10, 0xc0,
  0x08, 0x00, 0x40, 0x02, 0x0c, 0x00, 0x60, 0x25, 0x00, 0xc0, 0x25, 0x80,
  0x45, 0x0c, 0x60, 0x8d, 0x84, 0x00, 0x46, 0xc0, 0x4b, 0x00, 0x00, 0x00,
  0x00, 0x8b, 0x18, 0xc0, 0x12, 0x89, 0x5e, 0x88, 0x00, 0x98, 0x00, 0x00,
  0x00, 0x00, 0x16, 0x31, 0x80, 0x19, 0x00, 0x00, 0x00, 0xc4, 0x04, 0x00,
  0x00, 0x00, 0xb0, 0x6d, 0x01, 0xfc, 0x23, 0x24, 0x00, 0x5c, 0x00, 0x23,
  0x99, 0x08, 0x02, 0x00, 0xa0, 0x4e, 0x0c, 0xe9, 0x70, 0x55, 0xcd, 0x95,
  0xc9, 0xcd, 0x71, 0xd5, 0xcd, 0x95, 0xc9, 0x71, 0x11, 0x95, 0xcd, 0xad,
  0xd1, 0xbd, 0xc1, 0x71, 0x11, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0x61, 0xb5,
  0x1c, 0xc9, 0x85, 0xc1, 0xa1, 0xa5, 0x8d, 0xcd, 0xb5, 0x4c, 0x85, 0xb5,
  0xc1, 0xb1, 0x95, 0xcd, 0x71, 0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xcd,
  0x71, 0x11, 0x95, 0xcd, 0xad, 0xd1, 0xbd, 0xc1, 0x71, 0x11, 0xcd, 0x10,
  0xc5, 0xc8, 0x48, 0x85, 0xe5, 0xd1, 0xc9, 0x85, 0x8d, 0xa5, 0xb9, 0x9d,
  0x71, 0xcd, 0xc9, 0x8d, 0x71, 0x11, 0xcd, 0x10, 0xc5, 0xc8, 0x48, 0x85,
  0xe5, 0xd1, 0xc9, 0x85, 0x8d, 0xa5, 0xb9, 0x9d, 0x49, 0x95, 0x85, 0xb1,
  0x51, 0xa5, 0xb5, 0x95, 0x11, 0x95, 0xb9, 0xbd, 0xa5, 0xcd, 0x95, 0x91,
  0x05, 0xb5, 0x89, 0xa5, 0x95, 0xb9, 0xd1, 0x3d, 0x8d, 0x8d, 0xb1, 0xd5,
  0xcd, 0xa5, 0xbd, 0xb9, 0x71, 0x49, 0x51, 0x05, 0x3d, 0xbd, 0x4c, 0xa1,
  0x85, 0x91, 0x95, 0xc9, 0xcd, 0xbd, 0x48, 0x51, 0x05, 0x3d, 0xb9, 0xa0,
  0xb1, 0xcd, 0xb1, 0xa5, 0x0d, 0x1a, 0x00, 0x9a, 0x00, 0x48, 0x48, 0x51,
  0x05, 0x3d, 0x0d, 0x2b, 0x00, 0xa0, 0x26, 0x6c, 0xc2, 0x21, 0x25, 0x15,
  0x96, 0x87, 0x94, 0x46, 0x47, 0x94, 0x36, 0x47, 0x17, 0xe6, 0x36, 0x56,
  0xf6, 0xe4, 0xd6, 0x94, 0x36, 0x37, 0xb7, 0x88, 0x01, 0xcc, 0x00, 0x00,
  0x00, 0x80, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x82, 0x41, 0xc0, 0x8f, 0x54,
  0x58, 0x1e, 0x52, 0x1a, 0x1d, 0x51, 0xda, 0x1c, 0x5d, 0x98, 0xdb, 0x58,
  0xd9, 0x93, 0x5b, 0x53, 0xda, 0xdc, 0x1c, 0x90, 0x14, 0x55, 0xd0, 0x13,
  0x10, 0xd0, 0x4c, 0x93, 0xd0, 0xb6, 0x05, 0xb8, 0x09, 0x9c, 0xd0, 0x89,
  0x9a, 0x78, 0x72, 0x22, 0x08, 0x00, 0x80, 0x59, 0x92, 0x9b, 0x5d, 0x18,
  0x5b, 0x1a, 0x59, 0xd0, 0xd3, 0xd0, 0x5b, 0x99, 0x99, 0x59, 0xda, 0x58,
  0x5a, 0x99, 0x1b, 0x9d, 0x55, 0x18, 0x5b, 0x5d, 0x19, 0xcb, 0x20, 0xe0,
  0x27, 0xc9, 0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0x2c, 0xe8, 0x69, 0xe8, 0xad,
  0xcc, 0xcc, 0x2c, 0x6d, 0x2c, 0xad, 0xcc, 0x8d, 0xce, 0x2a, 0x8c, 0xad,
  0xae, 0x0c, 0x48, 0x8a, 0x2a, 0xe8, 0x09, 0x08, 0x68, 0xa6, 0x49, 0x68,
  0xdb, 0x02, 0xdc, 0x04, 0x4f, 0xf4, 0x44, 0x4d, 0x40, 0x39, 0x11, 0x04,
  0x00, 0xc0, 0xe4, 0xec, 0x2b, 0xcd, 0xcd, 0x2a, 0x8c, 0xad, 0xae, 0x8c,
  0x10, 0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x99, 0x0c, 0x11, 0x8f, 0x19,
  0xdb, 0x5b, 0x18, 0x9d, 0xcf, 0x86, 0x00, 0x0d, 0x26, 0x41, 0x80, 0x00,
  0x16, 0x82, 0x07, 0x00, 0xa0, 0x00, 0x06, 0x00, 0x40, 0x00, 0x40, 0x58,
  0x00, 0xfc, 0x02, 0x7e, 0xce, 0xbe, 0xd2, 0xdc, 0xac, 0xc2, 0xd8, 0xea,
  0xca, 0x80, 0x80, 0x66, 0xac, 0x7e, 0x48, 0xa8, 0xca, 0xf0, 0xe8, 0xea,
  0xe4, 0xca, 0x64, 0x88, 0x80, 0x9a, 0x80, 0x80, 0x82, 0xb6, 0x2d, 0x80,
  0x7f, 0xfc, 0xc4, 0x58, 0x08, 0x9e, 0x58, 0x00, 0x01, 0x00, 0x30, 0x3a,
  0xfb, 0x7a, 0xab, 0xa3, 0x6b, 0x2a, 0x0b, 0x73, 0xb3, 0x0a, 0x93, 0x4b,
  0x0b, 0x73, 0x1b, 0x2b, 0xa3, 0x27, 0x75, 0x45, 0x55, 0x86, 0x47, 0x57,
  0x27, 0x57, 0x26, 0x43, 0xc4, 0x63, 0x57, 0x36, 0x46, 0xf7, 0x26, 0xc7,
  0x63, 0xc6, 0xf6, 0x16, 0x46, 0xc7, 0x02, 0x22, 0xe3, 0x03, 0xe2, 0xb3,
  0x6c, 0x00, 0x1c, 0x35, 0xd8, 0x10, 0x9c, 0xc5, 0x24, 0x08, 0x10, 0xcc,
  0x42, 0xf8, 0x00, 0x00, 0x14, 0xc0, 0x00, 0x00, 0x08, 0x00, 0x40, 0x0b,
  0x80, 0x78, 0x10, 0xf0, 0x73, 0xf6, 0xf5, 0x56, 0x47, 0xd7, 0x54, 0x16,
  0xe6, 0x66, 0x15, 0x26, 0x97, 0x16, 0xe6, 0x36, 0x56, 0x06, 0x04, 0x34,
  0x63, 0xf5, 0x43, 0x22, 0x75, 0x45, 0x55, 0x86, 0x47, 0x57, 0x27, 0x57,
  0x26, 0x43, 0x04, 0x64, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46, 0xf7, 0x26,
  0x07, 0xd4, 0x44, 0x02, 0x13, 0x03, 0x04, 0x04, 0x04, 0x14, 0xb4, 0x6d,
  0x01, 0xfc, 0xa3, 0x2c, 0xd4, 0x42, 0xf8, 0xd2, 0x02, 0x08, 0x00, 0x80,
  0xcb, 0xd9, 0xd7, 0x5b, 0x1d, 0x1d, 0x51, 0x99, 0x58, 0xdd, 0x59, 0x0c,
  0x3d, 0xa9, 0x2b, 0xaa, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0x32, 0x19, 0x22,
  0x1e, 0xbb, 0xb2, 0x31, 0xba, 0x37, 0x39, 0x1e, 0x33, 0xb6, 0xb7, 0x30,
  0x3a, 0x16, 0x10, 0x1a, 0x1f, 0x10, 0x9f, 0x65, 0x03, 0xe0, 0xbc, 0xc4,
  0x86, 0xc0, 0x2d, 0x26, 0x41, 0x80, 0xd0, 0x16, 0x42, 0x18, 0x00, 0x00,
  0x48, 0x80, 0x01, 0x00, 0x10, 0x00, 0xf0, 0x16, 0x00, 0xe5, 0x20, 0xe0,
  0xe7, 0xec, 0xeb, 0xad, 0x8e, 0x8e, 0xa8, 0x4c, 0xac, 0xee, 0x2c, 0x06,
  0x08, 0x68, 0xc6, 0xea, 0x87, 0x44, 0xea, 0x8a, 0xaa, 0x0c, 0x8f, 0xae,
  0x4e, 0xae, 0x4c, 0x86, 0x08, 0xc8, 0xea, 0x87, 0xc4, 0xae, 0x6c, 0x8c,
  0xee, 0x4d, 0x0e, 0xa8, 0x89, 0x04, 0x66, 0x06, 0x08, 0x08, 0x08, 0x28,
  0x68, 0xdb, 0x02, 0xf8, 0x07, 0x5b, 0xc4, 0x85, 0x10, 0x06, 0x70, 0x01,
  0x04, 0x00, 0xc0, 0xe5, 0xec, 0xeb, 0xad, 0x8e, 0x8e, 0xa8, 0x4c, 0xac,
  0xee, 0x4c, 0x86, 0x72, 0x10, 0xf0, 0x73, 0xf6, 0xf5, 0x56, 0x47, 0x47,
  0x54, 0x26, 0x56, 0x77, 0x26, 0x03, 0x04, 0x34, 0x63, 0xf5, 0x43, 0x22,
  0x75, 0x45, 0x55, 0x86, 0x47, 0x57, 0x27, 0x57, 0x26, 0x43, 0x04, 0x64,
  0xf5, 0x43, 0x62, 0x57, 0x36, 0x46, 0xf7, 0x26, 0x07, 0xd4, 0x44, 0x02,
  0x33, 0x03, 0x04, 0x04, 0x04, 0x14, 0xb4, 0x6d, 0x01, 0xfc, 0x63, 0x2e,
  0xe8, 0x42, 0x10, 0x03, 0xb8, 0x00, 0x02, 0x00, 0xa0, 0x30, 0x26, 0xc6,
  0x39, 0x18, 0x7a, 0x73, 0x9b, 0xa3, 0x0b, 0x73, 0xa3, 0x13, 0xaa, 0x33,
  0x33, 0x2b, 0x93, 0xe3, 0x19, 0x0a, 0x63, 0x1b, 0xab, 0x63, 0x0b, 0xa3,
  0x2b, 0x6b, 0x2a, 0x0b, 0x73, 0xb3, 0x0a, 0x93, 0x4b, 0x0b, 0x73, 0x1b,
  0x2b, 0x1b, 0x7a, 0x73, 0x9b, 0xa3, 0x0b, 0x73, 0xa3, 0x13, 0xaa, 0x33,
  0x33, 0x2b, 0x93, 0xf3, 0x61, 0x40, 0xc5, 0x31, 0x18, 0x0a, 0x63, 0x1b,
  0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x6b, 0x2a, 0x0b, 0x73, 0xb3, 0x0a, 0x93,
  0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x1b, 0x7a, 0x73, 0x9b, 0xa3, 0x0b, 0x73,
  0xa3, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93, 0xa3, 0x42, 0x57, 0x86, 0x47,
  0x57, 0x27, 0x57, 0x46, 0x94, 0xd6, 0xc6, 0x03, 0xab, 0xa9, 0x2a, 0xc9,
  0x89, 0x4a, 0x66, 0x11, 0x03, 0x58, 0x7b, 0xd1, 0x0b, 0x15, 0x70, 0x01,
  0x00, 0x00, 0x00, 0x8b, 0x18, 0xa0, 0xd1, 0x0b, 0x5c, 0xc0, 0x89, 0xd6,
  0xe0, 0x0b, 0x50, 0x00, 0x03, 0x00, 0x00, 0xb8, 0xac, 0x95, 0xc9, 0xb9,
  0x95, 0xb1, 0x5d, 0xa5, 0x91, 0xd1, 0xa1, 0x2d, 0x62, 0x80, 0xc6, 0x2f,
  0x70, 0x21, 0x27, 0x5a, 0xe3, 0x17, 0xc0, 0x00, 0x0c, 0x40, 0x01, 0x00,
  0xc8, 0xac, 0x95, 0xc9, 0xb9, 0x95, 0xb1, 0x49, 0x85, 0x91, 0xa5, 0xd5,
  0xcd, 0x2d, 0x62, 0x80, 0x06, 0x34, 0x70, 0x41, 0x27, 0x5a, 0xe3, 0x17,
  0xc0, 0x00, 0x0c, 0xc0, 0x01, 0x00, 0x68, 0x91, 0xbd, 0x0d, 0xa1, 0x95,
  0x8d, 0xad, 0x95, 0xc9, 0x89, 0xbd, 0x85, 0xc9, 0x91, 0x4d, 0x85, 0xb5,
  0xc1, 0xb1, 0xa5, 0xb9, 0x9d, 0x91, 0x10, 0x7a, 0x7a, 0x62, 0x5a, 0xc4,
  0x00, 0xd6, 0x68, 0xf4, 0x02, 0x06, 0x48, 0x00, 0x00, 0x00, 0xc0, 0x22,
  0x06, 0x68, 0x44, 0x03, 0x17, 0x78, 0xa2, 0x35, 0x48, 0x03, 0x0c, 0xc0,
  0x00, 0x24, 0x00, 0x80, 0x53, 0x98, 0x5c, 0x59, 0x91, 0x5d, 0x99, 0x1b,
  0x54, 0x1a, 0x5e, 0x19, 0xdb, 0x5c, 0xd0, 0x18, 0x5d, 0x9a, 0x5d, 0xd9,
  0x22, 0x06, 0x68, 0x4c, 0x03, 0x17, 0x7a, 0xa2, 0x35, 0x48, 0x03, 0x0c,
  0xc0, 0x00, 0x2c, 0x00, 0x80, 0x0a, 0x5c, 0x1a, 0x5e, 0x19, 0xdb, 0x14,
  0x5d, 0x19, 0x5c, 0xd6, 0x22, 0x06, 0x68, 0x50, 0x03, 0x17, 0x7c, 0xa2,
  0x35, 0x7e, 0x01, 0x0c, 0xc0, 0x00, 0x34, 0x00, 0x80, 0x07, 0x5c, 0x18,
  0x19, 0x59, 0x9a, 0xdb, 0xd9, 0x22, 0x06, 0x68, 0x54, 0x03, 0x17, 0x7e,
  0xa2, 0x35, 0xc8, 0x00, 0x0c, 0xc0, 0x00, 0x3c, 0x00, 0x60, 0xc3, 0xd1,
  0x17, 0x7f, 0x11, 0x1a, 0xa5, 0x71, 0x1a, 0xa9, 0xb1, 0x1a, 0x93, 0x20,
  0x60, 0xca, 0x0b, 0x5c, 0xb0, 0x09, 0x00, 0x00, 0x11, 0x30, 0x00, 0x00,
  0xd6, 0x00, 0x00, 0x00, 0x58, 0x36, 0x00, 0x78, 0xd1, 0x1a, 0x1b, 0x02,
  0xd7, 0x98, 0x04, 0x01, 0xd3, 0x5d, 0x08, 0x64, 0x00, 0x00, 0x60, 0x00,
  0x06, 0x00, 0x40, 0x00, 0xc0, 0x6b, 0x00, 0x14, 0x85, 0x80, 0x9f, 0x31,
  0x31, 0x20, 0xa0, 0x99, 0xaa, 0x1f, 0x92, 0xa1, 0x37, 0xb7, 0x39, 0xba,
  0x30, 0x37, 0x3a, 0xa1, 0x3a, 0x33, 0xb3, 0x32, 0x39, 0xa0, 0xaa, 0xa1,
  0x30, 0xb6, 0xb1, 0x3a, 0xb6, 0x30, 0xba, 0xb2, 0xa6, 0xb2, 0x30, 0x37,
  0xab, 0x30, 0xb9, 0xb4, 0x30, 0xb7, 0xb1, 0xb2, 0xa1, 0x37, 0xb7, 0x39,
  0xba, 0x30, 0x37, 0x3a, 0xa1, 0x3a, 0x33, 0xb3, 0x32, 0x39, 0x20, 0x20,
  0x20, 0xa0, 0xa0, 0x6d, 0x0b, 0xe0, 0x1f, 0x76, 0x11, 0x1b, 0x02, 0x19,
  0xc0, 0x06, 0x10, 0x00, 0x00, 0x91, 0x23, 0xb9, 0xb7, 0x3a, 0x38, 0xa2,
  0xb4, 0xb6, 0x45, 0x0c, 0x60, 0x06, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00,
  0x00, 0xb0, 0x6d, 0x01, 0xf0, 0x60, 0x36, 0x00, 0x21, 0x0f, 0x68, 0x23,
  0x08, 0x00, 0x80, 0x96, 0x53, 0x5d, 0x9b, 0xd4, 0xdb, 0xdd, 0x1c, 0xd5,
  0x1b, 0xd3, 0x5b, 0x18, 0x19, 0x54, 0x99, 0x1c, 0x15, 0x9a, 0x5c, 0x59,
  0x18, 0xd9, 0x22, 0x06, 0x30, 0x03, 0x00, 0x00, 0x80, 0x37, 0x00, 0x00,
  0x00, 0x00, 0xb6, 0x2d, 0x00, 0x1e, 0xd8, 0x06, 0x20, 0x84, 0xc2, 0x6d,
  0x04, 0x01, 0x00, 0x30, 0x12, 0x0a, 0x1b, 0x5b, 0x3b, 0x93, 0x7b, 0xab,
  0x73, 0x23, 0x1b, 0x7a, 0x63, 0x7b, 0x93, 0x73, 0x89, 0xa1, 0xe0, 0x12,
  0xb3, 0x88, 0x01, 0x1a, 0xdd, 0x00, 0x00, 0x40, 0x26, 0xc0, 0x80, 0x00,
  0x03, 0x00, 0xd8, 0xb6, 0x00, 0xfe, 0x91, 0x1b, 0xb9, 0x81, 0x0b, 0x60,
  0xb4, 0x1b, 0x40, 0x00, 0x00, 0x54, 0x8e, 0xe4, 0xde, 0xea, 0xe0, 0x88,
  0xd2, 0xda, 0x5c, 0x62, 0x16, 0x31, 0x40, 0xa3, 0x1b, 0x00, 0x00, 0xd0,
  0x06, 0x18, 0x10, 0x60, 0x00, 0x00, 0x0c, 0x85, 0x80, 0x9f, 0x23, 0xb9,
  0xb7, 0x3a, 0x38, 0xa2, 0xb4, 0x36, 0xa0, 0x9f, 0x98, 0x9f, 0x1f, 0xa3,
  0x34, 0x36, 0xba, 0x32, 0x39, 0xa4, 0x37, 0xb9, 0x34, 0xbd, 0x37, 0x37,
  0xba, 0x30, 0x36, 0xb6, 0x3c, 0x20, 0xa0, 0xac, 0x20, 0x2c, 0xab, 0x1f,
  0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37, 0x39, 0xa0, 0x24, 0x12, 0x98, 0x18,
  0x20, 0xa0, 0x24, 0x20, 0x2d, 0xa0, 0x19, 0x2b, 0x19, 0x20, 0x21, 0x97,
  0x98, 0x6d, 0x0b, 0x80, 0x07, 0xbd, 0xf1, 0x1b, 0x42, 0x1e, 0xf8, 0x06,
  0x10, 0x00, 0x00, 0x23, 0xa1, 0xb0, 0xb1, 0xb5, 0x33, 0xb9, 0xb7, 0x3a,
  0x37, 0xb2, 0xa1, 0x37, 0xb6, 0x37, 0x39, 0x17, 0x19, 0x0a, 0x2e, 0x32,
  0x8b, 0x18, 0xa0, 0x11, 0x0f, 0x00, 0x00, 0x64, 0x02, 0x0c, 0x08, 0x50,
  0x00, 0x80, 0x6d, 0x0b, 0xe0, 0x1f, 0xe1, 0x11, 0x1e, 0xb8, 0x00, 0x46,
  0xe3, 0x01, 0x04, 0x00, 0xc0, 0x48, 0x28, 0x6c, 0x6c, 0xed, 0x4c, 0xee,
  0xad, 0xce, 0x8d, 0x6c, 0xe8, 0x8d, 0xed, 0x4d, 0xce, 0x05, 0x86, 0x82,
  0x0b, 0xcc, 0x22, 0x06, 0x68, 0xcc, 0x03, 0x00, 0x00, 0x99, 0x00, 0x03,
  0x02, 0x00, 0x80, 0x6d, 0x0b, 0xe0, 0x1f, 0xe5, 0x51, 0x1e, 0xb8, 0x00,
  0x46, 0xe7, 0x01, 0x04, 0x00, 0xc0, 0x48, 0x28, 0x6c, 0x6c, 0xed, 0x4c,
  0xee, 0xad, 0xce, 0x8d, 0x6c, 0xe8, 0x8d, 0xed, 0x4d, 0xce, 0x65, 0x86,
  0x82, 0xcb, 0xcc, 0x22, 0x06, 0x68, 0xd4, 0x03, 0x00, 0x00, 0x99, 0x00,
  0x03, 0x02, 0x1c, 0x00, 0x60, 0xdb, 0x02, 0xf8, 0x47, 0x7a, 0xa4, 0x07,
  0x2e, 0x80, 0xd1, 0x7a, 0x00, 0x01, 0x00, 0x50, 0x39, 0x92, 0x7b, 0xab,
  0x83, 0x23, 0x4a, 0x6b, 0x73, 0x81, 0x59, 0xc4, 0x00, 0x8d, 0x79, 0x00,
  0x00, 0x40, 0x1b, 0x60, 0x40, 0x00, 0x00, 0xc0, 0x50, 0x08, 0xf8, 0x39,
  0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a, 0x6b, 0x03, 0xfa, 0x89, 0xf9, 0xf9,
  0x31, 0x4a, 0x63, 0xa3, 0x2b, 0x93, 0x43, 0x7a, 0x93, 0x4b, 0xd3, 0x7b,
  0x73, 0xa3, 0x0b, 0x63, 0x63, 0xcb, 0x03, 0x02, 0xca, 0x0a, 0xc2, 0xb2,
  0xfa, 0x21, 0xb1, 0x2b, 0x1b, 0xa3, 0x7b, 0x93, 0x03, 0x4a, 0x22, 0x81,
  0x89, 0x01, 0x02, 0x4a, 0x02, 0xd2, 0x02, 0x9a, 0xb1, 0x92, 0x01, 0x12,
  0x72, 0x81, 0xd9, 0xb6, 0x00, 0x78, 0xd0, 0x1e, 0xef, 0x21, 0xe4, 0x81,
  0x7b, 0x00, 0x01, 0x00, 0x90, 0x82, 0x0a, 0x1b, 0x5b, 0x2b, 0x23, 0x93,
  0x7a, 0xbb, 0x93, 0x2a, 0x9b, 0xab, 0x63, 0xa3, 0x1b, 0x0a, 0x1b, 0x43,
  0x2b, 0x5b, 0x33, 0x00, 0x10, 0xb0, 0x66, 0x00, 0x10, 0x60, 0x83, 0x20,
  0x1f, 0xf3, 0x31, 0x09, 0x02, 0x02, 0x00, 0x00, 0x80, 0x37, 0x00, 0x41,
  0x02, 0x0c, 0x00, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x98, 0x06, 0x01, 0x3f,
  0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73,
  0x75, 0x6c, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x40, 0x40, 0x33, 0x50,
  0x41, 0x59, 0x30, 0x37, 0x24, 0x24, 0x43, 0x41, 0x49, 0x41, 0x2e, 0x31,
  0x64, 0x69, 0x6d, 0x13, 0x04, 0x01, 0xd8, 0xb6, 0x00, 0xfe, 0x11, 0x1f,
  0xf6, 0x21, 0x9c, 0x41, 0x7d, 0x00, 0xc1, 0x7d, 0x00, 0x74, 0x9c, 0xea,
  0xda, 0xac, 0xc2, 0xd8, 0xea, 0xca, 0xe6, 0x86, 0xc2, 0xc6, 0xd0, 0xca,
  0x38, 0x06, 0x01, 0x3f, 0x4e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
  0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x40, 0x40, 0x33, 0x50, 0x41, 0x59,
  0x30, 0x37, 0x24, 0x24, 0x43, 0x41, 0x49, 0x41, 0x2e, 0x31, 0x64, 0x69,
  0x6d, 0x13, 0x04, 0x21, 0xd8, 0xb6, 0x00, 0xfe, 0x91, 0x1f, 0xfa, 0x21,
  0xa0, 0x41, 0x7d, 0x00, 0xc1, 0x7e, 0x00, 0x1b, 0x34, 0x71, 0x50, 0x87,
  0x76, 0x88, 0x87, 0x7a, 0xd8, 0x87, 0x7e, 0x00, 0x89, 0x99, 0xd8, 0x09,
  0x9f, 0x20, 0x8b, 0xb5, 0x90, 0x8b, 0xba, 0x90, 0x8d, 0xda, 0xc0, 0x0d,
  0xde, 0x00, 0x0f, 0xf2, 0x40, 0x0f, 0xf6, 0x80, 0x0f, 0xfc, 0xe0, 0x8f,
  0x51, 0x4f, 0x40, 0x08, 0x03, 0x00, 0x00, 0x40, 0x40, 0xb0, 0x81, 0x2d,
  0xf4, 0x07, 0x00, 0xb0, 0x21, 0xba, 0x0b, 0x93, 0x33, 0x03, 0xb1, 0x2a,
  0x93, 0x9b, 0x4b, 0x7b, 0x73, 0xdb, 0x30, 0x4c, 0xff, 0xc1, 0x12, 0x94,
  0x88, 0xca, 0xc4, 0xea, 0xce, 0x40, 0x92, 0xdc, 0xcc, 0xde, 0x40, 0xac,
  0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0x26, 0x08, 0x00, 0xb6, 0x61, 0x98,
  0x42, 0x44, 0x44, 0x36, 0x04, 0x03, 0xc5, 0x10, 0x79, 0x79, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x69, 0x50, 0x78, 0x79, 0x69,
  0x50, 0x78, 0x79, 0x01, 0x19, 0x7a, 0x83, 0xcb, 0x93, 0x4b, 0x3b, 0x43,
  0xa3, 0x03, 0x41, 0x19, 0x4b, 0x01, 0x69, 0x4a, 0x1b, 0x93, 0x7b, 0x9b,
  0x7b, 0x33, 0xa3, 0x73, 0x01, 0x09, 0x62, 0x63, 0x03, 0x91, 0x4b, 0x3b,
  0x43, 0xa3, 0x9b, 0x03, 0x91, 0x2b, 0x9b, 0x2b, 0x93, 0xb3, 0x2b, 0x23,
  0x73, 0x69, 0x50, 0x78, 0x79, 0x01, 0xa1, 0x42, 0x4b, 0x9b, 0x03, 0x19,
  0x7b, 0x23, 0x2b, 0x03, 0x49, 0x9b, 0x03, 0x61, 0x4b, 0x1b, 0x2b, 0x73,
  0x9b, 0x2b, 0x23, 0x03, 0xa9, 0x73, 0x23, 0x2b, 0x93, 0x03, 0xa1, 0x43,
  0x2b, 0x03, 0x69, 0x4a, 0xa2, 0x02, 0x61, 0x4a, 0x1b, 0x2b, 0x73, 0x9b,
  0x2b, 0x03, 0x41, 0x69, 0x4a, 0xa2, 0x4a, 0x71, 0x69, 0x50, 0x78, 0x79,
  0x01, 0xa1, 0x42, 0x4a, 0x9a, 0x02, 0x19, 0x7a, 0x22, 0x2a, 0x02, 0x49,
  0x9a, 0x02, 0x81, 0x92, 0x7a, 0xb2, 0x4a, 0x22, 0x2a, 0x22, 0x02, 0x51,
  0x09, 0x9a, 0x02, 0x49, 0x9a, 0x52, 0x01, 0xb9, 0x4a, 0xa2, 0x42, 0x7a,
  0xaa, 0xa2, 0x02, 0xb9, 0x0a, 0x92, 0x92, 0x0a, 0x72, 0xa2, 0xca, 0x02,
  0x79, 0x32, 0x6a, 0x50, 0x78, 0x79, 0x01, 0x09, 0x72, 0xca, 0x02, 0x59,
  0x4a, 0x72, 0x22, 0x62, 0x01, 0x29, 0x4a, 0xa2, 0x42, 0x2a, 0x92, 0x02,
  0x29, 0xc2, 0x82, 0x92, 0x2a, 0x9a, 0x9a, 0x02, 0x79, 0x92, 0x02, 0x49,
  0x6a, 0x82, 0x62, 0x4a, 0x2a, 0x22, 0x62, 0x01, 0x49, 0x72, 0x1a, 0x62,
  0xaa, 0x22, 0x4a, 0x72, 0x3a, 0x02, 0x09, 0x72, 0xca, 0x6a, 0x50, 0x78,
  0x79, 0x01, 0x49, 0x6a, 0x82, 0x62, 0x4a, 0x2a, 0x22, 0x02, 0xb9, 0x0a,
  0x92, 0x92, 0x0a, 0x72, 0xa2, 0x4a, 0x2a, 0x9a, 0x02, 0x79, 0x32, 0x02,
  0x31, 0x4a, 0xa2, 0x72, 0x2a, 0x9a, 0x9a, 0x02, 0x31, 0x7a, 0x92, 0x02,
  0x09, 0x02, 0x81, 0x0a, 0x92, 0xa2, 0x4a, 0x1a, 0xaa, 0x62, 0x0a, 0x92,
  0x6a, 0x50, 0x78, 0x79, 0x01, 0x81, 0xaa, 0x92, 0x82, 0x7a, 0x9a, 0x2a,
  0x62, 0x01, 0x69, 0x2a, 0x92, 0x1a, 0x42, 0x0a, 0x72, 0xa2, 0x0a, 0x12,
  0x4a, 0x62, 0x4a, 0xa2, 0xca, 0x62, 0x01, 0x79, 0x92, 0x02, 0x71, 0x7a,
  0x72, 0x6a, 0x49, 0x72, 0x32, 0x92, 0x4a, 0x72, 0x3a, 0x2a, 0x6a, 0x2a,
  0x72, 0xa2, 0x72, 0x69, 0x50, 0x78, 0x79, 0x69, 0x50, 0x78, 0x79, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x69, 0x50, 0x68, 0x50,
  0x78, 0x79, 0x01, 0x21, 0x2a, 0x9b, 0x1b, 0xd3, 0x01, 0x19, 0x0a, 0x63,
  0x1b, 0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x03, 0x61, 0x7a, 0x1b, 0x0b, 0x63,
  0x03, 0x69, 0x2a, 0x0b, 0x73, 0x03, 0x09, 0x73, 0x23, 0x03, 0xb1, 0x0a,
  0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x03, 0xb1, 0x4b, 0x0b, 0x03, 0x09,
  0x03, 0x99, 0x2b, 0x83, 0x0b, 0x93, 0x0b, 0x13, 0x63, 0x2b, 0x03, 0x59,
  0x2b, 0x93, 0x73, 0x2b, 0x63, 0x03, 0x09, 0x73, 0x23, 0x03, 0xa9, 0x9b,
  0x4b, 0x73, 0x3b, 0x03, 0xb9, 0x0b, 0xb3, 0x2b, 0x03, 0x49, 0x73, 0xa3,
  0x93, 0x4b, 0x73, 0x9b, 0x4b, 0x1b, 0x9b, 0x73, 0x69, 0x50, 0x78, 0x79,
  0x01, 0x91, 0x2a, 0x8b, 0xab, 0x4b, 0x93, 0x2b, 0x6b, 0x2b, 0x73, 0xa3,
  0x9b, 0xd3, 0x69, 0x50, 0x78, 0x79, 0x01, 0x01, 0x69, 0x01, 0xb9, 0x0a,
  0xb3, 0x2b, 0x03, 0x61, 0x0b, 0x73, 0x2b, 0x03, 0x99, 0x4b, 0xd3, 0x2b,
  0x03, 0x89, 0xb1, 0x01, 0x79, 0x93, 0x03, 0x41, 0x4b, 0x3b, 0x43, 0x2b,
  0x93, 0x73, 0x69, 0x50, 0x78, 0x79, 0x01, 0x01, 0x69, 0x01, 0xb9, 0x0a,
  0xb3, 0x2b, 0x93, 0x2a, 0x0b, 0x23, 0x63, 0x0a, 0x73, 0x2b, 0x0b, 0xa2,
  0x43, 0x49, 0x01, 0xb9, 0x4b, 0xa3, 0x43, 0x03, 0x09, 0x73, 0xcb, 0x03,
  0xa1, 0x7b, 0x03, 0x09, 0x73, 0xcb, 0x03, 0xa1, 0x7b, 0x03, 0xb9, 0x0b,
  0xb3, 0x2b, 0x03, 0x91, 0x2b, 0x0b, 0x23, 0x03, 0x61, 0x0b, 0x73, 0x2b,
  0x03, 0x99, 0xab, 0x83, 0x83, 0x7b, 0x93, 0xa3, 0x73, 0x69, 0x50, 0x78,
  0x79, 0x01, 0x99, 0xaa, 0x83, 0x83, 0x7b, 0x93, 0xa3, 0x9b, 0xd3, 0x69,
  0x50, 0x78, 0x79, 0x01, 0x01, 0x69, 0x01, 0xa9, 0x83, 0x03, 0xa1, 0x7b,
  0x03, 0xc9, 0xc1, 0xcb, 0x01, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x9b,
  0x73, 0x69, 0x50, 0x78, 0x79, 0x01, 0x01, 0x69, 0x01, 0x19, 0x43, 0x2b,
  0x1b, 0x5b, 0x2b, 0x93, 0x13, 0x7b, 0x0b, 0x93, 0x23, 0x03, 0x79, 0x72,
  0x7a, 0x79, 0x32, 0x32, 0x02, 0x49, 0x73, 0x83, 0xab, 0xa3, 0x73, 0x01,
  0x49, 0x32, 0x03, 0x29, 0x73, 0x0b, 0x13, 0x63, 0x2b, 0x23, 0x63, 0x01,
  0x79, 0xab, 0xa3, 0x83, 0xab, 0xa3, 0x9b, 0x03, 0x79, 0x73, 0x63, 0xcb,
  0x03, 0x31, 0x7b, 0x93, 0x03, 0x09, 0x1b, 0xa3, 0x4b, 0xb3, 0x2b, 0x03,
  0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x9b, 0x73, 0x69, 0x50, 0x78, 0x79, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x09, 0x1a, 0xa3, 0x4b, 0xb3, 0x2b, 0x03, 0x81,
  0x4b, 0xc3, 0x2b, 0x63, 0x03, 0x49, 0x9b, 0x03, 0x09, 0x03, 0x81, 0x4b,
  0xc3, 0x2b, 0x63, 0x03, 0x79, 0x73, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x19,
  0x43, 0x2b, 0x1b, 0x5b, 0x2b, 0x93, 0x13, 0x7b, 0x0b, 0x93, 0x23, 0x03,
  0x81, 0x0b, 0xa3, 0xa3, 0x2b, 0x93, 0x73, 0x03, 0x09, 0x73, 0x23, 0x03,
  0x41, 0x0b, 0x9b, 0x03, 0x09, 0x03, 0xb1, 0x0b, 0x63, 0x4b, 0x23, 0x03,
  0x79, 0x01, 0x69, 0x50, 0x78, 0x79, 0x01, 0x01, 0x01, 0x01, 0x01, 0x39,
  0x2b, 0x73, 0x2b, 0x93, 0x0b, 0xa3, 0x2b, 0x23, 0x03, 0xb1, 0x0b, 0x63,
  0xab, 0x2b, 0x03, 0x31, 0x7b, 0x93, 0x03, 0x49, 0xa3, 0x73, 0x01, 0xa1,
  0x42, 0x2b, 0x03, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x03, 0x49, 0x9b,
  0x03, 0x99, 0xa3, 0x93, 0x2b, 0xa3, 0x1b, 0x43, 0x2b, 0x23, 0x03, 0x49,
  0x73, 0x03, 0xc9, 0x03, 0x21, 0x4b, 0x93, 0x2b, 0x1b, 0xa3, 0x4b, 0x7b,
  0x73, 0x03, 0x69, 0x50, 0x78, 0x79, 0x01, 0x01, 0x01, 0x01, 0xa1, 0x7b,
  0x03, 0x99, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x03, 0x79, 0x73, 0x63, 0xcb,
  0x03, 0x31, 0x93, 0x7b, 0x6b, 0x03, 0x09, 0x1b, 0xa3, 0x4b, 0xb3, 0x2b,
  0x03, 0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x9b, 0x73, 0x01, 0x69, 0x50, 0x78,
  0x79, 0x01, 0x81, 0x2a, 0x93, 0x33, 0x7b, 0x93, 0x6b, 0x0b, 0x73, 0x1b,
  0x2b, 0xd3, 0x69, 0x50, 0x78, 0x79, 0x01, 0x69, 0x01, 0xa1, 0x59, 0x62,
  0x01, 0x91, 0x81, 0xc1, 0x81, 0xa1, 0x4a, 0x63, 0x01, 0xc9, 0xc1, 0xcb,
  0x01, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0xd3, 0x01, 0x81, 0x71, 0x99,
  0xb9, 0x69, 0x9b, 0x03, 0x41, 0x99, 0x2b, 0x83, 0x0b, 0x93, 0x0b, 0x13,
  0x63, 0x2b, 0x4b, 0x01, 0x69, 0xf1, 0x01, 0x81, 0x71, 0x99, 0x81, 0xa9,
  0x01, 0x69, 0x9b, 0x03, 0x41, 0x99, 0x2b, 0x83, 0x0b, 0x93, 0x0b, 0x13,
  0x63, 0x2b, 0x03, 0x59, 0x01, 0xb9, 0x0b, 0xb3, 0x2b, 0x03, 0x49, 0x73,
  0xa3, 0x93, 0x4b, 0x73, 0x9b, 0x4b, 0x1b, 0x9b, 0x4b, 0x69, 0x50, 0x68,
  0x50, 0x18, 0x21, 0x2b, 0x33, 0x4b, 0x73, 0x2b, 0x03, 0x41, 0x62, 0x9a,
  0x62, 0x6a, 0x50, 0x18, 0x49, 0x73, 0x1b, 0x63, 0xab, 0x23, 0x2b, 0x03,
  0x11, 0x91, 0x0a, 0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0x43,
  0x62, 0x9b, 0x63, 0x1b, 0x7a, 0x6b, 0x83, 0x0b, 0xa3, 0x73, 0x41, 0x13,
  0x69, 0x50, 0x18, 0x49, 0x73, 0x1b, 0x63, 0xab, 0x23, 0x2b, 0x03, 0x11,
  0x91, 0x0a, 0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0x9b, 0x42,
  0x0b, 0x23, 0x2b, 0x93, 0x43, 0x2a, 0x63, 0x83, 0x2b, 0x93, 0x73, 0x41,
  0x63, 0x9b, 0x63, 0x4b, 0x13, 0x69, 0x50, 0x18, 0x49, 0x73, 0x1b, 0x63,
  0xab, 0x23, 0x2b, 0x03, 0x11, 0x91, 0xa2, 0x0a, 0x7a, 0x7a, 0x99, 0x42,
  0x0b, 0x23, 0x2b, 0x93, 0x9b, 0x7b, 0x91, 0xa2, 0x0a, 0x7a, 0x72, 0x41,
  0x63, 0x9b, 0x63, 0x4b, 0x13, 0x69, 0x50, 0x68, 0x50, 0xa0, 0x2a, 0xc3,
  0xa3, 0xab, 0x93, 0x2b, 0x93, 0x21, 0xe2, 0x31, 0x63, 0x7b, 0x0b, 0xa3,
  0xf3, 0x01, 0x39, 0xfb, 0x4a, 0x73, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x03,
  0xd1, 0x01, 0x91, 0x2b, 0x3b, 0x4b, 0x9b, 0xa3, 0x2b, 0x93, 0x43, 0xa1,
  0x83, 0x49, 0xd9, 0x69, 0x50, 0x90, 0xba, 0xa2, 0x2a, 0xc3, 0xa3, 0xab,
  0x93, 0x2b, 0x93, 0x21, 0xe2, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x93, 0xf1,
  0x01, 0x39, 0xfb, 0x7a, 0xab, 0xa3, 0x6b, 0x2a, 0x0b, 0x73, 0xb3, 0x0a,
  0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x03, 0xd1, 0x01, 0x91, 0x2b, 0x3b,
  0x4b, 0x9b, 0xa3, 0x2b, 0x93, 0x43, 0xa9, 0x83, 0x49, 0xd9, 0x69, 0x50,
  0x68, 0x50, 0x90, 0xba, 0xa2, 0x2a, 0xc3, 0xa3, 0xab, 0x93, 0x2b, 0x93,
  0x21, 0xe2, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0xa3, 0xf1, 0x01, 0x39, 0xfb,
  0x7a, 0xab, 0xa3, 0x23, 0x2a, 0x13, 0xab, 0x3b, 0x8b, 0x01, 0xd1, 0x01,
  0x91, 0x2b, 0x3b, 0x4b, 0x9b, 0xa3, 0x2b, 0x93, 0x43, 0xa9, 0x9b, 0x49,
  0xd9, 0x69, 0x50, 0x90, 0xba, 0xa2, 0x2a, 0xc3, 0xa3, 0xab, 0x93, 0x2b,
  0x93, 0x21, 0xe2, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0xa3, 0xf1, 0x01, 0x39,
  0xfb, 0x7a, 0xab, 0xa3, 0x23, 0x2a, 0x13, 0xab, 0x3b, 0x93, 0x01, 0xd1,
  0x01, 0x91, 0x2b, 0x3b, 0x4b, 0x9b, 0xa3, 0x2b, 0x93, 0x43, 0xa9, 0xa3,
  0x49, 0xd9, 0x69, 0x50, 0x68, 0x50, 0x18, 0x7a, 0x73, 0x9b, 0xa3, 0x0b,
  0x73, 0xa3, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93, 0xe3, 0x19, 0x0a, 0x63,
  0x1b, 0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x6b, 0x2a, 0x0b, 0x73, 0xb3, 0x0a,
  0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x1b, 0x7a, 0x73, 0x9b, 0xa3, 0x0b,
  0x73, 0xa3, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93, 0xf3, 0x01, 0x19, 0x13,
  0xd3, 0x01, 0x91, 0x2b, 0x3b, 0x4b, 0x9b, 0xa3, 0x2b, 0x93, 0x43, 0x11,
  0x83, 0x49, 0xd9, 0x69, 0x50, 0x68, 0x50, 0x78, 0x79, 0x01, 0x39, 0x92,
  0x7b, 0xab, 0x83, 0x03, 0x99, 0x43, 0x0b, 0x93, 0x2b, 0x23, 0x03, 0x69,
  0x2b, 0x6b, 0x7b, 0x93, 0xcb, 0x03, 0x19, 0x0b, 0x1b, 0x43, 0x2b, 0x03,
  0x31, 0x7b, 0x93, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x91, 0x7b, 0xbb, 0x03,
  0x09, 0x3b, 0x3b, 0x93, 0x2b, 0x3b, 0x0b, 0xa3, 0x2b, 0x23, 0x03, 0x91,
  0x2b, 0x9b, 0xab, 0x63, 0xa3, 0x9b, 0x73, 0x69, 0x50, 0x38, 0x93, 0x7b,
  0xab, 0x83, 0x9b, 0x43, 0x0b, 0x93, 0x2b, 0x23, 0x03, 0xa9, 0x4b, 0x73,
  0xa3, 0x03, 0x81, 0x0a, 0x1b, 0x5b, 0x2b, 0x23, 0x93, 0x7a, 0xbb, 0x93,
  0x2a, 0x9b, 0xab, 0x63, 0xa3, 0x1b, 0x0a, 0x1b, 0x43, 0x2b, 0xdb, 0x8a,
  0xb1, 0xe9, 0xda, 0xc2, 0xe9, 0xda, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x89, 0xb1, 0x11,
  0x4b, 0xa3, 0x03, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0xb1, 0x0b, 0x63,
  0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x63, 0x01, 0x99, 0x8b, 0xab, 0x0b, 0x93,
  0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x73, 0x69,
  0x50, 0x38, 0x93, 0x7b, 0xab, 0x83, 0x9b, 0x43, 0x0b, 0x93, 0x2b, 0x23,
  0x03, 0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x71, 0xaa, 0x6b, 0xb3, 0x0a, 0x63,
  0xab, 0x2b, 0x9b, 0x1b, 0x0a, 0x1b, 0x43, 0x2b, 0xdb, 0x8a, 0xb1, 0xe9,
  0xda, 0xc2, 0xe9, 0xda, 0x01, 0x69, 0x50, 0x68, 0x50, 0x68, 0x50, 0x78,
  0x79, 0x01, 0x09, 0x22, 0x53, 0xab, 0x9b, 0xa3, 0x03, 0x09, 0x73, 0x03,
  0x49, 0x73, 0x23, 0x2b, 0xc3, 0x03, 0xa1, 0x7b, 0x03, 0x09, 0x03, 0x81,
  0x4b, 0xc3, 0x2b, 0x63, 0x03, 0xa1, 0x43, 0x0b, 0xa3, 0x03, 0x41, 0x0b,
  0x23, 0x03, 0x09, 0x03, 0xb1, 0x0b, 0x63, 0x4b, 0x23, 0x03, 0xb1, 0x0b,
  0x63, 0xab, 0x2b, 0x03, 0x39, 0x2b, 0x73, 0x2b, 0x93, 0x0b, 0xa3, 0x2b,
  0x23, 0x03, 0x31, 0x7b, 0x93, 0x03, 0x49, 0xa3, 0x73, 0x69, 0x50, 0x78,
  0x79, 0x01, 0x49, 0x72, 0x0b, 0x1b, 0xa3, 0x4b, 0xb3, 0x2b, 0x03, 0x81,
  0x4b, 0xc3, 0x2b, 0x63, 0x03, 0x49, 0x73, 0x23, 0x4b, 0x1b, 0x2b, 0x9b,
  0x03, 0x39, 0x2b, 0xa3, 0x03, 0x49, 0x73, 0x1b, 0x93, 0x2b, 0x0b, 0x9b,
  0x2b, 0x23, 0x03, 0x11, 0xcb, 0x03, 0x89, 0x01, 0x49, 0x73, 0x03, 0xa1,
  0x43, 0x2b, 0x03, 0xc9, 0x03, 0x21, 0x4b, 0x93, 0x2b, 0x1b, 0xa3, 0x4b,
  0x7b, 0x73, 0x73, 0x69, 0x50, 0x48, 0x73, 0xa3, 0x93, 0x01, 0x39, 0x2a,
  0xa3, 0x0b, 0x1a, 0xa3, 0x4b, 0xb3, 0x2b, 0x83, 0x4a, 0xc3, 0x2b, 0x63,
  0x4b, 0x72, 0x23, 0x2b, 0xc3, 0x43, 0x49, 0x73, 0xa3, 0x93, 0x01, 0x81,
  0x4b, 0xc3, 0x2b, 0x63, 0x4b, 0x69, 0x50, 0xd8, 0x6b, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x11, 0x7b, 0x7b, 0x63, 0x03, 0x49, 0x9b, 0x2b, 0xb2, 0x2b,
  0x73, 0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x03, 0xe9, 0x01, 0x41, 0x41, 0x81,
  0x4b, 0xc3, 0x2b, 0x63, 0x73, 0xc1, 0x03, 0x59, 0x01, 0x81, 0x4b, 0xc3,
  0x2b, 0x63, 0x73, 0xc9, 0x4b, 0x01, 0x31, 0x01, 0x89, 0x49, 0x01, 0xe9,
  0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x91, 0x2b,
  0xa3, 0xab, 0x93, 0x73, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x19, 0x13, 0x73, 0x21, 0x7b, 0x1b, 0x42, 0x2b, 0x1b, 0x5b,
  0x2b, 0x93, 0x13, 0x7b, 0x0b, 0x93, 0x23, 0x9b, 0x0a, 0x6b, 0x83, 0x63,
  0x4b, 0x73, 0x3b, 0x03, 0x31, 0x31, 0x01, 0x19, 0x13, 0x73, 0x09, 0x93,
  0x2b, 0x2b, 0xb2, 0x2b, 0x73, 0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x9b, 0x0b,
  0x1a, 0xa3, 0x4b, 0xb3, 0x2b, 0x03, 0x09, 0xe9, 0x01, 0x49, 0x9b, 0x2b,
  0xb2, 0x2b, 0x73, 0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x6b, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf9, 0x01, 0x81, 0x4b, 0xc3, 0x2b,
  0x63, 0x03, 0x59, 0x01, 0x49, 0x73, 0xa3, 0x93, 0x41, 0x81, 0x61, 0x01,
  0x89, 0x49, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0xd1, 0x01, 0x81, 0x4b, 0xc3, 0x2b, 0x63, 0xdb, 0x69, 0x50, 0xe8, 0x6b,
  0x50, 0x78, 0x79, 0x01, 0x61, 0x7a, 0x0b, 0x23, 0x03, 0xa9, 0x83, 0x03,
  0xa1, 0x7b, 0x03, 0x89, 0xb1, 0xc1, 0x8b, 0xb1, 0x01, 0x81, 0x4b, 0xc3,
  0x2b, 0x63, 0x9b, 0x03, 0x09, 0x73, 0x23, 0x03, 0x31, 0x4b, 0x63, 0xa3,
  0x2b, 0x93, 0x03, 0xa1, 0x43, 0x2b, 0x6b, 0x03, 0x41, 0x7b, 0x93, 0x4b,
  0xd3, 0x7b, 0x73, 0xa3, 0x0b, 0x63, 0x63, 0xcb, 0x73, 0x69, 0x50, 0x78,
  0x79, 0x01, 0xa1, 0x42, 0x2b, 0x03, 0x79, 0xab, 0xa3, 0x83, 0xab, 0xa3,
  0x03, 0x49, 0x9b, 0x03, 0x19, 0x0b, 0x1b, 0x43, 0x2b, 0x23, 0x03, 0x49,
  0x73, 0x03, 0x99, 0x42, 0x0b, 0x93, 0x2b, 0x23, 0x03, 0x69, 0x2a, 0x6b,
  0x7b, 0x93, 0xcb, 0x03, 0x09, 0x73, 0x23, 0x03, 0x19, 0x7b, 0x73, 0xa3,
  0x0b, 0x4b, 0x73, 0x9b, 0x03, 0x71, 0xaa, 0x6b, 0x93, 0x7a, 0xbb, 0x9b,
  0x03, 0xc1, 0x03, 0xc1, 0x01, 0x91, 0x2b, 0x9b, 0xab, 0x63, 0xa3, 0x9b,
  0x73, 0x69, 0x50, 0xb0, 0x7b, 0x4b, 0x23, 0x03, 0x31, 0x4a, 0x63, 0xa3,
  0x2b, 0x93, 0x43, 0x7a, 0x93, 0x4b, 0xd3, 0x7b, 0x73, 0xa3, 0x0b, 0x63,
  0x63, 0xcb, 0x43, 0x49, 0x73, 0x03, 0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x01,
  0x39, 0x4a, 0x23, 0x63, 0x01, 0x49, 0x73, 0x03, 0xa9, 0x4b, 0x73, 0xa3,
  0x03, 0x39, 0x4a, 0x4a, 0x69, 0x50, 0xd8, 0x6b, 0x50, 0x00, 0x01, 0x01,
  0x01, 0x19, 0x7b, 0x73, 0x9b, 0xa3, 0x03, 0xa9, 0x4b, 0x73, 0xa3, 0x93,
  0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a, 0x6b, 0x03, 0xe9, 0x01,
  0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x41, 0xc1, 0x61, 0x01, 0xc1, 0x49, 0xd9,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x19, 0x7b, 0x73, 0x9b, 0xa3, 0x03,
  0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x71, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab,
  0x2b, 0x9b, 0xa3, 0x7a, 0x63, 0x7a, 0x0b, 0x23, 0x83, 0x2a, 0x93, 0x93,
  0x7a, 0xbb, 0x7b, 0x92, 0x1b, 0x7a, 0x63, 0xab, 0x6b, 0x73, 0x03, 0xe9,
  0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a, 0x6b, 0x73, 0xc1, 0x03,
  0x59, 0x01, 0x41, 0x19, 0x13, 0x73, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63,
  0xbb, 0x4a, 0x23, 0xa3, 0x43, 0x03, 0x69, 0x01, 0x89, 0x49, 0xd9, 0x69,
  0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x81, 0x92,
  0x7b, 0x1b, 0x2b, 0x9b, 0x9b, 0x2b, 0x9b, 0x03, 0xa1, 0x43, 0x2b, 0x03,
  0xa1, 0x43, 0x93, 0x2b, 0x0b, 0x23, 0x03, 0x39, 0x93, 0x7b, 0xab, 0x83,
  0x03, 0x09, 0x9b, 0x03, 0x91, 0x7b, 0xbb, 0x6b, 0x69, 0x0b, 0x53, 0x7b,
  0x93, 0x03, 0xa1, 0xc1, 0x8b, 0xb1, 0x61, 0x01, 0xb9, 0x43, 0x2b, 0x93,
  0x2b, 0x03, 0x29, 0x0b, 0x1b, 0x43, 0x03, 0x99, 0xab, 0x13, 0x03, 0x39,
  0x93, 0x7b, 0xab, 0x83, 0x03, 0x79, 0x33, 0x03, 0x89, 0xb1, 0x01, 0xa1,
  0x43, 0x93, 0x2b, 0x0b, 0x23, 0x9b, 0x03, 0x81, 0x93, 0x7b, 0x1b, 0x2b,
  0x9b, 0x9b, 0x2b, 0x9b, 0x03, 0x79, 0x73, 0x2b, 0x03, 0x91, 0x7b, 0xbb,
  0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x29, 0x0a,
  0x1b, 0x43, 0x03, 0xa1, 0x43, 0x93, 0x2b, 0x0b, 0x23, 0x03, 0x61, 0x7b,
  0x0b, 0x23, 0x9b, 0x03, 0xa9, 0x83, 0x03, 0xa1, 0x7b, 0x03, 0xa1, 0x01,
  0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x9b, 0x63, 0x01, 0xb9, 0x4b, 0xa3, 0x43,
  0x03, 0xa1, 0x43, 0x2b, 0x03, 0x99, 0xab, 0x13, 0x03, 0x39, 0x93, 0x7b,
  0xab, 0x83, 0x9b, 0x03, 0x61, 0x7b, 0x0b, 0x23, 0x4b, 0x73, 0x3b, 0x03,
  0x91, 0x7b, 0xbb, 0x9b, 0x03, 0x49, 0x73, 0xa3, 0x2b, 0x93, 0x63, 0x2b,
  0x0b, 0xb3, 0x2b, 0x23, 0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x79,
  0x79, 0x01, 0x61, 0x7a, 0x0b, 0x23, 0x9b, 0x03, 0xa9, 0x83, 0x03, 0xa1,
  0x7b, 0x03, 0xa1, 0xc1, 0x8b, 0xb1, 0xc1, 0xa3, 0x01, 0xe9, 0xe9, 0x01,
  0x91, 0xa9, 0xb1, 0x01, 0x49, 0x73, 0x83, 0xab, 0xa3, 0x03, 0xb1, 0x0b,
  0x63, 0xab, 0x2b, 0x9b, 0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0xa9,
  0x4b, 0x73, 0xa3, 0x93, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b,
  0xb1, 0xf9, 0x92, 0x7b, 0xbb, 0x83, 0x01, 0xe9, 0x01, 0xa9, 0x4b, 0x73,
  0xa3, 0x93, 0x41, 0x39, 0x4a, 0x02, 0x29, 0x01, 0x89, 0xb1, 0x61, 0x01,
  0x39, 0x4a, 0x02, 0x79, 0x01, 0x89, 0xb1, 0x49, 0xd9, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x19, 0x7b, 0x73, 0x9b, 0xa3, 0x03, 0x49, 0x73, 0xa3,
  0x93, 0x01, 0x59, 0x2a, 0x93, 0x73, 0x2b, 0x63, 0x13, 0x0a, 0x9b, 0x2b,
  0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x03, 0xe9, 0x01, 0x41, 0x39, 0x4a, 0x23,
  0x03, 0x51, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a, 0x6b, 0x03,
  0x69, 0x01, 0x49, 0x73, 0xa3, 0x43, 0x19, 0x13, 0x73, 0x59, 0x2b, 0x93,
  0x73, 0x2b, 0x63, 0x93, 0x0a, 0x23, 0x4b, 0xab, 0x9b, 0x4b, 0x49, 0x01,
  0x51, 0x01, 0x49, 0x73, 0xa3, 0x93, 0x41, 0x89, 0x61, 0x01, 0x19, 0x13,
  0x73, 0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x9b, 0xa2, 0x2b, 0x83, 0xcb, 0x4a,
  0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x19, 0x7b, 0x73, 0x9b, 0xa3,
  0x03, 0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x71, 0xaa, 0x6b, 0x93, 0x7a, 0xbb,
  0x9b, 0xa3, 0x7a, 0x63, 0x7a, 0x0b, 0x23, 0x83, 0x2a, 0x93, 0xa3, 0x42,
  0x93, 0x2b, 0x0b, 0x23, 0x03, 0xe9, 0x01, 0xa1, 0xd9, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x19, 0x7b, 0x73, 0x9b, 0xa3, 0x03, 0xa9, 0x4b, 0x73,
  0xa3, 0x03, 0x91, 0x7a, 0xbb, 0xfb, 0x12, 0x0a, 0x9b, 0x2b, 0xbb, 0x0a,
  0xb3, 0x2b, 0x63, 0x0a, 0x73, 0x2b, 0x4b, 0x72, 0x23, 0x2b, 0xc3, 0x03,
  0xe9, 0x01, 0x41, 0xb9, 0x0a, 0xb3, 0x2b, 0x3b, 0x2a, 0xa3, 0x63, 0x0a,
  0x73, 0x2b, 0x4b, 0x72, 0x23, 0x2b, 0xc3, 0x43, 0x49, 0x01, 0x79, 0x01,
  0x89, 0xb1, 0x49, 0x01, 0x51, 0x01, 0x89, 0xb1, 0xd9, 0x69, 0x50, 0x68,
  0x50, 0x00, 0x01, 0x01, 0x01, 0xd9, 0xaa, 0x73, 0x93, 0x7b, 0x63, 0x63,
  0xeb, 0x6a, 0x50, 0x00, 0x01, 0x01, 0x01, 0x31, 0x7b, 0x93, 0x03, 0x41,
  0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x49, 0x03, 0xe9, 0x01, 0x81, 0xd9, 0x01,
  0x49, 0x03, 0xe1, 0x01, 0x71, 0xaa, 0x6b, 0x93, 0x7a, 0xbb, 0x9b, 0xa3,
  0x7a, 0x63, 0x7a, 0x0b, 0x23, 0x83, 0x2a, 0x93, 0xa3, 0x42, 0x93, 0x2b,
  0x0b, 0x23, 0xdb, 0x01, 0x49, 0x5b, 0x59, 0x49, 0x69, 0x50, 0x00, 0x01,
  0x01, 0x01, 0xd9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0xa3,
  0xc1, 0x8b, 0xb1, 0x01, 0xe9, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1,
  0x8b, 0xb1, 0xf9, 0x92, 0x7b, 0xbb, 0x83, 0x01, 0x59, 0x01, 0xa9, 0x4b,
  0x73, 0xa3, 0x93, 0x41, 0x81, 0x61, 0x01, 0x49, 0x03, 0x51, 0x01, 0xa1,
  0x49, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x49, 0x33, 0x03, 0x41, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1,
  0x71, 0xc9, 0x03, 0xf1, 0xe9, 0x01, 0x71, 0xaa, 0x6b, 0xb3, 0x0a, 0x63,
  0xab, 0x2b, 0x9b, 0xa3, 0x7a, 0x63, 0x7a, 0x0b, 0x23, 0x83, 0x2a, 0x93,
  0x93, 0x7a, 0xbb, 0x7b, 0x92, 0x1b, 0x7a, 0x63, 0xab, 0x6b, 0x73, 0x4b,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xd9, 0x6b,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x49, 0x33, 0x03, 0x41, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b,
  0xb1, 0x71, 0xc1, 0x03, 0xe1, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23,
  0x4a, 0x6b, 0x73, 0xc1, 0x4b, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xd9, 0x6b, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x71, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x1b,
  0x0a, 0x1b, 0x43, 0x2b, 0xdb, 0x3a, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b,
  0xb1, 0x71, 0xc9, 0xeb, 0xda, 0x3a, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b,
  0xb1, 0x71, 0xc1, 0xeb, 0x02, 0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xe9,
  0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x11, 0x93, 0x2b, 0x0b, 0x5b, 0xdb, 0x69, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xe9, 0x6b, 0x50, 0x68, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x61, 0x7a,
  0x0b, 0x23, 0x03, 0x09, 0x63, 0x63, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x19,
  0x7b, 0x73, 0xa3, 0x93, 0x4b, 0x13, 0xab, 0xa3, 0x4b, 0x73, 0x3b, 0x03,
  0x19, 0x7b, 0x63, 0xab, 0x6b, 0x73, 0x9b, 0x03, 0x31, 0x7b, 0x93, 0x03,
  0x29, 0x0b, 0x1b, 0x43, 0x03, 0x91, 0x7b, 0xbb, 0x73, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x49, 0x73, 0xa3, 0x93, 0x01,
  0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x03, 0xe9, 0x01, 0x39, 0x2a, 0xa3, 0x0b,
  0x1a, 0xa3, 0x4b, 0xb3, 0x2b, 0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x4b, 0x72,
  0x23, 0x2b, 0xc3, 0x43, 0x59, 0x2a, 0x93, 0x73, 0x2b, 0x63, 0x13, 0x0a,
  0x9b, 0x2b, 0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x03, 0x59, 0x01, 0x39, 0xa2,
  0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x01, 0x51, 0x01, 0x49, 0x73, 0xa3,
  0x93, 0x41, 0x89, 0x61, 0x01, 0x19, 0x13, 0x73, 0x81, 0x4b, 0xc3, 0x2b,
  0x63, 0x9b, 0xa2, 0x2b, 0x83, 0xcb, 0x4a, 0x49, 0xd9, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3,
  0x03, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x03, 0xe9, 0x01, 0x91, 0xa2, 0x0a,
  0x7a, 0xd2, 0xd1, 0x49, 0x72, 0xb3, 0x0b, 0x63, 0x4b, 0x23, 0x0b, 0x7a,
  0x1a, 0x7a, 0x2b, 0x33, 0x33, 0x4b, 0x1b, 0x4b, 0x2b, 0x73, 0xa3, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0xdb, 0x69, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0xa1, 0x42, 0x2b, 0x03,
  0x61, 0x0b, 0x73, 0x2b, 0x03, 0x49, 0x9b, 0x03, 0x79, 0xab, 0xa3, 0x03,
  0x79, 0x33, 0x03, 0x11, 0x7b, 0xab, 0x73, 0x23, 0x9b, 0x03, 0x79, 0x33,
  0x03, 0xa1, 0x43, 0x2b, 0x03, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a,
  0x6b, 0x03, 0x59, 0x01, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x63, 0x01,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79,
  0x01, 0x11, 0xab, 0xa3, 0x03, 0x19, 0x7b, 0xab, 0x63, 0x23, 0x03, 0x11,
  0x2b, 0x03, 0xb9, 0x4b, 0xa3, 0x43, 0x4b, 0x73, 0x03, 0x11, 0x7b, 0xab,
  0x73, 0x23, 0x9b, 0x03, 0x79, 0x33, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x49,
  0x73, 0x83, 0xab, 0xa3, 0x03, 0xa1, 0x2b, 0xc3, 0xa3, 0xab, 0x93, 0x2b,
  0x63, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79,
  0x79, 0x01, 0x99, 0x7b, 0x03, 0x21, 0x7b, 0x73, 0x3b, 0xa1, 0x03, 0x91,
  0x2b, 0x0b, 0x23, 0x03, 0x49, 0xa3, 0x03, 0x31, 0x93, 0x7b, 0x6b, 0x03,
  0xa1, 0x43, 0x2b, 0x03, 0xa1, 0x2b, 0xc3, 0xa3, 0xab, 0x93, 0x2b, 0x73,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79,
  0x01, 0x41, 0x7a, 0xbb, 0x2b, 0xb3, 0x2b, 0x93, 0x63, 0x01, 0xb9, 0x2b,
  0x03, 0x71, 0x2b, 0x2b, 0x23, 0x03, 0xa1, 0x7b, 0x03, 0x59, 0x2b, 0x2b,
  0x83, 0x03, 0x49, 0xa3, 0x03, 0x09, 0x9b, 0x03, 0x09, 0x73, 0x03, 0x09,
  0x1b, 0xa3, 0x4b, 0xb3, 0x2b, 0x03, 0x61, 0x0b, 0x73, 0x2b, 0x03, 0x31,
  0x7b, 0x93, 0x03, 0x09, 0x03, 0x11, 0x2b, 0x63, 0x7b, 0xbb, 0x03, 0x99,
  0x83, 0x63, 0x4b, 0xa3, 0x03, 0x99, 0xab, 0x6b, 0x73, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x49, 0x33, 0x03, 0x41, 0x39,
  0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x71, 0xc1, 0x03, 0xe1, 0x01,
  0x71, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xa3, 0x7a, 0x63,
  0x7a, 0x0b, 0x23, 0x83, 0x2a, 0x93, 0x93, 0x7a, 0xbb, 0x7b, 0x92, 0x1b,
  0x7a, 0x63, 0xab, 0x6b, 0x73, 0x03, 0x31, 0x31, 0x01, 0x49, 0x9a, 0xbb,
  0x4a, 0xa3, 0x43, 0x4b, 0x73, 0x13, 0x7a, 0xab, 0x73, 0x23, 0x9b, 0x43,
  0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x63, 0x01, 0x19, 0x13, 0x73, 0xa1, 0x2b,
  0xc3, 0xa3, 0xab, 0x93, 0x2b, 0x23, 0x4a, 0x6b, 0x4b, 0x49, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xd9, 0x6b, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xb1,
  0x0b, 0x63, 0xab, 0x2b, 0x03, 0xe9, 0x01, 0x39, 0xfb, 0x4a, 0x73, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0xdb, 0x82, 0x4b, 0xc3, 0x2b, 0x63, 0xeb, 0xda,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xe9, 0x6b,
  0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79,
  0x79, 0x01, 0x31, 0x4a, 0x63, 0xa3, 0x2b, 0x93, 0x03, 0xa1, 0x43, 0x2b,
  0x03, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x9b, 0x03, 0x31, 0x7b, 0x93, 0x03,
  0xa1, 0x43, 0x2b, 0x03, 0x31, 0x4b, 0x93, 0x9b, 0xa3, 0x03, 0x39, 0x92,
  0x7b, 0xab, 0x83, 0x23, 0x4a, 0x6b, 0x03, 0x19, 0x7b, 0x63, 0xab, 0x6b,
  0x73, 0x9b, 0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0xd9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x09, 0x1a, 0x1b, 0xab, 0x6b,
  0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x03, 0x31, 0x7b, 0x93, 0x03, 0xa1, 0x43,
  0x2b, 0x03, 0xb9, 0x43, 0x7b, 0x63, 0x2b, 0x03, 0x59, 0x2b, 0x93, 0x73,
  0x2b, 0x63, 0x03, 0xb9, 0x4b, 0x23, 0xa3, 0x43, 0x73, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31,
  0x63, 0x7b, 0x0b, 0xa3, 0x03, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x9b, 0xaa,
  0x6b, 0x03, 0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b,
  0xa3, 0x03, 0x99, 0x8b, 0xab, 0x0b, 0x93, 0x2b, 0x23, 0xb3, 0x0a, 0x63,
  0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab,
  0x2b, 0x9b, 0x03, 0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50, 0x68, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79,
  0x79, 0x01, 0x99, 0x4a, 0x73, 0x1b, 0x2b, 0x03, 0x09, 0x03, 0x91, 0x7b,
  0xbb, 0x03, 0xa9, 0x9b, 0x2b, 0x9b, 0x03, 0x89, 0xb1, 0x01, 0x61, 0x0b,
  0x73, 0x2b, 0x9b, 0x63, 0x01, 0x11, 0xab, 0xa3, 0x03, 0xb9, 0x2b, 0x03,
  0x79, 0x73, 0x63, 0xcb, 0x03, 0x71, 0x2b, 0x2b, 0x23, 0x03, 0xa1, 0x7b,
  0x03, 0x19, 0x0b, 0x63, 0x1b, 0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x03, 0xa1,
  0x43, 0x2b, 0x03, 0x09, 0x3b, 0x3b, 0x93, 0x2b, 0x3b, 0x0b, 0xa3, 0x2b,
  0x03, 0x31, 0x7b, 0x93, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x31, 0x4b, 0x93,
  0x9b, 0xa3, 0x03, 0x41, 0x0b, 0x63, 0x33, 0x03, 0x41, 0xc1, 0x49, 0x01,
  0x61, 0x0b, 0x73, 0x2b, 0x9b, 0x63, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x99,
  0x83, 0x63, 0x4b, 0xa3, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x59, 0x2b, 0x93,
  0x73, 0x2b, 0x63, 0x03, 0xb9, 0x4b, 0x23, 0x2b, 0x03, 0x09, 0x3b, 0x3b,
  0x93, 0x2b, 0x3b, 0x0b, 0xa3, 0x4b, 0x7b, 0x73, 0x03, 0x09, 0x6b, 0x7b,
  0x73, 0x3b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x31, 0x4b, 0x93, 0x9b, 0xa3,
  0x03, 0xc1, 0x01, 0x09, 0x73, 0x23, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x99,
  0x2b, 0x1b, 0x7b, 0x73, 0x23, 0x03, 0xc1, 0x01, 0x61, 0x0b, 0x73, 0x2b,
  0x9b, 0x63, 0x01, 0x09, 0x73, 0x23, 0x03, 0xa1, 0x43, 0x2b, 0x73, 0x03,
  0x19, 0x7b, 0x6b, 0x13, 0x4b, 0x73, 0x2b, 0x03, 0xa1, 0x43, 0x2b, 0x6b,
  0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x49, 0x72, 0x4b, 0xa3,
  0x4b, 0x0b, 0x63, 0x4b, 0xd3, 0x2b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x31,
  0x4b, 0x93, 0x9b, 0xa3, 0x03, 0xc1, 0x01, 0x61, 0x0b, 0x73, 0x2b, 0x9b,
  0x03, 0xa1, 0x7b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x31, 0x4b, 0x93, 0x9b,
  0xa3, 0x03, 0x19, 0x2b, 0x63, 0x63, 0x03, 0x19, 0x7b, 0x73, 0xa3, 0x93,
  0x4b, 0x13, 0xab, 0xa3, 0x4b, 0x7b, 0x73, 0x03, 0x79, 0x33, 0x03, 0xa1,
  0x43, 0x2b, 0x03, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x73, 0x01, 0x69,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x79, 0x79, 0x01, 0xa1, 0x42, 0x4b, 0x9b, 0x03, 0x19, 0x7b, 0xb3,
  0x2b, 0x93, 0x9b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x91, 0x2b, 0x6b, 0x0b,
  0x4b, 0x73, 0x23, 0x2b, 0x93, 0x03, 0x79, 0x33, 0x03, 0x89, 0x01, 0x49,
  0x73, 0x03, 0x19, 0x13, 0x73, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0xbb,
  0x4a, 0x23, 0xa3, 0x43, 0x03, 0x79, 0x01, 0x91, 0x01, 0xa9, 0x9b, 0x2b,
  0x23, 0x03, 0x49, 0x73, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x61, 0x7b, 0x7b,
  0x83, 0x03, 0x11, 0x2b, 0x63, 0x7b, 0xbb, 0x73, 0x01, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x49,
  0x33, 0x03, 0x41, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x71,
  0xc1, 0x03, 0xe1, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a, 0x6b,
  0x73, 0xc1, 0x03, 0x31, 0x31, 0x01, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x03,
  0x09, 0xe9, 0x01, 0x91, 0xa2, 0x0a, 0x7a, 0xd2, 0xd1, 0x49, 0x72, 0xb3,
  0x0b, 0x63, 0x4b, 0x23, 0x0b, 0x7a, 0x1a, 0x7a, 0x2b, 0x33, 0x33, 0x4b,
  0x1b, 0x4b, 0x2b, 0x73, 0xa3, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x4b, 0x69,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0xd9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xb1, 0x0b, 0x63, 0xab,
  0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0xe9, 0x01, 0xb1, 0x0b, 0x63, 0xab, 0x2b,
  0xdb, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x99, 0x8b, 0xab, 0x0b, 0x93,
  0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0xe9,
  0x01, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x03, 0x51, 0x01, 0xb1, 0x0b, 0x63,
  0xab, 0x2b, 0xdb, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x71, 0xab, 0x6b,
  0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x5b, 0x59, 0xd9, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xe9,
  0x6b, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x39, 0x2a, 0xa3, 0x03, 0xa1,
  0x43, 0x2b, 0x03, 0x61, 0x0b, 0x73, 0x2b, 0x03, 0x49, 0x73, 0x23, 0x2b,
  0xc3, 0x03, 0xa1, 0x43, 0x0b, 0xa3, 0x03, 0x41, 0x0b, 0x9b, 0x03, 0xa1,
  0x43, 0x2b, 0x03, 0x31, 0x4b, 0x93, 0x9b, 0xa3, 0x03, 0xb1, 0x0b, 0x63,
  0xab, 0x2b, 0x03, 0x31, 0x7b, 0x93, 0x03, 0x09, 0x03, 0x59, 0x2b, 0x93,
  0x73, 0x2b, 0x63, 0x03, 0x49, 0x73, 0x03, 0xa1, 0x43, 0x4b, 0x9b, 0x03,
  0x61, 0x0b, 0x73, 0x2b, 0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xa9, 0x4b, 0x73, 0xa3, 0x03,
  0x91, 0x7a, 0xbb, 0xfb, 0x5a, 0x2a, 0x93, 0x73, 0x2b, 0x63, 0x9b, 0xa2,
  0x0b, 0x93, 0xa3, 0x63, 0x0a, 0x73, 0x2b, 0x4b, 0x72, 0x23, 0x2b, 0xc3,
  0x03, 0xe9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x91, 0x7a, 0xbb, 0xfb,
  0x12, 0x0a, 0x9b, 0x2b, 0xbb, 0x0a, 0xb3, 0x2b, 0x63, 0x0a, 0x73, 0x2b,
  0x4b, 0x72, 0x23, 0x2b, 0xc3, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x59,
  0x01, 0x89, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x99, 0x5a,
  0x4b, 0x83, 0x03, 0x79, 0xb3, 0x2b, 0x93, 0x03, 0xa1, 0x43, 0x2b, 0x03,
  0x09, 0x63, 0x93, 0x2b, 0x0b, 0x23, 0xcb, 0x03, 0x09, 0x1b, 0x1b, 0xab,
  0x6b, 0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x23, 0x03, 0x31, 0x4b, 0x93, 0x9b,
  0xa3, 0x03, 0x19, 0x2b, 0x63, 0x63, 0x03, 0x79, 0x33, 0x03, 0xa1, 0x43,
  0x2b, 0x03, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x73, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x59, 0x01, 0x41, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1,
  0x8b, 0xb1, 0x71, 0xc1, 0x03, 0xe1, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83,
  0x23, 0x4a, 0x6b, 0x73, 0xc1, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0xf9, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b,
  0xb1, 0x71, 0xc1, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0xd1, 0x01, 0x41, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1,
  0x71, 0xc1, 0x03, 0x69, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23, 0x4a,
  0x6b, 0x73, 0xc1, 0x4b, 0x01, 0x59, 0x01, 0x19, 0x13, 0x73, 0x59, 0x2b,
  0x93, 0x73, 0x2b, 0x63, 0x93, 0x0a, 0x23, 0x4b, 0xab, 0x9b, 0x4b, 0xd9,
  0x69, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x31, 0x7b, 0x93, 0x03, 0x41, 0xa9, 0x4b, 0x73,
  0xa3, 0x03, 0x19, 0x03, 0xe9, 0x01, 0x81, 0xd9, 0x01, 0x19, 0x03, 0xe1,
  0x01, 0x19, 0x13, 0x73, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x93, 0x0a,
  0x23, 0x4b, 0xab, 0x9b, 0xdb, 0x01, 0x19, 0x5b, 0x59, 0x49, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0xd9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xa9, 0x4b, 0x73, 0xa3, 0x03,
  0x61, 0x0b, 0x73, 0x2b, 0xa3, 0x7a, 0x93, 0x2a, 0x0b, 0x23, 0x33, 0x92,
  0x7b, 0x6b, 0x03, 0xe9, 0x01, 0x91, 0x7a, 0xbb, 0xfb, 0x5a, 0x2a, 0x93,
  0x73, 0x2b, 0x63, 0x9b, 0xa2, 0x0b, 0x93, 0xa3, 0x63, 0x0a, 0x73, 0x2b,
  0x4b, 0x72, 0x23, 0x2b, 0xc3, 0x03, 0x59, 0x01, 0x19, 0xdb, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0x19, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0x03, 0xe9, 0x01, 0xb9, 0x0a, 0xb3, 0x2b, 0x93,
  0x2a, 0x0b, 0x23, 0x63, 0x0a, 0x73, 0x2b, 0x0b, 0xa2, 0x43, 0xb1, 0x0b,
  0x63, 0xab, 0x2b, 0x63, 0x01, 0x61, 0x0b, 0x73, 0x2b, 0xa3, 0x7a, 0x93,
  0x2a, 0x0b, 0x23, 0x33, 0x92, 0x7b, 0x6b, 0x4b, 0xd9, 0x69, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x49, 0x33, 0x03, 0x41, 0x19, 0xb3, 0x0a, 0x63, 0xab,
  0x2b, 0x03, 0x09, 0xe9, 0x01, 0x91, 0xa2, 0x0a, 0x7a, 0xd2, 0xd1, 0x49,
  0x72, 0xb3, 0x0b, 0x63, 0x4b, 0x23, 0x0b, 0x7a, 0x1a, 0x7a, 0x2b, 0x33,
  0x33, 0x4b, 0x1b, 0x4b, 0x2b, 0x73, 0xa3, 0xb3, 0x0a, 0x63, 0xab, 0x2b,
  0x4b, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xd9, 0x6b, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x9b,
  0xaa, 0x6b, 0x03, 0x59, 0xe9, 0x01, 0x19, 0xb3, 0x0a, 0x63, 0xab, 0x2b,
  0xdb, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x99,
  0x8b, 0xab, 0x0b, 0x93, 0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b,
  0xaa, 0x6b, 0x03, 0x59, 0xe9, 0x01, 0x19, 0xb3, 0x0a, 0x63, 0xab, 0x2b,
  0x03, 0x51, 0x01, 0x19, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0xdb, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x71, 0xab, 0x6b, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x5b, 0x59, 0xd9, 0x69, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0xe9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0xe9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x69, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x79,
  0x01, 0x19, 0x7a, 0x6b, 0x13, 0x4b, 0x73, 0x2b, 0x03, 0xa1, 0x43, 0x2b,
  0x03, 0x99, 0xab, 0x13, 0x6b, 0x91, 0x2b, 0x9b, 0xab, 0x63, 0xa3, 0x9b,
  0x73, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x61, 0x0b, 0x73, 0x2b,
  0xa3, 0x7a, 0x93, 0x2a, 0x0b, 0x23, 0x33, 0x92, 0x7b, 0x6b, 0x03, 0xe9,
  0x01, 0x69, 0x4b, 0x73, 0x43, 0xb9, 0x0a, 0xb3, 0x2b, 0x3b, 0x2a, 0xa3,
  0x63, 0x0a, 0x73, 0x2b, 0x1b, 0x7a, 0xab, 0x73, 0xa3, 0x43, 0x49, 0x01,
  0x69, 0x01, 0x89, 0x61, 0x01, 0x91, 0x7a, 0xbb, 0xfb, 0x12, 0x0a, 0x9b,
  0x2b, 0xbb, 0x0a, 0xb3, 0x2b, 0x63, 0x0a, 0x73, 0x2b, 0x4b, 0x72, 0x23,
  0x2b, 0xc3, 0x03, 0x59, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b,
  0xb1, 0x71, 0xc1, 0x03, 0x59, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83, 0x23,
  0x4a, 0x6b, 0x73, 0xc1, 0x4b, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xb1, 0x0b, 0x63, 0xab,
  0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0x59, 0xe9, 0x01, 0xb9, 0x0a, 0xb3, 0x2b,
  0x93, 0x2a, 0x0b, 0x23, 0x63, 0x0a, 0x73, 0x2b, 0x0b, 0xa2, 0x43, 0xb1,
  0x0b, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x63, 0x01, 0x61, 0x0b, 0x73,
  0x2b, 0xa3, 0x7a, 0x93, 0x2a, 0x0b, 0x23, 0x33, 0x92, 0x7b, 0x6b, 0x4b,
  0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x99, 0x8b, 0xab, 0x0b, 0x93, 0x2b, 0x23, 0xb3, 0x0a,
  0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0x59, 0xe9, 0x01, 0xb9, 0x0a,
  0xb3, 0x2b, 0x93, 0x2a, 0x0b, 0x23, 0x63, 0x0a, 0x73, 0x2b, 0x0b, 0xa2,
  0x43, 0x99, 0x8b, 0xab, 0x0b, 0x93, 0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab,
  0x2b, 0x9b, 0xaa, 0x6b, 0x63, 0x01, 0x61, 0x0b, 0x73, 0x2b, 0xa3, 0x7a,
  0x93, 0x2a, 0x0b, 0x23, 0x33, 0x92, 0x7b, 0x6b, 0x4b, 0xd9, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x03, 0x59, 0xe9,
  0x01, 0xb9, 0x0a, 0xb3, 0x2b, 0x93, 0x2a, 0x0b, 0x23, 0x63, 0x0a, 0x73,
  0x2b, 0x0b, 0xa2, 0x43, 0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b,
  0x9b, 0x63, 0x01, 0x61, 0x0b, 0x73, 0x2b, 0xa3, 0x7a, 0x93, 0x2a, 0x0b,
  0x23, 0x33, 0x92, 0x7b, 0x6b, 0x4b, 0xd9, 0x69, 0x50, 0x68, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79,
  0x79, 0x01, 0x99, 0xa2, 0x7b, 0x93, 0x2b, 0x03, 0x79, 0x73, 0x63, 0xcb,
  0x03, 0xa1, 0x43, 0x2b, 0x03, 0xb1, 0x0b, 0x63, 0x4b, 0x23, 0x03, 0x91,
  0x2b, 0x9b, 0xab, 0x63, 0xa3, 0x9b, 0x63, 0x01, 0x49, 0x73, 0x29, 0x73,
  0x01, 0x31, 0x4b, 0x93, 0x9b, 0xa3, 0x03, 0x39, 0x92, 0x7b, 0xab, 0x83,
  0x23, 0x4a, 0x6b, 0x03, 0x19, 0x7b, 0x63, 0xab, 0x6b, 0x73, 0x9b, 0x73,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x49, 0x33, 0x03, 0x41, 0x39, 0xa2, 0x4a, 0x23, 0xa3, 0xc1,
  0x8b, 0xb1, 0x71, 0xc1, 0x03, 0xe1, 0x01, 0x39, 0x92, 0x7b, 0xab, 0x83,
  0x23, 0x4a, 0x6b, 0x73, 0xc1, 0x4b, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xd9, 0x6b, 0x50, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x81, 0x0a, 0x1b, 0x5b, 0x2b, 0x23, 0x93, 0x7a, 0xbb,
  0x93, 0x2a, 0x9b, 0xab, 0x63, 0xa3, 0x1b, 0x0a, 0x1b, 0x43, 0x2b, 0xdb,
  0x3a, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x71, 0xc9, 0xeb, 0xda,
  0x3a, 0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x71, 0xc1, 0xeb, 0x02,
  0xe9, 0x01, 0x31, 0x62, 0x7b, 0x0b, 0xa3, 0x93, 0xa1, 0x7a, 0x43, 0x0a,
  0x63, 0x33, 0x43, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x93, 0x41, 0xb1, 0x0b,
  0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x63, 0x01, 0x99, 0x8b, 0xab, 0x0b,
  0x93, 0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x4b,
  0x49, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x71, 0xaa, 0x6b, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x1b, 0x0a, 0x1b, 0x43, 0x2b, 0xdb, 0x3a,
  0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x71, 0xc9, 0xeb, 0xda, 0x3a,
  0xa2, 0x4a, 0x23, 0xa3, 0xc1, 0x8b, 0xb1, 0x71, 0xc1, 0xeb, 0x02, 0xe9,
  0x01, 0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xdb, 0x69,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0xe9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0xe9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0xe9, 0x6b, 0x50, 0xe8, 0x6b,
  0x50, 0x68, 0x50, 0xb0, 0x7b, 0x4b, 0x23, 0x03, 0x31, 0x4a, 0x63, 0xa3,
  0x2b, 0x93, 0xb3, 0x2a, 0x93, 0xa3, 0x4b, 0x1b, 0x0b, 0x63, 0x63, 0xcb,
  0x43, 0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x01, 0x21, 0xa2, 0x4a, 0x23, 0x63,
  0x01, 0x49, 0x73, 0x03, 0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x01, 0x39, 0xa2,
  0x4a, 0x23, 0x4b, 0x69, 0x50, 0xd8, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x9b,
  0xaa, 0x6b, 0x03, 0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01,
  0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0x99, 0x8b, 0xab, 0x0b, 0x93,
  0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0xe9,
  0x01, 0x81, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0xa9, 0x4b, 0x73,
  0xa3, 0x03, 0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x03,
  0xe9, 0x01, 0x81, 0xd9, 0x69, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01,
  0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x01, 0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x03,
  0xe9, 0x01, 0x39, 0x2a, 0xa3, 0x0b, 0x1a, 0xa3, 0x4b, 0xb3, 0x2b, 0x83,
  0x4a, 0xc3, 0x2b, 0x63, 0x4b, 0x72, 0x23, 0x2b, 0xc3, 0x43, 0x49, 0x73,
  0xa3, 0x93, 0x41, 0x21, 0xa2, 0x4a, 0x23, 0x73, 0xc1, 0x63, 0x01, 0x21,
  0xa2, 0x4a, 0x23, 0x73, 0xc9, 0x03, 0x51, 0x01, 0x19, 0x13, 0x73, 0x81,
  0x4b, 0xc3, 0x2b, 0x63, 0x9b, 0xa2, 0x2b, 0x83, 0xcb, 0x4a, 0x49, 0xd9,
  0x69, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b,
  0xa3, 0xa3, 0x01, 0xb1, 0x0b, 0x63, 0x8b, 0x61, 0x01, 0xb1, 0x0b, 0x63,
  0x93, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x09,
  0x1a, 0x1b, 0xab, 0x6b, 0xab, 0x63, 0x0b, 0xa3, 0x2b, 0x03, 0x31, 0x7b,
  0x93, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0xb9, 0x43, 0x7b, 0x63, 0x2b, 0x03,
  0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x73, 0x69, 0x50, 0x00, 0x01, 0x01,
  0x01, 0x31, 0x7b, 0x93, 0x03, 0x41, 0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x91,
  0x03, 0xe9, 0x01, 0x81, 0xd9, 0x01, 0x91, 0x03, 0xe1, 0x01, 0x19, 0x13,
  0x73, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0xbb, 0x4a, 0x23, 0xa3, 0x43,
  0xdb, 0x01, 0x91, 0x5b, 0x59, 0x49, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01,
  0xd9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xa9,
  0x4b, 0x73, 0xa3, 0x03, 0x91, 0x7b, 0xbb, 0x4b, 0x22, 0x02, 0xe9, 0x01,
  0x39, 0xa2, 0x4a, 0x23, 0x73, 0xc9, 0x03, 0x59, 0x01, 0x91, 0xdb, 0x69,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xa9, 0x4b, 0x73,
  0xa3, 0x03, 0x91, 0x73, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b,
  0x03, 0xe9, 0x01, 0x71, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b,
  0x1b, 0x0a, 0x1b, 0x43, 0x2b, 0xdb, 0x92, 0x7b, 0xbb, 0x4b, 0x22, 0xea,
  0xda, 0x3a, 0xa2, 0x4a, 0x23, 0x73, 0xc1, 0xeb, 0xda, 0x69, 0x50, 0x68,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x49, 0x33, 0x03,
  0x41, 0x91, 0x73, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x03,
  0xf1, 0x01, 0x81, 0x49, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0xd9, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x93, 0x01,
  0xa9, 0x73, 0x83, 0x0b, 0x1b, 0x5b, 0x2b, 0x23, 0x93, 0x7a, 0xbb, 0x9b,
  0xaa, 0x6b, 0x03, 0xe9, 0x01, 0x41, 0x0a, 0x63, 0x33, 0xa3, 0x7a, 0x33,
  0x62, 0x7b, 0x0b, 0xa3, 0x93, 0x41, 0x81, 0x0a, 0x1b, 0x5b, 0x2b, 0x23,
  0x93, 0x7a, 0xbb, 0x93, 0x2a, 0x9b, 0xab, 0x63, 0xa3, 0x1b, 0x0a, 0x1b,
  0x43, 0x2b, 0xdb, 0x92, 0x7b, 0xbb, 0x4b, 0x22, 0xea, 0xda, 0x3a, 0xa2,
  0x4a, 0x23, 0x73, 0xc1, 0xeb, 0x4a, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b,
  0x0b, 0xa3, 0x03, 0x91, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b,
  0x03, 0xe9, 0x01, 0xa9, 0x73, 0x83, 0x0b, 0x1b, 0x5b, 0x2b, 0x23, 0x93,
  0x7a, 0xbb, 0x9b, 0xaa, 0x6b, 0x73, 0xc1, 0xdb, 0x69, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0x63,
  0x7b, 0x0b, 0xa3, 0x03, 0x91, 0x9b, 0x8a, 0xab, 0x0b, 0x93, 0x2b, 0x23,
  0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0xe9, 0x01, 0xa9,
  0x73, 0x83, 0x0b, 0x1b, 0x5b, 0x2b, 0x23, 0x93, 0x7a, 0xbb, 0x9b, 0xaa,
  0x6b, 0x73, 0xc9, 0xdb, 0x69, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xb1, 0x0b, 0x63, 0xab,
  0x2b, 0x9b, 0xaa, 0x6b, 0x03, 0x59, 0xe9, 0x01, 0x91, 0xb3, 0x0a, 0x63,
  0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0xdb, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x99, 0x8b, 0xab, 0x0b,
  0x93, 0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0x03,
  0x59, 0xe9, 0x01, 0x91, 0x9b, 0x8a, 0xab, 0x0b, 0x93, 0x2b, 0x23, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b, 0xdb, 0x69, 0x50, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x71, 0xab,
  0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x03, 0x59, 0xe9, 0x01, 0x91,
  0x73, 0xaa, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0xdb, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xe9, 0x6b, 0x50, 0x00,
  0x01, 0x01, 0x01, 0xe9, 0x6b, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x79, 0x79, 0x01, 0x19, 0x0a, 0x63, 0x1b, 0xab, 0x63, 0x0b, 0xa3, 0x2b,
  0x03, 0x69, 0x2b, 0x0b, 0x73, 0x03, 0x09, 0x73, 0x23, 0x03, 0xb1, 0x0b,
  0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x73, 0x69, 0x50, 0x00, 0x01, 0x01,
  0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0x49, 0x73, 0xb3, 0x73, 0x02,
  0xe9, 0x01, 0x89, 0x71, 0x31, 0x03, 0x79, 0x01, 0x69, 0x0b, 0xc3, 0x43,
  0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x63, 0x01, 0x89,
  0x49, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b,
  0xa3, 0x03, 0x69, 0x2b, 0x0b, 0x73, 0x03, 0xe9, 0x01, 0x49, 0x73, 0xb3,
  0x73, 0x02, 0x51, 0x01, 0xb1, 0x0b, 0x63, 0xab, 0x2b, 0x9b, 0xaa, 0x6b,
  0xdb, 0x69, 0x50, 0x68, 0x50, 0x00, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01,
  0x09, 0x82, 0x83, 0x63, 0xcb, 0x03, 0x11, 0x2a, 0x9b, 0x9b, 0x2b, 0x63,
  0x3b, 0x99, 0x03, 0x19, 0x7b, 0x93, 0x93, 0x2b, 0x1b, 0xa3, 0x4b, 0x7b,
  0x73, 0x03, 0xa1, 0x7b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x29, 0x9b, 0xa3,
  0x4b, 0x6b, 0x0b, 0xa3, 0x2b, 0x23, 0x03, 0xb1, 0x0b, 0x93, 0x4b, 0x0b,
  0x73, 0x1b, 0x2b, 0x63, 0x01, 0x69, 0xab, 0x63, 0xa3, 0x4b, 0x83, 0x63,
  0xcb, 0x03, 0x11, 0xcb, 0x03, 0x71, 0x7a, 0x71, 0x6a, 0x89, 0x61, 0x01,
  0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x79, 0x79, 0x01, 0x99, 0x4b, 0x73,
  0x1b, 0x2b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0xa1, 0x93, 0xab, 0x2b, 0x03,
  0x81, 0x7b, 0x83, 0xab, 0x63, 0x0b, 0xa3, 0x4b, 0x7b, 0x73, 0x03, 0x69,
  0x2b, 0x0b, 0x73, 0x03, 0x49, 0x9b, 0x03, 0x71, 0x7b, 0xa3, 0x03, 0x59,
  0x73, 0x7b, 0xbb, 0x73, 0xdb, 0x01, 0x49, 0xa3, 0x03, 0x49, 0x9b, 0x03,
  0x79, 0x73, 0x63, 0xcb, 0x03, 0x29, 0x9b, 0xa3, 0x4b, 0x6b, 0x0b, 0xa3,
  0x2b, 0x23, 0x03, 0x09, 0x9b, 0x03, 0xa1, 0x43, 0x2b, 0x03, 0x99, 0x0b,
  0x6b, 0x83, 0x63, 0x2b, 0x03, 0x69, 0x2b, 0x0b, 0x73, 0x73, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0x11, 0x2b,
  0x9b, 0x9b, 0x2b, 0x63, 0x1b, 0x7a, 0x93, 0x93, 0x2b, 0x1b, 0xa3, 0x4b,
  0x7b, 0x73, 0x03, 0xe9, 0x01, 0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab,
  0x2b, 0x9b, 0x03, 0x79, 0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x43, 0x69,
  0x0b, 0xc3, 0x43, 0x71, 0xab, 0x6b, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x9b,
  0x63, 0x01, 0x91, 0x49, 0x01, 0x69, 0x01, 0x89, 0x49, 0xd9, 0x69, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x03, 0xb1, 0x0b,
  0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x03, 0xe9, 0x01, 0x11, 0x2b, 0x9b,
  0x9b, 0x2b, 0x63, 0x1b, 0x7a, 0x93, 0x93, 0x2b, 0x1b, 0xa3, 0x4b, 0x7b,
  0x73, 0x03, 0x51, 0x01, 0x41, 0x49, 0x73, 0xb3, 0x73, 0x02, 0x51, 0x01,
  0x99, 0x8b, 0xab, 0x0b, 0x93, 0x2b, 0x23, 0xb3, 0x0a, 0x63, 0xab, 0x2b,
  0x9b, 0xaa, 0x6b, 0x03, 0x69, 0x01, 0x69, 0x2b, 0x0b, 0x73, 0x03, 0x51,
  0x01, 0x69, 0x2b, 0x0b, 0x73, 0x4b, 0xd9, 0x69, 0x50, 0x68, 0x50, 0x00,
  0x01, 0x01, 0x01, 0xb1, 0x0b, 0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x03,
  0xe9, 0x01, 0x69, 0x0b, 0xc3, 0x43, 0x81, 0x61, 0x01, 0xb1, 0x0b, 0x93,
  0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x4b, 0xd9, 0x01, 0x01, 0x01, 0x01, 0x79,
  0x79, 0x01, 0x29, 0x72, 0x9b, 0xab, 0x93, 0x2b, 0x03, 0xb1, 0x0b, 0x93,
  0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x03, 0x21, 0x7b, 0x2b, 0x9b, 0x73, 0x3b,
  0xa1, 0x03, 0x39, 0x7b, 0x03, 0x71, 0x2b, 0x3b, 0x0b, 0xa3, 0x4b, 0xb3,
  0x2b, 0x03, 0x21, 0xab, 0x2b, 0x03, 0xa1, 0x7b, 0x03, 0x49, 0x6b, 0x83,
  0x93, 0x2b, 0x1b, 0x4b, 0x9b, 0x4b, 0x7b, 0x73, 0x73, 0x69, 0x50, 0x68,
  0x50, 0x00, 0x01, 0x01, 0x01, 0x39, 0xfb, 0x7a, 0xab, 0xa3, 0x6b, 0x2a,
  0x0b, 0x73, 0xb3, 0x0a, 0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0xdb, 0x82,
  0x4b, 0xc3, 0x2b, 0x63, 0xeb, 0x02, 0xe9, 0x01, 0x71, 0xab, 0x6b, 0xb3,
  0x0a, 0x63, 0xab, 0x2b, 0x9b, 0x03, 0xf1, 0x01, 0x81, 0x01, 0xf9, 0x01,
  0x31, 0x63, 0x7b, 0x0b, 0xa3, 0x93, 0x41, 0x69, 0x2b, 0x0b, 0x73, 0x63,
  0x01, 0xb1, 0x0b, 0x93, 0x4b, 0x0b, 0x73, 0x1b, 0x2b, 0x4b, 0x01, 0xd1,
  0x01, 0x91, 0xa2, 0x0a, 0x7a, 0xd2, 0xd1, 0x49, 0x72, 0xb3, 0x0b, 0x63,
  0x4b, 0x23, 0x0b, 0x7a, 0x1a, 0x7a, 0x2b, 0x33, 0x33, 0x4b, 0x1b, 0x4b,
  0x2b, 0x73, 0xa3, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0xdb, 0x69, 0x50, 0xe8,
  0x6b, 0x50, 0x68, 0x50, 0x68, 0x50, 0xd8, 0x72, 0xab, 0x6b, 0xa3, 0x43,
  0x93, 0x2b, 0x0b, 0x23, 0x9b, 0x43, 0x21, 0x2a, 0x33, 0x0b, 0xab, 0x63,
  0xa3, 0x1b, 0x7a, 0x6b, 0x83, 0xab, 0xa3, 0x2b, 0x9b, 0x42, 0x0b, 0x23,
  0x2b, 0x93, 0x83, 0x0a, 0x93, 0x0b, 0x6b, 0x9b, 0xd3, 0xd1, 0xa1, 0x42,
  0x93, 0x2b, 0x0b, 0x23, 0x3b, 0x92, 0x7b, 0xab, 0x83, 0xd3, 0xd1, 0xb9,
  0x4a, 0x23, 0xa3, 0x43, 0x63, 0x01, 0x21, 0x2a, 0x33, 0x0b, 0xab, 0x63,
  0xa3, 0x1b, 0x7a, 0x6b, 0x83, 0xab, 0xa3, 0x2b, 0x9b, 0x42, 0x0b, 0x23,
  0x2b, 0x93, 0x83, 0x0a, 0x93, 0x0b, 0x6b, 0x9b, 0xd3, 0xd1, 0xa1, 0x42,
  0x93, 0x2b, 0x0b, 0x23, 0x3b, 0x92, 0x7b, 0xab, 0x83, 0xd3, 0xd1, 0x41,
  0x2a, 0x4b, 0x3b, 0x43, 0xa3, 0x63, 0x01, 0x89, 0x49, 0xe9, 0x6a, 0x50,
  0xb0, 0x7b, 0x4b, 0x23, 0x03, 0x69, 0x0b, 0x4b, 0x73, 0x43, 0xa9, 0x4b,
  0x73, 0xa3, 0x93, 0x01, 0x39, 0x4a, 0x23, 0x03, 0xd1, 0x01, 0x99, 0xb2,
  0xfa, 0x3a, 0x92, 0x7b, 0xab, 0x83, 0x4b, 0x22, 0x62, 0x01, 0xa9, 0x4b,
  0x73, 0xa3, 0x93, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0x03, 0xd1, 0x01, 0x99,
  0xb2, 0xfa, 0x3a, 0x92, 0x7b, 0xab, 0x83, 0xa3, 0x42, 0x93, 0x2b, 0x0b,
  0x23, 0x4b, 0x22, 0x62, 0x01, 0xa9, 0x4b, 0x73, 0xa3, 0x03, 0x39, 0x4a,
  0x02, 0xd1, 0x01, 0x99, 0xb2, 0xfa, 0x3a, 0x92, 0x7b, 0xab, 0x83, 0x4b,
  0x72, 0x23, 0x2b, 0xc3, 0x63, 0x01, 0xa9, 0x4b, 0x73, 0xa3, 0x93, 0x01,
  0x21, 0xa2, 0x4a, 0x23, 0x03, 0xd1, 0x01, 0x99, 0xb2, 0xfa, 0x22, 0x4a,
  0x9b, 0x83, 0x0b, 0xa3, 0x1b, 0x43, 0xa3, 0x42, 0x93, 0x2b, 0x0b, 0x23,
  0x4b, 0x22, 0x4a, 0x69, 0x50, 0xd8, 0x6b, 0x50, 0x00, 0x01, 0x01, 0x01,
  0x31, 0x4a, 0x63, 0xa3, 0x2b, 0x93, 0x43, 0x7a, 0x93, 0x4b, 0xd3, 0x7b,
  0x73, 0xa3, 0x0b, 0x63, 0x63, 0xcb, 0x43, 0x39, 0x4a, 0x23, 0x63, 0x01,
  0x39, 0x4a, 0x4a, 0xd9, 0x69, 0x50, 0x00, 0x01, 0x01, 0x01, 0x39, 0x92,
  0x7b, 0xab, 0x83, 0x6b, 0x2a, 0x6b, 0x7b, 0x93, 0xcb, 0x13, 0x0a, 0x93,
  0x93, 0x4b, 0x2b, 0x93, 0xbb, 0x4a, 0xa3, 0x43, 0x3b, 0x92, 0x7b, 0xab,
  0x83, 0x9b, 0xca, 0x73, 0x1b, 0x43, 0x49, 0xd9, 0x69, 0x50, 0x68, 0x50,
  0x00, 0x01, 0x01, 0x01, 0x31, 0x4a, 0x63, 0xa3, 0x2b, 0x93, 0xb3, 0x2a,
  0x93, 0xa3, 0x4b, 0x1b, 0x0b, 0x63, 0x63, 0xcb, 0x43, 0x21, 0xa2, 0x4a,
  0x23, 0x63, 0x01, 0x39, 0xa2, 0x4a, 0x23, 0x4b, 0xd9, 0x69, 0x50, 0xe8,
  0x6b, 0x50, 0xd8, 0x20, 0x04, 0x25, 0xc2, 0x35, 0x70, 0xe1, 0x92, 0xa2,
  0x0a, 0x7a, 0xe2, 0x9a, 0x43, 0x0b, 0x23, 0x2b, 0x93, 0x9b, 0xe3, 0x92,
  0x0a, 0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0x9b, 0x42, 0x0b,
  0x23, 0x2b, 0x93, 0x43, 0x2a, 0x63, 0x83, 0x2b, 0x93, 0x73, 0x41, 0x63,
  0x9b, 0x63, 0x4b, 0xe3, 0xbd, 0x67, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x2f, 0x2f, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20,
  0x28, 0x63, 0x29, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66,
  0x74, 0x2e, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74,
  0x73, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2e, 0x0d,
  0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x64,
  0x65, 0x20, 0x69, 0x73, 0x20, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
  0x64, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20,
  0x4d, 0x49, 0x54, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x20,
  0x28, 0x4d, 0x49, 0x54, 0x29, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x54,
  0x48, 0x49, 0x53, 0x20, 0x43, 0x4f, 0x44, 0x45, 0x20, 0x49, 0x53, 0x20,
  0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44, 0x20, 0x2a, 0x41, 0x53,
  0x20, 0x49, 0x53, 0x2a, 0x20, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54,
  0x20, 0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54, 0x59, 0x20, 0x4f, 0x46,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x41, 0x4e, 0x59, 0x20, 0x4b, 0x49, 0x4e,
  0x44, 0x2c, 0x20, 0x45, 0x49, 0x54, 0x48, 0x45, 0x52, 0x20, 0x45, 0x58,
  0x50, 0x52, 0x45, 0x53, 0x53, 0x20, 0x4f, 0x52, 0x20, 0x49, 0x4d, 0x50,
  0x4c, 0x49, 0x45, 0x44, 0x2c, 0x20, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44,
  0x49, 0x4e, 0x47, 0x20, 0x41, 0x4e, 0x59, 0x0d, 0x0a, 0x2f, 0x2f, 0x20,
  0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x20, 0x57, 0x41, 0x52, 0x52,
  0x41, 0x4e, 0x54, 0x49, 0x45, 0x53, 0x20, 0x4f, 0x46, 0x20, 0x46, 0x49,
  0x54, 0x4e, 0x45, 0x53, 0x53, 0x20, 0x46, 0x4f, 0x52, 0x20, 0x41, 0x20,
  0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x55, 0x4c, 0x41, 0x52, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x2c, 0x20,
  0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x41, 0x42, 0x49, 0x4c,
  0x49, 0x54, 0x59, 0x2c, 0x20, 0x4f, 0x52, 0x20, 0x4e, 0x4f, 0x4e, 0x2d,
  0x49, 0x4e, 0x46, 0x52, 0x49, 0x4e, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54,
  0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x6e,
  0x64, 0x65, 0x66, 0x20, 0x52, 0x41, 0x59, 0x54, 0x52, 0x41, 0x43, 0x49,
  0x4e, 0x47, 0x53, 0x48, 0x41, 0x44, 0x45, 0x52, 0x48, 0x45, 0x4c, 0x50,
  0x45, 0x52, 0x5f, 0x48, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e,
  0x65, 0x20, 0x52, 0x41, 0x59, 0x54, 0x52, 0x41, 0x43, 0x49, 0x4e, 0x47,
  0x53, 0x48, 0x41, 0x44, 0x45, 0x52, 0x48, 0x45, 0x4c, 0x50, 0x45, 0x52,
  0x5f, 0x48, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75,
  0x64, 0x65, 0x20, 0x22, 0x52, 0x61, 0x79, 0x54, 0x72, 0x61, 0x63, 0x69,
  0x6e, 0x67, 0x48, 0x6c, 0x73, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74,
  0x2e, 0x68, 0x22, 0x0d, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
  0x65, 0x20, 0x22, 0x52, 0x54, 0x41, 0x4f, 0x2f, 0x53, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x73, 0x2f, 0x52, 0x54, 0x41, 0x4f, 0x2e, 0x68, 0x6c, 0x73,
  0x6c, 0x69, 0x22, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69,
  0x6e, 0x65, 0x20, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x59, 0x20,
  0x28, 0x31, 0x2e, 0x30, 0x2f, 0x30, 0x2e, 0x30, 0x29, 0x0d, 0x0a, 0x0d,
  0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x46, 0x4c, 0x54,
  0x5f, 0x45, 0x50, 0x53, 0x49, 0x4c, 0x4f, 0x4e, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x31, 0x2e, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x36,
  0x65, 0x2d, 0x30, 0x37, 0x20, 0x2f, 0x2f, 0x20, 0x53, 0x6d, 0x61, 0x6c,
  0x6c, 0x65, 0x73, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20,
  0x73, 0x75, 0x63, 0x68, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x31, 0x2e,
  0x30, 0x20, 0x2b, 0x20, 0x46, 0x4c, 0x54, 0x5f, 0x45, 0x50, 0x53, 0x49,
  0x4c, 0x4f, 0x4e, 0x20, 0x21, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x0d, 0x0a,
  0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x46, 0x4c, 0x54, 0x5f,
  0x4d, 0x49, 0x4e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x31, 0x2e, 0x31, 0x37, 0x35, 0x34, 0x39, 0x34, 0x33, 0x35, 0x31, 0x65,
  0x2d, 0x33, 0x38, 0x20, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e,
  0x65, 0x20, 0x46, 0x4c, 0x54, 0x5f, 0x4d, 0x41, 0x58, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x33, 0x2e, 0x34, 0x30, 0x32, 0x38,
  0x32, 0x33, 0x34, 0x36, 0x36, 0x65, 0x2b, 0x33, 0x38, 0x20, 0x0d, 0x0a,
  0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x46, 0x4c, 0x54, 0x5f,
  0x31, 0x30, 0x42, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x4e, 0x20, 0x20, 0x20,
  0x36, 0x2e, 0x31, 0x65, 0x2d, 0x35, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66,
  0x69, 0x6e, 0x65, 0x20, 0x46, 0x4c, 0x54, 0x5f, 0x31, 0x30, 0x42, 0x49,
  0x54, 0x5f, 0x4d, 0x41, 0x58, 0x20, 0x20, 0x20, 0x36, 0x2e, 0x35, 0x65,
  0x34, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x50,
  0x49, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x36,
  0x35, 0x33, 0x35, 0x38, 0x39, 0x37, 0x66, 0x0d, 0x0a, 0x0d, 0x0a, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f,
  0x74, 0x6f, 0x50, 0x6f, 0x77, 0x32, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x32, 0x20, 0x70, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28,
  0x70, 0x2c, 0x20, 0x70, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74,
  0x68, 0x5f, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x32, 0x28, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x70, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f,
  0x74, 0x28, 0x70, 0x2c, 0x20, 0x70, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x46, 0x6c, 0x6f, 0x61,
  0x74, 0x32, 0x54, 0x6f, 0x48, 0x61, 0x6c, 0x66, 0x28, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x61, 0x6c, 0x29, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74,
  0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x30, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
  0x20, 0x3d, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28,
  0x76, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x7c, 0x3d, 0x20, 0x66,
  0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x76, 0x61, 0x6c, 0x2e,
  0x79, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65,
  0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x54,
  0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20,
  0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x20, 0x3d, 0x20,
  0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x76, 0x61, 0x6c,
  0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75,
  0x6c, 0x74, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x66, 0x31, 0x36, 0x74, 0x6f,
  0x66, 0x33, 0x32, 0x28, 0x76, 0x61, 0x6c, 0x20, 0x3e, 0x3e, 0x20, 0x31,
  0x36, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74,
  0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0d,
  0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20,
  0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
  0x61, 0x6c, 0x31, 0x36, 0x62, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x6d,
  0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x2c, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73,
  0x65, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
  0x2e, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
  0x6c, 0x49, 0x44, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65,
  0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x20, 0x7c, 0x3d, 0x20, 0x66, 0x33,
  0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75,
  0x73, 0x65, 0x2e, 0x72, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x31, 0x36, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
  0x2e, 0x79, 0x20, 0x3d, 0x20, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x54,
  0x6f, 0x48, 0x61, 0x6c, 0x66, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73,
  0x65, 0x2e, 0x67, 0x62, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73,
  0x75, 0x6c, 0x74, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x62,
  0x6f, 0x6f, 0x6c, 0x20, 0x49, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e,
  0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x28, 0x69, 0x6e, 0x20, 0x69, 0x6e,
  0x74, 0x32, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
  0x69, 0x6f, 0x6e, 0x73, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x20, 0x26, 0x26,
  0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20,
  0x30, 0x20, 0x26, 0x26, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x78,
  0x20, 0x3c, 0x20, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
  0x73, 0x2e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78,
  0x2e, 0x79, 0x20, 0x3c, 0x20, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
  0x6f, 0x6e, 0x73, 0x2e, 0x79, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
  0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x31, 0x36, 0x62, 0x28,
  0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x6d, 0x61, 0x74,
  0x65, 0x72, 0x69, 0x61, 0x6c, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
  0x49, 0x44, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x29, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x74, 0x65,
  0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x74,
  0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78,
  0x66, 0x66, 0x66, 0x66, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64,
  0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x72, 0x20, 0x3d, 0x20, 0x66,
  0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x6d, 0x61, 0x74, 0x65,
  0x72, 0x69, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36,
  0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66,
  0x75, 0x73, 0x65, 0x2e, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x48, 0x61, 0x6c,
  0x66, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x6d, 0x61,
  0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x65, 0x6d, 0x61,
  0x70, 0x73, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74,
  0x6f, 0x20, 0x5b, 0x30, 0x2c, 0x31, 0x5d, 0x20, 0x66, 0x6f, 0x72, 0x20,
  0x61, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x72, 0x61, 0x6e, 0x67,
  0x65, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52, 0x65,
  0x6d, 0x61, 0x70, 0x54, 0x6f, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x28, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75,
  0x65, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x72, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65,
  0x4d, 0x61, 0x78, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x09, 0x72, 0x65,
  0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74,
  0x65, 0x28, 0x28, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2d, 0x20, 0x72,
  0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x29, 0x20, 0x2f, 0x20, 0x28,
  0x72, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x2d, 0x20, 0x72,
  0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x29, 0x29, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x73, 0x20, 0x61, 0x20, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
  0x67, 0x20, 0x3c, 0x30, 0x20, 0x2d, 0x3e, 0x20, 0x31, 0x20, 0x2d, 0x3e,
  0x20, 0x30, 0x3e, 0x20, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
  0x6e, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x6e,
  0x74, 0x20, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x43, 0x61,
  0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61,
  0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c,
  0x61, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
  0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63,
  0x79, 0x63, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x63, 0x75, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x61,
  0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x20, 0x3d,
  0x20, 0x66, 0x6d, 0x6f, 0x64, 0x28, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65,
  0x64, 0x54, 0x69, 0x6d, 0x65, 0x2c, 0x20, 0x63, 0x79, 0x63, 0x6c, 0x65,
  0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x2f, 0x20,
  0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
  0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x75, 0x72, 0x4c,
  0x69, 0x6e, 0x65, 0x61, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x69,
  0x6d, 0x65, 0x20, 0x3d, 0x20, 0x28, 0x63, 0x75, 0x72, 0x4c, 0x69, 0x6e,
  0x65, 0x61, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
  0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x66, 0x29, 0x20, 0x3f, 0x20,
  0x32, 0x20, 0x2a, 0x20, 0x63, 0x75, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x61,
  0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x20, 0x3a,
  0x20, 0x31, 0x20, 0x2d, 0x20, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x63, 0x75,
  0x72, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65,
  0x54, 0x69, 0x6d, 0x65, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x66, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70,
  0x28, 0x30, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x63, 0x75, 0x72, 0x4c, 0x69,
  0x6e, 0x65, 0x61, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x6d,
  0x65, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x76, 0x6f,
  0x69, 0x64, 0x20, 0x73, 0x77, 0x61, 0x70, 0x28, 0x69, 0x6e, 0x6f, 0x75,
  0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x2c, 0x20, 0x69,
  0x6e, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x61,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x61, 0x20, 0x3d, 0x20, 0x62,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x74,
  0x65, 0x6d, 0x70, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x62,
  0x6f, 0x6f, 0x6c, 0x20, 0x49, 0x73, 0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67,
  0x65, 0x28, 0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x76, 0x61,
  0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x6d,
  0x69, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x6d, 0x61, 0x78, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x61,
  0x6c, 0x20, 0x3e, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x20, 0x26, 0x26, 0x20,
  0x76, 0x61, 0x6c, 0x20, 0x3c, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x29, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20,
  0x49, 0x73, 0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x28, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x2c, 0x20,
  0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x6e,
  0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d,
  0x61, 0x78, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x76, 0x61, 0x6c, 0x20,
  0x3e, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x20, 0x26, 0x26, 0x20, 0x76, 0x61,
  0x6c, 0x20, 0x3c, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x29, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x52,
  0x47, 0x42, 0x74, 0x6f, 0x4c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63,
  0x65, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20,
  0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x30, 0x2e,
  0x32, 0x31, 0x32, 0x36, 0x66, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x6c, 0x6f,
  0x72, 0x2e, 0x72, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x32,
  0x66, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x67, 0x20,
  0x2b, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x32, 0x66, 0x20, 0x2a, 0x20,
  0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x62, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x4c, 0x6f, 0x61, 0x64, 0x20, 0x74,
  0x68, 0x72, 0x65, 0x65, 0x20, 0x31, 0x36, 0x20, 0x62, 0x69, 0x74, 0x20,
  0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d,
  0x20, 0x61, 0x20, 0x62, 0x79, 0x74, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72,
  0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
  0x2e, 0x0d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x0d, 0x0a, 0x75,
  0x69, 0x6e, 0x74, 0x33, 0x20, 0x4c, 0x6f, 0x61, 0x64, 0x33, 0x78, 0x31,
  0x36, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x28,
  0x75, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42,
  0x79, 0x74, 0x65, 0x73, 0x2c, 0x20, 0x42, 0x79, 0x74, 0x65, 0x41, 0x64,
  0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20,
  0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x69,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x42, 0x79, 0x74, 0x65, 0x41, 0x64,
  0x72, 0x65, 0x73, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x6c,
  0x6f, 0x61, 0x64, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65,
  0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20,
  0x61, 0x20, 0x34, 0x20, 0x62, 0x79, 0x74, 0x65, 0x20, 0x62, 0x6f, 0x75,
  0x6e, 0x64, 0x61, 0x72, 0x79, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x2f, 0x2f, 0x20, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x65, 0x20,
  0x6e, 0x65, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x65, 0x61, 0x64,
  0x20, 0x74, 0x68, 0x72, 0x65, 0x65, 0x20, 0x31, 0x36, 0x20, 0x62, 0x69,
  0x74, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x20, 0x7b,
  0x20, 0x30, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x32, 0x20, 0x7d, 0x20, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x61, 0x6c, 0x69, 0x67,
  0x6e, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20, 0x61, 0x20, 0x34, 0x20, 0x62,
  0x79, 0x74, 0x65, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79,
  0x20, 0x61, 0x73, 0x3a, 0x20, 0x7b, 0x20, 0x30, 0x20, 0x31, 0x20, 0x7d,
  0x20, 0x7b, 0x20, 0x32, 0x20, 0x30, 0x20, 0x7d, 0x20, 0x7b, 0x20, 0x31,
  0x20, 0x32, 0x20, 0x7d, 0x20, 0x7b, 0x20, 0x30, 0x20, 0x31, 0x20, 0x7d,
  0x20, 0x2e, 0x2e, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f,
  0x20, 0x77, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6c, 0x6f, 0x61,
  0x64, 0x20, 0x38, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x28, 0x7e,
  0x20, 0x34, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x7b,
  0x20, 0x61, 0x20, 0x62, 0x20, 0x7c, 0x20, 0x63, 0x20, 0x64, 0x20, 0x7d,
  0x29, 0x20, 0x74, 0x6f, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x20,
  0x74, 0x77, 0x6f, 0x20, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
  0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x74, 0x72, 0x69, 0x70, 0x6c,
  0x65, 0x74, 0x20, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x2c, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x62, 0x61, 0x73, 0x65,
  0x64, 0x20, 0x6f, 0x6e, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x69,
  0x6e, 0x64, 0x65, 0x78, 0x27, 0x73, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65,
  0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x20, 0x62, 0x65, 0x69, 0x6e, 0x67,
  0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x34, 0x20, 0x62, 0x79, 0x74, 0x65, 0x20, 0x62,
  0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x20, 0x6f, 0x72, 0x20, 0x6e,
  0x6f, 0x74, 0x3a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x20, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x3a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x7b, 0x20, 0x30, 0x20, 0x31, 0x20, 0x7c, 0x20, 0x32, 0x20,
  0x2d, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x20, 0x4e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64,
  0x3a, 0x20, 0x7b, 0x20, 0x2d, 0x20, 0x30, 0x20, 0x7c, 0x20, 0x31, 0x20,
  0x32, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e,
  0x73, 0x74, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x64, 0x77, 0x6f, 0x72,
  0x64, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73,
  0x65, 0x74, 0x20, 0x3d, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42,
  0x79, 0x74, 0x65, 0x73, 0x20, 0x26, 0x20, 0x7e, 0x33, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x75, 0x69,
  0x6e, 0x74, 0x32, 0x20, 0x66, 0x6f, 0x75, 0x72, 0x31, 0x36, 0x42, 0x69,
  0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x49,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x32,
  0x28, 0x64, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65,
  0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x41, 0x6c, 0x69, 0x67,
  0x6e, 0x65, 0x64, 0x3a, 0x20, 0x7b, 0x20, 0x30, 0x20, 0x31, 0x20, 0x7c,
  0x20, 0x32, 0x20, 0x2d, 0x20, 0x7d, 0x20, 0x3d, 0x3e, 0x20, 0x72, 0x65,
  0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74,
  0x20, 0x74, 0x68, 0x72, 0x65, 0x65, 0x20, 0x31, 0x36, 0x62, 0x69, 0x74,
  0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x64, 0x77, 0x6f, 0x72, 0x64, 0x41,
  0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
  0x20, 0x3d, 0x3d, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x79,
  0x74, 0x65, 0x73, 0x29, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x64,
  0x69, 0x63, 0x65, 0x73, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x66, 0x6f, 0x75,
  0x72, 0x31, 0x36, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65,
  0x73, 0x2e, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28,
  0x66, 0x6f, 0x75, 0x72, 0x31, 0x36, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x64,
  0x69, 0x63, 0x65, 0x73, 0x2e, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36,
  0x29, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x64,
  0x69, 0x63, 0x65, 0x73, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x66, 0x6f, 0x75,
  0x72, 0x31, 0x36, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65,
  0x73, 0x2e, 0x79, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x2f, 0x2f, 0x20, 0x4e, 0x6f,
  0x74, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x3a, 0x20, 0x7b,
  0x20, 0x2d, 0x20, 0x30, 0x20, 0x7c, 0x20, 0x31, 0x20, 0x32, 0x20, 0x7d,
  0x20, 0x3d, 0x3e, 0x20, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
  0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x74, 0x68, 0x72, 0x65, 0x65, 0x20,
  0x31, 0x36, 0x62, 0x69, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
  0x73, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
  0x73, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6f, 0x75, 0x72, 0x31,
  0x36, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e,
  0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x26, 0x20, 0x30,
  0x78, 0x66, 0x66, 0x66, 0x66, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e,
  0x79, 0x20, 0x3d, 0x20, 0x66, 0x6f, 0x75, 0x72, 0x31, 0x36, 0x42, 0x69,
  0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x79, 0x20, 0x26,
  0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
  0x73, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6f, 0x75, 0x72, 0x31,
  0x36, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e,
  0x79, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x26, 0x20, 0x30,
  0x78, 0x66, 0x66, 0x66, 0x66, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74,
  0x75, 0x72, 0x6e, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x65,
  0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20, 0x68, 0x69, 0x74, 0x20, 0x77,
  0x6f, 0x72, 0x6c, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
  0x6e, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x48,
  0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x28, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x57, 0x6f, 0x72,
  0x6c, 0x64, 0x52, 0x61, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x28,
  0x29, 0x20, 0x2b, 0x20, 0x52, 0x61, 0x79, 0x54, 0x43, 0x75, 0x72, 0x72,
  0x65, 0x6e, 0x74, 0x28, 0x29, 0x20, 0x2a, 0x20, 0x57, 0x6f, 0x72, 0x6c,
  0x64, 0x52, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x28, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20, 0x68,
  0x69, 0x74, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x73, 0x70,
  0x61, 0x63, 0x65, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x48, 0x69,
  0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x28, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x4f, 0x62, 0x6a,
  0x65, 0x63, 0x74, 0x52, 0x61, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
  0x28, 0x29, 0x20, 0x2b, 0x20, 0x52, 0x61, 0x79, 0x54, 0x43, 0x75, 0x72,
  0x72, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x20, 0x2a, 0x20, 0x4f, 0x62, 0x6a,
  0x65, 0x63, 0x74, 0x52, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x28, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x43, 0x6c, 0x69, 0x70,
  0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6c, 0x69,
  0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x44, 0x43, 0x70, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x69,
  0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x63, 0x6c, 0x69,
  0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x2e, 0x77, 0x3b, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x50,
  0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x64,
  0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74,
  0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x44, 0x65, 0x76, 0x69,
  0x63, 0x65, 0x20, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
  0x65, 0x73, 0x3a, 0x20, 0x7b, 0x5b, 0x2d, 0x31, 0x2c, 0x31, 0x5d, 0x2c,
  0x20, 0x5b, 0x2d, 0x31, 0x2c, 0x31, 0x5d, 0x2c, 0x20, 0x28, 0x30, 0x2c,
  0x20, 0x31, 0x5d, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x4e, 0x44,
  0x43, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20,
  0x3d, 0x20, 0x2d, 0x4e, 0x44, 0x43, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x2e, 0x79, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x49, 0x6e, 0x76,
  0x65, 0x72, 0x74, 0x20, 0x59, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x44, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x58, 0x2d, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x20,
  0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x4e, 0x44, 0x43, 0x70,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x20, 0x2b,
  0x20, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x66, 0x3b, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x5b, 0x2d, 0x31, 0x2c, 0x31, 0x5d, 0x20,
  0x2d, 0x3e, 0x20, 0x5b, 0x30, 0x2c, 0x20, 0x31, 0x5d, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x65,
  0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
  0x6e, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20,
  0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20, 0x61, 0x74, 0x74,
  0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x61, 0x74, 0x20, 0x61, 0x20,
  0x68, 0x69, 0x74, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x65,
  0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x76, 0x65, 0x72, 0x74, 0x65,
  0x78, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
  0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x68,
  0x69, 0x74, 0x27, 0x73, 0x20, 0x62, 0x61, 0x72, 0x79, 0x63, 0x65, 0x6e,
  0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x48, 0x69, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
  0x75, 0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76,
  0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
  0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x74,
  0x49, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x6e,
  0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x20, 0x61, 0x74, 0x74,
  0x72, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72,
  0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78,
  0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5b, 0x30, 0x5d,
  0x20, 0x2b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x61, 0x74, 0x74, 0x72, 0x2e, 0x62, 0x61, 0x72, 0x79, 0x63, 0x65, 0x6e,
  0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x28, 0x76,
  0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
  0x74, 0x65, 0x5b, 0x31, 0x5d, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x72, 0x74,
  0x65, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5b,
  0x30, 0x5d, 0x29, 0x20, 0x2b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x61, 0x74, 0x74, 0x72, 0x2e, 0x62, 0x61, 0x72, 0x79,
  0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x79, 0x20, 0x2a,
  0x20, 0x28, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74, 0x74, 0x72,
  0x69, 0x62, 0x75, 0x74, 0x65, 0x5b, 0x32, 0x5d, 0x20, 0x2d, 0x20, 0x76,
  0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
  0x74, 0x65, 0x5b, 0x30, 0x5d, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
  0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20,
  0x61, 0x74, 0x20, 0x61, 0x20, 0x68, 0x69, 0x74, 0x20, 0x70, 0x6f, 0x73,
  0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70,
  0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20,
  0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69,
  0x62, 0x75, 0x74, 0x65, 0x73, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x68, 0x69, 0x74, 0x27, 0x73, 0x20, 0x62, 0x61,
  0x72, 0x79, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x0d,
  0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x48, 0x69, 0x74, 0x41,
  0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74,
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5b, 0x33, 0x5d, 0x2c, 0x20,
  0x42, 0x75, 0x69, 0x6c, 0x74, 0x49, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6e,
  0x67, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
  0x73, 0x20, 0x61, 0x74, 0x74, 0x72, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76,
  0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
  0x74, 0x65, 0x5b, 0x30, 0x5d, 0x20, 0x2b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x74, 0x74, 0x72, 0x2e, 0x62, 0x61,
  0x72, 0x79, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x78,
  0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74,
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5b, 0x31, 0x5d, 0x20, 0x2d,
  0x20, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69,
  0x62, 0x75, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x29, 0x20, 0x2b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x74, 0x74, 0x72,
  0x2e, 0x62, 0x61, 0x72, 0x79, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63,
  0x73, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x72, 0x74, 0x65,
  0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5b, 0x32,
  0x5d, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x41, 0x74,
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5b, 0x30, 0x5d, 0x29, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x47, 0x65,
  0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72,
  0x61, 0x27, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20,
  0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x61,
  0x79, 0x0d, 0x0a, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
  0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x52, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34,
  0x78, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68,
  0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67,
  0x69, 0x6e, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x09, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f,
  0x73, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30,
  0x2c, 0x20, 0x30, 0x29, 0x3b, 0x0d, 0x0a, 0x09, 0x0d, 0x0a, 0x09, 0x2f,
  0x2f, 0x20, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x63, 0x6f,
  0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x74,
  0x6f, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x70, 0x6f,
  0x73, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x09, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x34, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20,
  0x6d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x73,
  0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x2c, 0x20, 0x30, 0x2c,
  0x20, 0x31, 0x29, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69,
  0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72,
  0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x09, 0x72, 0x65, 0x74,
  0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
  0x65, 0x28, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29,
  0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x69, 0x6e, 0x6c, 0x69,
  0x6e, 0x65, 0x20, 0x52, 0x61, 0x79, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72,
  0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x61,
  0x6d, 0x65, 0x72, 0x61, 0x52, 0x61, 0x79, 0x28, 0x69, 0x6e, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x70, 0x72,
  0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f,
  0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72,
  0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x32, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x20,
  0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2c, 0x20,
  0x30, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x63, 0x6f,
  0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x74,
  0x6f, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x70, 0x6f,
  0x73, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64,
  0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x34, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x2c,
  0x20, 0x30, 0x2c, 0x20, 0x31, 0x29, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c,
  0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41,
  0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x52, 0x61, 0x79, 0x20, 0x72, 0x61, 0x79,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x61, 0x79, 0x2e, 0x6f,
  0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x53, 0x69, 0x6e, 0x63,
  0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
  0x27, 0x73, 0x20, 0x65, 0x79, 0x65, 0x20, 0x77, 0x61, 0x73, 0x20, 0x61,
  0x74, 0x20, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x20, 0x69, 0x6e, 0x20, 0x70,
  0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57,
  0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x74, 0x68, 0x65, 0x20,
  0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x69, 0x73,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x61, 0x79,
  0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d,
  0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x77,
  0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x72, 0x61, 0x79, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
  0x65, 0x20, 0x61, 0x20, 0x72, 0x61, 0x79, 0x20, 0x69, 0x6e, 0x20, 0x77,
  0x6f, 0x72, 0x6c, 0x64, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x66,
  0x6f, 0x72, 0x20, 0x61, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20,
  0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73,
  0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x61,
  0x6e, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x66, 0x72, 0x6f, 0x6d,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
  0x68, 0x65, 0x64, 0x20, 0x32, 0x44, 0x20, 0x67, 0x72, 0x69, 0x64, 0x2e,
  0x0d, 0x0a, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x52, 0x61, 0x79,
  0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
  0x65, 0x72, 0x61, 0x52, 0x61, 0x79, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32,
  0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x70, 0x72,
  0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f,
  0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72,
  0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72,
  0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2c,
  0x20, 0x30, 0x29, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x78, 0x79, 0x20, 0x3d,
  0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35,
  0x66, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
  0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x64, 0x64,
  0x6c, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x69,
  0x78, 0x65, 0x6c, 0x2e, 0x0d, 0x0a, 0x09, 0x78, 0x79, 0x20, 0x2b, 0x3d,
  0x20, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x73, 0x63, 0x72,
  0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x78, 0x79, 0x20,
  0x2f, 0x20, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x61,
  0x79, 0x73, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
  0x28, 0x29, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20,
  0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20,
  0x59, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x2d, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6f, 0x72,
  0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x2e,
  0x79, 0x20, 0x3d, 0x20, 0x2d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
  0x6f, 0x73, 0x2e, 0x79, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
  0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x20,
  0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x20, 0x69,
  0x6e, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20,
  0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x77, 0x6f, 0x72,
  0x6c, 0x64, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x34, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x6f,
  0x73, 0x2c, 0x20, 0x30, 0x2c, 0x20, 0x31, 0x29, 0x2c, 0x20, 0x70, 0x72,
  0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f,
  0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72,
  0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x52, 0x61, 0x79, 0x20, 0x72,
  0x61, 0x79, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x61, 0x79,
  0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x3d, 0x20, 0x63, 0x61,
  0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x3b, 0x0d, 0x0a, 0x09, 0x2f, 0x2f, 0x20, 0x53, 0x69, 0x6e, 0x63, 0x65,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x27,
  0x73, 0x20, 0x65, 0x79, 0x65, 0x20, 0x77, 0x61, 0x73, 0x20, 0x61, 0x74,
  0x20, 0x30, 0x2c, 0x30, 0x2c, 0x30, 0x20, 0x69, 0x6e, 0x20, 0x70, 0x72,
  0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f,
  0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72,
  0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x0d, 0x0a,
  0x09, 0x2f, 0x2f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6c,
  0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0d,
  0x0a, 0x09, 0x72, 0x61, 0x79, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x69, 0x7a, 0x65, 0x28, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79,
  0x7a, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72,
  0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x61, 0x79, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
  0x74, 0x65, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x61, 0x20, 0x68, 0x6f, 0x72,
  0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x70, 0x6c, 0x61, 0x6e,
  0x65, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x54,
  0x65, 0x78, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x28, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
  0x61, 0x74, 0x65, 0x20, 0x72, 0x61, 0x79, 0x20, 0x64, 0x69, 0x66, 0x66,
  0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x0d, 0x0a,
  0x76, 0x6f, 0x69, 0x64, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
  0x74, 0x65, 0x52, 0x61, 0x79, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
  0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x28, 0x6f, 0x75, 0x74, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x78, 0x5f, 0x75, 0x76,
  0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x64, 0x64, 0x79, 0x5f, 0x75, 0x76, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x68, 0x69, 0x74,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x73, 0x75, 0x72, 0x66,
  0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x61, 0x6d,
  0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c,
  0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34,
  0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
  0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61,
  0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f,
  0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x20, 0x72, 0x61, 0x79,
  0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61,
  0x6c, 0x73, 0x20, 0x62, 0x79, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73,
  0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74,
  0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x6c, 0x61, 0x6e, 0x65,
  0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x20, 0x73, 0x75, 0x72,
  0x66, 0x61, 0x63, 0x65, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x52,
  0x61, 0x79, 0x20, 0x64, 0x64, 0x78, 0x20, 0x3d, 0x20, 0x47, 0x65, 0x6e,
  0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
  0x61, 0x79, 0x28, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52,
  0x61, 0x79, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x28, 0x29, 0x2e, 0x78,
  0x79, 0x20, 0x2b, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x31, 0x2c,
  0x20, 0x30, 0x29, 0x2c, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x6f,
  0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72,
  0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
  0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x52, 0x61, 0x79, 0x20, 0x64, 0x64, 0x79, 0x20,
  0x3d, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61,
  0x6d, 0x65, 0x72, 0x61, 0x52, 0x61, 0x79, 0x28, 0x44, 0x69, 0x73, 0x70,
  0x61, 0x74, 0x63, 0x68, 0x52, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x64, 0x65,
  0x78, 0x28, 0x29, 0x2e, 0x78, 0x79, 0x20, 0x2b, 0x20, 0x75, 0x69, 0x6e,
  0x74, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x29, 0x2c, 0x20, 0x63, 0x61,
  0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43,
  0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69,
  0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x20, 0x72, 0x61,
  0x79, 0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69,
  0x61, 0x6c, 0x73, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x64, 0x78, 0x5f, 0x70, 0x6f, 0x73,
  0x20, 0x3d, 0x20, 0x64, 0x64, 0x78, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69,
  0x6e, 0x20, 0x2d, 0x20, 0x64, 0x64, 0x78, 0x2e, 0x64, 0x69, 0x72, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x64, 0x6f, 0x74, 0x28,
  0x64, 0x64, 0x78, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x2d,
  0x20, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x2c, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2f, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x64,
  0x64, 0x78, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x2c, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x64, 0x79, 0x5f, 0x70, 0x6f,
  0x73, 0x20, 0x3d, 0x20, 0x64, 0x64, 0x79, 0x2e, 0x6f, 0x72, 0x69, 0x67,
  0x69, 0x6e, 0x20, 0x2d, 0x20, 0x64, 0x64, 0x79, 0x2e, 0x64, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x64, 0x6f, 0x74,
  0x28, 0x64, 0x64, 0x79, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20,
  0x2d, 0x20, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
  0x6e, 0x2c, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2f, 0x20, 0x64, 0x6f, 0x74, 0x28,
  0x64, 0x64, 0x79, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x2c, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
  0x74, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x73,
  0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x6f, 0x74,
  0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x64, 0x64, 0x78, 0x5f, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x54, 0x65, 0x78,
  0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x28, 0x64, 0x64, 0x78, 0x5f, 0x70,
  0x6f, 0x73, 0x29, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x64, 0x64, 0x79, 0x5f, 0x75, 0x76, 0x20, 0x3d, 0x20,
  0x54, 0x65, 0x78, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x28, 0x64, 0x64,
  0x79, 0x5f, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x6f,
  0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72,
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x47, 0x72,
  0x69, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x78,
  0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x70, 0x64, 0x78, 0x2c,
  0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64,
  0x70, 0x64, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74,
  0x20, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x6e,
  0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69,
  0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x63, 0x68,
  0x65, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x74,
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x62, 0x6f, 0x78, 0x20,
  0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x29, 0x2e, 0x0d, 0x0a, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
  0x61, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x47, 0x72,
  0x69, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x68, 0x69, 0x74, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61,
  0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20,
  0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20,
  0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
  0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d,
  0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x78, 0x5f, 0x75, 0x76, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x64, 0x64, 0x79, 0x5f, 0x75, 0x76, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x20,
  0x3d, 0x20, 0x54, 0x65, 0x78, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x28,
  0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29,
  0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x43, 0x61, 0x6c,
  0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x61, 0x79, 0x44, 0x69, 0x66,
  0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x28, 0x64,
  0x64, 0x78, 0x5f, 0x75, 0x76, 0x2c, 0x20, 0x64, 0x64, 0x79, 0x5f, 0x75,
  0x76, 0x2c, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x68, 0x69, 0x74, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x73, 0x75, 0x72, 0x66,
  0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x63,
  0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
  0x6e, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68,
  0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67,
  0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65,
  0x74, 0x75, 0x72, 0x6e, 0x20, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
  0x73, 0x47, 0x72, 0x69, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x42, 0x6f, 0x78, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x28, 0x75, 0x76,
  0x2c, 0x20, 0x64, 0x64, 0x78, 0x5f, 0x75, 0x76, 0x2c, 0x20, 0x64, 0x64,
  0x79, 0x5f, 0x75, 0x76, 0x2c, 0x20, 0x35, 0x30, 0x29, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x72, 0x65, 0x73,
  0x6e, 0x65, 0x6c, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x61,
  0x6e, 0x63, 0x65, 0x20, 0x2d, 0x20, 0x73, 0x63, 0x68, 0x6c, 0x69, 0x63,
  0x6b, 0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x6c,
  0x65, 0x63, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x6c, 0x69,
  0x63, 0x6b, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x49, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x33, 0x20, 0x4e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x46, 0x30, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x73,
  0x69, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x65,
  0x28, 0x64, 0x6f, 0x74, 0x28, 0x2d, 0x49, 0x2c, 0x20, 0x4e, 0x29, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x46, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x20, 0x2d, 0x20,
  0x46, 0x30, 0x29, 0x2a, 0x70, 0x6f, 0x77, 0x28, 0x31, 0x20, 0x2d, 0x20,
  0x63, 0x6f, 0x73, 0x69, 0x2c, 0x20, 0x35, 0x29, 0x3b, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x52,
  0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x78, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x20, 0x3c, 0x20,
  0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x20, 0x3f, 0x20, 0x78, 0x20,
  0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x3a, 0x20, 0x70, 0x6f,
  0x77, 0x28, 0x28, 0x78, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35,
  0x29, 0x20, 0x2f, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x32,
  0x2e, 0x34, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53,
  0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x78,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31,
  0x33, 0x30, 0x38, 0x20, 0x3f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20,
  0x2a, 0x20, 0x78, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20,
  0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x78, 0x29,
  0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x2e, 0x34, 0x29,
  0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x53, 0x6d, 0x61,
  0x6c, 0x6c, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66,
  0x32, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e,
  0x28, 0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x78, 0x29, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x53,
  0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62,
  0x69, 0x74, 0x73, 0x20, 0x62, 0x65, 0x68, 0x69, 0x6e, 0x64, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x6d, 0x6f, 0x73, 0x74, 0x20, 0x73, 0x69, 0x67, 0x6e,
  0x69, 0x66, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x20, 0x6e, 0x6f, 0x6e, 0x2d,
  0x7a, 0x65, 0x72, 0x6f, 0x20, 0x62, 0x69, 0x74, 0x20, 0x69, 0x6e, 0x20,
  0x78, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61,
  0x6c, 0x6c, 0x79, 0x20, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x75,
  0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x73,
  0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74,
  0x20, 0x69, 0x73, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20,
  0x74, 0x68, 0x61, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x20, 0x70, 0x6f,
  0x77, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x32, 0x20, 0x77, 0x65, 0x27,
  0x72, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x66,
  0x6f, 0x72, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x20, 0x7c,
  0x3d, 0x20, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x78, 0x20, 0x7c, 0x3d, 0x20, 0x78, 0x20, 0x3e, 0x3e,
  0x20, 0x32, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x20, 0x7c,
  0x3d, 0x20, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x34, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x78, 0x20, 0x7c, 0x3d, 0x20, 0x78, 0x20, 0x3e, 0x3e,
  0x20, 0x38, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x20, 0x7c,
  0x3d, 0x20, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x52, 0x65, 0x74,
  0x75, 0x72, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x78, 0x74,
  0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x77,
  0x6f, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x20, 0x2b,
  0x20, 0x31, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f,
  0x20, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
  0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
  0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
  0x20, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x20, 0x28, 0x76, 0x61, 0x6c,
  0x75, 0x65, 0x20, 0x2d, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
  0x6e, 0x2c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x70,
  0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x29, 0x20, 0x6d, 0x61,
  0x70, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d,
  0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x20, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
  0x3d, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x61,
  0x6e, 0x67, 0x65, 0x2f, 0x4d, 0x61, 0x78, 0x4d, 0x61, 0x6e, 0x74, 0x69,
  0x73, 0x73, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x3d, 0x20, 0x28,
  0x32, 0x5e, 0x65, 0x2b, 0x31, 0x20, 0x2d, 0x20, 0x32, 0x5e, 0x65, 0x29,
  0x20, 0x2f, 0x20, 0x28, 0x32, 0x5e, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x6e,
  0x74, 0x69, 0x73, 0x73, 0x61, 0x42, 0x69, 0x74, 0x73, 0x29, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x52, 0x65, 0x66, 0x3a, 0x20, 0x68, 0x74, 0x74, 0x70,
  0x73, 0x3a, 0x2f, 0x2f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x65, 0x6d,
  0x6f, 0x66, 0x6f, 0x78, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x32, 0x30, 0x31,
  0x37, 0x2f, 0x31, 0x31, 0x2f, 0x32, 0x31, 0x2f, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x69, 0x6e, 0x67, 0x2d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2d, 0x70,
  0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x0d, 0x0a, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x50, 0x72,
  0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x28, 0x69, 0x6e, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x6e, 0x74, 0x69,
  0x73, 0x73, 0x61, 0x42, 0x69, 0x74, 0x73, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x46, 0x69, 0x6e, 0x64,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
  0x74, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20,
  0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x2e,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x6e,
  0x65, 0x78, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x77,
  0x6f, 0x20, 0x3d, 0x20, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74,
  0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x32, 0x47, 0x72, 0x65, 0x61,
  0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x78, 0x29, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65,
  0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
  0x20, 0x3d, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72,
  0x4f, 0x66, 0x54, 0x77, 0x6f, 0x20, 0x2d, 0x20, 0x28, 0x6e, 0x65, 0x78,
  0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x77, 0x6f, 0x20,
  0x3e, 0x3e, 0x20, 0x31, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x4d,
  0x61, 0x6e, 0x74, 0x69, 0x73, 0x73, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
  0x20, 0x3d, 0x20, 0x31, 0x20, 0x3c, 0x3c, 0x20, 0x4e, 0x75, 0x6d, 0x4d,
  0x61, 0x6e, 0x74, 0x69, 0x73, 0x73, 0x61, 0x42, 0x69, 0x74, 0x73, 0x3b,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
  0x61, 0x6e, 0x67, 0x65, 0x20, 0x2f, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x61,
  0x6e, 0x74, 0x69, 0x73, 0x73, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
  0x69, 0x6f, 0x6e, 0x52, 0x31, 0x30, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x46, 0x6c,
  0x6f, 0x61, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
  0x28, 0x78, 0x2c, 0x20, 0x35, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x46, 0x6c, 0x6f, 0x61,
  0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x31,
  0x36, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65,
  0x74, 0x75, 0x72, 0x6e, 0x20, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x50, 0x72,
  0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x28, 0x78, 0x2c, 0x20, 0x31,
  0x30, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x50, 0x72, 0x65,
  0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x33, 0x32, 0x28, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x29, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
  0x69, 0x6f, 0x6e, 0x28, 0x78, 0x2c, 0x20, 0x32, 0x33, 0x29, 0x3b, 0x0d,
  0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x52, 0x65, 0x66, 0x3a, 0x20, 0x68, 0x74, 0x74, 0x70, 0x73,
  0x3a, 0x2f, 0x2f, 0x6b, 0x6e, 0x61, 0x72, 0x6b, 0x6f, 0x77, 0x69, 0x63,
  0x7a, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x70, 0x72, 0x65, 0x73, 0x73, 0x2e,
  0x63, 0x6f, 0x6d, 0x2f, 0x32, 0x30, 0x31, 0x34, 0x2f, 0x30, 0x34, 0x2f,
  0x31, 0x36, 0x2f, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f,
  0x6e, 0x2d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2d, 0x76, 0x65, 0x63,
  0x74, 0x6f, 0x72, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
  0x2f, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x4f, 0x63,
  0x74, 0x57, 0x72, 0x61, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x76, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20,
  0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x2e, 0x79, 0x78, 0x29, 0x29,
  0x20, 0x2a, 0x20, 0x28, 0x76, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x3d, 0x20,
  0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x3a, 0x20,
  0x2d, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x73,
  0x20, 0x61, 0x20, 0x33, 0x44, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x76,
  0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x32,
  0x44, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x77, 0x69, 0x74,
  0x68, 0x20, 0x3c, 0x30, 0x2c, 0x31, 0x3e, 0x20, 0x72, 0x61, 0x6e, 0x67,
  0x65, 0x2e, 0x20, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20,
  0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x29, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x20, 0x2f, 0x3d, 0x20,
  0x28, 0x61, 0x62, 0x73, 0x28, 0x6e, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20,
  0x61, 0x62, 0x73, 0x28, 0x6e, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x61,
  0x62, 0x73, 0x28, 0x6e, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x6e, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, 0x2e,
  0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x6e,
  0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x4f, 0x63, 0x74, 0x57, 0x72, 0x61,
  0x70, 0x28, 0x6e, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x6e, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, 0x2e, 0x78,
  0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e,
  0x35, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x6e, 0x2e, 0x78, 0x79, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x44, 0x65,
  0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x28, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x66, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x20, 0x3d, 0x20, 0x66, 0x20, 0x2a,
  0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x68, 0x74,
  0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65,
  0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74, 0x75, 0x62, 0x62, 0x65,
  0x73, 0x61, 0x75, 0x72, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75,
  0x73, 0x2f, 0x39, 0x33, 0x37, 0x39, 0x39, 0x34, 0x37, 0x39, 0x30, 0x35,
  0x35, 0x33, 0x32, 0x32, 0x37, 0x32, 0x36, 0x34, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x20, 0x3d,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x2e, 0x78, 0x2c,
  0x20, 0x66, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20,
  0x61, 0x62, 0x73, 0x28, 0x66, 0x2e, 0x78, 0x29, 0x20, 0x2d, 0x20, 0x61,
  0x62, 0x73, 0x28, 0x66, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x20, 0x3d,
  0x20, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x2d, 0x6e,
  0x2e, 0x7a, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x2e,
  0x78, 0x79, 0x20, 0x2b, 0x3d, 0x20, 0x6e, 0x2e, 0x78, 0x79, 0x20, 0x3e,
  0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x2d, 0x74, 0x20, 0x3a,
  0x20, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74,
  0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
  0x65, 0x28, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x2f, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2f, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x20, 0x5b, 0x30, 0x2e, 0x30, 0x2c,
  0x20, 0x31, 0x2e, 0x30, 0x5d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x74, 0x6f, 0x20, 0x38, 0x20, 0x62, 0x69, 0x74, 0x20, 0x75, 0x69, 0x6e,
  0x74, 0x2e, 0x20, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x50, 0x61,
  0x63, 0x6b, 0x5f, 0x52, 0x38, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20,
  0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x28,
  0x72, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2c,
  0x20, 0x32, 0x35, 0x35, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x55, 0x6e, 0x70, 0x61, 0x63,
  0x6b, 0x5f, 0x52, 0x38, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x72, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x72,
  0x20, 0x26, 0x20, 0x30, 0x78, 0x46, 0x46, 0x29, 0x20, 0x2f, 0x20, 0x32,
  0x35, 0x35, 0x2e, 0x30, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x20, 0x74, 0x77, 0x6f, 0x20,
  0x38, 0x20, 0x62, 0x69, 0x74, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20,
  0x69, 0x6e, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x31, 0x36, 0x20, 0x62, 0x69,
  0x74, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x2e, 0x0d, 0x0a, 0x75, 0x69, 0x6e,
  0x74, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38, 0x47, 0x38, 0x5f,
  0x74, 0x6f, 0x5f, 0x52, 0x31, 0x36, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x28,
  0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x2c, 0x20, 0x69,
  0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x67, 0x29, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x28, 0x72, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x29, 0x20,
  0x7c, 0x20, 0x28, 0x28, 0x67, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66,
  0x29, 0x20, 0x3c, 0x3c, 0x20, 0x38, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6e, 0x70, 0x61,
  0x63, 0x6b, 0x5f, 0x52, 0x31, 0x36, 0x5f, 0x74, 0x6f, 0x5f, 0x52, 0x38,
  0x47, 0x38, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x28, 0x69, 0x6e, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x76, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x72, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x75,
  0x69, 0x6e, 0x74, 0x20, 0x67, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x20, 0x26, 0x20, 0x30,
  0x78, 0x46, 0x46, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x67, 0x20,
  0x3d, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3e, 0x20, 0x38, 0x29, 0x20, 0x26,
  0x20, 0x30, 0x78, 0x46, 0x46, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x20, 0x75,
  0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2c, 0x20,
  0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x2d,
  0x20, 0x72, 0x67, 0x62, 0x2e, 0x72, 0x67, 0x20, 0x61, 0x72, 0x65, 0x20,
  0x69, 0x6e, 0x20, 0x5b, 0x30, 0x2c, 0x20, 0x31, 0x5d, 0x20, 0x72, 0x61,
  0x6e, 0x67, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x61,
  0x73, 0x20, 0x74, 0x77, 0x6f, 0x20, 0x38, 0x20, 0x62, 0x69, 0x74, 0x20,
  0x75, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x2d,
  0x20, 0x72, 0x67, 0x62, 0x2e, 0x62, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x30,
  0x2c, 0x20, 0x46, 0x4c, 0x54, 0x5f, 0x31, 0x36, 0x5f, 0x42, 0x49, 0x54,
  0x5f, 0x4d, 0x41, 0x58, 0x5d, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20,
  0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20,
  0x31, 0x36, 0x62, 0x69, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2e,
  0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x5f,
  0x52, 0x38, 0x47, 0x38, 0x42, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41,
  0x54, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69,
  0x6e, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x5f,
  0x52, 0x38, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x72, 0x67, 0x62,
  0x2e, 0x72, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69,
  0x6e, 0x74, 0x20, 0x67, 0x20, 0x3d, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x5f,
  0x52, 0x38, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x72, 0x67, 0x62,
  0x2e, 0x67, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x38, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20,
  0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x72, 0x67, 0x62,
  0x2e, 0x62, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x31, 0x36, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72,
  0x20, 0x7c, 0x20, 0x67, 0x20, 0x7c, 0x20, 0x62, 0x3b, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x55,
  0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38, 0x47, 0x38, 0x42, 0x31,
  0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x75, 0x69, 0x6e, 0x74,
  0x20, 0x72, 0x67, 0x62, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20,
  0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38, 0x5f, 0x46, 0x4c,
  0x4f, 0x41, 0x54, 0x28, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x20, 0x3d,
  0x20, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38, 0x5f, 0x46,
  0x4c, 0x4f, 0x41, 0x54, 0x28, 0x72, 0x67, 0x62, 0x20, 0x3e, 0x3e, 0x20,
  0x38, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x62, 0x20, 0x3d, 0x20, 0x66, 0x31, 0x36, 0x74, 0x6f,
  0x66, 0x33, 0x32, 0x28, 0x72, 0x67, 0x62, 0x20, 0x3e, 0x3e, 0x20, 0x31,
  0x36, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74,
  0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x72,
  0x2c, 0x20, 0x67, 0x2c, 0x20, 0x62, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x54, 0x6f, 0x42, 0x79, 0x74, 0x65, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x76, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28,
  0x76, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x29, 0x20, 0x3c,
  0x3c, 0x20, 0x31, 0x36, 0x29, 0x20, 0x2b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x76,
  0x2e, 0x79, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x29, 0x20, 0x3c, 0x3c,
  0x20, 0x38, 0x29, 0x20, 0x2b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x76, 0x2e, 0x7a, 0x20,
  0x2a, 0x20, 0x32, 0x35, 0x35, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x42, 0x79, 0x74,
  0x65, 0x33, 0x54, 0x6f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
  0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x75, 0x69, 0x6e,
  0x74, 0x20, 0x76, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x28, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x28, 0x76, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x26,
  0x20, 0x30, 0x78, 0x66, 0x66, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x20, 0x3e, 0x3e, 0x20, 0x38, 0x29,
  0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x2c, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x20, 0x26, 0x20, 0x30, 0x78,
  0x66, 0x66, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x45, 0x6e, 0x63, 0x6f,
  0x64, 0x65, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x61, 0x6e,
  0x64, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x77, 0x69, 0x74, 0x68,
  0x20, 0x31, 0x36, 0x20, 0x62, 0x69, 0x74, 0x73, 0x20, 0x61, 0x6c, 0x6c,
  0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65,
  0x61, 0x63, 0x68, 0x2e, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x45,
  0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44,
  0x65, 0x70, 0x74, 0x68, 0x5f, 0x4e, 0x31, 0x36, 0x44, 0x31, 0x36, 0x28,
  0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x29, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x28, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x29, 0x2c, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x29, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x50,
  0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38, 0x47, 0x38, 0x42, 0x31, 0x36, 0x5f,
  0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
  0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68,
  0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x20, 0x31, 0x36,
  0x20, 0x62, 0x69, 0x74, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20,
  0x61, 0x6e, 0x64, 0x20, 0x31, 0x36, 0x62, 0x69, 0x74, 0x20, 0x64, 0x65,
  0x70, 0x74, 0x68, 0x2e, 0x0d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x44,
  0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44,
  0x65, 0x70, 0x74, 0x68, 0x5f, 0x4e, 0x31, 0x36, 0x44, 0x31, 0x36, 0x28,
  0x69, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b,
  0x65, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2c,
  0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20,
  0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x29,
  0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d,
  0x20, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38, 0x47, 0x38,
  0x42, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x28, 0x70, 0x61,
  0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
  0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x28, 0x65, 0x6e, 0x63, 0x6f, 0x64,
  0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x65, 0x6e, 0x63, 0x6f,
  0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70,
  0x74, 0x68, 0x2e, 0x7a, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x75, 0x69, 0x6e, 0x74, 0x20, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20,
  0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x44, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x4e, 0x31, 0x36, 0x44, 0x31, 0x36,
  0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x64, 0x65, 0x70,
  0x74, 0x68, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x76,
  0x6f, 0x69, 0x64, 0x20, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x69, 0x6e,
  0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
  0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68,
  0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x6f, 0x75, 0x74,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x44, 0x65,
  0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65,
  0x70, 0x74, 0x68, 0x5f, 0x4e, 0x31, 0x36, 0x44, 0x31, 0x36, 0x28, 0x65,
  0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x44, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
  0x6c, 0x2c, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x29, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x65,
  0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x28, 0x69,
  0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64,
  0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x64, 0x65, 0x70, 0x74, 0x68, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x4e,
  0x31, 0x36, 0x44, 0x31, 0x36, 0x28, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
  0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68,
  0x2c, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x64, 0x65,
  0x70, 0x74, 0x68, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x29, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6e,
  0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x69,
  0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65,
  0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2c, 0x20, 0x6f, 0x75, 0x74,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f,
  0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x6f,
  0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x70,
  0x74, 0x68, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64,
  0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x20, 0x3d, 0x20, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52,
  0x38, 0x47, 0x38, 0x42, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54,
  0x28, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64,
  0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x63,
  0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d,
  0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x78, 0x79, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d,
  0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x7a, 0x3b, 0x0d, 0x0a,
  0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2f, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x33, 0x44, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
  0x6e, 0x6f, 0x69, 0x73, 0x65, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x65,
  0x66, 0x3a, 0x20, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77,
  0x77, 0x77, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x74, 0x6f, 0x79,
  0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x58, 0x73,
  0x58, 0x66, 0x52, 0x48, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x68, 0x65,
  0x20, 0x4d, 0x49, 0x54, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67,
  0x68, 0x74, 0x20, 0xec, 0xa7, 0xa4, 0x20, 0x32, 0x30, 0x31, 0x37, 0x20,
  0x49, 0x6e, 0x69, 0x67, 0x6f, 0x20, 0x51, 0x75, 0x69, 0x6c, 0x65, 0x7a,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
  0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x68, 0x65, 0x72, 0x65, 0x62,
  0x79, 0x20, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2c, 0x20, 0x66,
  0x72, 0x65, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x63, 0x68, 0x61, 0x72, 0x67,
  0x65, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x70, 0x65,
  0x72, 0x73, 0x6f, 0x6e, 0x20, 0x6f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x69,
  0x6e, 0x67, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66,
  0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
  0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63,
  0x69, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
  0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x69, 0x6c, 0x65,
  0x73, 0x20, 0x28, 0x74, 0x68, 0x65, 0x20, 0x22, 0x53, 0x6f, 0x66, 0x74,
  0x77, 0x61, 0x72, 0x65, 0x22, 0x29, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x64,
  0x65, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53,
  0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68,
  0x6f, 0x75, 0x74, 0x20, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69,
  0x6e, 0x67, 0x20, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x6c,
  0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20,
  0x75, 0x73, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x2c, 0x20, 0x6d,
  0x6f, 0x64, 0x69, 0x66, 0x79, 0x2c, 0x20, 0x6d, 0x65, 0x72, 0x67, 0x65,
  0x2c, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2c, 0x20, 0x64,
  0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2c, 0x20, 0x73,
  0x75, 0x62, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2c, 0x20, 0x61,
  0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x6c, 0x6c, 0x20, 0x63,
  0x6f, 0x70, 0x69, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2c, 0x20, 0x61,
  0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
  0x20, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x20, 0x74, 0x6f, 0x20,
  0x77, 0x68, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x6f, 0x66,
  0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x66, 0x75, 0x72,
  0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x6f,
  0x20, 0x73, 0x6f, 0x2c, 0x20, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
  0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c,
  0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x54, 0x68, 0x65, 0x20, 0x61, 0x62,
  0x6f, 0x76, 0x65, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68,
  0x74, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x20, 0x61, 0x6e, 0x64,
  0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
  0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x20,
  0x73, 0x68, 0x61, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6e, 0x63,
  0x6c, 0x75, 0x64, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6c, 0x6c,
  0x20, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x73,
  0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x70,
  0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2e,
  0x20, 0x54, 0x48, 0x45, 0x20, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52,
  0x45, 0x20, 0x49, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
  0x44, 0x20, 0x22, 0x41, 0x53, 0x20, 0x49, 0x53, 0x22, 0x2c, 0x20, 0x57,
  0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x20, 0x57, 0x41, 0x52, 0x52, 0x41,
  0x4e, 0x54, 0x59, 0x20, 0x4f, 0x46, 0x20, 0x41, 0x4e, 0x59, 0x20, 0x4b,
  0x49, 0x4e, 0x44, 0x2c, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53,
  0x20, 0x4f, 0x52, 0x20, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x2c,
  0x20, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x42,
  0x55, 0x54, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x4c, 0x49, 0x4d, 0x49, 0x54,
  0x45, 0x44, 0x20, 0x54, 0x4f, 0x20, 0x54, 0x48, 0x45, 0x20, 0x57, 0x41,
  0x52, 0x52, 0x41, 0x4e, 0x54, 0x49, 0x45, 0x53, 0x20, 0x4f, 0x46, 0x20,
  0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x41, 0x42, 0x49, 0x4c,
  0x49, 0x54, 0x59, 0x2c, 0x20, 0x46, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53,
  0x20, 0x46, 0x4f, 0x52, 0x20, 0x41, 0x20, 0x50, 0x41, 0x52, 0x54, 0x49,
  0x43, 0x55, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53,
  0x45, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x4e, 0x4f, 0x4e, 0x49, 0x4e, 0x46,
  0x52, 0x49, 0x4e, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x2e, 0x20, 0x49,
  0x4e, 0x20, 0x4e, 0x4f, 0x20, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x20, 0x53,
  0x48, 0x41, 0x4c, 0x4c, 0x20, 0x54, 0x48, 0x45, 0x20, 0x41, 0x55, 0x54,
  0x48, 0x4f, 0x52, 0x53, 0x20, 0x4f, 0x52, 0x20, 0x43, 0x4f, 0x50, 0x59,
  0x52, 0x49, 0x47, 0x48, 0x54, 0x20, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52,
  0x53, 0x20, 0x42, 0x45, 0x20, 0x4c, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x20,
  0x46, 0x4f, 0x52, 0x20, 0x41, 0x4e, 0x59, 0x20, 0x43, 0x4c, 0x41, 0x49,
  0x4d, 0x2c, 0x20, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x20, 0x4f,
  0x52, 0x20, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x20, 0x4c, 0x49, 0x41, 0x42,
  0x49, 0x4c, 0x49, 0x54, 0x59, 0x2c, 0x20, 0x57, 0x48, 0x45, 0x54, 0x48,
  0x45, 0x52, 0x20, 0x49, 0x4e, 0x20, 0x41, 0x4e, 0x20, 0x41, 0x43, 0x54,
  0x49, 0x4f, 0x4e, 0x20, 0x4f, 0x46, 0x20, 0x43, 0x4f, 0x4e, 0x54, 0x52,
  0x41, 0x43, 0x54, 0x2c, 0x20, 0x54, 0x4f, 0x52, 0x54, 0x20, 0x4f, 0x52,
  0x20, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x57, 0x49, 0x53, 0x45, 0x2c, 0x20,
  0x41, 0x52, 0x49, 0x53, 0x49, 0x4e, 0x47, 0x20, 0x46, 0x52, 0x4f, 0x4d,
  0x2c, 0x20, 0x4f, 0x55, 0x54, 0x20, 0x4f, 0x46, 0x20, 0x4f, 0x52, 0x20,
  0x49, 0x4e, 0x20, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f,
  0x4e, 0x20, 0x57, 0x49, 0x54, 0x48, 0x20, 0x54, 0x48, 0x45, 0x20, 0x53,
  0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x20, 0x4f, 0x52, 0x20, 0x54,
  0x48, 0x45, 0x20, 0x55, 0x53, 0x45, 0x20, 0x4f, 0x52, 0x20, 0x4f, 0x54,
  0x48, 0x45, 0x52, 0x20, 0x44, 0x45, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x53,
  0x20, 0x49, 0x4e, 0x20, 0x54, 0x48, 0x45, 0x20, 0x53, 0x4f, 0x46, 0x54,
  0x57, 0x41, 0x52, 0x45, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x68, 0x61, 0x73, 0x68, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x70, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x28, 0x70, 0x2a, 0x30,
  0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, 0x39, 0x39, 0x20, 0x2b, 0x20, 0x2e,
  0x31, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x70, 0x20, 0x2a,
  0x3d, 0x20, 0x31, 0x37, 0x2e, 0x30, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63,
  0x28, 0x70, 0x2e, 0x78, 0x2a, 0x70, 0x2e, 0x79, 0x2a, 0x70, 0x2e, 0x7a,
  0x2a, 0x28, 0x70, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x70, 0x2e, 0x79, 0x20,
  0x2b, 0x20, 0x70, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2f, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x6e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x20, 0x6d, 0x61, 0x70, 0x2c, 0x20, 0x63, 0x6f,
  0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x69, 0x67,
  0x6e, 0x65, 0x64, 0x2c, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x20, 0x74,
  0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x6f, 0x2d, 0x77, 0x6f,
  0x72, 0x6c, 0x64, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x74, 0x72,
  0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x0d, 0x0a, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x42, 0x75, 0x6d, 0x70, 0x4d, 0x61, 0x70,
  0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c,
  0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x75, 0x6d, 0x70,
  0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x29, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x43, 0x6f, 0x6d,
  0x70, 0x75, 0x74, 0x65, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74,
  0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69,
  0x7a, 0x65, 0x28, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x61, 0x6e, 0x67,
  0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x61,
  0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x28,
  0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2c, 0x20, 0x73, 0x75, 0x72,
  0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x33, 0x78, 0x33, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x53,
  0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53,
  0x70, 0x61, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x33, 0x78, 0x33, 0x28, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2c,
  0x20, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2c, 0x20,
  0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
  0x6c, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72,
  0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x62, 0x75,
  0x6d, 0x70, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x74, 0x61,
  0x6e, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f,
  0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x29, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x61,
  0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x74, 0x61,
  0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74,
  0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x27, 0x73, 0x20, 0x76, 0x65,
  0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74,
  0x68, 0x65, 0x69, 0x72, 0x20, 0x75, 0x76, 0x20, 0x63, 0x6f, 0x6f, 0x72,
  0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f,
  0x20, 0x52, 0x65, 0x66, 0x3a, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
  0x2f, 0x77, 0x77, 0x77, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x67, 0x6c, 0x2d,
  0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6f, 0x72, 0x67,
  0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
  0x65, 0x2d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x2f,
  0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2d, 0x31, 0x33, 0x2d,
  0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69,
  0x6e, 0x67, 0x2f, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20,
  0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x6e,
  0x67, 0x65, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x76, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x31, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x32, 0x2c, 0x20, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x30,
  0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20,
  0x75, 0x76, 0x31, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x32, 0x20, 0x75, 0x76, 0x32, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75,
  0x6c, 0x61, 0x74, 0x65, 0x20, 0x65, 0x64, 0x67, 0x65, 0x73, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65,
  0x6c, 0x74, 0x61, 0x50, 0x6f, 0x73, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x31,
  0x20, 0x2d, 0x20, 0x76, 0x30, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61,
  0x50, 0x6f, 0x73, 0x32, 0x20, 0x3d, 0x20, 0x76, 0x32, 0x20, 0x2d, 0x20,
  0x76, 0x30, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x55, 0x56, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64,
  0x65, 0x6c, 0x74, 0x61, 0x55, 0x56, 0x31, 0x20, 0x3d, 0x20, 0x75, 0x76,
  0x31, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x30, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x65, 0x6c,
  0x74, 0x61, 0x55, 0x56, 0x32, 0x20, 0x3d, 0x20, 0x75, 0x76, 0x32, 0x20,
  0x2d, 0x20, 0x75, 0x76, 0x30, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x20, 0x3d, 0x20,
  0x31, 0x2e, 0x30, 0x66, 0x20, 0x2f, 0x20, 0x28, 0x64, 0x65, 0x6c, 0x74,
  0x61, 0x55, 0x56, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x64, 0x65, 0x6c,
  0x74, 0x61, 0x55, 0x56, 0x32, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x64, 0x65,
  0x6c, 0x74, 0x61, 0x55, 0x56, 0x31, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x64,
  0x65, 0x6c, 0x74, 0x61, 0x55, 0x56, 0x32, 0x2e, 0x78, 0x29, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20,
  0x28, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x6f, 0x73, 0x31, 0x20, 0x2a,
  0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x56, 0x32, 0x2e, 0x79, 0x20,
  0x2d, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x6f, 0x73, 0x32, 0x20,
  0x2a, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x56, 0x31, 0x2e, 0x79,
  0x29, 0x20, 0x2a, 0x20, 0x72, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x52, 0x61, 0x79, 0x50,
  0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20,
  0x70, 0x6c, 0x61, 0x6e, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x6c, 0x61, 0x6e,
  0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x72, 0x61, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69,
  0x6e, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x61,
  0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x64, 0x20, 0x3d, 0x20, 0x2d, 0x64, 0x6f, 0x74, 0x28, 0x70,
  0x6c, 0x61, 0x6e, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20,
  0x70, 0x6c, 0x61, 0x6e, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x74, 0x20, 0x3d, 0x20, 0x28, 0x2d, 0x64, 0x6f, 0x74, 0x28, 0x70,
  0x6c, 0x61, 0x6e, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20,
  0x72, 0x61, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x20, 0x2d,
  0x20, 0x64, 0x29, 0x20, 0x2f, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x70, 0x6c,
  0x61, 0x6e, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x72,
  0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x72, 0x61, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20,
  0x2b, 0x20, 0x74, 0x20, 0x2a, 0x20, 0x72, 0x61, 0x79, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x72,
  0x73, 0x65, 0x32, 0x78, 0x32, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x78, 0x32, 0x20, 0x6d, 0x61, 0x74, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x78, 0x32, 0x20, 0x69, 0x6e, 0x76,
  0x65, 0x72, 0x73, 0x65, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x74, 0x65,
  0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61,
  0x74, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x6d, 0x61,
  0x74, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x20, 0x2d, 0x20, 0x6d, 0x61,
  0x74, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x6d, 0x61,
  0x74, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63,
  0x70, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74,
  0x20, 0x3d, 0x20, 0x72, 0x63, 0x70, 0x28, 0x64, 0x65, 0x74, 0x65, 0x72,
  0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5b, 0x30, 0x5d,
  0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x74, 0x5b, 0x31, 0x5d,
  0x5b, 0x31, 0x5d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e,
  0x76, 0x65, 0x72, 0x73, 0x65, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x20,
  0x3d, 0x20, 0x6d, 0x61, 0x74, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73,
  0x65, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x2d, 0x6d,
  0x61, 0x74, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5b, 0x30,
  0x5d, 0x5b, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x2d, 0x6d, 0x61, 0x74, 0x5b,
  0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x72, 0x63,
  0x70, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74,
  0x20, 0x2a, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x61, 0x62, 0x73, 0x28, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d,
  0x69, 0x6e, 0x61, 0x6e, 0x74, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2a, 0x0d, 0x0a, 0x20, 0x55, 0x73,
  0x69, 0x6e, 0x67, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
  0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72,
  0x69, 0x62, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x50, 0x42, 0x52, 0x54,
  0x2c, 0x20, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x64, 0x65,
  0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x6f, 0x66, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x28, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20,
  0x69, 0x6e, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29,
  0x2f, 0x28, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x69, 0x6e, 0x20,
  0x55, 0x56, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
  0x65, 0x73, 0x29, 0x0d, 0x0a, 0x20, 0x61, 0x2e, 0x6b, 0x2e, 0x61, 0x20,
  0x64, 0x70, 0x2f, 0x64, 0x75, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x70,
  0x2f, 0x64, 0x76, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x47, 0x69, 0x76, 0x65,
  0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x33, 0x20, 0x55, 0x56, 0x20, 0x61,
  0x6e, 0x64, 0x20, 0x33, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c,
  0x65, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2c, 0x20, 0x74, 0x68,
  0x69, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65,
  0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x20, 0x61, 0x73,
  0x20, 0x61, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x65, 0x71,
  0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0d, 0x0a, 0x0d, 0x0a, 0x20,
  0x28, 0x75, 0x76, 0x30, 0x2e, 0x75, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x32,
  0x2e, 0x75, 0x2c, 0x20, 0x75, 0x76, 0x30, 0x2e, 0x76, 0x20, 0x2d, 0x20,
  0x75, 0x76, 0x32, 0x2e, 0x76, 0x29, 0x20, 0x20, 0x20, 0x28, 0x64, 0x70,
  0x2f, 0x64, 0x75, 0x29, 0x20, 0x20, 0x20, 0x3d, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x28, 0x70, 0x30, 0x20, 0x2d, 0x20, 0x70, 0x32, 0x29, 0x0d, 0x0a,
  0x20, 0x28, 0x75, 0x76, 0x31, 0x2e, 0x75, 0x20, 0x2d, 0x20, 0x75, 0x76,
  0x32, 0x2e, 0x75, 0x2c, 0x20, 0x75, 0x76, 0x31, 0x2e, 0x76, 0x20, 0x2d,
  0x20, 0x75, 0x76, 0x32, 0x2e, 0x76, 0x29, 0x20, 0x20, 0x20, 0x28, 0x64,
  0x70, 0x2f, 0x64, 0x76, 0x29, 0x20, 0x20, 0x20, 0x3d, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x28, 0x70, 0x31, 0x20, 0x2d, 0x20, 0x70, 0x32, 0x29, 0x0d,
  0x0a, 0x0d, 0x0a, 0x20, 0x54, 0x6f, 0x20, 0x73, 0x6f, 0x6c, 0x76, 0x65,
  0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x70, 0x2f, 0x64, 0x75, 0x2c, 0x20,
  0x77, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x32, 0x78, 0x32, 0x20, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78,
  0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x65, 0x66, 0x74,
  0x20, 0x73, 0x69, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x28, 0x64, 0x70, 0x2f, 0x64, 0x75, 0x29,
  0x20, 0x20, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x76, 0x30, 0x2e, 0x75, 0x20,
  0x2d, 0x20, 0x75, 0x76, 0x32, 0x2e, 0x75, 0x2c, 0x20, 0x75, 0x76, 0x30,
  0x2e, 0x76, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x32, 0x2e, 0x76, 0x29, 0x5e,
  0x2d, 0x31, 0x20, 0x20, 0x28, 0x70, 0x30, 0x20, 0x2d, 0x20, 0x70, 0x32,
  0x29, 0x0d, 0x0a, 0x20, 0x28, 0x64, 0x70, 0x2f, 0x64, 0x76, 0x29, 0x20,
  0x20, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x76, 0x31, 0x2e, 0x75, 0x20, 0x2d,
  0x20, 0x75, 0x76, 0x32, 0x2e, 0x75, 0x2c, 0x20, 0x75, 0x76, 0x31, 0x2e,
  0x76, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x32, 0x2e, 0x76, 0x29, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x28, 0x70, 0x31, 0x20, 0x2d, 0x20, 0x70, 0x32, 0x29,
  0x0d, 0x0a, 0x2a, 0x2f, 0x0d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x43,
  0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x61,
  0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x44,
  0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x28, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x30, 0x2c, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x31, 0x2c, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x32, 0x2c, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x30, 0x2c, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x70, 0x32, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x70, 0x64, 0x75, 0x2c,
  0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20,
  0x64, 0x70, 0x64, 0x76, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x78, 0x32, 0x20, 0x6c,
  0x69, 0x6e, 0x65, 0x61, 0x72, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f,
  0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x6e, 0x65,
  0x61, 0x72, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x30,
  0x5d, 0x20, 0x3d, 0x20, 0x75, 0x76, 0x30, 0x20, 0x2d, 0x20, 0x75, 0x76,
  0x32, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x6e, 0x65,
  0x61, 0x72, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x31,
  0x5d, 0x20, 0x3d, 0x20, 0x75, 0x76, 0x31, 0x20, 0x2d, 0x20, 0x75, 0x76,
  0x32, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x78, 0x33, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74,
  0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
  0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x70, 0x30, 0x20, 0x2d, 0x20, 0x70,
  0x32, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x69, 0x6e,
  0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5b, 0x31, 0x5d, 0x20, 0x3d,
  0x20, 0x70, 0x31, 0x20, 0x2d, 0x20, 0x70, 0x32, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x78,
  0x32, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x32,
  0x78, 0x32, 0x28, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x45, 0x71, 0x75,
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72,
  0x73, 0x65, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x64, 0x70, 0x64, 0x75, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72,
  0x73, 0x65, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x70,
  0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5b, 0x30,
  0x5d, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5b,
  0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x69, 0x6e,
  0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5b, 0x31, 0x5d, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x70, 0x64, 0x76, 0x20, 0x3d, 0x20,
  0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5b, 0x31, 0x5d, 0x5b, 0x30,
  0x5d, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x63,
  0x74, 0x6f, 0x72, 0x5b, 0x30, 0x5d, 0x20, 0x2b, 0x20, 0x69, 0x6e, 0x76,
  0x65, 0x72, 0x73, 0x65, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x20, 0x2a,
  0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
  0x5b, 0x31, 0x5d, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f,
  0x2a, 0x0d, 0x0a, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6d, 0x70,
  0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
  0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x20, 0x69, 0x6e,
  0x20, 0x50, 0x42, 0x52, 0x54, 0x2c, 0x20, 0x66, 0x69, 0x6e, 0x64, 0x69,
  0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76,
  0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x55, 0x56, 0x73, 0x20, 0x28, 0x64, 0x55, 0x2c, 0x20, 0x64,
  0x56, 0x29, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x78, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x79, 0x20,
  0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x0d, 0x0a,
  0x0d, 0x0a, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
  0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x20, 0x70, 0x6f, 0x69,
  0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f,
  0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
  0x20, 0x28, 0x70, 0x58, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x59, 0x29,
  0x20, 0x2b, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69,
  0x61, 0x6c, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76,
  0x65, 0x73, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x6e, 0x65,
  0x61, 0x72, 0x20, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
  0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x65,
  0x64, 0x3a, 0x0d, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x64, 0x65, 0x73,
  0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20,
  0x77, 0x69, 0x74, 0x68, 0x20, 0x70, 0x58, 0x2c, 0x20, 0x62, 0x75, 0x74,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x73,
  0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65,
  0x64, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x59, 0x0d, 0x0a, 0x0d, 0x0a, 0x28,
  0x20, 0x64, 0x70, 0x64, 0x75, 0x2e, 0x78, 0x2c, 0x20, 0x64, 0x70, 0x64,
  0x76, 0x2e, 0x78, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x3d, 0x20, 0x20, 0x20, 0x28, 0x70, 0x58, 0x2e, 0x78, 0x20,
  0x2d, 0x20, 0x70, 0x2e, 0x78, 0x29, 0x0d, 0x0a, 0x28, 0x20, 0x64, 0x70,
  0x64, 0x75, 0x2e, 0x79, 0x2c, 0x20, 0x64, 0x70, 0x64, 0x76, 0x2e, 0x79,
  0x29, 0x20, 0x20, 0x20, 0x28, 0x64, 0x55, 0x29, 0x20, 0x20, 0x20, 0x3d,
  0x20, 0x20, 0x20, 0x28, 0x70, 0x58, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x70,
  0x2e, 0x79, 0x29, 0x0d, 0x0a, 0x28, 0x20, 0x64, 0x70, 0x64, 0x75, 0x2e,
  0x7a, 0x2c, 0x20, 0x64, 0x70, 0x64, 0x76, 0x2e, 0x7a, 0x29, 0x20, 0x20,
  0x20, 0x28, 0x64, 0x56, 0x29, 0x20, 0x20, 0x20, 0x3d, 0x20, 0x20, 0x20,
  0x28, 0x70, 0x58, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x70, 0x2e, 0x7a, 0x29,
  0x0d, 0x0a, 0x0d, 0x0a, 0x42, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x20,
  0x69, 0x73, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x2d, 0x63, 0x6f, 0x6e, 0x73,
  0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x28, 0x33, 0x20, 0x65,
  0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64,
  0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x32, 0x20, 0x75, 0x6e, 0x6b, 0x6e,
  0x6f, 0x77, 0x6e, 0x73, 0x29, 0x2c, 0x20, 0x77, 0x65, 0x20, 0x70, 0x69,
  0x63, 0x6b, 0x20, 0x32, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
  0x73, 0x2e, 0x20, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x20, 0x6f, 0x6e, 0x65,
  0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x71, 0x75, 0x61,
  0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x0d, 0x0a, 0x62,
  0x65, 0x20, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
  0x2c, 0x20, 0x77, 0x65, 0x20, 0x70, 0x69, 0x63, 0x6b, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x32, 0x20, 0x2d, 0x20,
  0x6e, 0x61, 0x6d, 0x65, 0x6c, 0x79, 0x20, 0x32, 0x20, 0x77, 0x69, 0x74,
  0x68, 0x20, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x20, 0x6d, 0x61, 0x67, 0x6e,
  0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
  0x69, 0x72, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x20, 0x70, 0x72, 0x6f,
  0x64, 0x75, 0x63, 0x74, 0x2c, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20,
  0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65,
  0x6e, 0x74, 0x6c, 0x79, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
  0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x2e, 0x0d, 0x0a, 0x54, 0x48,
  0x65, 0x6e, 0x20, 0x77, 0x65, 0x20, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x20,
  0x66, 0x6f, 0x72, 0x20, 0x64, 0x55, 0x2c, 0x20, 0x64, 0x56, 0x20, 0x62,
  0x79, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x0d, 0x0a,
  0x0d, 0x0a, 0x64, 0x55, 0x20, 0x20, 0x20, 0x20, 0x3d, 0x20, 0x20, 0x20,
  0x28, 0x20, 0x64, 0x70, 0x64, 0x75, 0x2e, 0x78, 0x2c, 0x20, 0x64, 0x70,
  0x64, 0x76, 0x2e, 0x78, 0x29, 0x5e, 0x2d, 0x31, 0x20, 0x20, 0x28, 0x70,
  0x58, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x70, 0x2e, 0x78, 0x29, 0x0d, 0x0a,
  0x64, 0x56, 0x20, 0x20, 0x20, 0x20, 0x3d, 0x20, 0x20, 0x20, 0x28, 0x20,
  0x64, 0x70, 0x64, 0x75, 0x2e, 0x79, 0x2c, 0x20, 0x64, 0x70, 0x64, 0x76,
  0x2e, 0x79, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x70, 0x58, 0x2e,
  0x79, 0x20, 0x2d, 0x20, 0x70, 0x2e, 0x79, 0x29, 0x0d, 0x0a, 0x2a, 0x2f,
  0x0d, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75,
  0x6c, 0x61, 0x74, 0x65, 0x55, 0x56, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
  0x74, 0x69, 0x76, 0x65, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x64, 0x70, 0x64, 0x75, 0x2c, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x70, 0x64, 0x76, 0x2c, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x2c, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x70, 0x58, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x70, 0x59, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x78, 0x2c, 0x20, 0x6f,
  0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x64,
  0x79, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69,
  0x6e, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x61, 0x62, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d,
  0x20, 0x61, 0x62, 0x73, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x61,
  0x62, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x20, 0x3e,
  0x20, 0x61, 0x62, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79,
  0x20, 0x26, 0x26, 0x20, 0x61, 0x62, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
  0x6c, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x61, 0x62, 0x73, 0x4e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74,
  0x32, 0x28, 0x31, 0x2c, 0x20, 0x32, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73,
  0x65, 0x20, 0x69, 0x66, 0x20, 0x28, 0x61, 0x62, 0x73, 0x4e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x61, 0x62, 0x73, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x69,
  0x6e, 0x74, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x32, 0x29, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65,
  0x6c, 0x73, 0x65, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x64, 0x69,
  0x63, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x30,
  0x2c, 0x20, 0x31, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x32, 0x78, 0x32, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x45,
  0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x45, 0x71, 0x75, 0x61,
  0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x28, 0x64, 0x70, 0x64, 0x75, 0x5b, 0x69, 0x6e,
  0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x78, 0x5d, 0x2c, 0x20, 0x64, 0x70,
  0x64, 0x76, 0x5b, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x78,
  0x5d, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x6e,
  0x65, 0x61, 0x72, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5b,
  0x31, 0x5d, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28,
  0x64, 0x70, 0x64, 0x75, 0x5b, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
  0x2e, 0x79, 0x5d, 0x2c, 0x20, 0x64, 0x70, 0x64, 0x76, 0x5b, 0x69, 0x6e,
  0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x79, 0x5d, 0x29, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x78, 0x32, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65,
  0x32, 0x78, 0x32, 0x28, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x45, 0x71,
  0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x76, 0x65,
  0x72, 0x73, 0x65, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x70, 0x6f, 0x69, 0x6e,
  0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x28, 0x70, 0x58, 0x5b, 0x69, 0x6e, 0x64, 0x69,
  0x63, 0x65, 0x73, 0x2e, 0x78, 0x5d, 0x20, 0x2d, 0x20, 0x70, 0x5b, 0x69,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x78, 0x5d, 0x2c, 0x20, 0x70,
  0x58, 0x5b, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x79, 0x5d,
  0x20, 0x2d, 0x20, 0x70, 0x5b, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
  0x2e, 0x79, 0x5d, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64,
  0x64, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x6d, 0x75, 0x6c,
  0x28, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2c, 0x20, 0x70, 0x6f,
  0x69, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x29, 0x3b,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x69, 0x6e,
  0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x28, 0x70, 0x59, 0x5b, 0x69, 0x6e, 0x64, 0x69,
  0x63, 0x65, 0x73, 0x2e, 0x78, 0x5d, 0x20, 0x2d, 0x20, 0x70, 0x5b, 0x69,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x78, 0x5d, 0x2c, 0x20, 0x70,
  0x59, 0x5b, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x79, 0x5d,
  0x20, 0x2d, 0x20, 0x70, 0x5b, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
  0x2e, 0x79, 0x5d, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64,
  0x64, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x6d, 0x75, 0x6c,
  0x28, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2c, 0x20, 0x70, 0x6f,
  0x69, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x29, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x76, 0x6f, 0x69,
  0x64, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x55,
  0x56, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73,
  0x28, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x68, 0x69, 0x74, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67,
  0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x70, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x70, 0x31, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x32, 0x2c, 0x20, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x75, 0x76, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x31, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x32, 0x2c, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x33, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73,
  0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64,
  0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74,
  0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20,
  0x64, 0x64, 0x78, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x79, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x52, 0x61, 0x79, 0x20, 0x72, 0x61, 0x79,
  0x31, 0x30, 0x20, 0x3d, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
  0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x61, 0x79, 0x28, 0x44,
  0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x61, 0x79, 0x73, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x28, 0x29, 0x2e, 0x78, 0x79, 0x20, 0x2b, 0x20,
  0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x31, 0x2c, 0x20, 0x30, 0x29, 0x2c,
  0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69,
  0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72,
  0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x52, 0x61, 0x79, 0x20, 0x72, 0x61, 0x79, 0x30, 0x31, 0x20, 0x3d, 0x20,
  0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x52, 0x61, 0x79, 0x28, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
  0x63, 0x68, 0x52, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x28,
  0x29, 0x2e, 0x78, 0x79, 0x20, 0x2b, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32,
  0x28, 0x30, 0x2c, 0x20, 0x31, 0x29, 0x2c, 0x20, 0x63, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20,
  0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
  0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d,
  0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x29,
  0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x50,
  0x6f, 0x69, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x52, 0x61, 0x79, 0x50, 0x6c,
  0x61, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x28, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c,
  0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x72, 0x61, 0x79,
  0x31, 0x30, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x20, 0x72,
  0x61, 0x79, 0x31, 0x30, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
  0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x52, 0x61, 0x79, 0x50,
  0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x28, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67,
  0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x72, 0x61,
  0x79, 0x30, 0x31, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x20,
  0x72, 0x61, 0x79, 0x30, 0x31, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x70, 0x64, 0x75,
  0x2c, 0x20, 0x64, 0x70, 0x64, 0x76, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
  0x6c, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73,
  0x28, 0x75, 0x76, 0x30, 0x2c, 0x20, 0x75, 0x76, 0x31, 0x2c, 0x20, 0x75,
  0x76, 0x32, 0x2c, 0x20, 0x70, 0x30, 0x2c, 0x20, 0x70, 0x31, 0x2c, 0x20,
  0x70, 0x32, 0x2c, 0x20, 0x64, 0x70, 0x64, 0x75, 0x2c, 0x20, 0x64, 0x70,
  0x64, 0x76, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x43, 0x61,
  0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x56, 0x44, 0x65, 0x72,
  0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x28, 0x74, 0x72, 0x69,
  0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c,
  0x20, 0x64, 0x70, 0x64, 0x75, 0x2c, 0x20, 0x64, 0x70, 0x64, 0x76, 0x2c,
  0x20, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x2c, 0x20, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x69,
  0x6e, 0x74, 0x2c, 0x20, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x50,
  0x6f, 0x69, 0x6e, 0x74, 0x2c, 0x20, 0x64, 0x64, 0x78, 0x2c, 0x20, 0x64,
  0x64, 0x79, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x20,
  0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x20,
  0x6f, 0x66, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x63,
  0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x20, 0x6f,
  0x6e, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x74, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x2e, 0x0d, 0x0a, 0x76, 0x6f, 0x69,
  0x64, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x55,
  0x56, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73,
  0x28, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e,
  0x74, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
  0x20, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2c, 0x20,
  0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x30, 0x2c, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x43, 0x75, 0x72,
  0x72, 0x65, 0x6e, 0x74, 0x20, 0x72, 0x61, 0x79, 0x27, 0x73, 0x20, 0x69,
  0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20,
  0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74,
  0x68, 0x65, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x2e,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x52, 0x61, 0x79,
  0x20, 0x72, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20,
  0x72, 0x79, 0x2c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x41, 0x75, 0x78, 0x69,
  0x6c, 0x61, 0x72, 0x79, 0x20, 0x72, 0x61, 0x79, 0x73, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x75, 0x76, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x31, 0x2c, 0x20, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x32, 0x2c, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x55, 0x56, 0x20, 0x63, 0x6f, 0x6f,
  0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x74, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65,
  0x27, 0x73, 0x20, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x2e,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x33, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c,
  0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41,
  0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
  0x20, 0x64, 0x64, 0x78, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x79, 0x2c, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x55, 0x56, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76,
  0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70,
  0x78, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x33, 0x20, 0x70, 0x79, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x41, 0x75, 0x78, 0x69, 0x6c, 0x61, 0x72, 0x79, 0x20, 0x72,
  0x61, 0x79, 0x73, 0x27, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65,
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
  0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x2e, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x70, 0x78, 0x20, 0x3d, 0x20, 0x52, 0x61,
  0x79, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73,
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x68, 0x69, 0x74, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x72, 0x69, 0x61,
  0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20,
  0x72, 0x78, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x20, 0x72,
  0x78, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x70, 0x79, 0x20, 0x3d, 0x20,
  0x52, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65,
  0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x68, 0x69, 0x74,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x2c, 0x20, 0x72, 0x79, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c,
  0x20, 0x72, 0x79, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
  0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x43,
  0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x56, 0x44, 0x65,
  0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x28, 0x74, 0x72,
  0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x2c, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2c, 0x20, 0x62,
  0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2c, 0x20, 0x68, 0x69,
  0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x70,
  0x78, 0x2c, 0x20, 0x70, 0x79, 0x2c, 0x20, 0x64, 0x64, 0x78, 0x2c, 0x20,
  0x64, 0x64, 0x79, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73,
  0x20, 0x61, 0x75, 0x78, 0x69, 0x6c, 0x61, 0x72, 0x79, 0x20, 0x63, 0x61,
  0x6d, 0x65, 0x72, 0x61, 0x20, 0x72, 0x61, 0x79, 0x73, 0x20, 0x6f, 0x66,
  0x66, 0x73, 0x65, 0x74, 0x20, 0x62, 0x79, 0x20, 0x6f, 0x6e, 0x65, 0x20,
  0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x69, 0x6e, 0x20, 0x78, 0x20, 0x61,
  0x6e, 0x64, 0x20, 0x79, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65,
  0x6e, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x20, 0x0d, 0x0a, 0x76,
  0x6f, 0x69, 0x64, 0x20, 0x47, 0x65, 0x74, 0x41, 0x75, 0x78, 0x69, 0x6c,
  0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x61, 0x79,
  0x73, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20,
  0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x34, 0x78, 0x34, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x74,
  0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69,
  0x67, 0x69, 0x6e, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x52, 0x61, 0x79,
  0x20, 0x72, 0x78, 0x2c, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x52, 0x61, 0x79,
  0x20, 0x72, 0x79, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x78, 0x20, 0x3d, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
  0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x61, 0x79, 0x28,
  0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x61, 0x79, 0x73,
  0x49, 0x6e, 0x64, 0x65, 0x78, 0x28, 0x29, 0x2e, 0x78, 0x79, 0x20, 0x2b,
  0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x31, 0x2c, 0x20, 0x30, 0x29,
  0x2c, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57,
  0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f,
  0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x79, 0x20, 0x3d, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
  0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x61, 0x79, 0x28,
  0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x61, 0x79, 0x73,
  0x49, 0x6e, 0x64, 0x65, 0x78, 0x28, 0x29, 0x2e, 0x78, 0x79, 0x20, 0x2b,
  0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x29,
  0x2c, 0x20, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57,
  0x69, 0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f,
  0x72, 0x69, 0x67, 0x69, 0x6e, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x6e, 0x34,
  0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76,
  0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65,
  0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x6d, 0x69, 0x6e,
  0x28, 0x76, 0x2e, 0x78, 0x2c, 0x20, 0x76, 0x2e, 0x79, 0x29, 0x2c, 0x20,
  0x6d, 0x69, 0x6e, 0x28, 0x76, 0x2e, 0x7a, 0x2c, 0x20, 0x76, 0x2e, 0x77,
  0x29, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x34, 0x28, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x29, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x2e, 0x78,
  0x2c, 0x20, 0x76, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x61, 0x78, 0x28,
  0x76, 0x2e, 0x7a, 0x2c, 0x20, 0x76, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0d,
  0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20,
  0x47, 0x65, 0x74, 0x32, 0x44, 0x51, 0x75, 0x61, 0x64, 0x49, 0x6e, 0x64,
  0x65, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x69, 0x6e, 0x20,
  0x75, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x75, 0x69,
  0x6e, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4f, 0x66, 0x66,
  0x73, 0x65, 0x74, 0x73, 0x5b, 0x34, 0x5d, 0x20, 0x3d, 0x20, 0x7b, 0x20,
  0x7b, 0x30, 0x2c, 0x20, 0x30, 0x7d, 0x2c, 0x20, 0x7b, 0x31, 0x2c, 0x20,
  0x30, 0x7d, 0x2c, 0x20, 0x7b, 0x30, 0x2c, 0x20, 0x31, 0x7d, 0x2c, 0x20,
  0x7b, 0x31, 0x2c, 0x20, 0x31, 0x7d, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x69, 0x6e,
  0x64, 0x65, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x5b, 0x69,
  0x5d, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e,
  0x74, 0x20, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4f, 0x66,
  0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74,
  0x54, 0x6f, 0x54, 0x68, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
  0x63, 0x65, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x72, 0x65, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x56, 0x61, 0x6c,
  0x75, 0x65, 0x73, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x65, 0x6c, 0x74,
  0x61, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x72, 0x65, 0x66, 0x56,
  0x61, 0x6c, 0x75, 0x65, 0x20, 0x2d, 0x20, 0x76, 0x56, 0x61, 0x6c, 0x75,
  0x65, 0x73, 0x29, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x75, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65,
  0x78, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5b, 0x31, 0x5d,
  0x20, 0x3c, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5b, 0x30, 0x5d, 0x20,
  0x3f, 0x20, 0x31, 0x20, 0x3a, 0x20, 0x30, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f,
  0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x47, 0x65, 0x74, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x4f, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43,
  0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x54, 0x68, 0x65, 0x52,
  0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x28, 0x69, 0x6e, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x65, 0x66, 0x56, 0x61, 0x6c,
  0x75, 0x65, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x34, 0x20, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x34, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x3d, 0x20, 0x61, 0x62,
  0x73, 0x28, 0x72, 0x65, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2d,
  0x20, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x6f,
  0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x65,
  0x6c, 0x74, 0x61, 0x5b, 0x31, 0x5d, 0x20, 0x3c, 0x20, 0x64, 0x65, 0x6c,
  0x74, 0x61, 0x5b, 0x30, 0x5d, 0x20, 0x3f, 0x20, 0x31, 0x20, 0x3a, 0x20,
  0x30, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61,
  0x5b, 0x32, 0x5d, 0x20, 0x3c, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5b,
  0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x20, 0x3f, 0x20,
  0x32, 0x20, 0x3a, 0x20, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x49, 0x6e,
  0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5b,
  0x33, 0x5d, 0x20, 0x3c, 0x20, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5b, 0x6f,
  0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x5d, 0x20, 0x3f, 0x20, 0x33,
  0x20, 0x3a, 0x20, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3b,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3b,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x65,
  0x6d, 0x61, 0x70, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x20,
  0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61,
  0x74, 0x69, 0x76, 0x65, 0x73, 0x20, 0x61, 0x74, 0x20, 0x7a, 0x30, 0x20,
  0x66, 0x72, 0x6f, 0x6d, 0x20, 0x5b, 0x31, 0x2c, 0x31, 0x5d, 0x20, 0x70,
  0x69, 0x78, 0x65, 0x6c, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20,
  0x74, 0x6f, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x70, 0x69, 0x78,
  0x65, 0x6c, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2e, 0x0d, 0x0a,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x52, 0x65, 0x6d, 0x61, 0x70,
  0x44, 0x64, 0x78, 0x79, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x7a, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x78, 0x79, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x70, 0x69, 0x78, 0x65,
  0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0d, 0x0a, 0x7b, 0x20,
  0x20, 0x20, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
  0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66,
  0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x6c, 0x69, 0x6e, 0x65, 0x61,
  0x72, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x74, 0x65,
  0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x52, 0x65, 0x66, 0x3a, 0x20,
  0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e,
  0x73, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x61, 0x70, 0x69, 0x78, 0x65,
  0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
  0x73, 0x2f, 0x33, 0x64, 0x2d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x72,
  0x65, 0x6e, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x61, 0x73,
  0x74, 0x65, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70,
  0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2d, 0x69, 0x6d, 0x70,
  0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
  0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x70,
  0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2d, 0x64, 0x65, 0x70, 0x74, 0x68,
  0x2d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x70, 0x74,
  0x68, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x47, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x61, 0x20, 0x6c, 0x69, 0x6e, 0x65,
  0x61, 0x72, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x74,
  0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66,
  0x6f, 0x72, 0x20, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x7a,
  0x20, 0x61, 0x74, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x71,
  0x20, 0x61, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x7a, 0x30, 0x20, 0x74, 0x6f,
  0x20, 0x7a, 0x31, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x7a, 0x20, 0x3d, 0x20, 0x20, 0x31, 0x20,
  0x2f, 0x20, 0x28, 0x31, 0x20, 0x2f, 0x20, 0x7a, 0x30, 0x20, 0x2a, 0x20,
  0x28, 0x31, 0x20, 0x2d, 0x20, 0x71, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x20,
  0x2f, 0x20, 0x7a, 0x31, 0x20, 0x2a, 0x20, 0x71, 0x29, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x7a, 0x31,
  0x20, 0x3d, 0x20, 0x7a, 0x30, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x78, 0x79,
  0x2c, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x7a, 0x31, 0x20, 0x69,
  0x73, 0x20, 0x61, 0x74, 0x20, 0x61, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20,
  0x70, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
  0x20, 0x5b, 0x31, 0x2c, 0x20, 0x31, 0x5d, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x7a, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65,
  0x20, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20,
  0x76, 0x69, 0x61, 0x20, 0x64, 0x64, 0x78, 0x79, 0x20, 0x61, 0x73, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7a, 0x20, 0x3d,
  0x20, 0x28, 0x7a, 0x30, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x78, 0x79, 0x29,
  0x20, 0x2f, 0x20, 0x28, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x31, 0x2d, 0x71,
  0x29, 0x20, 0x2f, 0x20, 0x7a, 0x30, 0x20, 0x2a, 0x20, 0x64, 0x64, 0x78,
  0x79, 0x29, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x7a, 0x30, 0x20,
  0x2b, 0x20, 0x64, 0x64, 0x78, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x31,
  0x20, 0x2b, 0x20, 0x28, 0x28, 0x31, 0x20, 0x2d, 0x20, 0x70, 0x69, 0x78,
  0x65, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x20, 0x2f, 0x20,
  0x7a, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x64, 0x64, 0x78, 0x79, 0x29, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x73, 0x69, 0x67, 0x6e, 0x28, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x4f,
  0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x7a, 0x20,
  0x2d, 0x20, 0x7a, 0x30, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65,
  0x70, 0x74, 0x68, 0x41, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4f, 0x66,
  0x66, 0x73, 0x65, 0x74, 0x28, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x7a, 0x30, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x78, 0x79, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x70, 0x69, 0x78, 0x65,
  0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20,
  0x6e, 0x65, 0x77, 0x44, 0x64, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x52, 0x65,
  0x6d, 0x61, 0x70, 0x44, 0x64, 0x78, 0x79, 0x28, 0x7a, 0x30, 0x2c, 0x20,
  0x64, 0x64, 0x78, 0x79, 0x2c, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x4f,
  0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x7a, 0x30, 0x20, 0x2b,
  0x20, 0x64, 0x6f, 0x74, 0x28, 0x31, 0x2c, 0x20, 0x6e, 0x65, 0x77, 0x44,
  0x64, 0x78, 0x79, 0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61,
  0x6e, 0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74,
  0x65, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x64, 0x69,
  0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x63, 0x6f, 0x76,
  0x65, 0x72, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x70, 0x69,
  0x78, 0x65, 0x6c, 0x2e, 0x20, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x68,
  0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6d, 0x70,
  0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
  0x20, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x69,
  0x78, 0x65, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c,
  0x20, 0x76, 0x69, 0x65, 0x77, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73,
  0x20, 0x61, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d,
  0x65, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x7a, 0x20, 0x2d, 0x20, 0x6c,
  0x69, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20,
  0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61,
  0x63, 0x65, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x69,
  0x78, 0x65, 0x6c, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x64, 0x64, 0x78, 0x79,
  0x20, 0x2d, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x64,
  0x65, 0x70, 0x74, 0x68, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
  0x69, 0x76, 0x65, 0x73, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x74, 0x61, 0x6e,
  0x5f, 0x61, 0x20, 0x2d, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74,
  0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x69,
  0x78, 0x65, 0x6c, 0x20, 0x76, 0x69, 0x65, 0x77, 0x20, 0x61, 0x6e, 0x67,
  0x6c, 0x65, 0x20, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20,
  0x41, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50,
  0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x75, 0x72, 0x66,
  0x61, 0x63, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
  0x73, 0x50, 0x65, 0x72, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x28, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, 0x2c, 0x20, 0x69, 0x6e,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x64, 0x78, 0x79,
  0x2c, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74,
  0x61, 0x6e, 0x5f, 0x61, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x2f, 0x2f, 0x20, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
  0x20, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20,
  0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63,
  0x65, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x20, 0x61,
  0x74, 0x20, 0x7a, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x61,
  0x6e, 0x5f, 0x61, 0x20, 0x2a, 0x20, 0x7a, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x55,
  0x73, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x79, 0x74, 0x68, 0x61, 0x67, 0x6f,
  0x72, 0x65, 0x61, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x65, 0x6d,
  0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
  0x20, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20,
  0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x64,
  0x78, 0x79, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x32, 0x20, 0x77, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74,
  0x28, 0x64, 0x78, 0x20, 0x2a, 0x20, 0x64, 0x78, 0x20, 0x2b, 0x20, 0x64,
  0x64, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x64, 0x64, 0x78, 0x79, 0x29, 0x3b,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x77, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x20, 0x6f, 0x6e,
  0x6c, 0x79, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x74,
  0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x0d,
  0x0a, 0x2f, 0x2f, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
  0x20, 0x74, 0x6f, 0x20, 0x61, 0x6e, 0x20, 0x61, 0x76, 0x65, 0x72, 0x61,
  0x67, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x69, 0x6e, 0x76,
  0x61, 0x6c, 0x69, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x69,
  0x66, 0x20, 0x6e, 0x6f, 0x6e, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x76,
  0x61, 0x6c, 0x69, 0x64, 0x2e, 0x0d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x65,
  0x56, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x28,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x34, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2c,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x34, 0x20, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61,
  0x6c, 0x75, 0x65, 0x73, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69,
  0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x6e, 0x57,
  0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x3d, 0x20, 0x31, 0x65, 0x2d, 0x36,
  0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56,
  0x61, 0x6c, 0x75, 0x65, 0x20, 0x3d, 0x20, 0x52, 0x54, 0x41, 0x4f, 0x3a,
  0x3a, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x4f, 0x43, 0x6f,
  0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c,
  0x75, 0x65, 0x29, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64,
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x53, 0x61,
  0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x21,
  0x3d, 0x20, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x61, 0x6c,
  0x75, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x77, 0x65, 0x69,
  0x67, 0x68, 0x74, 0x73, 0x20, 0x2a, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x69,
  0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x65, 0x69,
  0x67, 0x68, 0x74, 0x53, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74,
  0x28, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2c, 0x20, 0x31, 0x29,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x77,
  0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x6d, 0x20, 0x3c, 0x20, 0x6d,
  0x69, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x29, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x56,
  0x61, 0x6c, 0x69, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x20,
  0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53,
  0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2c, 0x20, 0x31, 0x29, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20,
  0x28, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x73, 0x20, 0x3e, 0x20, 0x31, 0x65, 0x2d, 0x36, 0x29,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28,
  0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
  0x2c, 0x20, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
  0x65, 0x73, 0x29, 0x20, 0x2f, 0x20, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c,
  0x69, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x69, 0x6e, 0x76, 0x61, 0x6c,
  0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65,
  0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x77, 0x65, 0x69,
  0x67, 0x68, 0x74, 0x73, 0x2c, 0x20, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
  0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x20, 0x2f, 0x20, 0x64, 0x6f,
  0x74, 0x28, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2c, 0x20, 0x31,
  0x29, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x65, 0x6e,
  0x64, 0x69, 0x66, 0x20, 0x2f, 0x2f, 0x20, 0x52, 0x41, 0x59, 0x54, 0x52,
  0x41, 0x43, 0x49, 0x4e, 0x47, 0x53, 0x48, 0x41, 0x44, 0x45, 0x52, 0x48,
  0x45, 0x4c, 0x50, 0x45, 0x52, 0x5f, 0x48, 0x0d, 0x0a, 0x1b, 0x84, 0x13,
  0x41, 0x11, 0x96, 0x81, 0x0b, 0xd7, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0xd9,
  0xd0, 0x9b, 0x5c, 0x19, 0xd7, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0xdc, 0x1c,
  0x17, 0x12, 0xdb, 0x1c, 0xdb, 0xd0, 0x5b, 0x1b, 0x5c, 0x18, 0x9d, 0x0b,
  0x1a, 0xdb, 0x1c, 0x5b, 0x1a, 0xef, 0xeb, 0xe5, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1,
  0xe5, 0x05, 0x64, 0xe8, 0x0d, 0x2e, 0x4f, 0x2e, 0xed, 0x0c, 0x8d, 0x0e,
  0x04, 0x65, 0x2c, 0x05, 0xa4, 0x29, 0x6d, 0x4c, 0xee, 0x6d, 0xee, 0xcd,
  0x8c, 0xce, 0x05, 0x24, 0x88, 0x8d, 0x0d, 0x44, 0x2e, 0xed, 0x0c, 0x8d,
  0x6e, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x4c, 0xce, 0xae, 0x8c, 0xcc, 0xa5,
  0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x2d, 0x6d, 0x0e, 0x64, 0xec, 0x8d,
  0xac, 0x0c, 0x24, 0x6d, 0x0e, 0x84, 0x2d, 0x6d, 0xac, 0xcc, 0x6d, 0xae,
  0x8c, 0x0c, 0xa4, 0xce, 0x8d, 0xac, 0x4c, 0x0e, 0x84, 0x0e, 0xad, 0x0c,
  0xa4, 0x29, 0x89, 0x0a, 0x84, 0x29, 0x6d, 0xac, 0xcc, 0x6d, 0xae, 0x0c,
  0x04, 0xa5, 0x29, 0x89, 0x2a, 0xc5, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x84,
  0x0a, 0x29, 0x69, 0x0a, 0x64, 0xe8, 0x89, 0xa8, 0x08, 0x24, 0x69, 0x0a,
  0x04, 0x4a, 0xea, 0xc9, 0x2a, 0x89, 0xa8, 0x88, 0x08, 0x44, 0x25, 0x68,
  0x0a, 0x24, 0x69, 0x4a, 0x05, 0xe4, 0x2a, 0x89, 0x0a, 0xe9, 0xa9, 0x8a,
  0x0a, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0x0b, 0xe4, 0xc9,
  0xa8, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xc8, 0x29, 0x0b, 0x64, 0x29, 0xc9,
  0x89, 0x88, 0x05, 0xa4, 0x28, 0x89, 0x0a, 0xa9, 0x48, 0x0a, 0xa4, 0x08,
  0x0b, 0x4a, 0xaa, 0x68, 0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x24, 0xa9, 0x09,
  0x8a, 0x29, 0xa9, 0x88, 0x88, 0x05, 0x24, 0xc9, 0x69, 0x88, 0xa9, 0x8a,
  0x28, 0xc9, 0xe9, 0x08, 0x24, 0xc8, 0x29, 0xab, 0x41, 0xe1, 0xe5, 0x05,
  0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88, 0x08, 0xe4, 0x2a, 0x48, 0x4a,
  0x2a, 0xc8, 0x89, 0x2a, 0xa9, 0x68, 0x0a, 0xe4, 0xc9, 0x08, 0xc4, 0x28,
  0x89, 0xca, 0xa9, 0x68, 0x6a, 0x0a, 0xc4, 0xe8, 0x49, 0x0a, 0x24, 0x08,
  0x04, 0x2a, 0x48, 0x8a, 0x2a, 0x69, 0xa8, 0x8a, 0x29, 0x48, 0xaa, 0x41,
  0xe1, 0xe5, 0x05, 0x04, 0xaa, 0x4a, 0x0a, 0xea, 0x69, 0xaa, 0x88, 0x05,
  0xa4, 0xa9, 0x48, 0x6a, 0x08, 0x29, 0xc8, 0x89, 0x2a, 0x48, 0x28, 0x89,
  0x29, 0x89, 0x2a, 0x8b, 0x05, 0xe4, 0x49, 0x0a, 0xc4, 0xe9, 0xc9, 0xa9,
  0x25, 0xc9, 0xc9, 0x48, 0x2a, 0xc9, 0xe9, 0xa8, 0xa8, 0xa9, 0xc8, 0x89,
  0xca, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0xa1, 0x41, 0x61, 0x24,
  0xcd, 0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x04, 0x89, 0x69, 0x8a, 0x69, 0xe8,
  0xa9, 0x09, 0x2a, 0x88, 0xea, 0x0b, 0xa9, 0x41, 0x61, 0x84, 0xac, 0xcc,
  0x2c, 0xcd, 0xad, 0x0c, 0x04, 0x89, 0x69, 0x8a, 0x69, 0xe8, 0xa9, 0x09,
  0x2a, 0x88, 0xea, 0x0b, 0xa9, 0x41, 0xa1, 0x41, 0x81, 0x2e, 0x0f, 0xae,
  0x8c, 0xac, 0xcc, 0x0c, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04,
  0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x66, 0xa7, 0x41, 0x81, 0x2e,
  0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x66, 0xa7, 0x41,
  0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x8e, 0x06, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x8a, 0x66,
  0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x04, 0xab, 0xc9, 0xaa, 0x68, 0x88, 0xea,
  0x49, 0x6a, 0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x8f, 0x06, 0x04, 0xab, 0xa9,
  0x29, 0x88, 0x4a, 0x2a, 0x09, 0x6b, 0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae,
  0x8c, 0xac, 0xcc, 0x0c, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xa4, 0x2a, 0xc9,
  0x89, 0x6a, 0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c,
  0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89,
  0x4a, 0x66, 0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c,
  0xa4, 0x2e, 0xcd, 0x8d, 0x6e, 0x06, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89,
  0x6a, 0x66, 0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c,
  0x24, 0xcd, 0x8d, 0x4e, 0x06, 0x04, 0xab, 0x29, 0xc9, 0x89, 0x4a, 0x66,
  0xa7, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0x24, 0xcd,
  0x8d, 0x0e, 0x44, 0xe8, 0xe9, 0x89, 0x69, 0xa7, 0x41, 0xa1, 0x41, 0x61,
  0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0x0c, 0xe4, 0xe5, 0x05, 0x04, 0x89, 0x69,
  0x8a, 0x69, 0xe8, 0xa9, 0x09, 0x2a, 0x88, 0xea, 0x0b, 0x69, 0x83, 0xa0,
  0x22, 0x2b, 0x42, 0x9d, 0x18, 0xd2, 0xe1, 0xaa, 0x9a, 0x2b, 0x93, 0x9b,
  0xe3, 0xaa, 0x9b, 0x2b, 0x93, 0xe3, 0x22, 0x2a, 0x9b, 0x5b, 0xa3, 0x7b,
  0x83, 0xe3, 0x22, 0x4a, 0x93, 0x2b, 0x1b, 0xa3, 0xc3, 0x6a, 0x39, 0x92,
  0x0b, 0x83, 0x43, 0x4b, 0x1b, 0x9b, 0x6b, 0x99, 0x0a, 0x6b, 0x83, 0x63,
  0x2b, 0x9b, 0xe3, 0x9a, 0x0a, 0x6b, 0x83, 0x63, 0x2b, 0x9b, 0xe3, 0x22,
  0x2a, 0x9b, 0x5b, 0xa3, 0x7b, 0x83, 0xe3, 0x22, 0x9a, 0x21, 0x8a, 0x91,
  0x91, 0x0a, 0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0xe3, 0x9a,
  0x93, 0x1b, 0xe3, 0x22, 0x9a, 0x21, 0x8a, 0x91, 0x91, 0x0a, 0xcb, 0xa3,
  0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0x93, 0x2a, 0x0b, 0x63, 0xa3, 0x4a,
  0x6b, 0x2b, 0x23, 0x2a, 0x73, 0x7b, 0x4b, 0x9b, 0x2b, 0x23, 0x0b, 0x6a,
  0x13, 0x4b, 0x2b, 0x73, 0xa3, 0x7b, 0x1a, 0x1b, 0x63, 0xab, 0x9b, 0x4b,
  0x7b, 0x73, 0xe3, 0x92, 0xa2, 0x0a, 0x7a, 0xe2, 0x9a, 0x42, 0x0b, 0x23,
  0x2b, 0x93, 0x9b, 0xe3, 0x92, 0xa2, 0x0a, 0x7a, 0x72, 0x41, 0x63, 0x9b,
  0x63, 0x4b, 0x63, 0x7a, 0xbd, 0xbc, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0x34, 0x28, 0xbc, 0xbc, 0x34, 0x28, 0xbc, 0xbc, 0x80,
  0x0c, 0xbd, 0xc1, 0xe5, 0xc9, 0xa5, 0x9d, 0xa1, 0xd1, 0x81, 0xa0, 0x8c,
  0xa5, 0x80, 0x34, 0xa5, 0x8d, 0xc9, 0xbd, 0xcd, 0xbd, 0x99, 0xd1, 0xb9,
  0x80, 0x04, 0xb1, 0xb1, 0x81, 0xc8, 0xa5, 0x9d, 0xa1, 0xd1, 0xcd, 0x81,
  0xc8, 0x95, 0xcd, 0x95, 0xc9, 0xd9, 0x95, 0x91, 0xb9, 0x34, 0x28, 0xbc,
  0xbc, 0x80, 0x50, 0xa1, 0xa5, 0xcd, 0x81, 0x8c, 0xbd, 0x91, 0x95, 0x81,
  0xa4, 0xcd, 0x81, 0xb0, 0xa5, 0x8d, 0x95, 0xb9, 0xcd, 0x95, 0x91, 0x81,
  0xd4, 0xb9, 0x91, 0x95, 0xc9, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0x34, 0x25,
  0x51, 0x81, 0x30, 0xa5, 0x8d, 0x95, 0xb9, 0xcd, 0x95, 0x81, 0xa0, 0x34,
  0x25, 0x51, 0xa5, 0xb8, 0x34, 0x28, 0xbc, 0xbc, 0x80, 0x50, 0x21, 0x25,
  0x4d, 0x81, 0x0c, 0x3d, 0x11, 0x15, 0x81, 0x24, 0x4d, 0x81, 0x40, 0x49,
  0x3d, 0x59, 0x25, 0x11, 0x15, 0x11, 0x81, 0xa8, 0x04, 0x4d, 0x81, 0x24,
  0x4d, 0xa9, 0x80, 0x5c, 0x25, 0x51, 0x21, 0x3d, 0x55, 0x51, 0x81, 0x5c,
  0x05, 0x49, 0x49, 0x05, 0x39, 0x51, 0x65, 0x81, 0x3c, 0x19, 0x35, 0x28,
  0xbc, 0xbc, 0x80, 0x04, 0x39, 0x65, 0x81, 0x2c, 0x25, 0x39, 0x11, 0xb1,
  0x80, 0x14, 0x25, 0x51, 0x21, 0x15, 0x49, 0x81, 0x14, 0x61, 0x41, 0x49,
  0x15, 0x4d, 0x4d, 0x81, 0x3c, 0x49, 0x81, 0x24, 0x35, 0x41, 0x31, 0x25,
  0x15, 0x11, 0xb1, 0x80, 0x24, 0x39, 0x0d, 0x31, 0x55, 0x11, 0x25, 0x39,
  0x1d, 0x81, 0x04, 0x39, 0x65, 0x35, 0x28, 0xbc, 0xbc, 0x80, 0x24, 0x35,
  0x41, 0x31, 0x25, 0x15, 0x11, 0x81, 0x5c, 0x05, 0x49, 0x49, 0x05, 0x39,
  0x51, 0x25, 0x15, 0x4d, 0x81, 0x3c, 0x19, 0x81, 0x18, 0x25, 0x51, 0x39,
  0x15, 0x4d, 0x4d, 0x81, 0x18, 0x3d, 0x49, 0x81, 0x04, 0x81, 0x40, 0x05,
  0x49, 0x51, 0x25, 0x0d, 0x55, 0x31, 0x05, 0x49, 0x35, 0x28, 0xbc, 0xbc,
  0x80, 0x40, 0x55, 0x49, 0x41, 0x3d, 0x4d, 0x15, 0xb1, 0x80, 0x34, 0x15,
  0x49, 0x0d, 0x21, 0x05, 0x39, 0x51, 0x05, 0x09, 0x25, 0x31, 0x25, 0x51,
  0x65, 0xb1, 0x80, 0x3c, 0x49, 0x81, 0x38, 0x3d, 0x39, 0xb5, 0x24, 0x39,
  0x19, 0x49, 0x25, 0x39, 0x1d, 0x15, 0x35, 0x15, 0x39, 0x51, 0xb9, 0x34,
  0x28, 0xbc, 0xbc, 0x34, 0x28, 0xbc, 0xbc, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0x34, 0x28, 0x8c, 0xa4, 0x99, 0xb9, 0x91, 0x95,
  0x99, 0x81, 0x48, 0x51, 0x05, 0x3d, 0x7d, 0x21, 0x31, 0x4d, 0x31, 0x25,
  0x35, 0x28, 0x8c, 0x90, 0x95, 0x99, 0xa5, 0xb9, 0x95, 0x81, 0x48, 0x51,
  0x05, 0x3d, 0x7d, 0x21, 0x31, 0x4d, 0x31, 0x25, 0x35, 0x28, 0x34, 0x28,
  0xb8, 0x85, 0xb5, 0x95, 0xcd, 0xc1, 0x85, 0x8d, 0x95, 0x81, 0x48, 0x51,
  0x05, 0x3d, 0x81, 0xec, 0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0xcc, 0xd1,
  0x85, 0xd1, 0xa5, 0x8d, 0x81, 0x8c, 0xbd, 0xb9, 0xcd, 0xd1, 0x81, 0x98,
  0xb1, 0xbd, 0x85, 0xd1, 0x81, 0x48, 0x85, 0xe5, 0x21, 0xa5, 0xd1, 0x11,
  0xa5, 0xcd, 0xd1, 0x85, 0xb9, 0x8d, 0x95, 0x3d, 0xb9, 0x35, 0xa5, 0xcd,
  0xcd, 0x81, 0xf4, 0x80, 0xc0, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80,
  0xcc, 0xd1, 0x85, 0xd1, 0xa5, 0x8d, 0x81, 0x8c, 0xbd, 0xb9, 0xcd, 0xd1,
  0x81, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0x81, 0x24, 0xb9, 0xd9, 0x85, 0xb1,
  0xa5, 0x91, 0x05, 0x3d, 0x0d, 0xbd, 0x95, 0x99, 0x99, 0xa5, 0x8d, 0xa5,
  0x95, 0xb9, 0xd1, 0x59, 0x85, 0xb1, 0xd5, 0x95, 0x81, 0xf4, 0x80, 0xb4,
  0xc4, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x88, 0xbd, 0xbd, 0xb1,
  0x81, 0x20, 0x85, 0xcd, 0x05, 0x3d, 0x49, 0x85, 0xe5, 0x21, 0xa5, 0xd1,
  0x05, 0xb9, 0xe5, 0x1d, 0x95, 0xbd, 0xb5, 0x95, 0xd1, 0xc9, 0xe5, 0xa1,
  0xa4, 0xb9, 0x81, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0x81, 0xd0, 0x21, 0xa5,
  0xd1, 0xa5, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xec, 0x35, 0x28, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc8, 0x95, 0xd1, 0xd5, 0xc9,
  0xb9, 0x81, 0xd0, 0x21, 0xa5, 0xd1, 0x81, 0x84, 0xf4, 0x80, 0x48, 0x85,
  0xe5, 0x21, 0xa5, 0xd1, 0x11, 0xa5, 0xcd, 0xd1, 0x85, 0xb9, 0x8d, 0x95,
  0x3d, 0xb9, 0x35, 0xa5, 0xcd, 0xcd, 0xed, 0x34, 0x28, 0x80, 0x80, 0x80,
  0x80, 0xf4, 0x35, 0x28, 0xf4, 0x35, 0x28, 0x34, 0x28, 0x8c, 0x94, 0xb9,
  0x91, 0xa5, 0x99, 0x81, 0xbc, 0xbc, 0x80, 0x48, 0x51, 0x05, 0x3d, 0x7d,
  0x21, 0x31, 0x4d, 0x31, 0x25, 0x6d, 0x10, 0x5a, 0xc4, 0x45, 0x98, 0x13,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x75, 0x73, 0x65,
  0x72, 0x5c, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5c, 0x44, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x58, 0x2d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69,
  0x63, 0x73, 0x2d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5c, 0x53,
  0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5c, 0x44, 0x65, 0x73, 0x6b, 0x74,
  0x6f, 0x70, 0x5c, 0x44, 0x33, 0x44, 0x31, 0x32, 0x52, 0x61, 0x79, 0x74,
  0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x44,
  0x33, 0x44, 0x31, 0x32, 0x52, 0x61, 0x79, 0x74, 0x72, 0x61, 0x63, 0x69,
  0x6e, 0x67, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65,
  0x6e, 0x6f, 0x69, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e,
  0x74, 0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5c, 0x52,
  0x61, 0x79, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x48, 0x6c, 0x73,
  0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x2e, 0x68, 0xa4, 0x45, 0xe7,
  0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41,
  0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x64, 0xe8, 0x0d, 0x2e, 0x4f,
  0x2e, 0xed, 0x0c, 0x8d, 0x0e, 0x04, 0x65, 0x2c, 0x05, 0xa4, 0x29, 0x6d,
  0x4c, 0xee, 0x6d, 0xee, 0xcd, 0x8c, 0xce, 0x05, 0x24, 0x88, 0x8d, 0x0d,
  0x44, 0x2e, 0xed, 0x0c, 0x8d, 0x6e, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x4c,
  0xce, 0xae, 0x8c, 0xcc, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x2d,
  0x6d, 0x0e, 0x64, 0xec, 0x8d, 0xac, 0x0c, 0x24, 0x6d, 0x0e, 0x84, 0x2d,
  0x6d, 0xac, 0xcc, 0x6d, 0xae, 0x8c, 0x0c, 0xa4, 0xce, 0x8d, 0xac, 0x4c,
  0x0e, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0x29, 0x89, 0x0a, 0x84, 0x29, 0x6d,
  0xac, 0xcc, 0x6d, 0xae, 0x0c, 0x04, 0xa5, 0x29, 0x89, 0x2a, 0xc5, 0xa5,
  0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x29, 0x69, 0x0a, 0x64, 0xe8, 0x89,
  0xa8, 0x08, 0x24, 0x69, 0x0a, 0x04, 0x4a, 0xea, 0xc9, 0x2a, 0x89, 0xa8,
  0x88, 0x08, 0x44, 0x25, 0x68, 0x0a, 0x24, 0x69, 0x4a, 0x05, 0xe4, 0x2a,
  0x89, 0x0a, 0xe9, 0xa9, 0x8a, 0x0a, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8,
  0x89, 0x2a, 0x0b, 0xe4, 0xc9, 0xa8, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xc8,
  0x29, 0x0b, 0x64, 0x29, 0xc9, 0x89, 0x88, 0x05, 0xa4, 0x28, 0x89, 0x0a,
  0xa9, 0x48, 0x0a, 0xa4, 0x08, 0x0b, 0x4a, 0xaa, 0x68, 0x6a, 0x0a, 0xe4,
  0x49, 0x0a, 0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88, 0x88, 0x05, 0x24,
  0xc9, 0x69, 0x88, 0xa9, 0x8a, 0x28, 0xc9, 0xe9, 0x08, 0x24, 0xc8, 0x29,
  0xab, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88,
  0x08, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0xa9, 0x68, 0x0a,
  0xe4, 0xc9, 0x08, 0xc4, 0x28, 0x89, 0xca, 0xa9, 0x68, 0x6a, 0x0a, 0xc4,
  0xe8, 0x49, 0x0a, 0x24, 0x08, 0x04, 0x2a, 0x48, 0x8a, 0x2a, 0x69, 0xa8,
  0x8a, 0x29, 0x48, 0xaa, 0x41, 0xe1, 0xe5, 0x05, 0x04, 0xaa, 0x4a, 0x0a,
  0xea, 0x69, 0xaa, 0x88, 0x05, 0xa4, 0xa9, 0x48, 0x6a, 0x08, 0x29, 0xc8,
  0x89, 0x2a, 0x48, 0x28, 0x89, 0x29, 0x89, 0x2a, 0x8b, 0x05, 0xe4, 0x49,
  0x0a, 0xc4, 0xe9, 0xc9, 0xa9, 0x25, 0xc9, 0xc9, 0x48, 0x2a, 0xc9, 0xe9,
  0xa8, 0xa8, 0xa9, 0xc8, 0x89, 0xca, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41,
  0xe1, 0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5,
  0x41, 0xa1, 0x41, 0x61, 0x24, 0xcd, 0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x44,
  0x2a, 0x28, 0x8b, 0x4a, 0x2a, 0x68, 0x28, 0xc9, 0xe9, 0x08, 0x89, 0x69,
  0x8a, 0x69, 0xe8, 0xa9, 0x09, 0x2a, 0x88, 0xea, 0x0b, 0xa9, 0x41, 0x61,
  0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x44, 0x2a, 0x28, 0x8b, 0x4a,
  0x2a, 0x68, 0x28, 0xc9, 0xe9, 0x08, 0x89, 0x69, 0x8a, 0x69, 0xe8, 0xa9,
  0x09, 0x2a, 0x88, 0xea, 0x0b, 0xa9, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0xe1,
  0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x44, 0x2a, 0x2c, 0x8f, 0x4e, 0x2e,
  0x6c, 0x2c, 0xcd, 0xed, 0x0c, 0x89, 0x69, 0x8a, 0x69, 0xe8, 0xad, 0x0d,
  0x2e, 0x8c, 0xce, 0x05, 0xad, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5,
  0x05, 0x24, 0x08, 0x04, 0xad, 0x2c, 0x8c, 0xac, 0x4c, 0x0e, 0xe4, 0x2e,
  0x8d, 0x0e, 0x0d, 0x64, 0x0e, 0x2d, 0x4c, 0xae, 0x8c, 0x0c, 0x84, 0xac,
  0xcc, 0x2c, 0xcd, 0x2d, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0xc4, 0xec,
  0x4d, 0x0e, 0x64, 0x68, 0x65, 0x05, 0x24, 0xcc, 0x8d, 0x0c, 0x04, 0x89,
  0x69, 0x8a, 0x09, 0x64, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x0c, 0xc4, 0x2c,
  0x8d, 0xad, 0x6c, 0xce, 0x05, 0xa4, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1,
  0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5,
  0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x05, 0xe4, 0x88, 0xed, 0x4d,
  0x2c, 0x8c, 0x0d, 0xe4, 0xc9, 0xae, 0x4c, 0x4e, 0x2e, 0x8d, 0xac, 0x6c,
  0x0e, 0x44, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0xa5, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad,
  0x0c, 0x44, 0xaa, 0xc8, 0x89, 0xa8, 0x48, 0xea, 0xeb, 0x48, 0x2a, 0x68,
  0x6a, 0xea, 0xeb, 0xa8, 0xe8, 0xa9, 0xa9, 0x88, 0x4a, 0x2a, 0x0b, 0x24,
  0xa6, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x04, 0x4a,
  0x2a, 0xc9, 0x89, 0xea, 0xeb, 0xa9, 0x8a, 0xea, 0x6b, 0x28, 0xa8, 0xa9,
  0x48, 0x2a, 0xe8, 0x6b, 0xe8, 0xc9, 0xc9, 0x28, 0xe9, 0x08, 0x04, 0xa6,
  0x41, 0xa1, 0x41, 0x61, 0x24, 0xcd, 0x8c, 0xac, 0xcc, 0x0c, 0xe4, 0x8b,
  0xa8, 0x48, 0xa8, 0xea, 0xa8, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd,
  0xad, 0x0c, 0x84, 0xe9, 0x29, 0x88, 0xe8, 0xeb, 0xc9, 0x89, 0x29, 0xeb,
  0xeb, 0xc9, 0xa9, 0xe8, 0x0b, 0x4a, 0x48, 0x8a, 0xea, 0xab, 0xa9, 0x68,
  0x0a, 0x09, 0x04, 0x06, 0xe4, 0xe5, 0x05, 0x64, 0xaa, 0x8c, 0x0e, 0x84,
  0xee, 0x0d, 0x24, 0x06, 0x84, 0xee, 0x0d, 0x64, 0x0e, 0xae, 0xac, 0x8c,
  0x0c, 0xa4, 0x0e, 0x0e, 0x24, 0x0c, 0x0e, 0x8e, 0x2d, 0x6d, 0x2c, 0x8c,
  0x2e, 0xed, 0xcd, 0x0d, 0x64, 0x8e, 0x2e, 0x4c, 0x8e, 0x0e, 0xe4, 0xcd,
  0x0d, 0x84, 0xac, 0x4c, 0xac, 0xee, 0xcc, 0xa5, 0x41, 0x61, 0xa4, 0x8c,
  0x6d, 0xae, 0xac, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c,
  0x84, 0xe9, 0x29, 0x88, 0xe8, 0xeb, 0xc9, 0x89, 0x29, 0xeb, 0xeb, 0xc9,
  0xa9, 0xe8, 0x0b, 0x4a, 0x48, 0x8a, 0xea, 0xab, 0xa9, 0x68, 0x0a, 0x09,
  0x04, 0x06, 0xa4, 0x41, 0x61, 0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0xac, 0x41,
  0xe1, 0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0xa5, 0x41, 0xa1, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c,
  0xc4, 0xe8, 0xc9, 0x2a, 0x0b, 0x84, 0xa6, 0xc6, 0xc5, 0xac, 0x41, 0x61,
  0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0xa9, 0x28, 0x48, 0xea,
  0x0b, 0x8a, 0x29, 0xc8, 0xa9, 0x08, 0x04, 0xc6, 0x05, 0x06, 0x26, 0xc6,
  0xac, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0x28,
  0x48, 0xea, 0x0b, 0x8a, 0x29, 0xc8, 0xa9, 0x08, 0x24, 0x06, 0x06, 0x06,
  0xc6, 0x05, 0xc6, 0xac, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad,
  0x0c, 0x04, 0x29, 0x8d, 0x8e, 0x28, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac,
  0xec, 0xc9, 0xad, 0x29, 0x6d, 0x6e, 0x0e, 0x04, 0xa6, 0x41, 0x61, 0x84,
  0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x64, 0x2a, 0xa8, 0x09, 0x8a, 0xa9,
  0x48, 0xea, 0xcb, 0x28, 0x89, 0x89, 0xaa, 0x48, 0x0a, 0x84, 0x68, 0x86,
  0x28, 0x46, 0xe6, 0xcb, 0x28, 0x89, 0x89, 0xaa, 0x48, 0xea, 0x2b, 0xc8,
  0x29, 0x69, 0xea, 0x89, 0x4a, 0xea, 0x09, 0x2a, 0x69, 0xa8, 0x41, 0xa1,
  0x41, 0x61, 0x24, 0xcd, 0x8c, 0xac, 0xcc, 0x0c, 0x04, 0x89, 0x69, 0x8a,
  0xa9, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0xa4, 0x2e,
  0xcd, 0x8d, 0x0e, 0xc4, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c,
  0x8e, 0x0e, 0x8d, 0xaa, 0x0c, 0xcf, 0xe8, 0x4d, 0xae, 0x2d, 0x8c, 0x6e,
  0xa7, 0x41, 0x61, 0xa4, 0x8c, 0x6d, 0xae, 0xac, 0x41, 0x61, 0x84, 0xac,
  0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x64, 0xe8, 0xa9, 0x09, 0x2a, 0x68, 0x88,
  0xea, 0xcb, 0xe9, 0x49, 0xaa, 0x29, 0x88, 0xe9, 0x8b, 0xa8, 0x08, 0x8a,
  0x0a, 0xe9, 0x8b, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29,
  0x88, 0x0a, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29,
  0x88, 0xea, 0x4b, 0x6a, 0x46, 0xe6, 0xab, 0x2a, 0xc9, 0x89, 0xaa, 0x41,
  0x61, 0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0xac, 0x41, 0xa1, 0x41, 0xc1, 0x2d,
  0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x44, 0xaa, 0x8c, 0xac,
  0x6e, 0xac, 0x6c, 0xaa, 0xae, 0x6d, 0x68, 0x0a, 0x64, 0xaf, 0x41, 0x21,
  0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0x0a,
  0x4d, 0xae, 0x2c, 0x8c, 0xec, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf,
  0x41, 0x21, 0x21, 0xa1, 0xcc, 0xad, 0xae, 0x0d, 0xa4, 0xc8, 0xad, 0xae,
  0x0d, 0x64, 0x0f, 0xe4, 0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0xa4, 0x07, 0x04,
  0x87, 0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x07, 0x24,
  0xc6, 0x86, 0x05, 0x64, 0x2a, 0x4d, 0xaf, 0x0c, 0xa4, 0x07, 0xe4, 0x2a,
  0x8d, 0x8c, 0x0e, 0x0d, 0x44, 0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c, 0x8d,
  0x8e, 0x05, 0xc4, 0xa9, 0xae, 0xad, 0x88, 0xad, 0xac, 0xad, 0xcc, 0x8d,
  0x6e, 0x8e, 0xea, 0x8d, 0xe9, 0x2d, 0x8c, 0x0c, 0xaa, 0x4c, 0x8e, 0x0a,
  0x4d, 0xae, 0x2c, 0x8c, 0x0c, 0xa4, 0x07, 0x24, 0x06, 0x06, 0xa4, 0x6f,
  0x27, 0xa1, 0x41, 0x21, 0xa1, 0xaf, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x24, 0x88,
  0x4e, 0xee, 0xad, 0x6e, 0xee, 0x2a, 0xcc, 0xae, 0x8c, 0xad, 0x8c, 0x8e,
  0x4a, 0x2e, 0xcc, 0x6d, 0xce, 0xec, 0x4d, 0xae, 0xcd, 0x28, 0x8d, 0x8d,
  0xae, 0x4c, 0x6e, 0x68, 0x0a, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0x0a,
  0x4d, 0xae, 0x2c, 0x8c, 0xec, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad,
  0xae, 0x0d, 0xa4, 0xc8, 0xad, 0xae, 0x0d, 0x64, 0x0f, 0xe4, 0x2a, 0x8d,
  0x8c, 0x0e, 0x0d, 0xa4, 0x07, 0x24, 0xc6, 0x86, 0x05, 0x04, 0xa9, 0x2c,
  0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x07, 0x24, 0xc6, 0x86, 0x05, 0x64, 0x2a,
  0x4d, 0xaf, 0x0c, 0xa4, 0x07, 0xe4, 0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0x44,
  0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x6f, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0xa8,
  0xcc, 0x2c, 0xac, 0x8e, 0x8d, 0x6e, 0xe8, 0xad, 0x0d, 0xae, 0x8e, 0xae,
  0x6c, 0x0a, 0x2d, 0x8c, 0xac, 0x4c, 0x0e, 0x2a, 0x4c, 0x2e, 0xac, 0x6d,
  0x0e, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x2d, 0xac, 0xad,
  0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0x0a, 0x4d, 0xae, 0x2c, 0x8c,
  0xec, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad, 0xae, 0x0d, 0xa4, 0xc8,
  0xad, 0xae, 0x0d, 0x64, 0x0f, 0xe4, 0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0xa4,
  0x07, 0x04, 0x87, 0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x0e, 0xa4,
  0x07, 0x04, 0x87, 0x05, 0x64, 0x2a, 0x4d, 0xaf, 0x0c, 0xa4, 0x07, 0xe4,
  0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0x44, 0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c,
  0x8d, 0x0e, 0xa4, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x41, 0x61, 0x24, 0xcd, 0x8c,
  0xac, 0xcc, 0x0c, 0x04, 0x89, 0x69, 0x8a, 0xa9, 0x41, 0x61, 0x24, 0xcd,
  0x6d, 0x8c, 0xad, 0x8e, 0xac, 0x0c, 0x44, 0x04, 0x89, 0x6d, 0x8e, 0x6d,
  0xe8, 0xad, 0x0d, 0x2e, 0x8c, 0xce, 0x05, 0x8d, 0x6d, 0x8e, 0x2d, 0x4d,
  0xa4, 0x41, 0x81, 0x2e, 0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0xa4, 0x2a,
  0xc9, 0x89, 0x0a, 0x24, 0xc9, 0x8d, 0xac, 0x0c, 0x6f, 0xa7, 0x41, 0x61,
  0xa4, 0x8c, 0x6d, 0xae, 0xac, 0x41, 0xa1, 0x6e, 0x2e, 0xcd, 0xed, 0x0c,
  0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0x28,
  0x4d, 0xae, 0x6c, 0x8c, 0x0e, 0x6b, 0xa7, 0x41, 0xa1, 0x41, 0x81, 0x2e,
  0x0f, 0xae, 0x8c, 0xac, 0xcc, 0x0c, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x24,
  0xc9, 0x8d, 0xac, 0x0c, 0x6f, 0xa7, 0x41, 0x61, 0xa4, 0xcc, 0x8d, 0x2c,
  0xcd, 0xac, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e,
  0x44, 0x2a, 0x2c, 0xaf, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0xe4, 0x4d, 0x2e,
  0xed, 0x2c, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab,
  0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x84, 0x2c, 0x4d, 0xae, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0xe4, 0x48, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x0e,
  0x84, 0x2c, 0x8c, 0x2e, 0x0c, 0x64, 0xec, 0x8d, 0x8d, 0xad, 0x6c, 0x8c,
  0xae, 0x8c, 0x0c, 0x84, 0xac, 0x4e, 0x2e, 0xcd, 0xed, 0x0c, 0x04, 0x2e,
  0x8c, 0x0e, 0x8d, 0x4e, 0x2e, 0x6c, 0x2c, 0xcd, 0xed, 0x0c, 0xa4, 0x41,
  0xe1, 0xe5, 0x05, 0xc4, 0xec, 0x4d, 0x0e, 0x64, 0xae, 0x4e, 0x6c, 0xae,
  0x2c, 0xae, 0xae, 0xcc, 0x8d, 0x0e, 0x24, 0xa8, 0x4d, 0x2c, 0xad, 0xcc,
  0x8d, 0x0e, 0xe4, 0x69, 0x6c, 0x8c, 0xad, 0x6e, 0x2e, 0xed, 0xcd, 0x0d,
  0x44, 0x2e, 0x2c, 0x0f, 0x84, 0x4e, 0x2e, 0x6c, 0xac, 0x0c, 0x04, 0x2e,
  0x6c, 0x6e, 0x0e, 0x24, 0xcc, 0x8d, 0x0c, 0x84, 0xac, 0xcc, 0xed, 0x2d,
  0x6d, 0x2e, 0xcd, 0xed, 0xcc, 0xa5, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e,
  0x8c, 0x0e, 0x24, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0xee, 0x69, 0x6c,
  0x8c, 0xad, 0x6e, 0x2e, 0xed, 0xcd, 0xed, 0x48, 0xa8, 0xce, 0xcc, 0xac,
  0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x0e, 0x84, 0x0e, 0x29, 0x8d, 0x6e, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06,
  0x04, 0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d,
  0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4,
  0xe5, 0x05, 0x04, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0xe4,
  0xcd, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2d, 0x8d, 0x0e, 0xc4, 0xec,
  0x4d, 0x0e, 0xe4, 0x0e, 0x2d, 0x6d, 0x0c, 0x0d, 0x84, 0xee, 0x0d, 0x64,
  0x2c, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x0c, 0x24, 0xa8, 0x4d,
  0x2c, 0xad, 0xcc, 0x8d, 0x0e, 0x64, 0xec, 0xad, 0xcc, 0xcc, 0x2c, 0x6d,
  0x2c, 0xad, 0xcc, 0x8d, 0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4,
  0x2a, 0xc9, 0x89, 0x0a, 0x84, 0x2c, 0xcd, 0xcc, 0xac, 0x6e, 0xae, 0x4c,
  0x28, 0x8f, 0xae, 0x6c, 0x66, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84, 0x28,
  0xcd, 0xcc, 0xac, 0x6e, 0xae, 0x0c, 0x44, 0xae, 0xcc, 0x8c, 0xad, 0x6c,
  0x8c, 0x2e, 0xcd, 0x2e, 0x8d, 0x2e, 0x0f, 0xe4, 0xcd, 0x0c, 0x84, 0x0e,
  0xad, 0x0c, 0x04, 0x2d, 0x8d, 0x0e, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c,
  0xac, 0xcc, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84,
  0xea, 0x89, 0xe8, 0x49, 0x07, 0x44, 0x8a, 0x2a, 0xe8, 0x09, 0x04, 0x2e,
  0x0d, 0xae, 0x8c, 0x2d, 0xcd, 0xad, 0x0c, 0xa4, 0x6e, 0xae, 0x6c, 0x0e,
  0x24, 0xc6, 0x46, 0x0c, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0x0c,
  0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x84, 0x0e, 0xad, 0x4c,
  0xae, 0xcc, 0xec, 0x4d, 0xae, 0x0c, 0x64, 0x2e, 0xac, 0xad, 0x0c, 0x44,
  0x2c, 0x8d, 0x0e, 0xa4, 0xcc, 0x6d, 0xec, 0xcd, 0x8d, 0x2c, 0xcd, 0xed,
  0x0c, 0x64, 0xec, 0xad, 0x8e, 0x8d, 0x0c, 0x44, 0xac, 0x0c, 0x24, 0x0c,
  0x0e, 0x8e, 0x2d, 0xad, 0x8c, 0x0c, 0x04, 0xad, 0x4c, 0xae, 0x0c, 0xa4,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x04, 0x84, 0xee, 0x0d,
  0x84, 0xed, 0xed, 0xae, 0x4c, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x8e,
  0x4e, 0xae, 0x6e, 0x8c, 0xee, 0x64, 0x0e, 0x64, 0x2e, 0x4d, 0xaf, 0x0c,
  0x24, 0xcc, 0x8d, 0x0c, 0x04, 0xee, 0x8d, 0xae, 0xcc, 0x8d, 0x2e, 0x2d,
  0x8c, 0x8d, 0x2d, 0x0f, 0x24, 0xad, 0x0d, 0x4e, 0xee, 0xcd, 0xae, 0x0c,
  0x04, 0x2a, 0x8c, 0x0e, 0x8d, 0x4e, 0x2e, 0x6c, 0xac, 0x4c, 0xee, 0x64,
  0x0e, 0x04, 0xae, 0x4c, 0xce, 0x0c, 0xe4, 0x2e, 0x8d, 0x0e, 0xed, 0xad,
  0x8e, 0x0e, 0xa4, 0xad, 0x6e, 0x0c, 0xed, 0x25, 0xcc, 0x2d, 0x0f, 0x24,
  0xae, 0x2e, 0x8c, 0x2d, 0x8d, 0x2e, 0x0f, 0x84, 0xed, 0x6d, 0x6e, 0x0e,
  0x24, 0xcd, 0x0d, 0x44, 0x8a, 0x2a, 0xe8, 0xc9, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0x04, 0xc4, 0xa8, 0x4e, 0x8e, 0x0e, 0xad,
  0x4c, 0xae, 0xed, 0x4d, 0xae, 0x8c, 0x05, 0xe4, 0xab, 0xcc, 0x6d, 0xec,
  0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0x44, 0xac,
  0x8c, 0xed, 0xed, 0x0e, 0x64, 0xec, 0xad, 0x8e, 0x8d, 0x0c, 0xa4, 0x6e,
  0xae, 0x0c, 0x84, 0xed, 0xed, 0xae, 0x4c, 0x0e, 0x44, 0x2c, 0x8d, 0x0e,
  0x44, 0x2e, 0xcc, 0xed, 0xac, 0x0c, 0x84, 0xee, 0xed, 0xcd, 0xa5, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x4a,
  0x06, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae,
  0x2d, 0x8c, 0x6d, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0xe4, 0xe5, 0x05, 0xc4, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0xe4, 0xcd,
  0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2d, 0x8d, 0x0e, 0x64, 0xae, 0x4e,
  0xce, 0x2c, 0x6c, 0xac, 0xcc, 0x05, 0xa4, 0x41, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0xa9, 0xac, 0x4d, 0xac, 0x4c, 0x6e,
  0x0e, 0xc4, 0xec, 0x4d, 0x0e, 0xa4, 0xe9, 0x8d, 0x2e, 0xed, 0xcd, 0x0d,
  0xc4, 0xaa, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0x64, 0x2c, 0x8c, 0x6d, 0xac,
  0x8e, 0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0xcd, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0xe4, 0xcb,
  0x2e, 0x4d, 0x8e, 0xae, 0x2e, 0x8c, 0x0d, 0x29, 0x8d, 0x0e, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x07, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0xc4, 0x2e, 0x4d, 0x8e, 0xae, 0x2e, 0x8c, 0x0d, 0x04, 0x2d, 0x8d, 0x0e,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0x24, 0xcd, 0x0d, 0x84,
  0x0e, 0xad, 0x0c, 0x04, 0x4e, 0xae, 0xcc, 0x2e, 0xed, 0xad, 0x6e, 0x0e,
  0xc4, 0x4c, 0x2e, 0xac, 0xad, 0xcc, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xc4,
  0xe8, 0x4d, 0x0e, 0xc4, 0xed, 0xcd, 0xad, 0x45, 0xae, 0xcc, 0x8c, 0xad,
  0x6c, 0x8c, 0xae, 0x8c, 0x0c, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0x6e, 0x0e,
  0x84, 0x0e, 0x2d, 0x6d, 0x0e, 0x24, 0x6d, 0x0e, 0x24, 0x0c, 0x84, 0x4e,
  0xae, 0xae, 0x0c, 0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x04, 0xee, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0xe4, 0xcd, 0x0c, 0x24, 0x0c, 0x04,
  0x2d, 0x8d, 0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xc4, 0xe8, 0x4d, 0x0e,
  0x44, 0xae, 0xcc, 0x8c, 0xad, 0x6c, 0x8c, 0xae, 0x8c, 0x0c, 0x04, 0xee,
  0x2d, 0xcd, 0x8d, 0x6e, 0x8e, 0x05, 0x84, 0x0e, 0x2d, 0x6d, 0x0e, 0x24,
  0x6d, 0x0e, 0x24, 0x0c, 0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x04, 0xee,
  0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0xe4, 0xcd, 0x0c, 0x24, 0x0c,
  0x04, 0x2d, 0x8d, 0x0e, 0x44, 0xae, 0xcc, 0x8c, 0xad, 0x6c, 0x8c, 0xae,
  0x8c, 0x0c, 0x24, 0x6c, 0x4c, 0xee, 0x6d, 0x6e, 0x0e, 0x84, 0x0e, 0xad,
  0x0c, 0x44, 0xae, 0xcc, 0x8c, 0xad, 0x6c, 0x8c, 0xae, 0x8c, 0x0c, 0x64,
  0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0x0c, 0xa4, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0x04, 0x04, 0xa4, 0x8e, 0x8d, 0x2e, 0xad, 0x2d, 0x8c, 0xae, 0x8c, 0x2d,
  0x0f, 0xe4, 0x2c, 0xcd, 0x2e, 0xcd, 0xed, 0x0c, 0x84, 0x0e, 0xad, 0x0c,
  0x64, 0x2e, 0xac, 0xad, 0x0c, 0x64, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d,
  0x64, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x64, 0xec, 0xed, 0x4d, 0x8e, 0x6c,
  0x0e, 0xe4, 0x0e, 0xad, 0xcc, 0x0d, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c,
  0x8c, 0xae, 0x8c, 0x0c, 0x24, 0xcc, 0x8d, 0x0c, 0x84, 0x0e, 0xad, 0x0c,
  0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x64, 0xec, 0x4d, 0x4e, 0xae, 0x6c,
  0x0e, 0xee, 0xcd, 0x8d, 0x2c, 0xcd, 0xed, 0x0c, 0x84, 0xee, 0x0d, 0x84,
  0x0e, 0xad, 0x0c, 0x44, 0x2e, 0x2c, 0x0f, 0x84, 0xac, 0x0c, 0x8e, 0x0e,
  0xcd, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9,
  0x29, 0x88, 0x4a, 0x06, 0xe4, 0xab, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x6d, 0x07, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c,
  0xac, 0x0c, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0x24, 0xcd, 0x0d,
  0x84, 0x0e, 0xad, 0x0c, 0x04, 0x4e, 0xae, 0xcc, 0x2e, 0xed, 0xad, 0x6e,
  0x0e, 0xc4, 0x4c, 0x2e, 0xac, 0xad, 0xac, 0x41, 0xa1, 0x6f, 0xa7, 0x41,
  0xa1, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x04,
  0x2a, 0x8c, 0x0e, 0x8d, 0x4e, 0x2e, 0x6c, 0xac, 0x4c, 0x4e, 0x2a, 0x2c,
  0x0f, 0x2a, 0x2c, 0x8f, 0xed, 0x2d, 0x8c, 0xac, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x44, 0x2e, 0x2c,
  0x4f, 0xaa, 0x6c, 0xac, 0x4e, 0x6e, 0x2e, 0xed, 0xcd, 0x8d, 0xa8, 0x0c,
  0x8e, 0x0e, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9,
  0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x44, 0x2e, 0x8c, 0x2c, 0x2d, 0xcc,
  0x6d, 0xac, 0x6c, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84, 0xea, 0x89, 0xe8,
  0x09, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0xac, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x24, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0xee, 0x69, 0x6c, 0x8c,
  0xad, 0x6e, 0x2e, 0xed, 0xcd, 0xed, 0x48, 0xa8, 0xce, 0xcc, 0xac, 0x4c,
  0x0e, 0x24, 0xe8, 0xe9, 0x48, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x6e, 0xa7,
  0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e,
  0x8c, 0x0e, 0x64, 0x0a, 0x2d, 0x8c, 0xec, 0xed, 0x4e, 0x2a, 0x2c, 0x0f,
  0x2a, 0x2c, 0x8f, 0xed, 0x2d, 0x8c, 0xac, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0x0e, 0x29,
  0x8d, 0x6e, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4,
  0xe5, 0x05, 0x04, 0x29, 0x8d, 0x0e, 0x84, 0x2e, 0xad, 0xad, 0x0c, 0x84,
  0x07, 0x86, 0xc5, 0xc5, 0xc5, 0x07, 0xe4, 0xcd, 0x0d, 0x04, 0x29, 0x8d,
  0xce, 0x05, 0xa4, 0x25, 0x06, 0xe4, 0xcd, 0x0d, 0xa4, 0x2d, 0x6d, 0x6e,
  0xce, 0xa5, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e,
  0xae, 0x6e, 0x8c, 0x0e, 0x24, 0x88, 0x4e, 0xee, 0xad, 0x6e, 0xee, 0x2a,
  0xcc, 0xae, 0x8c, 0xad, 0x8c, 0x8e, 0x4a, 0x2e, 0xcc, 0x6d, 0xce, 0xec,
  0x4d, 0xae, 0xcd, 0x28, 0x8d, 0x8d, 0xae, 0x4c, 0x6e, 0xe8, 0xcd, 0x6d,
  0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9,
  0x89, 0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28,
  0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0xed, 0xaa, 0x2c, 0xed, 0x0c,
  0x8d, 0x6e, 0xa8, 0x8e, 0xee, 0xcd, 0xcc, 0x6c, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xec, 0xed, 0x8d, 0x0d, 0xa4, 0x6e, 0x2e, 0xcd, 0xed,
  0x4c, 0x28, 0x8d, 0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x8c, 0x8d, 0xe8, 0xed,
  0xce, 0x6d, 0x2e, 0xac, 0x0d, 0x8e, 0xad, 0x8c, 0x4c, 0xa8, 0xce, 0xcc,
  0xac, 0x4c, 0x6e, 0x6e, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xe8, 0xe9, 0x89, 0x09, 0xa4, 0x6e, 0xae, 0x2c, 0x88, 0x2c, 0x0c,
  0x8e, 0x2e, 0xcd, 0xae, 0x6c, 0xa9, 0x4c, 0xce, 0xad, 0x8c, 0x6d, 0x2a,
  0x4d, 0xaf, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x64, 0xad, 0x4c, 0xce, 0xad, 0x8c, 0x4d, 0x2a, 0x8c,
  0x2c, 0xad, 0x6e, 0x8e, 0xa9, 0x4c, 0xce, 0x6c, 0xe8, 0xad, 0xcc, 0x6c,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xa4,
  0x2d, 0xcd, 0x6d, 0xa9, 0x4c, 0xce, 0xad, 0x8c, 0xed, 0x2a, 0x8d, 0x8c,
  0x0e, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89,
  0x0a, 0xa4, 0x2d, 0x0c, 0x6f, 0xa9, 0x4c, 0xce, 0xad, 0x8c, 0xed, 0x2a,
  0x8d, 0x8c, 0x0e, 0x6d, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x2e, 0x2c, 0x0f, 0x29, 0x8d,
  0x8e, 0x28, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0x8c, 0xea, 0x6d, 0xa9,
  0x4c, 0xce, 0xad, 0x8c, 0xed, 0x2a, 0x8d, 0x8c, 0x0e, 0x6d, 0x6a, 0x2c,
  0x8c, 0xad, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x44, 0x2e, 0x2c, 0x0f, 0x29, 0x8d, 0x8e, 0x28, 0x6d,
  0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0x8c, 0xea, 0x6d, 0xa9, 0x4c, 0xce, 0xad,
  0x8c, 0x6d, 0x2a, 0x4d, 0xaf, 0x6c, 0x6a, 0x2c, 0x8c, 0xad, 0xac, 0x08,
  0x0f, 0xee, 0xcd, 0xad, 0xcc, 0x8d, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x04, 0xae, 0x4c, 0x6e, 0x0e, 0xae,
  0x6c, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0xe8, 0x4d, 0x4e, 0xae, 0x6c, 0x8c,
  0x8e, 0xa8, 0x0c, 0x8e, 0x0e, 0x2d, 0xc9, 0x8d, 0xae, 0x4c, 0x0e, 0xee,
  0x8d, 0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d, 0xcd, 0xcd, 0x2a,
  0x4c, 0x2e, 0x2d, 0xcc, 0x6d, 0xac, 0x8c, 0xea, 0x8d, 0xa8, 0xcc, 0xed,
  0x2d, 0x6d, 0xae, 0x6c, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x6c,
  0x2a, 0xed, 0xac, 0x2d, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x6d, 0x2a,
  0xed, 0xac, 0x2d, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x6d, 0x2a,
  0xed, 0xac, 0x2d, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a,
  0xc9, 0x89, 0x0a, 0x84, 0xa8, 0x0c, 0x8e, 0x0e, 0xcd, 0xa9, 0xae, 0xad,
  0x29, 0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0x4c, 0x28, 0x8d, 0x6e, 0x6e,
  0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae,
  0x6e, 0x8c, 0x0e, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae,
  0xcc, 0x2a, 0x4c, 0x2e, 0x2d, 0xcc, 0x6d, 0xac, 0xec, 0x4b, 0x28, 0x8d,
  0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x8c, 0xcd, 0x28, 0x8d, 0x8d, 0xae, 0x4c,
  0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc,
  0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae,
  0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c,
  0x6d, 0x2a, 0xed, 0xac, 0x2d, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x6d,
  0x2a, 0xed, 0xac, 0x2d, 0x6c, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0xe4, 0xad, 0x8e, 0x0e, 0xae, 0x8e,
  0xae, 0xa9, 0x2c, 0xcc, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xe8, 0xe9, 0x89, 0x09, 0xa4, 0x6e, 0xae, 0x8c, 0xa8, 0x0c, 0x8e, 0x0e,
  0xed, 0xaa, 0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x6e, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0xa4, 0x6e, 0xae, 0xcc, 0xe9,
  0x4d, 0xae, 0x2d, 0x8c, 0xed, 0xaa, 0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x6e,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x64,
  0xad, 0x4c, 0xce, 0xad, 0x8c, 0xed, 0x2a, 0x8d, 0x8c, 0x0e, 0x6d, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a,
  0x64, 0xad, 0x4c, 0xce, 0xad, 0x8c, 0x4d, 0x2a, 0x8c, 0x2c, 0xad, 0x6e,
  0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x6b, 0xa6, 0x6b,
  0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae,
  0x6e, 0x8c, 0x0e, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae,
  0xac, 0xa9, 0x2c, 0xcc, 0xcd, 0x2a, 0x4c, 0x2e, 0x2d, 0xcc, 0x6d, 0xac,
  0x6c, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc,
  0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae,
  0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x64, 0xad, 0x4c, 0xce, 0xad, 0x8c, 0xed,
  0x2a, 0x8d, 0x8c, 0x0e, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4,
  0x2a, 0xc9, 0x89, 0x0a, 0x64, 0xad, 0x4c, 0xce, 0xad, 0x8c, 0x4d, 0x2a,
  0x8c, 0x2c, 0xad, 0x6e, 0x6e, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x84, 0xec, 0x6d, 0x08, 0xad, 0x6c,
  0x6c, 0xad, 0x4c, 0x4e, 0xec, 0x2d, 0x4c, 0x8e, 0x6c, 0x2a, 0xac, 0x0d,
  0x8e, 0x2d, 0xcd, 0xed, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xe8, 0xe9, 0x89, 0x09, 0x24, 0x4c, 0xae, 0xac, 0xc8, 0xae, 0xcc, 0x0d,
  0x2a, 0x0d, 0xaf, 0x8c, 0x6d, 0x2e, 0x68, 0x8c, 0x2e, 0xcd, 0xae, 0x6c,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x04,
  0x2e, 0x0d, 0xaf, 0x8c, 0x6d, 0x8a, 0xae, 0x0c, 0x2e, 0x6b, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e,
  0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41,
  0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x44, 0x2a, 0x2c,
  0xef, 0xa8, 0xcc, 0x6d, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e,
  0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x84, 0xae,
  0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x84, 0xec, 0x6d, 0x08,
  0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x4e, 0xec, 0x2d, 0x4c, 0x8e, 0x4c, 0x2a,
  0x2c, 0xef, 0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x64,
  0x0c, 0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x4e, 0xec, 0x2d, 0x4c, 0x8e, 0xec,
  0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0x4c, 0x2a, 0x2c, 0x6f, 0xce,
  0xe8, 0x4d, 0xae, 0xc8, 0xae, 0xcc, 0x0d, 0x2a, 0x0d, 0xaf, 0x8c, 0x6d,
  0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x64, 0xae, 0xac, 0x8c, 0x6c, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xc4, 0xad,
  0xae, 0x6d, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x0e, 0xaa, 0x4c, 0x6e,
  0xaa, 0x8c, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9,
  0x89, 0x0a, 0xc4, 0xad, 0xae, 0x6d, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c,
  0xaa, 0x8c, 0x6e, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a,
  0xc9, 0x89, 0x0a, 0xc4, 0xad, 0xae, 0x0d, 0x2a, 0x0d, 0xaf, 0x8c, 0x6d,
  0x0e, 0xaa, 0x4c, 0x8e, 0x28, 0xad, 0x0d, 0xaa, 0x4c, 0x6e, 0xaa, 0x8c,
  0x6e, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e,
  0xae, 0x6e, 0x8c, 0x0e, 0x64, 0xea, 0x4d, 0x8e, 0x4e, 0x2a, 0x2c, 0x6f,
  0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc,
  0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x84, 0x2c, 0xad, 0x6d, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0xa4, 0x6e,
  0xae, 0xec, 0x69, 0x8c, 0x2e, 0x0c, 0xad, 0x8c, 0x4c, 0x2e, 0x8c, 0x4d,
  0x2a, 0x2c, 0x8f, 0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x2d,
  0xaa, 0x2e, 0xcc, 0x8d, 0x2e, 0x4d, 0x2f, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84, 0xa8, 0x0c,
  0x8e, 0x0e, 0x0d, 0xc4, 0xec, 0x4d, 0x0e, 0x24, 0x0c, 0x44, 0x2c, 0xcd,
  0x0d, 0xe4, 0x2e, 0x8d, 0x0e, 0x2d, 0xcd, 0x0d, 0xe4, 0x0e, 0x2d, 0x6d,
  0x0c, 0x0d, 0x84, 0xee, 0x0d, 0x64, 0xee, 0x4d, 0x8e, 0x0e, 0xc4, 0xac,
  0x4e, 0x8e, 0x0e, 0xad, 0x4c, 0x0e, 0x44, 0x2c, 0x6c, 0xae, 0x8c, 0x0c,
  0xe4, 0xcd, 0x0d, 0x84, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd,
  0xcd, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x44, 0x2c, 0xcd, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x6d, 0x2a, 0x4d,
  0xaf, 0x6c, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0xc1, 0x2d,
  0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x64, 0xea, 0x4d, 0x8e,
  0x4e, 0x2a, 0x2c, 0x6f, 0x0e, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0x0a,
  0x4d, 0xae, 0x2c, 0x8c, 0xec, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad,
  0xae, 0x0d, 0xa4, 0xc8, 0xad, 0xae, 0x0d, 0x64, 0x0f, 0xe4, 0x2a, 0x8d,
  0x8c, 0x0e, 0x0d, 0xa4, 0x07, 0xc4, 0x86, 0x86, 0x05, 0x04, 0xa9, 0x2c,
  0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x07, 0x24, 0xc6, 0x86, 0x05, 0x64, 0x2a,
  0x4d, 0xaf, 0x0c, 0xa4, 0x07, 0xe4, 0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0x44,
  0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x6f, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x44,
  0x2a, 0x2c, 0xef, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad, 0xae, 0x0d,
  0xa4, 0xc8, 0xad, 0xae, 0x0d, 0x64, 0x0f, 0xc4, 0xa9, 0xae, 0xad, 0x88,
  0xad, 0xac, 0xad, 0xcc, 0x8d, 0x0e, 0x2a, 0x2c, 0x4d, 0x6e, 0x0e, 0xaa,
  0x4c, 0x8e, 0x0a, 0x4d, 0xae, 0x2c, 0x8c, 0x0c, 0xa4, 0x07, 0x84, 0x86,
  0x05, 0xe4, 0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0xa4, 0x07, 0x84, 0x0a, 0x4d,
  0xae, 0x2c, 0x8c, 0xec, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x47, 0xe7, 0x2a,
  0x8d, 0x8c, 0x0e, 0x8d, 0x05, 0x04, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x0e,
  0xa4, 0x07, 0xc4, 0xa9, 0xae, 0xad, 0x88, 0xad, 0xac, 0xad, 0xcc, 0x8d,
  0x0e, 0x2a, 0x2c, 0x4d, 0x6e, 0x0e, 0xaa, 0x4c, 0x8e, 0x0a, 0x4d, 0xae,
  0x2c, 0x8c, 0x0c, 0x44, 0x05, 0x44, 0x06, 0x44, 0x05, 0x84, 0x0a, 0x4d,
  0xae, 0x2c, 0x8c, 0xec, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x47, 0x07, 0xa9,
  0x2c, 0xed, 0x0c, 0x8d, 0x8e, 0x05, 0x64, 0x2a, 0x4d, 0xaf, 0x0c, 0xa4,
  0x07, 0xe4, 0x2a, 0x8d, 0x8c, 0x0e, 0x0d, 0x44, 0x05, 0x04, 0xa9, 0x2c,
  0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0xaf, 0x41, 0x61, 0x24, 0xcd, 0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x04,
  0x89, 0x69, 0x8a, 0xa9, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e,
  0x8c, 0x2e, 0x6d, 0xec, 0x2b, 0x6c, 0x6e, 0xae, 0x4c, 0x8e, 0x0e, 0x05,
  0x44, 0x2a, 0x2c, 0xef, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x47, 0xe7, 0x2a,
  0x8d, 0x8c, 0x0e, 0x0d, 0x84, 0xa7, 0x07, 0xc4, 0x86, 0x06, 0xa4, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0xc4, 0xc4, 0x04, 0x44, 0x2a, 0x2c, 0xef, 0x48,
  0xee, 0xad, 0x0e, 0x4e, 0x47, 0x07, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x0e,
  0x84, 0xa7, 0x07, 0x24, 0x46, 0x06, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0xc4, 0xc4, 0x04, 0x44, 0x2a, 0x2c, 0xef, 0x48, 0xee, 0xad, 0x0e, 0x4e,
  0x47, 0x67, 0x2a, 0x4d, 0xaf, 0x0c, 0x84, 0xa7, 0x07, 0x04, 0x27, 0x26,
  0x47, 0x86, 0x05, 0x44, 0x44, 0x2a, 0x2c, 0x0f, 0xe4, 0x4c, 0xee, 0xad,
  0x0e, 0x0e, 0x84, 0x2c, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d,
  0x0e, 0x24, 0x4c, 0xae, 0x0c, 0xe4, 0xad, 0x8e, 0x6e, 0x2e, 0x8d, 0xac,
  0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0xae, 0x0e, 0x0e, 0xee, 0x4d, 0x8e,
  0xae, 0x8c, 0x0c, 0x84, 0x2d, 0xad, 0x2d, 0x8d, 0x6e, 0x0e, 0x64, 0xae,
  0x8c, 0x0e, 0x44, 0x2c, 0x0f, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0xe8, 0xad,
  0xce, 0x8d, 0x2e, 0xcd, 0xed, 0x0c, 0x64, 0xea, 0x4d, 0x8e, 0x0e, 0x64,
  0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xce, 0x45, 0x24, 0x65, 0xa7, 0x41, 0x61,
  0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0xac, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x04, 0x2a, 0x8c, 0x0e, 0x8d,
  0x4e, 0x2e, 0x6c, 0xac, 0x4c, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc,
  0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x29, 0x88, 0x4a, 0x2a, 0x09,
  0x0b, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d,
  0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28,
  0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9,
  0x29, 0x88, 0x6a, 0x06, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea,
  0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x04, 0x04, 0x04, 0x04, 0xa4, 0x6e,
  0xae, 0x4c, 0x28, 0x6c, 0xae, 0x2c, 0x88, 0x4d, 0xac, 0x8c, 0xec, 0xcd,
  0x48, 0xee, 0xad, 0xad, 0x29, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x6d,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29,
  0x88, 0x6a, 0x06, 0x84, 0x2d, 0xed, 0x0c, 0x8d, 0x0e, 0xea, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x07, 0x04, 0x04, 0x04, 0x04, 0xa4, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x04, 0x04, 0x04,
  0x04, 0xa4, 0x6e, 0xae, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0xad, 0x29,
  0x0c, 0x6e, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9,
  0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x84, 0x2d, 0xed, 0x0c, 0x8d, 0x6e,
  0xe8, 0x8d, 0xed, 0x4d, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x04, 0x04, 0x84, 0xac, 0xcc, 0x2c,
  0xac, 0x8e, 0x8d, 0x2e, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0x2e, 0xc9,
  0x8d, 0xae, 0xcc, 0x6d, 0x2e, 0x8d, 0x2e, 0x6f, 0xa7, 0x41, 0xa1, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x29, 0x88, 0x4a, 0x2a, 0x09,
  0x0b, 0x04, 0x4e, 0xae, 0xcc, 0xce, 0x48, 0x2e, 0xac, 0xad, 0xcc, 0x2a,
  0xad, 0xec, 0x0e, 0x4a, 0xee, 0x4d, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0xab, 0xa9, 0x29, 0x88, 0x4a, 0x2a, 0x09, 0x0b, 0x04, 0x4e,
  0xae, 0xcc, 0xce, 0x48, 0x2e, 0xac, 0xad, 0x0c, 0x4a, 0xee, 0x4d, 0x8d,
  0xea, 0xcd, 0x2a, 0xad, 0xec, 0x6e, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c,
  0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x04,
  0x4e, 0xae, 0xcc, 0xce, 0x48, 0x2e, 0xac, 0xad, 0x6c, 0x28, 0xac, 0xad,
  0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04,
  0x04, 0x04, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0xa7, 0x41,
  0xa1, 0x41, 0x21, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0xcb, 0xad,
  0x2c, 0x4c, 0x6e, 0xa7, 0x41, 0x21, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x44, 0xcb, 0x2c, 0x4c, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4,
  0x2a, 0xc9, 0x89, 0x0a, 0x04, 0xa4, 0x2d, 0x0c, 0x4f, 0x2a, 0x8c, 0x2c,
  0x2d, 0xcc, 0x6d, 0xac, 0x4c, 0x2a, 0x2c, 0x4f, 0xaa, 0x6c, 0xac, 0x4e,
  0x6e, 0x2e, 0xed, 0xcd, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x6d, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x04, 0xa4, 0x2d,
  0x0c, 0x6f, 0x0a, 0x2d, 0x8c, 0xec, 0xed, 0x4e, 0x2a, 0x2c, 0x4f, 0xaa,
  0x6c, 0xac, 0x4e, 0x6e, 0x2e, 0xed, 0xcd, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e,
  0x6d, 0xa7, 0x41, 0xa1, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61,
  0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x44, 0x8a, 0x2a, 0xe8, 0x69, 0xe8,
  0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c,
  0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9,
  0x89, 0x0a, 0x64, 0xae, 0xac, 0x8c, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xc4, 0xad, 0xae, 0x6d, 0x2a, 0xac,
  0x0d, 0x8e, 0xad, 0x6c, 0x0e, 0xaa, 0x4c, 0x6e, 0xaa, 0x8c, 0x6e, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xc4, 0xad,
  0xae, 0x6d, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0xaa, 0x8c, 0x6e, 0x6e,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xc4,
  0xad, 0xae, 0x0d, 0x2a, 0x0d, 0xaf, 0x8c, 0x6d, 0x0e, 0xaa, 0x4c, 0x8e,
  0x28, 0xad, 0x0d, 0xaa, 0x4c, 0x6e, 0xaa, 0x8c, 0x6e, 0xa7, 0x41, 0xa1,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4,
  0x2d, 0x0c, 0x2f, 0xe8, 0x49, 0x2a, 0x2c, 0x0f, 0x29, 0x8d, 0x8e, 0x2a,
  0xad, 0xad, 0x6c, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0x29, 0x0c, 0x0f, 0x24,
  0xe8, 0x09, 0x44, 0x2e, 0x2c, 0x0f, 0x04, 0x2d, 0x8d, 0x0e, 0x84, 0x2e,
  0xad, 0xad, 0x0c, 0xa4, 0x6e, 0xae, 0x8c, 0x0c, 0xc4, 0xec, 0x4d, 0x0e,
  0x84, 0xae, 0x29, 0x0c, 0x0f, 0x24, 0xcd, 0x0d, 0x84, 0x4a, 0x2e, 0x6c,
  0xac, 0x4c, 0x2a, 0x2c, 0xcf, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xe8, 0xe9, 0x89, 0x09, 0x24, 0x0c, 0x0e, 0x4e, 0xee, 0x0d, 0x2f, 0xad,
  0x2d, 0x8c, 0xae, 0x2c, 0xc9, 0x8d, 0xae, 0x4c, 0x4e, 0xae, 0xcc, 0x8c,
  0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x6e, 0x07, 0x04, 0x04, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0x08, 0x0e, 0x4e, 0xee, 0x0d, 0x2f,
  0xad, 0x2d, 0x8c, 0xae, 0x0c, 0x24, 0xcd, 0x8d, 0xae, 0x4c, 0x4e, 0xae,
  0xcc, 0x8c, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xce, 0x05, 0xa4,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84,
  0x2c, 0xcd, 0xcc, 0xac, 0x6e, 0xae, 0x4c, 0xaa, 0xcc, 0x8c, 0xad, 0x6c,
  0x8c, 0x2e, 0xcc, 0x6d, 0xac, 0x6c, 0x6a, 0x2c, 0x8c, 0xad, 0x6c, 0x07,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84,
  0x28, 0xcd, 0xcc, 0xac, 0x6e, 0xae, 0x0c, 0x44, 0xae, 0xcc, 0x8c, 0xad,
  0x6c, 0x8c, 0x2e, 0xcc, 0x6d, 0xac, 0x0c, 0xc4, 0x4c, 0xee, 0xad, 0x0d,
  0xe4, 0x6d, 0x6c, 0x8c, 0xad, 0x8e, 0x2c, 0xcd, 0xed, 0x0c, 0x64, 0xae,
  0x4e, 0xce, 0x2c, 0x6c, 0xac, 0x6c, 0xce, 0x05, 0xa4, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d, 0xcd, 0x2d,
  0xad, 0xad, 0xae, 0x2d, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0x2e, 0x89,
  0x8d, 0xad, 0xae, 0x2d, 0xcd, 0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x07,
  0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0xa8, 0x4d, 0x2c,
  0xad, 0xcc, 0x8d, 0x0e, 0x24, 0x8d, 0x8d, 0xad, 0xae, 0x2d, 0xcd, 0x2d,
  0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x64, 0xec, 0xad, 0xcc, 0x0c, 0xe4, 0x0e,
  0xad, 0xcc, 0x0d, 0x24, 0x0c, 0x44, 0x2e, 0x2c, 0x0f, 0x24, 0x6d, 0x0e,
  0xe4, 0x6d, 0x6c, 0x8c, 0xad, 0x8e, 0xac, 0x8c, 0xcc, 0xa5, 0x41, 0xa1,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4,
  0x2d, 0x0c, 0x8f, 0x0a, 0xad, 0xec, 0x4d, 0xae, 0x8c, 0x2e, 0x6d, 0x2c,
  0x8c, 0x2d, 0xe8, 0x49, 0x2a, 0x2c, 0x0f, 0x29, 0x8d, 0x8e, 0x2a, 0xad,
  0xad, 0x6c, 0x07, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0x29, 0x0c, 0x0f, 0x24,
  0xe8, 0x09, 0x44, 0x2e, 0x2c, 0x0f, 0x04, 0x2d, 0x8d, 0x0e, 0x84, 0x2e,
  0xad, 0xad, 0x0c, 0xa4, 0x6e, 0xae, 0x8c, 0x0c, 0x24, 0xcd, 0x0d, 0xc4,
  0x2c, 0x8c, 0x8d, 0xed, 0xcd, 0xcc, 0x0c, 0x64, 0xec, 0xad, 0x0d, 0xae,
  0x8e, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x24, 0x6c, 0x6c, 0xec, 0xad,
  0xce, 0x8d, 0x2e, 0xcd, 0xed, 0x0c, 0xc4, 0xec, 0x4d, 0xae, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0x0c, 0x0f, 0xee, 0xcd, 0xad, 0xcc,
  0x8d, 0x2e, 0x2d, 0x8c, 0xcd, 0x28, 0x8c, 0x8d, 0xed, 0xcd, 0xcc, 0xac,
  0x29, 0xcd, 0xed, 0x69, 0x6c, 0x8c, 0xad, 0x6e, 0x2e, 0xed, 0xcd, 0x6d,
  0xa8, 0x8e, 0xee, 0xcd, 0xcc, 0x0c, 0x24, 0xcc, 0x8d, 0x0c, 0xa4, 0x2d,
  0x0c, 0x2f, 0xe8, 0x49, 0x2a, 0x2c, 0x0f, 0x29, 0x8d, 0x8e, 0x2a, 0xad,
  0xad, 0xcc, 0x05, 0x04, 0x04, 0x04, 0xa4, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xe8, 0xe9, 0x89, 0x09, 0xa4, 0x6e, 0xae, 0x6c, 0xea, 0x4d, 0x8e,
  0xae, 0x8c, 0x4c, 0x2a, 0x2c, 0x6f, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x44, 0x2e, 0x2c,
  0x8f, 0x4e, 0x2e, 0x6c, 0x2c, 0xcd, 0xed, 0x8c, 0x28, 0xad, 0x6d, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09,
  0x24, 0x0c, 0x0e, 0x8e, 0x2d, 0xaf, 0x08, 0x0f, 0xee, 0xcd, 0xad, 0xcc,
  0x8d, 0x2e, 0x2d, 0x8c, 0xcd, 0x28, 0x8c, 0x8d, 0xed, 0xcd, 0xcc, 0x6c,
  0x07, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0x08, 0x0e, 0x8e,
  0x2d, 0x0f, 0xa4, 0x0c, 0x0f, 0xee, 0xcd, 0xad, 0xcc, 0x8d, 0x2e, 0x2d,
  0x8c, 0x0d, 0xc4, 0x2c, 0x8c, 0x8d, 0xed, 0xcd, 0xcc, 0x0c, 0x84, 0xee,
  0x0d, 0x24, 0xe8, 0x09, 0x64, 0xec, 0xad, 0xcc, 0xcc, 0x2c, 0x6d, 0x2c,
  0xad, 0xcc, 0x8d, 0x0e, 0x44, 0x2c, 0x6c, 0xae, 0x8c, 0x0c, 0xe4, 0xcd,
  0x0d, 0x44, 0x2e, 0x2c, 0x0f, 0x04, 0x2d, 0x8d, 0x0e, 0x84, 0x2c, 0x6d,
  0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0xcc, 0x05, 0x04, 0x04, 0x04, 0xa4, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x0c,
  0x0f, 0xee, 0xcd, 0xad, 0xcc, 0x8d, 0x2e, 0x2d, 0x8c, 0xcd, 0x28, 0x8c,
  0x8d, 0xed, 0xcd, 0xcc, 0x8c, 0xa8, 0x6c, 0x2c, 0x2c, 0x6f, 0xe8, 0xcd,
  0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xe8, 0xe9, 0x89, 0x09, 0x84, 0xec, 0x6d, 0x08, 0xad, 0x6c, 0x6c,
  0xad, 0x4c, 0x4e, 0xec, 0x2d, 0x4c, 0x8e, 0x6c, 0x2a, 0xac, 0x0d, 0x8e,
  0x2d, 0xcd, 0xed, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8,
  0xe9, 0x89, 0x09, 0x24, 0x4c, 0xae, 0xac, 0xc8, 0xae, 0xcc, 0x0d, 0x2a,
  0x0d, 0xaf, 0x8c, 0x6d, 0x2e, 0x68, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a,
  0x64, 0x0e, 0x0e, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c,
  0x6b, 0xa6, 0x6b, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0xa4, 0x41, 0xe1, 0xe5, 0x05, 0xc4, 0x28, 0xcd, 0x2d, 0x8c, 0x0d, 0x44,
  0xae, 0xcc, 0x8d, 0xac, 0x4c, 0x0e, 0xe4, 0xad, 0x8e, 0x0e, 0xae, 0x8e,
  0x0e, 0x64, 0xec, 0xad, 0x0d, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd,
  0x0d, 0xa4, 0xed, 0x8d, 0xac, 0x6c, 0xce, 0xa5, 0x41, 0xa1, 0xcc, 0xad,
  0xae, 0x0d, 0x64, 0xe8, 0xad, 0x0d, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x8d, 0x2a, 0x0f, 0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x4a, 0x48, 0x6a, 0x0a, 0x2d, 0x8c, 0x2c, 0xcd, 0xed, 0x0c,
  0xa4, 0x07, 0x04, 0x86, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xa8,
  0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0xee, 0x69, 0x6c, 0x8c, 0xad, 0x6e, 0x2e,
  0xed, 0xcd, 0xed, 0xc9, 0x8d, 0x2d, 0xef, 0x8b, 0xa8, 0xcc, 0xed, 0x2d,
  0x6d, 0xae, 0x8c, 0x8c, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xa8,
  0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0xee, 0x69, 0x6c, 0x8c, 0xad, 0x6e, 0x2e,
  0xed, 0xcd, 0xed, 0xc9, 0x8d, 0x2d, 0xef, 0x4b, 0x2a, 0xec, 0xee, 0xc9,
  0xad, 0xcc, 0x48, 0x2e, 0xac, 0xad, 0x8c, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x24, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0xee, 0x69, 0x6c, 0x8c,
  0xad, 0x6e, 0x2e, 0xed, 0xcd, 0x2d, 0xc8, 0x8d, 0x8c, 0x28, 0x6d, 0xee,
  0x6d, 0x6c, 0x8c, 0xad, 0x6e, 0x2e, 0xed, 0xcd, 0xad, 0x29, 0x0c, 0x8e,
  0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xa8, 0x4d, 0x2c, 0xad, 0xcc,
  0x8d, 0xee, 0x69, 0x6c, 0x8c, 0xad, 0x6e, 0x2e, 0xed, 0xcd, 0xcd, 0x2a,
  0x4c, 0x2e, 0x2d, 0xcc, 0x6d, 0xac, 0x8c, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x24, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0xee, 0x69, 0x6c, 0x8c,
  0xad, 0x6e, 0x2e, 0xed, 0xcd, 0x8d, 0xe9, 0x6d, 0x2c, 0x8c, 0xcd, 0x2a,
  0x4c, 0x2e, 0x2d, 0xcc, 0x6d, 0xac, 0x8c, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0x8a, 0x2a, 0xe8, 0x09, 0x29, 0x8d, 0x8e, 0x28, 0x6d, 0x8e,
  0x2e, 0xcc, 0x6d, 0xac, 0x8c, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x6d, 0xee, 0xc9, 0x8d, 0x2d, 0x8f, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0xa8, 0x0c, 0x8e, 0x0e, 0xed, 0xc9,
  0x8d, 0x2d, 0x8f, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0x88, 0x4d,
  0xac, 0x8c, 0xec, 0x8d, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x28,
  0x6c, 0xae, 0xac, 0x29, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x2d, 0x88,
  0x4d, 0xac, 0x8c, 0xec, 0x8d, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64,
  0xe8, 0xad, 0xce, 0x8d, 0xae, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41,
  0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0xaa,
  0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x4c, 0xaa, 0x6c, 0xee, 0xad, 0x4e, 0x6e,
  0xac, 0xcc, 0xe8, 0x4d, 0xae, 0x2d, 0x8c, 0x4e, 0xea, 0x48, 0xa8, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad, 0xae, 0x0d,
  0x84, 0x2a, 0x0f, 0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x44, 0x6a, 0x46, 0xe6, 0x68, 0x46, 0x46, 0x68,
  0x46, 0x26, 0x68, 0x46, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0xa4,
  0x07, 0x04, 0x86, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x44, 0x2a, 0xc6, 0xe6, 0x28, 0xc6, 0x46, 0x28, 0xc6, 0x26, 0x28,
  0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x8a, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x2a, 0x26, 0xe6, 0x28, 0x26,
  0x46, 0x28, 0x06, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x8a, 0xa5, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xe8, 0xad, 0xce,
  0x8d, 0xae, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41, 0x61,
  0x24, 0xcd, 0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x04, 0x89, 0x69, 0x8a, 0xa9,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x8d, 0x2d, 0xcd, 0xad, 0x0c,
  0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0x0a,
  0x84, 0xea, 0x8d, 0x08, 0xeb, 0x28, 0xc9, 0xe8, 0x4d, 0xae, 0x2d, 0x8c,
  0x0e, 0xa5, 0x2a, 0xc9, 0x89, 0x0a, 0x84, 0x2e, 0x0f, 0xae, 0x2c, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0xee, 0x2e, 0x8d, 0x6e, 0x0c, 0x0d, 0x04,
  0x85, 0x2e, 0x0f, 0xae, 0x2c, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x6a, 0x46, 0xe6, 0x68,
  0x46, 0x46, 0x68, 0x46, 0x26, 0x68, 0x46, 0xe6, 0xcb, 0x88, 0xe9, 0x29,
  0x88, 0x4a, 0x07, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08,
  0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x6a,
  0x46, 0xe6, 0x68, 0x46, 0x46, 0x68, 0x46, 0x26, 0x68, 0x46, 0xe6, 0xcb,
  0x88, 0xe9, 0x29, 0x88, 0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x2a, 0xc6, 0xe6,
  0x28, 0xc6, 0x46, 0x28, 0xc6, 0x26, 0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9,
  0x29, 0x88, 0x4a, 0x07, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84,
  0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b,
  0x2a, 0xc6, 0xe6, 0x28, 0xc6, 0x46, 0x28, 0xc6, 0x26, 0x28, 0xc6, 0xe6,
  0xcb, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x2a, 0x26,
  0xe6, 0x28, 0x26, 0x46, 0x28, 0x06, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88,
  0x4a, 0x07, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb,
  0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x2a, 0x26,
  0xe6, 0x28, 0x26, 0x46, 0x28, 0x06, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88,
  0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8,
  0x49, 0xaa, 0x29, 0x88, 0xea, 0xab, 0xca, 0x69, 0xc9, 0xe9, 0xe9, 0xca,
  0x69, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0x61, 0xa4,
  0xcc, 0x8d, 0x2c, 0xcd, 0xac, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1,
  0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0xaa, 0x0c,
  0x8f, 0xae, 0x4e, 0xae, 0x4c, 0xaa, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac,
  0xcc, 0xe8, 0x4d, 0xae, 0x2d, 0x8c, 0x4e, 0xaa, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad, 0xae, 0x0d, 0x84, 0x2a, 0x0f,
  0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x44, 0x6a, 0x46, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0xa4,
  0x07, 0x04, 0x86, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x44, 0x2a, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x8a, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x0a, 0xe7,
  0xab, 0xca, 0xe9, 0x49, 0xaa, 0x89, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0xe8, 0xad, 0xce, 0x8d, 0xae, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41, 0x61, 0x24, 0xcd, 0xcc, 0x8d,
  0xac, 0xcc, 0x0c, 0x04, 0x89, 0x69, 0x8a, 0xa9, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x24, 0xcd, 0x8d, 0x2d, 0xcd, 0xad, 0x0c, 0x84, 0x08, 0xeb, 0x28,
  0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0x0a, 0x84, 0xea, 0x8d, 0x08,
  0xeb, 0x28, 0xc9, 0xe8, 0x4d, 0xae, 0x2d, 0x8c, 0x0e, 0xa5, 0x2a, 0xc9,
  0x89, 0x0a, 0x84, 0x2e, 0x0f, 0xae, 0x2c, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x64, 0xee, 0x2e, 0x8d, 0x6e, 0x0c, 0x0d, 0x04, 0x85, 0x2e, 0x0f, 0xae,
  0x2c, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0x2c,
  0x6c, 0xae, 0x0c, 0x44, 0x6a, 0x46, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88,
  0x4a, 0x07, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb,
  0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x6a, 0x46,
  0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x2a,
  0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x07, 0x44, 0xae, 0x8c,
  0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49,
  0xaa, 0x29, 0x88, 0xea, 0x4b, 0x2a, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29,
  0x88, 0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x0a, 0xe7, 0xab, 0xca, 0xe9, 0x49,
  0xaa, 0x49, 0x07, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08,
  0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x0a,
  0xe7, 0xab, 0xca, 0xe9, 0x49, 0xaa, 0x69, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84,
  0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0xab,
  0xca, 0x69, 0xc9, 0xe9, 0xe9, 0xca, 0x69, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0xaf, 0x41, 0x61, 0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0xac, 0x41,
  0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x41, 0xc1, 0x2d, 0xac, 0xad, 0x6c,
  0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae,
  0x4c, 0xaa, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0xcc, 0xe8, 0x4d, 0xae,
  0x2d, 0x8c, 0x4e, 0xea, 0xa8, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0xcc, 0xad, 0xae, 0x0d, 0x84, 0x2a, 0x0f, 0xae, 0x0c, 0x64,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x6a,
  0x46, 0xe6, 0x68, 0x46, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0xa4,
  0x07, 0x04, 0x86, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x44, 0x2a, 0xc6, 0xe6, 0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29,
  0x88, 0x8a, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x44, 0x0a, 0xe7, 0x08, 0xe7, 0x6b, 0xca, 0xe9, 0x49, 0xaa, 0x89, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xe8, 0xad,
  0xce, 0x8d, 0xae, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41,
  0x61, 0x24, 0xcd, 0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x04, 0x89, 0x69, 0x8a,
  0xa9, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x8d, 0x2d, 0xcd, 0xad,
  0x0c, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88,
  0x0a, 0x84, 0xea, 0x8d, 0x08, 0xeb, 0x28, 0xc9, 0xe8, 0x4d, 0xae, 0x2d,
  0x8c, 0x0e, 0xa5, 0x2a, 0xc9, 0x89, 0x0a, 0x84, 0x2e, 0x0f, 0xae, 0x2c,
  0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xee, 0x2e, 0x8d, 0x6e, 0x0c, 0x0d,
  0x04, 0x85, 0x2e, 0x0f, 0xae, 0x2c, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x6a, 0x46, 0xe6,
  0x68, 0x46, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x07, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8,
  0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x6a, 0x46, 0xe6, 0x68, 0x46, 0xe6,
  0xcb, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x2a, 0xc6,
  0xe6, 0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x07, 0x44,
  0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb,
  0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x2a, 0xc6, 0xe6, 0x28, 0xc6,
  0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0x2c, 0x6c, 0xae, 0x0c, 0x44, 0x0a,
  0xe7, 0x08, 0xe7, 0x6b, 0xca, 0xe9, 0x49, 0xaa, 0x49, 0x07, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb, 0x28, 0xe9, 0xcb, 0xe8,
  0x49, 0xaa, 0x29, 0x88, 0xea, 0x4b, 0x0a, 0xe7, 0x08, 0xe7, 0x6b, 0xca,
  0xe9, 0x49, 0xaa, 0x69, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x08, 0xeb, 0x28,
  0xe9, 0xcb, 0xe8, 0x49, 0xaa, 0x29, 0x88, 0xea, 0xab, 0xca, 0x69, 0xc9,
  0xe9, 0xe9, 0xca, 0x69, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf,
  0x41, 0x61, 0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0xac, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x64, 0xe8, 0xad,
  0x0d, 0xee, 0x6d, 0xae, 0x4c, 0xaa, 0xcc, 0x8d, 0xac, 0x4c, 0x0e, 0x2a,
  0x6c, 0x6e, 0xae, 0x6c, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d,
  0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x64, 0xe8, 0xad, 0x0d, 0xee, 0x6d, 0x2e, 0x8d, 0x2e,
  0xed, 0xcd, 0x8d, 0x2a, 0x0f, 0xae, 0x0c, 0x64, 0xec, 0xad, 0x0d, 0xee,
  0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x2a, 0x0f, 0xae, 0x6c, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x24, 0x6d,
  0x2e, 0xe8, 0xa9, 0xc8, 0x2d, 0x4c, 0x8c, 0xad, 0x8c, 0x6c, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x8a,
  0x2a, 0xe8, 0xe9, 0xab, 0x29, 0x0c, 0x4f, 0x2a, 0x2c, 0x0f, 0x29, 0x8d,
  0x8e, 0x28, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0x6c, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0xcc,
  0x2c, 0xac, 0x8e, 0x8d, 0x2e, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0x2e,
  0xc9, 0x8d, 0xae, 0xcc, 0x6d, 0x2e, 0x8d, 0x2e, 0x6f, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9,
  0x89, 0x09, 0xc4, 0x2e, 0x4c, 0x2e, 0x2d, 0xcc, 0x6d, 0xac, 0xec, 0xcb,
  0x2e, 0x6d, 0xae, 0x2e, 0x8c, 0x2d, 0x4d, 0xaf, 0x6c, 0x8a, 0x8e, 0x8c,
  0xa8, 0xcc, 0x2e, 0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x2e, 0x4c,
  0x2e, 0x2d, 0xcc, 0x6d, 0xac, 0xec, 0x6b, 0x6e, 0x2c, 0x8c, 0xad, 0x6c,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x4b, 0xa6, 0x6b, 0xa7,
  0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e,
  0x8c, 0x0e, 0x84, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28, 0xad,
  0x6d, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc,
  0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae,
  0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x06, 0x24, 0xcd, 0xcd,
  0x8e, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d, 0xa7,
  0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e,
  0x8c, 0x0e, 0xc4, 0x28, 0x8d, 0x8d, 0xae, 0x4c, 0x6e, 0xe8, 0xcd, 0x6d,
  0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9,
  0x89, 0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28,
  0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89,
  0x0a, 0x64, 0x8e, 0xae, 0x0c, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd,
  0xed, 0x6c, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e,
  0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x84, 0xaa, 0xac, 0x0d, 0xee, 0x4d, 0x2e,
  0x8c, 0x6d, 0xaa, 0x0e, 0xae, 0x4c, 0x6e, 0x2e, 0xac, 0x0d, 0x8e, 0x2d,
  0xcd, 0xed, 0xec, 0x4b, 0xaa, 0xcc, 0xae, 0x4c, 0x6e, 0xae, 0x4c, 0xaa,
  0x0c, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e,
  0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89,
  0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28, 0xad,
  0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9,
  0x29, 0x88, 0x4a, 0x06, 0x24, 0xcd, 0xcd, 0x8e, 0xaa, 0x0c, 0x8f, 0xae,
  0x4e, 0xae, 0x8c, 0x28, 0xad, 0x6d, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e,
  0x0e, 0x6d, 0x2a, 0xed, 0xac, 0x2d, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x84, 0xa8, 0x0c, 0x8e, 0x0e, 0xcd,
  0xa9, 0xae, 0xad, 0x29, 0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0x4c, 0x28,
  0x8d, 0x6e, 0x6e, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0xc4, 0xa9, 0xae, 0x4d, 0xac, 0x4c, 0x0e, 0xe4, 0xcd, 0x0c, 0xa4, 0x29,
  0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0x0c, 0x44, 0x28, 0x8d, 0x6e, 0x0e,
  0x24, 0xcd, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x2e, 0xcd, 0xed, 0x0c, 0xc4, 0xec, 0x4d, 0xae, 0x2d, 0x8c, 0x0e, 0xe4,
  0xcd, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x24, 0xcd, 0x0d, 0xae, 0x8e, 0x0e,
  0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x44, 0xae, 0x6c, 0xee, 0xad, 0x4e,
  0x6e, 0xac, 0x6c, 0x0e, 0xc4, 0xec, 0x4d, 0xae, 0x2d, 0x8c, 0xce, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0xa4, 0x6e,
  0x2e, 0xcd, 0xed, 0x4c, 0x28, 0x8d, 0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x8c,
  0x8d, 0xe8, 0xed, 0xce, 0x6d, 0x2e, 0xac, 0x0d, 0x8e, 0xad, 0x8c, 0x4c,
  0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x6e, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c,
  0xcd, 0xed, 0x6c, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61,
  0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x84, 0xaa, 0xac, 0x0d, 0xee, 0x4d,
  0x2e, 0x8c, 0x6d, 0xaa, 0x0e, 0xae, 0x4c, 0x6e, 0x2e, 0xac, 0x0d, 0x8e,
  0x2d, 0xcd, 0xed, 0xec, 0x4b, 0x88, 0xad, 0xcc, 0x8d, 0xec, 0x2a, 0x8d,
  0x0e, 0x6d, 0xa8, 0x4e, 0x4e, 0xae, 0xcc, 0x8d, 0xce, 0x48, 0x2e, 0xac,
  0xad, 0x6c, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce,
  0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x64, 0x8e, 0x8e, 0x8c, 0xa8, 0xcc,
  0xee, 0x28, 0xac, 0xad, 0x2d, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xe8, 0xe9, 0x89, 0x09, 0x64, 0x8c, 0x2d, 0xac, 0x0d, 0x6e, 0x28,
  0x6c, 0x0c, 0xad, 0x8c, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x6e, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x64,
  0x8c, 0x2d, 0xac, 0x0d, 0x2e, 0xcd, 0xed, 0xec, 0xab, 0x2d, 0xcd, 0x6d,
  0x8a, 0x8e, 0x8c, 0xa8, 0xcc, 0x8e, 0xea, 0x8d, 0xad, 0x4c, 0x2e, 0xcc,
  0x6d, 0xac, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x64, 0x8c, 0x2d, 0xac, 0x0d, 0x8e, 0x28, 0xcd, 0xcc, 0xac, 0x4c,
  0xae, 0xcc, 0x6d, 0xac, 0x8c, 0xea, 0x8d, 0x6a, 0x0e, 0x0e, 0x6e, 0x6a,
  0x2c, 0x8c, 0xad, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8,
  0xe9, 0x89, 0x09, 0xc4, 0xec, 0x4d, 0x6e, 0xac, 0xac, 0x6a, 0xae, 0xac,
  0x29, 0xcd, 0x6d, 0xaa, 0xed, 0xed, 0x8d, 0x0e, 0x2d, 0xcd, 0xed, 0xcc,
  0x28, 0x6c, 0x8c, 0xee, 0x4d, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d, 0xcd, 0x6d, 0xaa, 0xed,
  0xed, 0x8d, 0x0e, 0x2d, 0xcd, 0xed, 0xcc, 0x28, 0x6c, 0x8c, 0xee, 0x4d,
  0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a,
  0xa4, 0x2d, 0xcd, 0x8d, 0x6a, 0x0e, 0x0e, 0x8e, 0xea, 0xad, 0x6a, 0xae,
  0x8c, 0xaa, 0xac, 0x0d, 0xee, 0x4d, 0x2e, 0x8c, 0xcd, 0x2a, 0x4c, 0x2e,
  0x2d, 0xcc, 0x6d, 0xac, 0x6c, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x44, 0x8c, 0xad, 0x4e, 0x6e, 0x8a,
  0x4e, 0xae, 0xcc, 0xed, 0x8c, 0x0e, 0xed, 0xab, 0x29, 0x0c, 0x8f, 0x6a,
  0x0e, 0x0e, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x44, 0x8c, 0xad, 0x4e, 0x8e, 0xa8, 0x6c, 0x2c, 0x2c,
  0x6f, 0x8a, 0x4e, 0xae, 0xcc, 0xed, 0x8c, 0x0e, 0x6d, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x64, 0x0c, 0xad, 0x6c,
  0x6c, 0xad, 0x4c, 0x4e, 0xec, 0x2d, 0x4c, 0x8e, 0xec, 0xab, 0xcc, 0x2d,
  0x4c, 0x8c, 0xad, 0x8c, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xe8, 0xe9, 0x89, 0x09, 0x64, 0x0c, 0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x4e,
  0xec, 0x2d, 0x4c, 0x8e, 0xec, 0x2b, 0x4c, 0xae, 0xac, 0xc8, 0xae, 0xcc,
  0x0d, 0x2a, 0x0d, 0xaf, 0x8c, 0x6d, 0x2e, 0x68, 0x8c, 0x2e, 0xcd, 0xae,
  0x6c, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e,
  0xae, 0x6e, 0x8c, 0x0e, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c,
  0xae, 0x0c, 0x2a, 0x4c, 0x8e, 0x2e, 0x2d, 0x8c, 0x8d, 0xa8, 0x4c, 0x2e,
  0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e,
  0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89,
  0x4a, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28, 0xad,
  0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x4b, 0xa6, 0x6b,
  0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae,
  0x6e, 0x8c, 0x0e, 0x84, 0xe8, 0xed, 0xce, 0x2d, 0xc8, 0x8d, 0xac, 0x0a,
  0x6e, 0x2e, 0xac, 0x0d, 0x8e, 0xad, 0xcc, 0x28, 0x8d, 0x8d, 0xae, 0x4c,
  0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc,
  0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x06, 0x24, 0xcd, 0xcd, 0x0e,
  0x29, 0x4d, 0xaa, 0x6c, 0x8e, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c,
  0x28, 0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9,
  0x88, 0xe9, 0x29, 0x88, 0x4a, 0x06, 0x24, 0xcd, 0xcd, 0x8e, 0xe9, 0xed,
  0x4e, 0xaa, 0x6c, 0x8e, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x28,
  0xad, 0x6d, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0xe1, 0xe5,
  0x05, 0xe4, 0x48, 0x2e, 0x6c, 0x6e, 0x0e, 0xe4, 0xa8, 0xec, 0xad, 0xad,
  0x8c, 0x4e, 0x2e, 0xaf, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad,
  0x0c, 0xc4, 0xe9, 0xeb, 0x48, 0x2a, 0x68, 0x6a, 0xea, 0x8b, 0x4a, 0x2a,
  0x29, 0xc8, 0xe9, 0x88, 0xa9, 0x68, 0x0a, 0xa4, 0xa6, 0x41, 0x61, 0x84,
  0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0xe9, 0xeb, 0x48, 0x2a, 0x68,
  0x6a, 0xea, 0xcb, 0xaa, 0x48, 0x8a, 0x2a, 0x69, 0xa8, 0x68, 0x0a, 0xe4,
  0xa6, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xa4, 0x29,
  0x08, 0xeb, 0xeb, 0x48, 0x2a, 0x68, 0x6a, 0xea, 0x6b, 0x8a, 0x4a, 0x2a,
  0xe8, 0x6a, 0xea, 0x2b, 0x86, 0x08, 0x24, 0x06, 0x06, 0xa6, 0x41, 0x61,
  0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e,
  0x8c, 0xae, 0xec, 0x48, 0x2e, 0x6c, 0x6e, 0x6e, 0x8a, 0x4e, 0x2e, 0xec,
  0x6e, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce,
  0xcc, 0xac, 0x4c, 0xee, 0x2b, 0x08, 0x0e, 0x0e, 0x2a, 0x4c, 0x2e, 0xac,
  0x6d, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab,
  0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x24, 0x6c, 0x8c, 0x2e, 0xcd, 0xae,
  0x0c, 0x2a, 0x8c, 0x6e, 0x0c, 0x8d, 0x28, 0xad, 0x6d, 0x07, 0xe4, 0xe5,
  0x05, 0x84, 0x28, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d, 0x0e,
  0xe4, 0xcd, 0x0c, 0x24, 0x6c, 0x8c, 0x2e, 0xcd, 0xae, 0x0c, 0xe4, 0x4c,
  0x2e, 0x6c, 0x6e, 0x0e, 0x64, 0x8e, 0x4e, 0x2e, 0xec, 0x6e, 0xce, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a,
  0x06, 0xa4, 0x2d, 0x0c, 0x0f, 0x2a, 0x8c, 0x6e, 0x0c, 0x8d, 0x28, 0xad,
  0x6d, 0x07, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84, 0x28, 0xad, 0xad,
  0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0xe4, 0xcd, 0x0c, 0x84, 0x0e,
  0xad, 0x0c, 0xe4, 0x0e, 0xed, 0x8d, 0xad, 0x0c, 0xc4, 0xae, 0x4c, 0x8e,
  0xae, 0x0c, 0x0f, 0x44, 0xac, 0xce, 0xcc, 0xac, 0x4c, 0xce, 0xa5, 0x41,
  0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29,
  0x88, 0x4a, 0x06, 0x84, 0x2e, 0xad, 0xad, 0xec, 0xc9, 0xcc, 0x6c, 0xae,
  0x8c, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0xe4, 0x4c, 0x2e, 0x6c, 0x6e, 0x0e, 0xa9, 0x2c, 0xed, 0x0c,
  0x8d, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0xe4, 0x4c, 0x2e, 0x6c, 0x6e, 0x6e, 0x6a, 0x2c, 0x8c, 0xad,
  0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x04, 0x2e,
  0x8c, 0x6e, 0x0c, 0x6d, 0x2a, 0x4d, 0xaf, 0x6c, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xe4, 0x4c, 0x2e, 0x6c,
  0x6e, 0x8e, 0x0a, 0x2d, 0x6d, 0x6c, 0xcd, 0xad, 0x6c, 0x6e, 0x6e, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9,
  0x29, 0x88, 0x6a, 0x06, 0xe4, 0x2e, 0xcd, 0x8d, 0x8c, 0x28, 0x4d, 0xae,
  0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xe4, 0x2e, 0xcd, 0x8d, 0x6c, 0x8a,
  0x4e, 0xae, 0xcc, 0xed, 0x8c, 0x0e, 0x6d, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0xee, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x4d, 0x29, 0x8d, 0x8e, 0xae, 0x4c, 0x6e,
  0x8a, 0x4e, 0xae, 0xcc, 0xed, 0x8c, 0x0e, 0x6d, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0xac, 0xcc, 0x8d,
  0x6c, 0x8a, 0x4e, 0xae, 0xcc, 0xed, 0x8c, 0x0e, 0x2d, 0x88, 0xed, 0xcd,
  0xed, 0x8c, 0x2a, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x6e, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c,
  0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x4b, 0xa6, 0x6b, 0xa7, 0x41, 0xa1, 0x6f,
  0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0xe4,
  0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0xec, 0x48, 0x2e, 0x6c, 0x6e,
  0x6e, 0x8a, 0x4e, 0x2e, 0xec, 0x6e, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e,
  0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88,
  0x4a, 0x06, 0x24, 0xcd, 0xcd, 0x2e, 0x68, 0x8c, 0x2e, 0xcd, 0xae, 0x0c,
  0x2a, 0x8c, 0x6e, 0x0c, 0x8d, 0x28, 0xad, 0x6d, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c,
  0x2c, 0xcd, 0xed, 0x2c, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed,
  0x4c, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xa8, 0xcc, 0xad,
  0x4c, 0x2e, 0x8c, 0xae, 0xec, 0x48, 0x2e, 0x6c, 0x6e, 0x6e, 0x8a, 0x4e,
  0x2e, 0xec, 0x6e, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x4e,
  0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xee, 0x2b, 0x08, 0x0e, 0x0e, 0x2a, 0x4c,
  0x2e, 0xac, 0x6d, 0x0e, 0x04, 0x6e, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41,
  0xa1, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0x88, 0x8e, 0x4e, 0x2e,
  0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x0e, 0x04, 0xae, 0x4c, 0x0e, 0x04, 0x4e,
  0x2e, 0xad, 0x2d, 0x8d, 0x2e, 0xcd, 0xae, 0x0c, 0x84, 0x2e, 0x0f, 0xae,
  0xcc, 0xa5, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x04, 0x4a,
  0x2e, 0xad, 0x2d, 0x8d, 0x2e, 0xcd, 0xae, 0x6c, 0xe8, 0xcd, 0x6d, 0x8e,
  0x2e, 0xcc, 0x8d, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61,
  0xaf, 0x41, 0x21, 0xa1, 0x2a, 0xc9, 0x89, 0x0a, 0x04, 0x04, 0x04, 0x04,
  0xa4, 0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x2d, 0x89, 0x68, 0x07,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x04, 0x04, 0x04, 0x04,
  0x24, 0x6d, 0xce, 0xaa, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0xc8, 0x2d, 0xad,
  0x2d, 0x8c, 0xae, 0x8c, 0x6c, 0x07, 0xa4, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x04, 0x04, 0x04, 0x04, 0x04, 0x2e, 0x8c,
  0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x4b, 0xa6, 0x6b, 0xa7, 0x41, 0xa1, 0x6f,
  0xa7, 0x41, 0xa1, 0x41, 0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c,
  0xac, 0x0c, 0xa4, 0x29, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x8d, 0x2a,
  0x0f, 0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xcc,
  0xad, 0xae, 0x0d, 0x84, 0x2a, 0x0f, 0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x84, 0xa8, 0xcc, 0x2c, 0xac,
  0x8e, 0x8d, 0x8e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0xa4, 0x29, 0x8c, 0x8e, 0xae, 0x8c, 0x05, 0x04, 0x04, 0x04, 0x04,
  0x04, 0xe4, 0xe5, 0x05, 0x84, 0x29, 0xac, 0x4d, 0xac, 0x4c, 0x8e, 0x2e,
  0x2d, 0xcc, 0x0d, 0x64, 0x6e, 0x2c, 0x8c, 0x8e, 0xae, 0x4c, 0x2e, 0xcd,
  0xed, 0xac, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4,
  0x29, 0x4d, 0x4e, 0xee, 0x4d, 0x8e, 0x05, 0x04, 0x04, 0x04, 0x04, 0xe4,
  0xe5, 0x05, 0x64, 0x0a, 0xae, 0x6c, 0xac, 0x8e, 0x2d, 0x4c, 0x0e, 0x44,
  0xae, 0xcc, 0x8c, 0xad, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0x84, 0x0e, 0x2d,
  0x8c, 0x0e, 0x24, 0x6d, 0xce, 0xed, 0x84, 0x0e, 0xa4, 0xed, 0x8d, 0x2c,
  0xcd, 0x2c, 0xad, 0x8c, 0x0c, 0x44, 0x2c, 0x0f, 0x84, 0x0e, 0xad, 0x0c,
  0xc4, 0x48, 0xae, 0x6c, 0xce, 0xad, 0x8c, 0x0d, 0xa4, 0x2c, 0xae, 0x2e,
  0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x24, 0xc8, 0x2d, 0x8c, 0x2d, 0x8f, 0x2e, 0x6d,
  0x2c, 0x8c, 0x6d, 0x08, 0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x4e, 0xec, 0x2d,
  0x4c, 0x8e, 0x8c, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0xac, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x04, 0x4a, 0x2e, 0xad, 0x2d,
  0x8d, 0x2e, 0xcd, 0xae, 0xac, 0x29, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c,
  0x4d, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x21,
  0x01, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x64, 0x89, 0x6c,
  0xa7, 0x41, 0x21, 0x01, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06,
  0x64, 0x69, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9,
  0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x64, 0x49, 0x6e, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06,
  0x64, 0x89, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9,
  0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0xe4, 0x0d, 0x2e, 0x6c, 0x2c, 0x8d,
  0x2e, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88,
  0xe9, 0x29, 0x88, 0x6a, 0x06, 0xa4, 0x8c, 0x2e, 0x6c, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0xee, 0xad,
  0xee, 0x0c, 0xcd, 0xad, 0x6c, 0x6e, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x04, 0x2d, 0x6c, 0x8e, 0x28, 0xcd,
  0xcc, 0xac, 0x6e, 0xae, 0x8c, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x6c,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8, 0xe9, 0x89, 0x09, 0x04,
  0x2d, 0x6c, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xaa, 0x0c, 0x8f,
  0xae, 0x4e, 0xae, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xe8,
  0xe9, 0x89, 0x09, 0x04, 0x2d, 0x6c, 0x0e, 0xaa, 0x4c, 0xce, 0xaa, 0x4c,
  0x8e, 0xae, 0x0c, 0x8f, 0x2a, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x6e, 0x6e,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x29, 0x8c, 0xae, 0x4c, 0x2e,
  0x2d, 0x8c, 0x8d, 0x2a, 0x0f, 0xae, 0x4c, 0x47, 0x87, 0x2a, 0x0f, 0xae,
  0x0c, 0x84, 0x2e, 0x0f, 0xae, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd,
  0xed, 0x6c, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e,
  0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0x24, 0x88, 0x2d, 0xed, 0xcc, 0xad, 0x8c,
  0xac, 0xca, 0x2d, 0x8d, 0x6e, 0x2a, 0xae, 0x2e, 0x4c, 0xae, 0x6c, 0x2a,
  0xac, 0x0d, 0x8e, 0xad, 0x4c, 0x86, 0xa8, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x06,
  0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0xab, 0xa9, 0x2a, 0xc9, 0x89, 0x4a, 0x06, 0x04, 0x2e, 0x8c, 0x8c,
  0x2c, 0xcd, 0xed, 0x6c, 0x07, 0x04, 0xe4, 0xe5, 0x05, 0x04, 0x2a, 0x8c,
  0x8c, 0x2c, 0xcd, 0xed, 0x0c, 0x84, 0xee, 0x0d, 0x24, 0xc6, 0x46, 0xa8,
  0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e,
  0x8c, 0x0e, 0x24, 0x88, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0x0c, 0xa9, 0xac,
  0x2d, 0x6d, 0x0e, 0x0e, 0xad, 0x4c, 0xae, 0x6c, 0x2a, 0xac, 0x0d, 0x8e,
  0xad, 0x6c, 0x86, 0xa8, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0xc4, 0x2e, 0x8c,
  0xad, 0xae, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2a, 0xc9,
  0x89, 0x0a, 0x04, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x07, 0x04,
  0xe4, 0xe5, 0x05, 0x04, 0x2a, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x0c, 0x84,
  0xee, 0x0d, 0x24, 0xc6, 0x46, 0xa8, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1,
  0x41, 0x61, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0xc4, 0xaa, 0x4c, 0x8e,
  0xae, 0x0c, 0xaf, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x04, 0xee, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0xc4, 0xed, 0x4d, 0xae,
  0x2d, 0x8c, 0x6d, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x61,
  0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0x0e, 0xc4, 0xaa, 0x4c, 0x8e, 0xae, 0x0c,
  0x0f, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0xcd, 0xe9, 0x4d, 0xae,
  0x2d, 0x8c, 0x8d, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x8c, 0x2a, 0xcc,
  0xed, 0xac, 0xcc, 0x8d, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x21, 0x01, 0xab,
  0xc9, 0x88, 0xe9, 0x29, 0x88, 0x6a, 0x06, 0x04, 0xee, 0x6d, 0x2e, 0x8d,
  0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x21, 0x01, 0xab, 0xc9, 0x88, 0xe9,
  0x29, 0x88, 0x6a, 0x06, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x6d, 0xa7,
  0x41, 0x21, 0x01, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x4a, 0x06, 0x84,
  0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x6c, 0xe8, 0xed, 0x4d, 0x8e, 0x2c,
  0xcd, 0x2d, 0x8c, 0xae, 0x6c, 0xa7, 0x41, 0x21, 0x01, 0xab, 0xc9, 0x88,
  0xe9, 0x29, 0x88, 0x6a, 0x06, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d,
  0x6e, 0xa7, 0x41, 0xa1, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05,
  0x44, 0x2a, 0x2c, 0x0f, 0x84, 0x2e, 0x0f, 0xae, 0x6c, 0x0e, 0x84, 0x4e,
  0x2e, 0x6c, 0xac, 0x8c, 0x0c, 0x24, 0xcd, 0x0d, 0x84, 0x0e, 0x2d, 0x6d,
  0x0e, 0x64, 0x2e, 0xac, 0x0d, 0x8e, 0xad, 0xcc, 0xa5, 0x41, 0xc1, 0x2d,
  0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x04, 0x2a, 0x8c, 0x0e,
  0x8d, 0x4e, 0x2e, 0x6c, 0xac, 0x4c, 0x4e, 0x2a, 0x2c, 0x8f, 0x2a, 0x0f,
  0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad,
  0xae, 0x0d, 0xa4, 0xc8, 0xad, 0xae, 0x0d, 0x64, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x2a, 0x8c, 0x2c, 0x2d, 0xcc,
  0x6d, 0xac, 0x0c, 0xa4, 0x07, 0x04, 0x86, 0x25, 0xe1, 0xe5, 0x05, 0xc4,
  0x0f, 0x44, 0x2a, 0x8c, 0x2c, 0x2d, 0xcc, 0x6d, 0xac, 0x0c, 0x44, 0x2e,
  0x2c, 0x0f, 0xe4, 0xac, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0x2e, 0xcd, 0xed,
  0x0c, 0x64, 0xec, 0x8d, 0xed, 0x4d, 0x0e, 0x24, 0xcc, 0x8d, 0x0c, 0xe4,
  0x48, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x0e, 0x84, 0x2c, 0x8c, 0x2e, 0xac,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0x0a, 0x2d,
  0x8c, 0xec, 0xed, 0x8e, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0xe4, 0xe5, 0x05, 0xc4, 0x0f, 0x64, 0x0a, 0x2d, 0x8c, 0xec, 0xed,
  0xee, 0xc5, 0x2e, 0x6d, 0x2e, 0x4d, 0x2c, 0x8d, 0x2d, 0x8d, 0x2e, 0x0f,
  0x44, 0x2e, 0x2c, 0x6f, 0xae, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x64, 0xe8, 0xad, 0xce, 0x8d, 0xae, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x2d,
  0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x44, 0x8a, 0x2a, 0xe8,
  0x49, 0x2a, 0x2c, 0x8f, 0x2a, 0x0f, 0xae, 0x0c, 0x64, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0xcc, 0xad, 0xae, 0x0d, 0xa4, 0xc8, 0xad, 0xae,
  0x0d, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x24, 0xe8, 0x09, 0xa4, 0x07, 0x04, 0x86, 0x25, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xe8, 0xad, 0xce, 0x8d, 0xae,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xa1, 0x41, 0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c,
  0xac, 0x0c, 0x84, 0x4a, 0x2e, 0x6c, 0xac, 0x4c, 0x2a, 0x2c, 0x0f, 0x2a,
  0x4c, 0x2e, 0xac, 0xad, 0x8c, 0xae, 0x4c, 0x6e, 0xae, 0x41, 0x61, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c,
  0x64, 0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x24,
  0xc9, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0xac, 0x29, 0x6c, 0x6e, 0x0d,
  0xa4, 0x07, 0xc4, 0x0f, 0x66, 0x07, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4,
  0xc8, 0xae, 0x4c, 0x2e, 0x8f, 0x0e, 0x2d, 0xcd, 0xed, 0x0c, 0x24, 0x6d,
  0x0e, 0xc4, 0x2e, 0x6d, 0x2e, 0x4d, 0x8c, 0xad, 0xcc, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac,
  0x0c, 0x04, 0x29, 0x8d, 0xee, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e,
  0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a,
  0xc9, 0x89, 0x0a, 0xe4, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x6e, 0x0b, 0x2a,
  0x8c, 0x0e, 0x8d, 0x4e, 0x2e, 0x6c, 0xac, 0x4c, 0x4e, 0x2a, 0x2c, 0x8f,
  0x2a, 0x0f, 0xae, 0x4c, 0x47, 0x67, 0xe8, 0xad, 0xce, 0x8d, 0xae, 0x0b,
  0xa4, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x86, 0x05, 0xe4, 0xe5, 0x05, 0x44, 0x2a, 0x8c, 0x2c,
  0x2d, 0xcc, 0x6d, 0xac, 0x0c, 0x44, 0x2e, 0x2c, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0x86,
  0x05, 0xe4, 0xe5, 0x05, 0x64, 0x0a, 0x2d, 0x8c, 0xec, 0xed, 0x0e, 0x44,
  0x2e, 0x2c, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0xa4, 0x6f, 0xa7, 0x41, 0x21, 0x21, 0x61, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d,
  0x0c, 0x64, 0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89, 0x0a,
  0xe4, 0xa8, 0xec, 0xad, 0xad, 0x8c, 0x4e, 0x2e, 0x6f, 0x8a, 0x4e, 0x2e,
  0x8d, 0xac, 0x0c, 0xa4, 0x07, 0x04, 0x2a, 0x8c, 0x0e, 0x8d, 0x4e, 0x2e,
  0x6c, 0xac, 0x4c, 0x4e, 0x2a, 0x2c, 0x8f, 0x2a, 0x0f, 0xae, 0x4c, 0x47,
  0x67, 0xe8, 0xad, 0xce, 0x8d, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x2d, 0xac, 0xad, 0x6c,
  0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0xa4, 0x29, 0x6d, 0x6e, 0x6e, 0x0a, 0x2d,
  0x8c, 0xac, 0x4c, 0x0e, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec,
  0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xe4, 0xc9, 0xcc,
  0x6c, 0xae, 0x8c, 0x6e, 0x0b, 0x2a, 0x8c, 0x0e, 0x8d, 0x4e, 0x2e, 0x6c,
  0xac, 0x4c, 0x4e, 0x2a, 0x2c, 0x8f, 0x2a, 0x0f, 0xae, 0x4c, 0x47, 0x67,
  0xe8, 0xad, 0xce, 0x8d, 0xae, 0x0b, 0xa4, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x86, 0x05, 0xe4,
  0xe5, 0x05, 0x44, 0x2a, 0x8c, 0x2c, 0x2d, 0xcc, 0x6d, 0xac, 0x0c, 0x44,
  0x2e, 0x2c, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x24, 0x86, 0x05, 0xe4, 0xe5, 0x05, 0x64, 0x0a,
  0x2d, 0x8c, 0xec, 0xed, 0x0e, 0x44, 0x2e, 0x2c, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xa4, 0xaf, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x2d,
  0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x44, 0x8a, 0x2a, 0xe8,
  0x89, 0x4a, 0x2e, 0x6c, 0xac, 0x4c, 0x2a, 0x2c, 0x0f, 0x2a, 0x4c, 0x2e,
  0xac, 0xad, 0x8c, 0xae, 0x4c, 0x6e, 0xae, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec,
  0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0x24, 0xc9, 0x6d,
  0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0xac, 0x29, 0x6c, 0x6e, 0x0d, 0xa4, 0x07,
  0xc4, 0x0f, 0x66, 0x07, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0xc8, 0xae,
  0x4c, 0x2e, 0x8f, 0x0e, 0x2d, 0xcd, 0xed, 0x0c, 0x24, 0x6d, 0x0e, 0xc4,
  0x2e, 0x6d, 0x2e, 0x4d, 0x8c, 0xad, 0xcc, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x04,
  0x29, 0x8d, 0xee, 0x48, 0xee, 0xad, 0x0e, 0x0e, 0x64, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e,
  0x6d, 0x0c, 0x64, 0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89,
  0x0a, 0xe4, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x6e, 0x4b, 0x8a, 0x2a, 0xe8,
  0x49, 0x2a, 0x2c, 0x8f, 0x2a, 0x0f, 0xae, 0x4c, 0x47, 0x67, 0xe8, 0xad,
  0xce, 0x8d, 0xae, 0x0b, 0xa4, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x86, 0x05, 0xe4, 0xe5, 0x05,
  0x24, 0xe8, 0x09, 0x44, 0x2e, 0x2c, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0xa4, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0x2a, 0xcd, 0x6d, 0xac,
  0x0c, 0x84, 0x0e, 0xad, 0x4c, 0xae, 0x0c, 0x24, 0x6d, 0x0e, 0xe4, 0xcd,
  0x8d, 0x2d, 0x0f, 0xe4, 0xcd, 0xad, 0x0c, 0x64, 0x8c, 0xed, 0x6d, 0xae,
  0x6c, 0x8e, 0x0e, 0x04, 0x2d, 0x8d, 0x0e, 0x64, 0x0e, 0x2d, 0x8c, 0xac,
  0x4c, 0x0e, 0x24, 0x6c, 0x4c, 0xee, 0x6d, 0x6e, 0x0e, 0x64, 0x0e, 0x2d,
  0x8c, 0xac, 0x4c, 0x0e, 0x44, 0xae, 0x6c, 0xec, 0x4d, 0x8e, 0x6c, 0x0e,
  0x24, 0xcd, 0x0d, 0x44, 0x8a, 0x2a, 0xe8, 0x89, 0x05, 0xa4, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0x8c,
  0xed, 0x2e, 0x2c, 0x6f, 0x0e, 0x24, 0x6c, 0x6c, 0xac, 0x6c, 0x6e, 0x0e,
  0x84, 0x0e, 0xad, 0x0c, 0xc4, 0x2c, 0x4d, 0x6e, 0x8e, 0x0e, 0x64, 0x0e,
  0x2d, 0x8c, 0xac, 0x4c, 0x0e, 0x44, 0xae, 0x6c, 0xec, 0x4d, 0x8e, 0x0c,
  0xe4, 0xcd, 0x0c, 0xa4, 0x2c, 0x6c, 0x0c, 0x0d, 0x44, 0x88, 0x29, 0x68,
  0x0a, 0x24, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0x0c, 0x64, 0x0e,
  0x2d, 0x8c, 0xac, 0x4c, 0x0e, 0x44, 0xae, 0x6c, 0xec, 0x4d, 0x8e, 0x0c,
  0x44, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64,
  0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xe4, 0xa8,
  0xec, 0xad, 0xad, 0x8c, 0x4e, 0x2e, 0x6f, 0x8a, 0x4e, 0x2e, 0x8d, 0xac,
  0x0c, 0xa4, 0x07, 0x04, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x2d, 0xac, 0xad, 0x6c, 0x0e,
  0x2e, 0x6c, 0xac, 0x0c, 0xa4, 0x29, 0x6d, 0x6e, 0x6e, 0x0a, 0x2d, 0x8c,
  0xac, 0x4c, 0x0e, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec, 0xcd,
  0x6d, 0x8e, 0x0e, 0xa4, 0x2a, 0xc9, 0x89, 0x0a, 0xe4, 0xc9, 0xcc, 0x6c,
  0xae, 0x8c, 0x6e, 0x4b, 0x8a, 0x2a, 0xe8, 0x49, 0x2a, 0x2c, 0x8f, 0x2a,
  0x0f, 0xae, 0x4c, 0x47, 0x67, 0xe8, 0xad, 0xce, 0x8d, 0xae, 0x0b, 0xa4,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x86, 0x05, 0xe4, 0xe5, 0x05, 0x24, 0xe8, 0x09, 0x44, 0x2e,
  0x2c, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4,
  0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0xa1, 0xaf,
  0x41, 0xa1, 0x41, 0x61, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec,
  0xcd, 0x6d, 0x8e, 0x0e, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x8a,
  0x06, 0x44, 0x28, 0x6c, 0x6c, 0xed, 0x4c, 0xee, 0xad, 0xce, 0x8d, 0x6c,
  0xe8, 0x8d, 0xed, 0x4d, 0x0e, 0xa4, 0x07, 0x04, 0xab, 0xc9, 0x88, 0xe9,
  0x29, 0x88, 0x8a, 0x06, 0x05, 0xc6, 0xe5, 0x26, 0xc7, 0x8c, 0x05, 0x04,
  0xc6, 0x05, 0x07, 0xc7, 0x8c, 0x05, 0x04, 0xc6, 0x25, 0x07, 0xc7, 0x8c,
  0x05, 0x24, 0xc6, 0x05, 0xc6, 0x2c, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x61,
  0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0x0c, 0xe4, 0xe5, 0x05, 0x44, 0x2a, 0x28,
  0x8b, 0x4a, 0x2a, 0x68, 0x28, 0xc9, 0xe9, 0x08, 0x89, 0x69, 0x8a, 0x69,
  0xe8, 0xa9, 0x09, 0x2a, 0x88, 0xea, 0x0b, 0x69, 0x83, 0x00, 0x23, 0x31,
  0xb2, 0x41, 0xb8, 0x85, 0x18, 0xd9, 0x10, 0x04, 0x14, 0x5a, 0x8a, 0x28,
  0xb4, 0x50, 0xd1, 0x18, 0x9b, 0xfb, 0xb2, 0xf9, 0x9a, 0xa1, 0xf0, 0x92,
  0xc4, 0x91, 0x18, 0xd2, 0xe1, 0xaa, 0x9a, 0x2b, 0x93, 0x9b, 0xe3, 0xaa,
  0x9b, 0x2b, 0x93, 0xe3, 0x22, 0x2a, 0x9b, 0x5b, 0xa3, 0x7b, 0x83, 0xe3,
  0x22, 0x4a, 0x93, 0x2b, 0x1b, 0xa3, 0xc3, 0x6a, 0x39, 0x92, 0x0b, 0x83,
  0x43, 0x4b, 0x1b, 0x9b, 0x6b, 0x99, 0x0a, 0x6b, 0x83, 0x63, 0x2b, 0x9b,
  0xe3, 0x9a, 0x0a, 0x6b, 0x83, 0x63, 0x2b, 0x9b, 0xe3, 0x22, 0x2a, 0x9b,
  0x5b, 0xa3, 0x7b, 0x83, 0xe3, 0x22, 0x9a, 0x21, 0x8a, 0x91, 0x91, 0x0a,
  0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0xe3, 0x9a, 0x93, 0x1b,
  0xe3, 0x22, 0x9a, 0x21, 0x8a, 0x91, 0x91, 0x0a, 0xcb, 0xa3, 0x93, 0x0b,
  0x1b, 0x4b, 0x73, 0x3b, 0x93, 0x2a, 0x0b, 0x63, 0xa3, 0x4a, 0x6b, 0x2b,
  0x23, 0x2a, 0x73, 0x7b, 0x4b, 0x9b, 0x2b, 0x23, 0x0b, 0x6a, 0x13, 0x4b,
  0x2b, 0x73, 0xa3, 0x7b, 0x1a, 0x1b, 0x63, 0xab, 0x9b, 0x4b, 0x7b, 0x73,
  0xe3, 0x22, 0x23, 0x45, 0x15, 0xf4, 0xf4, 0x32, 0x87, 0x16, 0x46, 0x56,
  0x26, 0x37, 0x47, 0x69, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0xe8, 0x4d,
  0xae, 0xec, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0x6e, 0x8e, 0xd7, 0x54,
  0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0xd0, 0x9b, 0x5c, 0xd9, 0xcb, 0x1c, 0x5a,
  0x18, 0x59, 0x99, 0xdc, 0xdc, 0x4b, 0x1d, 0x5d, 0x1a, 0x1b, 0x87, 0x97,
  0x27, 0x32, 0x0e, 0x2f, 0x5a, 0x69, 0x6c, 0x5a, 0xa2, 0xca, 0xda, 0xc4,
  0xca, 0xc8, 0xbe, 0xc8, 0xca, 0xc4, 0xea, 0xce, 0x36, 0x3c, 0x35, 0xd2,
  0x06, 0x36, 0x72, 0x23, 0x38, 0x92, 0x23, 0x38, 0xa2, 0x23, 0x38, 0xb2,
  0x23, 0x38, 0xc2, 0x23, 0x3d, 0xe2, 0x23, 0x3f, 0x32, 0x41, 0x00, 0xb2,
  0x0d, 0x42, 0x98, 0x88, 0xc8, 0x04, 0x01, 0xd0, 0x36, 0x08, 0x61, 0x32,
  0x26, 0x14, 0xc6, 0xe6, 0x36, 0x0c, 0x65, 0x32, 0x26, 0x22, 0x32, 0x41,
  0x00, 0xb6, 0x09, 0x42, 0x1b, 0xb8, 0xc1, 0x04, 0x01, 0xe0, 0x36, 0x08,
  0x67, 0x92, 0x26, 0x1b, 0x92, 0x33, 0x41, 0x93, 0x9f, 0x38, 0x93, 0x33,
  0x09, 0x93, 0xe9, 0x4c, 0xd4, 0x64, 0x43, 0xb0, 0x26, 0x13, 0x04, 0x38,
  0x78, 0x83, 0x09, 0x02, 0x1a, 0x9c, 0xc1, 0x86, 0xe5, 0x4c, 0xda, 0xa4,
  0x2c, 0xce, 0xe4, 0x4c, 0xc2, 0x64, 0x72, 0x13, 0x37, 0x71, 0x13, 0x35,
  0xd9, 0x10, 0xbc, 0xc9, 0x04, 0x81, 0x0e, 0xe4, 0x60, 0x82, 0x00, 0x74,
  0x1b, 0x90, 0x33, 0x89, 0x13, 0xbb, 0x38, 0x93, 0x33, 0x09, 0x13, 0x39,
  0x01, 0x36, 0x04, 0x73, 0xb2, 0x81, 0x60, 0x13, 0x38, 0xa1, 0x13, 0x60,
  0x82, 0x20, 0x07, 0x70, 0x30, 0x41, 0x00, 0xbc, 0x09, 0x02, 0xf0, 0x6d,
  0x30, 0xc6, 0x44, 0x2f, 0x44, 0xe4, 0x4c, 0xee, 0x04, 0x4f, 0x26, 0x08,
  0x00, 0x18, 0x6c, 0x30, 0xc6, 0xc4, 0x2f, 0x44, 0x44, 0x4f, 0xee, 0x04,
  0x4f, 0x26, 0x08, 0x40, 0x18, 0x6c, 0x30, 0xc6, 0x04, 0x34, 0x44, 0x84,
  0x4f, 0xee, 0x04, 0x4f, 0x26, 0x08, 0x80, 0x18, 0x6c, 0x30, 0xc6, 0x44,
  0x34, 0x44, 0xc4, 0x4f, 0xee, 0x84, 0x25, 0x26, 0x08, 0xc0, 0x18, 0x6c,
  0x30, 0xc6, 0xc4, 0x34, 0x44, 0x04, 0x54, 0xee, 0x84, 0x25, 0x26, 0x08,
  0x00, 0x19, 0x6c, 0x30, 0xc6, 0x04, 0x35, 0x44, 0x44, 0x54, 0xee, 0x04,
  0x4f, 0x26, 0x08, 0x40, 0x19, 0x6c, 0x30, 0xc6, 0x44, 0x35, 0x44, 0x84,
  0x54, 0xee, 0x24, 0x4d, 0x36, 0x20, 0x72, 0x92, 0x27, 0x7b, 0xd2, 0x27,
  0x7f, 0x12, 0x2a, 0xa3, 0x52, 0x2a, 0x13, 0x84, 0x39, 0x88, 0x83, 0x0d,
  0xc4, 0x98, 0xd8, 0x85, 0x88, 0x9c, 0xc9, 0x06, 0x41, 0x4e, 0x50, 0x65,
  0x43, 0x71, 0x26, 0x76, 0x62, 0x2a, 0xa7, 0x92, 0x2a, 0x1b, 0x86, 0x33,
  0x21, 0x88, 0x0d, 0xc1, 0xaa, 0x6c, 0x18, 0xc2, 0x44, 0x0e, 0x58, 0x65,
  0x82, 0x90, 0xa0, 0xc1, 0x86, 0x41, 0x4f, 0xf4, 0x24, 0x4c, 0x36, 0x10,
  0x67, 0xe2, 0x2a, 0x2c, 0xf1, 0x2a, 0x1b, 0x0a, 0x39, 0x68, 0x03, 0xa0,
  0x4e, 0x60, 0x65, 0x56, 0x11, 0xe0, 0x81, 0x50, 0x0a, 0xc5, 0xac, 0x22,
  0x90, 0x15, 0xa1, 0x14, 0x8a, 0x59, 0x45, 0x30, 0x2b, 0x82, 0x29, 0x14,
  0xb3, 0x8a, 0x80, 0x56, 0x84, 0x5c, 0x68, 0x66, 0x15, 0x41, 0xad, 0x08,
  0xba, 0x90, 0xb4, 0x68, 0x14, 0xc8, 0x01, 0x40, 0x82, 0x88, 0x2a, 0x8d,
  0x6c, 0x5c, 0x02, 0x84, 0xc8, 0x1c, 0xe0, 0x8a, 0x00, 0x1a, 0x17, 0x01,
  0xac, 0x23, 0x80, 0x9e, 0x00, 0xc0, 0x60, 0x1d, 0x01, 0xf4, 0x04, 0x18,
  0x80, 0x01, 0x85, 0xa3, 0xa4, 0x71, 0x09, 0x10, 0x22, 0x73, 0xc0, 0x2b,
  0x02, 0x68, 0xbc, 0xc1, 0x00, 0xac, 0x0b, 0x00, 0x12, 0x47, 0x54, 0x69,
  0x64, 0xe3, 0x12, 0x20, 0x44, 0xe6, 0xe0, 0x57, 0x04, 0xd0, 0xb8, 0x04,
  0x80, 0xc3, 0x51, 0x1a, 0xd9, 0xb8, 0x04, 0x08, 0x91, 0x39, 0x08, 0x17,
  0x01, 0x34, 0xae, 0x00, 0x18, 0x97, 0x00, 0x21, 0x82, 0x07, 0xbc, 0x22,
  0xdc, 0xc1, 0x1b, 0x08, 0xc0, 0xb8, 0x04, 0x08, 0x11, 0x3c, 0x08, 0x17,
  0xe1, 0x0e, 0xae, 0x00, 0x60, 0xe7, 0x54, 0xd7, 0x66, 0x15, 0xc6, 0x56,
  0x57, 0x36, 0x47, 0xf5, 0xc6, 0xf4, 0x16, 0x46, 0x06, 0x55, 0x26, 0x27,
  0xf5, 0x76, 0xf7, 0x24, 0x37, 0xf4, 0xc6, 0x56, 0xd7, 0xe6, 0x36, 0x2e,
  0x01, 0x40, 0x04, 0x0f, 0xca, 0x45, 0xd0, 0x83, 0xdb, 0x00, 0x00, 0x36,
  0x47, 0x54, 0x69, 0x64, 0x34, 0x78, 0x31, 0x36, 0x5f, 0x72, 0x6f, 0x77,
  0x30, 0xe3, 0x12, 0x00, 0x44, 0xf0, 0xe0, 0x5c, 0x84, 0x3f, 0xb8, 0x00,
  0x80, 0xcf, 0x52, 0x99, 0x9c, 0x5b, 0x19, 0x9b, 0x50, 0xd8, 0x5c, 0x19,
  0x54, 0x1a, 0x5e, 0x19, 0xdb, 0x22, 0x06, 0x30, 0x03, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x25, 0x00, 0x88, 0xe0, 0x41, 0xba,
  0x08, 0xa0, 0xa0, 0x2e, 0x00, 0xc0, 0x4a, 0xea, 0xed, 0xee, 0x4b, 0x28,
  0x6c, 0xae, 0xec, 0x2a, 0xcc, 0xae, 0x8c, 0x29, 0xcc, 0xad, 0x2c, 0xc9,
  0x8d, 0xac, 0x0c, 0x6f, 0x5c, 0x02, 0x80, 0x08, 0x1e, 0xb0, 0x8b, 0x20,
  0x0a, 0xb7, 0x01, 0x00, 0x0c, 0xd2, 0xc6, 0x25, 0x00, 0x88, 0xc8, 0x8a,
  0xbb, 0x08, 0xa5, 0xf0, 0x06, 0x00, 0x40, 0xe4, 0x88, 0x2a, 0x8d, 0x8c,
  0x06, 0x2f, 0xc6, 0x66, 0x5c, 0x02, 0x80, 0x08, 0xad, 0xc0, 0x8b, 0x70,
  0x0a, 0x17, 0x00, 0xcc, 0x2a, 0x02, 0x5a, 0x11, 0x50, 0xa1, 0x61, 0x01,
  0x97, 0x86, 0x57, 0xc6, 0x36, 0x2e, 0x01, 0x42, 0xa4, 0x0f, 0xe6, 0x45,
  0x68, 0x03, 0x30, 0x08, 0x80, 0x96, 0x05, 0x8b, 0x59, 0xb9, 0x15, 0x2e,
  0x69, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0xe3,
  0x12, 0x00, 0x44, 0xfa, 0xc0, 0x5e, 0x84, 0x37, 0x18, 0x05, 0x00, 0x18,
  0x97, 0x00, 0x20, 0x42, 0x2b, 0xf3, 0x22, 0xc8, 0x02, 0x18, 0x00, 0xc0,
  0x04, 0x41, 0x52, 0x03, 0x16, 0x76, 0x61, 0x6c, 0x75, 0x65, 0xe3, 0x12,
  0x00, 0x44, 0x68, 0x45, 0x5f, 0x84, 0x59, 0x20, 0x03, 0x00, 0xa0, 0x42,
  0x96, 0xd6, 0x56, 0xe6, 0x36, 0x97, 0xf6, 0xe6, 0x36, 0x37, 0x2e, 0x01,
  0x42, 0xc4, 0x14, 0xf8, 0xe5, 0x0f, 0xfc, 0x00, 0x0c, 0x04, 0xa0, 0x73,
  0x61, 0x87, 0x56, 0x6e, 0x85, 0x45, 0x9a, 0x1b, 0x59, 0x19, 0xde, 0xb8,
  0x04, 0x08, 0x11, 0x53, 0xf8, 0x97, 0x3f, 0xf0, 0x03, 0x30, 0x08, 0x80,
  0x59, 0x45, 0x40, 0x2b, 0xc2, 0x2f, 0x24, 0x13, 0x04, 0x69, 0x0d, 0x88,
  0xd8, 0x85, 0xb1, 0xd5, 0x95, 0x4d, 0xd5, 0xb5, 0x8d, 0x4b, 0x00, 0x10,
  0x09, 0x99, 0x91, 0x11, 0xc2, 0x81, 0x0c, 0x00, 0x80, 0xcf, 0x5c, 0x5c,
  0x5d, 0x98, 0x5c, 0x19, 0x99, 0x55, 0x18, 0x5b, 0x5d, 0xd9, 0x54, 0x5d,
  0xdb, 0xb8, 0x04, 0x00, 0x91, 0x90, 0x29, 0x19, 0x41, 0x1c, 0xc8, 0x00,
  0x00, 0x98, 0xb8, 0xd5, 0xb5, 0x59, 0x85, 0xb1, 0xd5, 0x95, 0xcd, 0x8d,
  0x4b, 0x00, 0x10, 0x09, 0x99, 0x93, 0x11, 0xc6, 0xe1, 0x0d, 0x00, 0x60,
  0x56, 0x11, 0x84, 0x8c, 0xa0, 0x0e, 0xd1, 0xac, 0x22, 0x48, 0x19, 0x61,
  0x1d, 0x1a, 0x62, 0x52, 0x6f, 0x77, 0x5f, 0x4b, 0x65, 0x72, 0x6e, 0x65,
  0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x6e, 0x65, 0x49, 0x6e,
  0x64, 0x65, 0x78, 0xe3, 0x12, 0x00, 0x44, 0x42, 0x66, 0x65, 0x04, 0x79,
  0x78, 0x03, 0x00, 0x98, 0x55, 0x04, 0x21, 0x23, 0xe4, 0x43, 0xc3, 0x60,
  0x6c, 0x5c, 0x02, 0x80, 0x48, 0xcb, 0xb8, 0x8c, 0x90, 0x0f, 0x6f, 0x00,
  0x00, 0xb3, 0x8a, 0xa0, 0x65, 0x84, 0x7c, 0x68, 0x66, 0x15, 0x01, 0xcc,
  0x08, 0xfa, 0xd0, 0xd0, 0x61, 0x0b, 0x73, 0x2b, 0xa3, 0x7a, 0x93, 0x2a,
  0x0b, 0x23, 0x33, 0x92, 0x7b, 0x6b, 0x1b, 0x97, 0x00, 0x20, 0x12, 0x33,
  0x32, 0x23, 0xec, 0xc3, 0x1b, 0x00, 0x00, 0x8d, 0x31, 0xab, 0x30, 0xb6,
  0xba, 0xb2, 0x71, 0x09, 0x00, 0x22, 0x31, 0x43, 0x33, 0x02, 0x3f, 0x90,
  0x01, 0x00, 0xcc, 0x2a, 0x82, 0x98, 0x11, 0xfa, 0xa1, 0x9a, 0x55, 0x04,
  0x36, 0x23, 0xf8, 0x43, 0x34, 0x2e, 0x01, 0x40, 0x24, 0x64, 0x64, 0x46,
  0x30, 0x89, 0x37, 0x00, 0x80, 0x59, 0x45, 0x10, 0x32, 0x02, 0x4b, 0x44,
  0xb3, 0x8a, 0x20, 0x67, 0x84, 0x96, 0x68, 0x38, 0xd8, 0x85, 0xb1, 0x8d,
  0x4b, 0x80, 0x10, 0x59, 0x85, 0x9d, 0xf9, 0x03, 0x32, 0x58, 0x83, 0x00,
  0x68, 0x97, 0x00, 0xca, 0x99, 0x5b, 0xa1, 0x21, 0x57, 0x36, 0x57, 0xc7,
  0x46, 0x37, 0x2e, 0x01, 0x40, 0x64, 0x15, 0x7c, 0xe6, 0x0f, 0xcc, 0xe0,
  0x0d, 0x00, 0x80, 0x15, 0x1b, 0x9b, 0x5d, 0x9b, 0x0b, 0xdb, 0xdb, 0x1b,
  0x9c, 0x4b, 0x9d, 0x9b, 0xdc, 0x1b, 0x1b, 0x9b, 0x8b, 0x59, 0x1d, 0x1b,
  0xdb, 0x86, 0x00, 0x6c, 0x56, 0x08, 0x62, 0x13, 0x36, 0x13, 0x04, 0xc0,
  0x0c, 0x66, 0x15, 0x81, 0xbc, 0x08, 0xa9, 0x90, 0xcc, 0x2a, 0x02, 0xb2,
  0x11, 0x54, 0x21, 0x9a, 0x55, 0x04, 0x65, 0x23, 0xac, 0x42, 0x33, 0x2e,
  0x01, 0x42, 0x04, 0x16, 0x7e, 0x45, 0xa8, 0x89, 0x4b, 0x00, 0xba, 0x34,
  0x0a, 0xe4, 0x00, 0x18, 0x97, 0x00, 0x21, 0x02, 0x0b, 0xb8, 0x22, 0xd4,
  0xc4, 0x15, 0x00, 0xe3, 0x12, 0x00, 0x44, 0x60, 0x61, 0x64, 0x84, 0x9b,
  0x20, 0x03, 0x00, 0x18, 0x97, 0x00, 0x20, 0x02, 0x0b, 0x25, 0x23, 0xe0,
  0x04, 0x19, 0x00, 0xc0, 0xb8, 0x04, 0x00, 0x11, 0x58, 0x38, 0x19, 0x21,
  0x27, 0xde, 0x00, 0x00, 0x7a, 0x27, 0x26, 0x5e, 0x01, 0x6d, 0xc6, 0x25,
  0x00, 0x88, 0xc0, 0xc2, 0xbc, 0x08, 0x3b, 0x71, 0x01, 0xc0, 0xac, 0x22,
  0x80, 0x05, 0xe1, 0x27, 0x0a, 0x06, 0x72, 0xe3, 0x12, 0x00, 0x44, 0xde,
  0x06, 0x6e, 0x84, 0x9f, 0x78, 0x03, 0x00, 0x98, 0x55, 0x04, 0x6f, 0x23,
  0xfc, 0x44, 0x31, 0xab, 0x08, 0xe4, 0x46, 0x00, 0x8b, 0x82, 0x85, 0xdc,
  0xdb, 0x5d, 0x12, 0xd1, 0xb8, 0x04, 0x00, 0x91, 0xb9, 0xa1, 0x1b, 0x21,
  0x2c, 0xde, 0x00, 0x00, 0xa8, 0xc8, 0x39, 0xd5, 0xb5, 0x59, 0x85, 0xb1,
  0xd5, 0x95, 0xcd, 0x8d, 0x4b, 0x00, 0x10, 0x99, 0x1b, 0xbb, 0x11, 0xc4,
  0xe2, 0x0d, 0x00, 0x60, 0x56, 0x11, 0xcc, 0x8d, 0x40, 0x16, 0xcd, 0xac,
  0x22, 0xc0, 0x1b, 0xa1, 0x2c, 0x92, 0x71, 0x09, 0x10, 0x22, 0xb5, 0xb0,
  0x33, 0x7f, 0xc0, 0x06, 0x6f, 0x10, 0x00, 0x6d, 0x16, 0x25, 0x78, 0x83,
  0x36, 0xe3, 0x12, 0x00, 0x44, 0x6a, 0xc1, 0x67, 0xfe, 0xc0, 0x0d, 0xd6,
  0x00, 0x00, 0xe8, 0xd4, 0xb9, 0xc1, 0x85, 0x8d, 0xad, 0x95, 0x91, 0x49,
  0xbd, 0xdd, 0x4d, 0xd5, 0xb5, 0x8d, 0x4b, 0x00, 0x10, 0xc9, 0x9b, 0xbe,
  0x11, 0xcc, 0x62, 0x0d, 0x00, 0x80, 0x89, 0x9c, 0x55, 0x18, 0x5b, 0x5d,
  0xd9, 0x54, 0x5d, 0xdb, 0xb8, 0x04, 0x00, 0x91, 0xbc, 0xf9, 0x1b, 0xe1,
  0x2c, 0xc8, 0x00, 0x00, 0x08, 0xc9, 0x4d, 0xc5, 0xd5, 0x85, 0xc9, 0x95,
  0x91, 0x59, 0x85, 0xb1, 0xd5, 0x95, 0x4d, 0xd5, 0xb5, 0x8d, 0x4b, 0x00,
  0x10, 0xc9, 0x9b, 0xd0, 0x11, 0xd0, 0x82, 0x0c, 0x00, 0x60, 0x82, 0x20,
  0xb1, 0x01, 0x89, 0x34, 0x37, 0x3b, 0xa7, 0x71, 0x09, 0x00, 0x22, 0xb0,
  0x40, 0x3a, 0x42, 0x5c, 0x90, 0x01, 0x00, 0x90, 0x68, 0x2b, 0x0b, 0x73,
  0x1b, 0x97, 0x00, 0x20, 0x02, 0x0b, 0xa6, 0x23, 0xc8, 0x05, 0x19, 0x00,
  0x00, 0x21, 0xb1, 0xb2, 0xb9, 0xb9, 0x32, 0xb6, 0xa1, 0x37, 0x39, 0xb9,
  0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x71, 0x09, 0x00, 0x22, 0xb0, 0x80,
  0x3a, 0x82, 0x5d, 0x90, 0x01, 0x00, 0x10, 0xb1, 0x0b, 0x93, 0x4b, 0x0b,
  0x73, 0x1b, 0x2b, 0x1b, 0x97, 0x00, 0x20, 0x02, 0x0b, 0xaa, 0x23, 0xdc,
  0x05, 0x19, 0x00, 0x80, 0x17, 0x36, 0x36, 0xbb, 0x36, 0x17, 0x32, 0xb1,
  0x33, 0x97, 0xb1, 0xba, 0x29, 0x41, 0x7f, 0x38, 0x62, 0x63, 0xb3, 0x6b,
  0x73, 0x69, 0x7b, 0x23, 0xab, 0x63, 0x2b, 0x73, 0x31, 0x63, 0x0b, 0x3b,
  0x9b, 0x9b, 0x22, 0xfc, 0x87, 0x88, 0x58, 0x61, 0x63, 0xb3, 0x6b, 0x73,
  0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x8c, 0x88, 0x25, 0x32, 0x3c,
  0x97, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1, 0x32, 0x97, 0xb1, 0x37, 0x37, 0xba,
  0x32, 0x37, 0xba, 0xb9, 0x29, 0x46, 0x89, 0xa0, 0xc8, 0x8a, 0xb8, 0x48,
  0x8c, 0xc8, 0x88, 0x23, 0x32, 0x3c, 0x97, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1,
  0x32, 0x17, 0xb2, 0x32, 0xb3, 0x34, 0xb7, 0xb2, 0xb9, 0x29, 0xc1, 0x60,
  0x8b, 0x0c, 0xcf, 0x65, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0xcc, 0xa5, 0x2d,
  0x2c, 0xcd, 0xcd, 0x28, 0x8d, 0xad, 0xcc, 0x29, 0xac, 0xad, 0x6c, 0x4a,
  0x30, 0x23, 0x76, 0xc8, 0xf0, 0x5c, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca,
  0x5c, 0xc2, 0xe4, 0xce, 0xe6, 0xa6, 0x04, 0x3f, 0x62, 0x85, 0x0c, 0xcf,
  0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x10, 0x26, 0x4e,
  0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04, 0x63,
  0x62, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9,
  0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x50, 0x26, 0x66, 0xc8, 0xf0, 0x5c, 0xe4,
  0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04, 0x74, 0x62,
  0x89, 0x0c, 0xcf, 0x85, 0x2e, 0x0f, 0xae, 0x2c, 0xc8, 0xcd, 0xed, 0x8d,
  0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x6e, 0x8a, 0x90, 0x2a, 0xac, 0x62,
  0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd,
  0x8d, 0x6e, 0x6e, 0x4a, 0x00, 0x2b, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0,
  0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0,
  0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4,
  0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x61, 0x06, 0x13,
  0x91, 0x03, 0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43, 0x39, 0x84, 0xc3, 0x3a,
  0xb8, 0x81, 0x38, 0xc8, 0x03, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x15, 0x30, 0x06, 0x81, 0x9f, 0xb3, 0xde, 0xb6,
  0x86, 0xd9, 0xf5, 0xf2, 0x7c, 0x18, 0x1e, 0xa3, 0xcb, 0x40, 0xe0, 0x0c,
  0x1a, 0xcc, 0xc2, 0x6e, 0x24, 0xd2, 0x30, 0x98, 0x0c, 0xba, 0x62, 0xe4,
  0x74, 0xbb, 0x00, 0xd2, 0x20, 0xf0, 0x83, 0x86, 0xc7, 0xeb, 0x32, 0x59,
  0xfa, 0xbe, 0x4b, 0xcb, 0xf3, 0x3a, 0x9b, 0x3e, 0x0c, 0x8f, 0xd1, 0x65,
  0x20, 0x70, 0x06, 0x0d, 0x66, 0x61, 0x37, 0x12, 0x69, 0x18, 0x4c, 0x06,
  0x5d, 0x31, 0x72, 0xba, 0x6d, 0x02, 0xcc, 0x70, 0xf9, 0x8d, 0x33, 0x1d,
  0x48, 0x63, 0xf8, 0x80, 0x25, 0x34, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x00,
  0x51, 0x84, 0x10, 0x91, 0x45, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20,
  0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0xe6, 0x00, 0x0d, 0x97, 0xef, 0x3c,
  0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9, 0xc8, 0x6d, 0x1b, 0xc5, 0x36, 0x5c,
  0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94,
  0x84, 0x01, 0x08, 0x98, 0x8f, 0xdc, 0xb6, 0x55, 0x48, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x07,
  0x62, 0x30, 0x5c, 0xbe, 0xf3, 0xf8, 0xc5, 0x02, 0x4c, 0x13, 0xd1, 0x10,
  0x43, 0x7b, 0x44, 0x04, 0x30, 0x88, 0x83, 0xd8, 0x80, 0x91, 0x43, 0x3d,
  0x3e, 0x72, 0xdb, 0x56, 0x10, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x11, 0x39,
  0xd4, 0x23, 0x0e, 0x3e, 0x72, 0xdb, 0x36, 0x41, 0x0d, 0x97, 0xef, 0x3c,
  0xfe, 0x42, 0x18, 0x80, 0x80, 0x7d, 0xb5, 0xde, 0x3a, 0xdf, 0x6d, 0x1b,
  0x04, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x0b, 0x61, 0x00, 0x02, 0xf6, 0xdd,
  0x76, 0xeb, 0x7c, 0xb5, 0x6e, 0x0c, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f,
  0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x12,
  0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e,
  0x4e, 0x44, 0xf8, 0xc5, 0x6d, 0x1b, 0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0xd3, 0x11, 0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x66, 0x90, 0x0d,
  0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44, 0x04, 0x30, 0x88, 0x83, 0xd8, 0x80,
  0x91, 0x43, 0x3d, 0x3e, 0x72, 0xdb, 0xa6, 0x60, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x05, 0x54, 0x04, 0x48, 0x4c, 0x25, 0xd0, 0x10, 0x9c, 0x43, 0x35,
  0x93, 0x2d, 0x58, 0xc3, 0xe5, 0x3b, 0x8f, 0x6f, 0x01, 0x15, 0x01, 0x12,
  0x53, 0x09, 0x34, 0x84, 0xd8, 0x0c, 0xc4, 0x65, 0x0d, 0xd8, 0x70, 0xf9,
  0xce, 0xe3, 0x5b, 0x40, 0x45, 0xac, 0x04, 0x30, 0x94, 0x40, 0x43, 0x68,
  0x93, 0x5f, 0xdc, 0xb6, 0x3d, 0x60, 0xc3, 0xe5, 0x3b, 0x8f, 0x6f, 0x01,
  0x15, 0xb1, 0x12, 0xc0, 0x50, 0x02, 0x0d, 0xa1, 0x4d, 0x3e, 0x72, 0xdb,
  0x46, 0xe0, 0x2c, 0x4b, 0xc5, 0xf8, 0x43, 0x60, 0xf8, 0x15, 0xb0, 0x50,
  0x84, 0x0d, 0x10, 0x0c, 0x80, 0x34, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xe9, 0x13, 0x00, 0x00, 0x13, 0x04, 0xa6, 0x10, 0x0b, 0x04, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x04, 0x94, 0x5d, 0xa9, 0x07, 0x14, 0xa1, 0x40,
  0x11, 0x06, 0x14, 0x78, 0x40, 0x41, 0x95, 0x5c, 0xf1, 0x06, 0x94, 0x6f,
  0x40, 0xe9, 0x06, 0x94, 0xa1, 0x40, 0x39, 0x15, 0x70, 0x40, 0x79, 0x07,
  0x14, 0x68, 0x40, 0x19, 0x95, 0x61, 0x00, 0x25, 0x23, 0x00, 0x44, 0x95,
  0x47, 0x09, 0x8c, 0x00, 0x14, 0x01, 0x49, 0x63, 0x04, 0x20, 0x08, 0x82,
  0xf8, 0x47, 0xf5, 0x50, 0xc7, 0x40, 0x08, 0xc0, 0x06, 0x6c, 0x00, 0x00,
  0xf1, 0x30, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x13, 0x04, 0x60, 0x16,
  0x26, 0x08, 0x00, 0x2d, 0x4c, 0x10, 0x00, 0x59, 0x98, 0x20, 0x00, 0xb0,
  0x30, 0x41, 0x00, 0x62, 0x61, 0x82, 0x00, 0xb8, 0xc2, 0x04, 0x01, 0x78,
  0x85, 0x09, 0x02, 0xa0, 0x0b, 0x13, 0x04, 0x80, 0x17, 0x26, 0x08, 0x40,
  0x2f, 0x4c, 0x10, 0x00, 0x74, 0x98, 0x20, 0x00, 0xe9, 0x30, 0x41, 0x00,
  0xda, 0x61, 0x82, 0x00, 0xc0, 0xc3, 0x04, 0x01, 0x88, 0x87, 0x09, 0x02,
  0x80, 0x0f, 0x13, 0x04, 0x20, 0x1f, 0x26, 0x08, 0x80, 0x3f, 0x4c, 0x10,
  0x80, 0x95, 0x98, 0x20, 0x00, 0x2c, 0x31, 0x41, 0x00, 0x64, 0x62, 0x82,
  0x00, 0xcc, 0xc4, 0x04, 0x61, 0xf2, 0x89, 0x09, 0x82, 0x14, 0x16, 0x13,
  0x04, 0x49, 0x2d, 0x26, 0x08, 0xc0, 0x5b, 0x4c, 0x10, 0xa4, 0xb6, 0x98,
  0x20, 0x48, 0x6e, 0x31, 0x41, 0x00, 0xf2, 0x62, 0x82, 0x00, 0x84, 0xc6,
  0x04, 0x41, 0x02, 0x8d, 0x09, 0x82, 0xf4, 0x17, 0x13, 0x04, 0x40, 0x34,
  0x26, 0x08, 0xc0, 0x68, 0x4c, 0x10, 0xa4, 0xd2, 0x98, 0x20, 0x48, 0xa8,
  0x31, 0x41, 0x90, 0x56, 0x63, 0x82, 0x00, 0xb4, 0xc6, 0x04, 0x41, 0x82,
  0x8d, 0x09, 0x02, 0x10, 0x1b, 0x13, 0x04, 0xe9, 0x35, 0x26, 0x08, 0x80,
  0x6c, 0x4c, 0x10, 0xa4, 0xdb, 0x98, 0x20, 0x00, 0xb9, 0x31, 0x41, 0x90,
  0x70, 0x63, 0x82, 0x00, 0xfc, 0xc6, 0x04, 0x41, 0x12, 0x8f, 0x09, 0x82,
  0x54, 0x1e, 0x13, 0x04, 0x00, 0x3d, 0x26, 0x08, 0x80, 0x7b, 0x4c, 0x10,
  0x00, 0xf9, 0x98, 0x20, 0x00, 0xfc, 0x31, 0x41, 0x00, 0xfa, 0x63, 0x82,
  0x00, 0x90, 0xc8, 0x04, 0x01, 0x28, 0x91, 0x09, 0x02, 0xa0, 0x22, 0x13,
  0x04, 0xe0, 0x46, 0x26, 0x08, 0x00, 0x8e, 0x4c, 0x10, 0x00, 0x1f, 0x99,
  0x20, 0x00, 0x3f, 0x32, 0x41, 0x98, 0xd4, 0x64, 0x82, 0x20, 0xb5, 0xc9,
  0x04, 0x41, 0xb2, 0x93, 0x09, 0x02, 0xb0, 0x27, 0x13, 0x04, 0x29, 0x4f,
  0x26, 0x08, 0x92, 0x9e, 0x4c, 0x10, 0x80, 0x52, 0x99, 0x20, 0x00, 0xad,
  0x32, 0x41, 0x90, 0x58, 0x65, 0x82, 0x20, 0xad, 0xca, 0x04, 0x01, 0x70,
  0x95, 0x09, 0x02, 0xf0, 0x2a, 0x13, 0x04, 0x29, 0x56, 0x26, 0x08, 0x12,
  0xad, 0x4c, 0x10, 0xa4, 0x5b, 0x99, 0x20, 0x00, 0xb9, 0x32, 0x41, 0x90,
  0x78, 0x65, 0x82, 0x00, 0xf4, 0xca, 0x04, 0x41, 0xda, 0x95, 0x09, 0x02,
  0xe0, 0x2b, 0x13, 0x04, 0x69, 0x5c, 0x26, 0x08, 0x40, 0xb9, 0x4c, 0x10,
  0x24, 0x72, 0x99, 0x20, 0x00, 0xeb, 0x32, 0x41, 0x90, 0xdc, 0x65, 0x82,
  0x20, 0xc5, 0xcb, 0x04, 0x01, 0xa0, 0x97, 0x09, 0x02, 0xa0, 0x2f, 0x13,
  0x04, 0xc0, 0x5f, 0x26, 0x08, 0x00, 0xca, 0x4c, 0x10, 0x80, 0x94, 0x99,
  0x20, 0x00, 0x30, 0x33, 0x41, 0x00, 0x62, 0x66, 0x82, 0x00, 0xd8, 0xcc,
  0x04, 0x01, 0x18, 0x9b, 0x09, 0x02, 0x40, 0x36, 0x13, 0x04, 0x40, 0x6d,
  0x26, 0x08, 0xc0, 0xda, 0x4c, 0x10, 0x26, 0xbb, 0x99, 0x20, 0x48, 0x79,
  0x33, 0x41, 0x90, 0x44, 0x67, 0x82, 0x00, 0x9c, 0xce, 0x04, 0x41, 0x2a,
  0x9d, 0x09, 0x82, 0x64, 0x3a, 0x13, 0x04, 0x20, 0x76, 0x26, 0x08, 0x40,
  0xee, 0x4c, 0x10, 0x24, 0xdc, 0x99, 0x20, 0x48, 0xb7, 0x33, 0x41, 0x00,
  0x74, 0x67, 0x82, 0x00, 0xec, 0xce, 0x04, 0x41, 0xea, 0x9d, 0x09, 0x82,
  0x04, 0x3e, 0x13, 0x04, 0x69, 0x7c, 0x26, 0x08, 0x40, 0xf9, 0x4c, 0x10,
  0x24, 0xf4, 0x99, 0x20, 0x00, 0xe9, 0x33, 0x41, 0x90, 0xce, 0x67, 0x82,
  0x00, 0xa8, 0xcf, 0x04, 0x41, 0x7a, 0x9f, 0x09, 0x02, 0x10, 0x3f, 0x13,
  0x04, 0x09, 0x7e, 0x26, 0x08, 0xc0, 0xfd, 0x4c, 0x10, 0x24, 0xfd, 0x99,
  0x20, 0x48, 0xfd, 0x33, 0x41, 0x00, 0x40, 0x68, 0x82, 0x00, 0x98, 0xd0,
  0x04, 0x01, 0x50, 0xa1, 0x09, 0x02, 0x40, 0x43, 0x13, 0x04, 0xa0, 0x86,
  0x26, 0x08, 0x00, 0x0f, 0x4d, 0x10, 0x80, 0x1e, 0x9a, 0x20, 0x00, 0x62,
  0x34, 0x41, 0x00, 0xde, 0x68, 0x82, 0x00, 0xc0, 0xd1, 0x04, 0x01, 0xb0,
  0xa3, 0x09, 0x02, 0x70, 0x47, 0x13, 0x84, 0x49, 0x94, 0x26, 0x08, 0x52,
  0x29, 0x4d, 0x10, 0x24, 0x57, 0x9a, 0x20, 0x00, 0xb3, 0x34, 0x41, 0x90,
  0x62, 0x69, 0x82, 0x20, 0xc9, 0xd2, 0x04, 0x01, 0xe8, 0xa5, 0x09, 0x02,
  0x50, 0x4e, 0x13, 0x04, 0x89, 0x9c, 0x26, 0x08, 0xd2, 0x38, 0x4d, 0x10,
  0x00, 0x73, 0x9a, 0x20, 0x00, 0xe7, 0x34, 0x41, 0x90, 0xd2, 0x69, 0x82,
  0x20, 0xb1, 0xd3, 0x04, 0x41, 0x7a, 0xa7, 0x09, 0x02, 0x10, 0x4f, 0x13,
  0x04, 0x89, 0x9e, 0x26, 0x08, 0x40, 0x3d, 0x4d, 0x10, 0xa4, 0x79, 0x9a,
  0x20, 0x00, 0xf6, 0x34, 0x41, 0x90, 0xf6, 0x69, 0x82, 0x00, 0xf4, 0xd3,
  0x04, 0x41, 0xe2, 0xa7, 0x09, 0x02, 0x30, 0x52, 0x13, 0x04, 0xc9, 0xa4,
  0x26, 0x08, 0x52, 0x4a, 0x4d, 0x10, 0x00, 0x96, 0x9a, 0x20, 0x00, 0x32,
  0x35, 0x41, 0x00, 0x6c, 0x6a, 0x82, 0x00, 0xb8, 0xd5, 0x04, 0x01, 0x98,
  0xab, 0x09, 0x02, 0x00, 0x5a, 0x13, 0x04, 0x20, 0xb4, 0x26, 0x08, 0xc0,
  0x6a, 0x4d, 0x10, 0x24, 0xd5, 0x9a, 0x20, 0x00, 0xa8, 0x35, 0x41, 0x90,
  0x52, 0x6b, 0x82, 0x00, 0xb0, 0xd6, 0x04, 0x01, 0x88, 0xad, 0x09, 0x02,
  0x70, 0x5b, 0x13, 0x04, 0x29, 0xb7, 0x26, 0x08, 0x12, 0x6f, 0x4d, 0x10,
  0x24, 0xf1, 0x9a, 0x20, 0x48, 0xe4, 0x35, 0x41, 0x00, 0xcc, 0x6b, 0x82,
  0x20, 0xa9, 0xd7, 0x04, 0x01, 0x40, 0xaf, 0x09, 0x82, 0x94, 0x5e, 0x13,
  0x04, 0x60, 0xbd, 0x26, 0x08, 0xc0, 0x7c, 0x4d, 0x10, 0xa4, 0xfa, 0x9a,
  0x20, 0x48, 0xf4, 0x35, 0x41, 0x90, 0xf0, 0x6b, 0x82, 0x20, 0xe9, 0xd7,
  0x04, 0x41, 0x02, 0xb1, 0x09, 0x82, 0x54, 0x62, 0x13, 0x04, 0xe9, 0xc4,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x90, 0x06,
  0x76, 0x20, 0x15, 0x70, 0x00, 0x07, 0x64, 0x30, 0x63, 0x40, 0xec, 0x42,
  0x65, 0x2b, 0xb7, 0x32, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x69, 0x70,
  0x07, 0x53, 0x11, 0x07, 0x71, 0x50, 0x06, 0x13, 0x06, 0xc0, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0xa4, 0x01, 0x1e, 0x50, 0x85, 0x1c, 0xc8, 0x81,
  0x19, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0, 0xa4,
  0x02, 0x35, 0x07, 0x33, 0x06, 0x04, 0x68, 0x84, 0xc3, 0x1c, 0x00, 0x23,
  0x06, 0x06, 0x00, 0x82, 0x60, 0xc0, 0xa8, 0x42, 0x65, 0x07, 0x13, 0x06,
  0xc0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xaa, 0x50, 0xd5, 0xc1,
  0x84, 0x01, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcc, 0x2a, 0x58,
  0x78, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x14, 0x00, 0x08, 0x82, 0x81, 0xb3,
  0x0a, 0xd3, 0x84, 0x01, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcc,
  0x2a, 0x5c, 0x78, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0x01, 0xc3, 0x0a, 0xd8, 0x1e, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xa0, 0xc4, 0x82, 0x4a, 0xff, 0xff, 0xff, 0x0f, 0x51, 0x7f,
  0xff, 0xff, 0xff, 0x0f, 0xfc, 0xfd, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc4, 0x42, 0x4a, 0xff, 0xff,
  0xff, 0x0f, 0x51, 0x7f, 0xff, 0xff, 0xff, 0x0f, 0xfb, 0xfd, 0xff, 0xff,
  0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc4,
  0x02, 0x4a, 0xff, 0xff, 0xff, 0x0f, 0x51, 0x7e, 0xff, 0xff, 0xff, 0x0f,
  0xf8, 0xfd, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xa0, 0x71, 0x0a, 0x73,
  0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x12, 0x0b, 0x27, 0xfd,
  0xff, 0xff, 0x3f, 0x44, 0xf6, 0xfd, 0xff, 0xff, 0x3f, 0xf0, 0xf7, 0xff,
  0xff, 0xff, 0x30, 0x63, 0x40, 0x80, 0x46, 0x1a, 0xcc, 0x01, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0x2c, 0x98, 0xf4, 0xff, 0xff, 0xff,
  0x10, 0xd9, 0xf7, 0xff, 0xff, 0xff, 0xb0, 0xdf, 0xff, 0xff, 0xff, 0xc3,
  0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0x2c, 0x94,
  0xf4, 0xff, 0xff, 0xff, 0x10, 0xd1, 0xf7, 0xff, 0xff, 0xff, 0xc0, 0xdf,
  0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x01, 0x1a, 0xd1, 0x1c, 0x00, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc4, 0x02, 0x49, 0xff, 0xff, 0xff,
  0x0f, 0x11, 0x7d, 0xff, 0xff, 0xff, 0x0f, 0xfb, 0xfd, 0xff, 0xff, 0x3f,
  0x4c, 0x18, 0x00, 0xb4, 0x00, 0x60, 0xc6, 0x80, 0x10, 0x8d, 0x62, 0x0e,
  0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x64, 0x21, 0xa5, 0xff,
  0xff, 0xff, 0x07, 0x89, 0xbe, 0xff, 0xff, 0xff, 0x87, 0xfc, 0xfe, 0xff,
  0xff, 0x1f, 0x66, 0x0c, 0x88, 0x3b, 0x78, 0x03, 0x3c, 0xb8, 0x95, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x64, 0xc1, 0xa4, 0xff, 0xff, 0xff,
  0x07, 0x69, 0xbe, 0xff, 0xff, 0xff, 0x87, 0xfe, 0xfe, 0xff, 0xff, 0x1f,
  0x66, 0x0c, 0x88, 0x3b, 0x10, 0x03, 0x3c, 0xb8, 0x95, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0x50, 0x64, 0xa1, 0xa4, 0xff, 0xff, 0xff, 0x07, 0x69,
  0xbe, 0xff, 0xff, 0xff, 0x07, 0xfe, 0xfe, 0xff, 0xff, 0x1f, 0x26, 0x0c,
  0x00, 0x62, 0x00, 0x30, 0x63, 0x40, 0xe8, 0x01, 0x1c, 0xe0, 0xc1, 0xad,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x19, 0x8c, 0x02, 0x19, 0x28,
  0x7c, 0x30, 0x63, 0x40, 0xe8, 0x41, 0x28, 0xe0, 0xc1, 0xad, 0x8c, 0x26,
  0x04, 0xc2, 0x84, 0x01, 0x50, 0x01, 0x28, 0xc4, 0x8c, 0x01, 0xa1, 0x07,
  0xad, 0x80, 0x07, 0xb7, 0x52, 0x7a, 0x10, 0xc0, 0x8c, 0x01, 0xa1, 0x07,
  0x7b, 0x80, 0x07, 0xb7, 0x42, 0x11, 0x00, 0x66, 0x0c, 0x08, 0x3d, 0x80,
  0xf0, 0xe0, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0xc1, 0x05,
  0x95, 0xfe, 0xff, 0xff, 0x1f, 0xb0, 0xfb, 0xfe, 0xff, 0xff, 0x1f, 0xfe,
  0xfb, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x4a, 0xd1, 0x83, 0x9a, 0x31,
  0x20, 0xfe, 0x80, 0x0c, 0xf0, 0xe0, 0x56, 0x6a, 0xd9, 0x83, 0x99, 0x31,
  0x20, 0xfe, 0xa0, 0x0d, 0xf0, 0xe0, 0x56, 0x88, 0x02, 0xc0, 0x8c, 0x01,
  0xf1, 0x07, 0x0b, 0x1e, 0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x28, 0xbb, 0xc0, 0xd2, 0xff, 0xff, 0xff, 0xc3, 0x86, 0xdf, 0xff, 0xff,
  0xff, 0x83, 0x89, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0xbb, 0xb0, 0xd2, 0xff, 0xff, 0xff, 0xc3,
  0x86, 0xdf, 0xff, 0xff, 0xff, 0x43, 0x89, 0xff, 0xff, 0xff, 0x0f, 0x13,
  0x06, 0x00, 0x55, 0x00, 0x98, 0x31, 0x20, 0x40, 0x21, 0x0d, 0xf0, 0xe0,
  0x56, 0x4a, 0x02, 0x05, 0x99, 0x31, 0x20, 0x40, 0xe1, 0x0c, 0xf0, 0xe0,
  0x56, 0x4a, 0x0a, 0x05, 0x99, 0x30, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0xc0, 0x0c, 0x5c, 0xe1, 0x0d, 0xaa, 0x53, 0x98, 0x31, 0x20, 0x40,
  0x61, 0x0f, 0xf0, 0xe0, 0x56, 0x46, 0x13, 0x82, 0x61, 0xc2, 0x00, 0x28,
  0x22, 0x88, 0x19, 0x03, 0x02, 0x14, 0xe4, 0x00, 0x0f, 0x6e, 0xa5, 0x08,
  0x21, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x30, 0x03,
  0x59, 0x98, 0x83, 0xac, 0x15, 0x66, 0x0c, 0x08, 0x50, 0xb8, 0x05, 0x3c,
  0xb8, 0x95, 0xd1, 0x84, 0x40, 0x98, 0x30, 0x00, 0x8a, 0x78, 0x05, 0x99,
  0x31, 0x20, 0x40, 0x41, 0x15, 0xf0, 0xe0, 0x56, 0x8a, 0x10, 0x64, 0xc2,
  0x00, 0x20, 0x30, 0x00, 0xc0, 0x8c, 0x01, 0x01, 0x0a, 0x10, 0x1e, 0xdc,
  0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xe7, 0x60, 0xd3, 0xff,
  0xff, 0xff, 0xc3, 0x19, 0x84, 0xf8, 0xff, 0xff, 0xff, 0x20, 0xe3, 0xff,
  0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0xca, 0x39, 0xd4, 0xf4, 0xff, 0xff, 0xff, 0x70, 0x06, 0x21, 0xfe, 0xff,
  0xff, 0x3f, 0xc4, 0xf8, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18,
  0x14, 0x00, 0x08, 0x82, 0x81, 0x03, 0x0e, 0x6b, 0x30, 0x63, 0x40, 0x88,
  0x42, 0x1a, 0xe0, 0xc1, 0xad, 0x54, 0xa0, 0x0a, 0x33, 0x63, 0x40, 0x88,
  0x02, 0x1f, 0xe0, 0xc1, 0xad, 0x54, 0xb0, 0x0a, 0x32, 0x63, 0x40, 0x88,
  0x82, 0x28, 0xe0, 0xc1, 0xad, 0x10, 0x19, 0x00, 0x60, 0xc6, 0x80, 0x10,
  0x05, 0x08, 0x0f, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94,
  0x75, 0xc0, 0xe9, 0xff, 0xff, 0xff, 0x61, 0x0d, 0x46, 0xfc, 0xff, 0xff,
  0x7f, 0x90, 0xf1, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0xa0, 0x32, 0x00,
  0xc0, 0x8c, 0x01, 0x51, 0x0a, 0x8f, 0xac, 0xdc, 0xca, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0xec, 0xa0, 0xea, 0xff, 0xff, 0xff, 0x03, 0x1b,
  0x88, 0xf8, 0xff, 0xff, 0xff, 0x30, 0xe3, 0xff, 0xff, 0xff, 0xc3, 0x84,
  0x01, 0x30, 0x4b, 0x10, 0xcc, 0x18, 0x10, 0xa5, 0x50, 0xc8, 0xca, 0xad,
  0xcc, 0x12, 0x08, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x28, 0xec, 0xa0, 0xea, 0xff, 0xff, 0xff, 0x03, 0x1b, 0x88, 0xf8, 0xff,
  0xff, 0xff, 0x30, 0xe3, 0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x51, 0x0a,
  0x8f, 0xac, 0xdc, 0x4a, 0x51, 0xb5, 0x00, 0x33, 0x06, 0xc4, 0x29, 0xa0,
  0x01, 0xad, 0xdc, 0x4a, 0x51, 0xb6, 0x00, 0x13, 0x06, 0x00, 0xa1, 0x01,
  0x00, 0x66, 0x0c, 0x88, 0x53, 0x78, 0x68, 0xe5, 0x56, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x40, 0x79, 0x87, 0x9d, 0xfe, 0xff, 0xff, 0x1f, 0xde,
  0x60, 0xc4, 0xff, 0xff, 0xff, 0x07, 0x1d, 0xff, 0xff, 0xff, 0x1f, 0x26,
  0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xde, 0x41, 0xa7,
  0xff, 0xff, 0xff, 0x87, 0x37, 0x18, 0xf1, 0xff, 0xff, 0xff, 0x21, 0xc7,
  0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x94, 0x77, 0xd8, 0xe9, 0xff, 0xff, 0xff, 0xe1, 0x0d, 0x46, 0xfc,
  0xff, 0xff, 0x7f, 0xd0, 0xf1, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xe5, 0x1d, 0x74, 0xfa, 0xff, 0xff,
  0x7f, 0x78, 0x83, 0x11, 0xff, 0xff, 0xff, 0x1f, 0x72, 0xfc, 0xff, 0xff,
  0x7f, 0x98, 0x30, 0x00, 0x86, 0x1b, 0x84, 0x6c, 0x0c, 0x66, 0x0c, 0x08,
  0x54, 0xc0, 0xe4, 0xe5, 0x56, 0x66, 0x19, 0xf4, 0x60, 0x08, 0x66, 0x0c,
  0x08, 0x54, 0x68, 0x68, 0xe5, 0x56, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0xc0, 0x0c, 0xc0, 0x21, 0x14, 0xce, 0x60, 0x17, 0x66, 0x0c, 0x08, 0x59,
  0x90, 0x05, 0x5a, 0xb9, 0x95, 0xd1, 0x84, 0x40, 0x98, 0x30, 0x00, 0xca,
  0xe8, 0x05, 0x99, 0x31, 0x20, 0x64, 0xa1, 0x14, 0x68, 0xe5, 0x56, 0xca,
  0x10, 0x64, 0xc2, 0x00, 0x28, 0x48, 0x80, 0x19, 0x03, 0x42, 0x16, 0xf4,
  0x80, 0x56, 0x6e, 0xa5, 0x20, 0x01, 0x26, 0x0c, 0x00, 0x82, 0x03, 0x00,
  0xcc, 0x18, 0x10, 0xb2, 0x60, 0xd1, 0xca, 0xad, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x81, 0x72, 0x0f, 0x61, 0xfd, 0xff, 0xff, 0x3f, 0xdc, 0x01,
  0x8a, 0xff, 0xff, 0xff, 0x0f, 0x62, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18,
  0x10, 0x6d, 0xf0, 0xf5, 0x41, 0xbd, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x81, 0x72, 0x0f, 0x60, 0xfd, 0xff, 0xff, 0x3f, 0xdc, 0x01, 0x8a, 0xff,
  0xff, 0xff, 0x0f, 0x61, 0xfe, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xdc, 0x43, 0x58, 0xff, 0xff, 0xff,
  0x0f, 0x77, 0x80, 0xe2, 0xff, 0xff, 0xff, 0x83, 0x98, 0xff, 0xff, 0xff,
  0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xf7,
  0x00, 0xd6, 0xff, 0xff, 0xff, 0xc3, 0x1d, 0xa0, 0xf8, 0xff, 0xff, 0xff,
  0x10, 0xe6, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x60, 0x83, 0x00, 0x82,
  0x19, 0x03, 0xe2, 0x0d, 0xc4, 0xa0, 0x0f, 0xea, 0xa5, 0x82, 0x71, 0xd0,
  0x19, 0x03, 0xe2, 0x0d, 0xda, 0xa0, 0x0f, 0xea, 0x65, 0xb8, 0x21, 0x10,
  0x07, 0x30, 0x98, 0x31, 0x20, 0xde, 0x40, 0x0e, 0xfa, 0xa0, 0x5e, 0x2e,
  0x00, 0x62, 0xc6, 0x80, 0x78, 0x03, 0xa5, 0x0f, 0xea, 0x85, 0xea, 0x00,
  0x00, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xfc,
  0x40, 0xd6, 0xff, 0xff, 0xff, 0x03, 0x1f, 0xa8, 0xf8, 0xff, 0xff, 0xff,
  0x30, 0xe6, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x66, 0xc0, 0x0e, 0xad, 0x30, 0x07, 0xe7, 0x30, 0x63,
  0x40, 0xc4, 0x01, 0xd3, 0x07, 0xf5, 0x32, 0x9a, 0x10, 0x00, 0x13, 0x06,
  0xc0, 0x70, 0x43, 0x70, 0x0e, 0x61, 0x30, 0x63, 0x40, 0xc4, 0x41, 0xd2,
  0x07, 0xf5, 0x32, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x66, 0xf0, 0x0e,
  0xb0, 0x60, 0x07, 0xea, 0x30, 0x63, 0x40, 0xc4, 0x41, 0x1a, 0xf4, 0x41,
  0xbd, 0x8c, 0x26, 0x04, 0xc1, 0x84, 0x01, 0x30, 0xdc, 0x70, 0xa8, 0x43,
  0x18, 0xcc, 0x18, 0x10, 0x71, 0x00, 0x0a, 0x7d, 0x50, 0x2f, 0x17, 0x00,
  0x31, 0x61, 0x00, 0x0c, 0x37, 0x0c, 0x41, 0x18, 0xcc, 0x18, 0x10, 0x71,
  0xd0, 0x07, 0x7d, 0x50, 0x2f, 0x65, 0x04, 0x3a, 0x63, 0x40, 0xc4, 0xc1,
  0x18, 0xf4, 0x41, 0xbd, 0x54, 0xe4, 0x0e, 0x30, 0x63, 0x40, 0xc8, 0x41,
  0xd4, 0x07, 0xf5, 0x52, 0x51, 0x3c, 0xc0, 0x84, 0x01, 0x30, 0xdd, 0x20,
  0x4c, 0xc3, 0x8c, 0x01, 0x11, 0x07, 0x49, 0x1f, 0xd4, 0xcb, 0x74, 0x83,
  0x30, 0x11, 0x13, 0x06, 0x00, 0x8d, 0x02, 0x00, 0x66, 0x0c, 0x08, 0x38,
  0x28, 0xfa, 0xa0, 0x5e, 0x88, 0x14, 0x00, 0x30, 0x63, 0x40, 0xc8, 0x82,
  0x43, 0x2b, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0x4a,
  0xc8, 0xf5, 0xff, 0xff, 0xff, 0xb0, 0x0a, 0x38, 0xfe, 0xff, 0xff, 0x3f,
  0xd8, 0xf9, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x81, 0xb2, 0x12, 0x71, 0xfd, 0xff, 0xff, 0x3f, 0xac, 0x02,
  0x8e, 0xff, 0xff, 0xff, 0x0f, 0x75, 0xfe, 0xff, 0xff, 0x3f, 0x4c, 0x18,
  0x00, 0x54, 0x0a, 0x00, 0x98, 0x31, 0x20, 0x66, 0xe1, 0xa1, 0x95, 0x5b,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x85, 0x25, 0x70, 0xfc, 0xff,
  0xff, 0x7f, 0x60, 0x05, 0x1b, 0xff, 0xff, 0xff, 0x1f, 0xe6, 0xfc, 0xff,
  0xff, 0x7f, 0x98, 0x30, 0x00, 0x86, 0x1b, 0xc0, 0xc0, 0x0e, 0xc8, 0x60,
  0xc6, 0x80, 0xc8, 0x05, 0xac, 0x56, 0x6e, 0x65, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xcc, 0xa0, 0x1f, 0x7c, 0x81, 0x14, 0xec, 0x61, 0xc6, 0x80,
  0xc8, 0x05, 0x5a, 0xa8, 0x95, 0x5b, 0x19, 0x4d, 0x08, 0x80, 0x09, 0x03,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x97, 0xa0, 0xeb, 0xff,
  0xff, 0xff, 0xe1, 0x15, 0x6e, 0xfc, 0xff, 0xff, 0x7f, 0xd0, 0xf3, 0xff,
  0xff, 0xff, 0x61, 0xc6, 0x80, 0xf0, 0x03, 0x36, 0x30, 0x05, 0x7f, 0x19,
  0x4d, 0x10, 0x82, 0x19, 0x03, 0x22, 0x17, 0x68, 0xa1, 0x56, 0x6e, 0x65,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x98, 0xa0, 0xeb, 0xff, 0xff,
  0xff, 0x01, 0x16, 0x70, 0xfc, 0xff, 0xff, 0x7f, 0xd0, 0xf3, 0xff, 0xff,
  0xff, 0x61, 0xc6, 0x80, 0xf0, 0x03, 0x36, 0x30, 0x05, 0x7f, 0x21, 0x55,
  0x00, 0xc0, 0x8c, 0x01, 0x91, 0x0b, 0x7b, 0x50, 0x2b, 0xb7, 0x32, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0x4c, 0xd8, 0xf5, 0xff, 0xff, 0xff,
  0x10, 0x0b, 0x39, 0xfe, 0xff, 0xff, 0x3f, 0xf0, 0xf9, 0xff, 0xff, 0xff,
  0x30, 0x63, 0x40, 0xf8, 0x01, 0x1b, 0x98, 0x82, 0xbf, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0x12, 0x13, 0x75, 0xfd, 0xff, 0xff, 0x3f, 0xc4,
  0x42, 0x8e, 0xff, 0xff, 0xff, 0x0f, 0x7b, 0xfe, 0xff, 0xff, 0x3f, 0x4c,
  0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc4, 0x04, 0x5e,
  0xff, 0xff, 0xff, 0x0f, 0xb1, 0x60, 0xe3, 0xff, 0xff, 0xff, 0x03, 0x9f,
  0xff, 0xff, 0xff, 0x0f, 0x33, 0x06, 0x84, 0x1f, 0x74, 0xa6, 0xe0, 0x2f,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc4, 0xc4, 0x5d, 0xff, 0xff,
  0xff, 0x0f, 0xb1, 0x60, 0xe3, 0xff, 0xff, 0xff, 0xc3, 0x9e, 0xff, 0xff,
  0xff, 0x0f, 0x13, 0x06, 0xc0, 0x70, 0x83, 0xa2, 0x0f, 0x67, 0x30, 0x63,
  0x40, 0x80, 0x02, 0x65, 0x0a, 0xfe, 0x32, 0xdc, 0xa0, 0xec, 0xc3, 0x19,
  0xcc, 0x18, 0x10, 0xa0, 0x40, 0x06, 0xa6, 0xe0, 0x2f, 0x25, 0x04, 0x3a,
  0x63, 0x40, 0x80, 0x42, 0x66, 0x0a, 0xfe, 0x32, 0xdc, 0xd0, 0x18, 0x68,
  0x30, 0x63, 0x40, 0x80, 0x02, 0x1d, 0x98, 0x82, 0xbf, 0x94, 0x10, 0xe8,
  0x8c, 0x01, 0x01, 0x0a, 0x69, 0x60, 0x0a, 0xfe, 0x32, 0xdc, 0xe0, 0x1c,
  0x68, 0x30, 0x63, 0x40, 0x80, 0x82, 0x2b, 0x98, 0x82, 0xbf, 0x94, 0x10,
  0xe8, 0x8c, 0x01, 0x01, 0x0a, 0xa3, 0x60, 0x0a, 0xfe, 0x42, 0xb2, 0x00,
  0x80, 0x19, 0x03, 0x02, 0x14, 0x0a, 0x53, 0xf0, 0x97, 0x6a, 0x04, 0x9d,
  0x31, 0x20, 0x72, 0x01, 0x0f, 0x6a, 0xe5, 0x56, 0x66, 0x19, 0x88, 0x22,
  0x98, 0x31, 0x20, 0x72, 0xa1, 0xa1, 0x95, 0x5b, 0x19, 0x31, 0x68, 0x00,
  0x10, 0x04, 0x83, 0x4b, 0x26, 0xd0, 0x41, 0x16, 0x46, 0x62, 0x92, 0xf0,
  0x01, 0x1f, 0xf0, 0x01, 0x1f, 0x66, 0x0c, 0x88, 0x5d, 0xa8, 0x6c, 0xe5,
  0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0xd9, 0x09, 0xbf, 0xfe,
  0xff, 0xff, 0x1f, 0x76, 0xa1, 0xcc, 0xff, 0xff, 0xff, 0x07, 0x51, 0xff,
  0xff, 0xff, 0x1f, 0x66, 0x0c, 0x88, 0x59, 0x78, 0x68, 0xe5, 0x56, 0x46,
  0x13, 0x02, 0x60, 0xc6, 0x80, 0xd8, 0x85, 0xca, 0x56, 0x6e, 0x85, 0x6c,
  0x01, 0x00, 0x33, 0x06, 0xc4, 0x2e, 0x4c, 0xb6, 0x72, 0x2b, 0xb3, 0x04,
  0xc5, 0x8c, 0x01, 0xc1, 0x0b, 0x89, 0xad, 0xdc, 0xca, 0x40, 0x85, 0x44,
  0x10, 0xee, 0x31, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xe2, 0x13,
  0xa0, 0xfd, 0xff, 0xff, 0x3f, 0xf8, 0x02, 0x9a, 0xff, 0xff, 0xff, 0x0f,
  0xa5, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xb3, 0xf0, 0xd0, 0xca,
  0xad, 0x10, 0x2e, 0x00, 0x60, 0xc6, 0x80, 0x08, 0x87, 0x29, 0x64, 0x6e,
  0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x9f, 0x10, 0xf3, 0xff,
  0xff, 0xff, 0xe1, 0x17, 0xc0, 0xfc, 0xff, 0xff, 0x7f, 0x30, 0xf5, 0xff,
  0xff, 0xff, 0x61, 0xc2, 0x00, 0xa0, 0x5c, 0x00, 0xc0, 0x8c, 0x01, 0x21,
  0x0e, 0x53, 0xc8, 0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28,
  0x60, 0x31, 0xe6, 0xff, 0xff, 0xff, 0x03, 0x38, 0xfc, 0xf8, 0xff, 0xff,
  0xff, 0x70, 0xea, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x40, 0xba, 0x00,
  0x80, 0x19, 0x03, 0x62, 0x1c, 0xa4, 0x90, 0xb9, 0x95, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0x50, 0xc2, 0xe2, 0xdf, 0xff, 0xff, 0xff, 0x87, 0x70,
  0xf0, 0xf1, 0xff, 0xff, 0xff, 0x01, 0xd5, 0xff, 0xff, 0xff, 0x87, 0x09,
  0x03, 0x80, 0x76, 0x01, 0x00, 0x33, 0x06, 0x84, 0x3a, 0x78, 0x29, 0x73,
  0x2b, 0xc3, 0x0d, 0x76, 0x60, 0x12, 0x64, 0x30, 0x63, 0x40, 0xa8, 0x03,
  0x97, 0x32, 0xb7, 0x32, 0x1c, 0x61, 0xf4, 0x83, 0xf3, 0xcd, 0x18, 0x10,
  0xea, 0x20, 0x07, 0x29, 0x73, 0x2b, 0x25, 0x04, 0x3a, 0x63, 0x40, 0xa8,
  0x43, 0x1a, 0xa4, 0xcc, 0xad, 0xcc, 0x32, 0x18, 0x47, 0x30, 0x63, 0x40,
  0xa8, 0x43, 0x14, 0x32, 0xb7, 0x42, 0xbf, 0x00, 0x80, 0x19, 0x03, 0x82,
  0x1d, 0x34, 0x95, 0xb9, 0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50,
  0xcc, 0x02, 0xb5, 0xff, 0xff, 0xff, 0x07, 0x73, 0x38, 0xf3, 0xff, 0xff,
  0xff, 0xa1, 0xd5, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x22, 0x1c, 0xa6,
  0x90, 0xb9, 0x15, 0x4b, 0x12, 0xf9, 0xcc, 0x18, 0x10, 0xed, 0x90, 0x06,
  0x2a, 0x73, 0x2b, 0x14, 0x0e, 0x00, 0x98, 0x31, 0x20, 0xda, 0x21, 0x0c,
  0x54, 0xe6, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x41, 0x8b,
  0xd4, 0xfe, 0xff, 0xff, 0x1f, 0xd0, 0xe1, 0xcc, 0xff, 0xff, 0xff, 0x87,
  0x57, 0xff, 0xff, 0xff, 0x1f, 0x66, 0x0c, 0x08, 0x71, 0x98, 0x42, 0xe6,
  0x56, 0x48, 0x1c, 0x00, 0x30, 0x63, 0x40, 0xb8, 0x83, 0xa6, 0x32, 0xb7,
  0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0x5a, 0xb4, 0xfc, 0xff,
  0xff, 0xff, 0x90, 0x0e, 0x66, 0xfe, 0xff, 0xff, 0x3f, 0xc0, 0xfa, 0xff,
  0xff, 0xff, 0x30, 0x63, 0x40, 0x8c, 0x83, 0x14, 0x32, 0xb7, 0x32, 0x4b,
  0x70, 0xcc, 0x18, 0x10, 0xef, 0xd0, 0xa8, 0xcc, 0xad, 0x0c, 0x54, 0x48,
  0x98, 0x41, 0x22, 0xc5, 0x40, 0x85, 0x84, 0x18, 0x26, 0x52, 0x0c, 0x54,
  0x00, 0x6c, 0x62, 0xa0, 0x49, 0x31, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x0a, 0x5b, 0xb0, 0xf6, 0xff, 0xff, 0xff, 0xc0, 0x0e, 0x69, 0xfe, 0xff,
  0xff, 0x3f, 0xcc, 0xfa, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x8c, 0x83,
  0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0a, 0x5b,
  0xac, 0xf6, 0xff, 0xff, 0xff, 0xc0, 0x0e, 0x6d, 0xfe, 0xff, 0xff, 0x3f,
  0xcc, 0xfa, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x84, 0xc3, 0x14, 0x32,
  0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0a, 0x5b, 0xa8, 0xf6,
  0xff, 0xff, 0xff, 0xc0, 0x0e, 0x6b, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0xfa,
  0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x88, 0xc3, 0x14, 0x32, 0xb7, 0x52,
  0xa3, 0x70, 0x13, 0x30, 0x63, 0x40, 0xd0, 0x43, 0x14, 0x32, 0xb7, 0x42,
  0xe7, 0x00, 0x80, 0x19, 0x03, 0xa2, 0x1e, 0xc2, 0x20, 0x64, 0x6e, 0x65,
  0xb8, 0x41, 0x14, 0x64, 0x82, 0x0c, 0x66, 0x0c, 0x88, 0x7a, 0xf8, 0x42,
  0xe6, 0x56, 0x28, 0x1d, 0x00, 0x30, 0x63, 0x40, 0xdc, 0x43, 0x19, 0x84,
  0xcc, 0xad, 0x14, 0x29, 0xd0, 0x44, 0xcc, 0x18, 0x10, 0xf7, 0x30, 0x06,
  0x21, 0x73, 0x2b, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x60, 0x06, 0x61,
  0x21, 0x12, 0xe8, 0xa0, 0x13, 0x33, 0x06, 0xc4, 0x3d, 0xd8, 0x41, 0xc8,
  0xdc, 0xca, 0x68, 0x42, 0x30, 0x4c, 0x18, 0x00, 0x35, 0x04, 0x30, 0x63,
  0x40, 0xdc, 0x43, 0x1c, 0x84, 0xcc, 0xad, 0x4c, 0x37, 0xa0, 0x42, 0x60,
  0xcc, 0x18, 0x10, 0xf5, 0x40, 0x85, 0xcc, 0xad, 0x54, 0x12, 0xc0, 0x8c,
  0x01, 0x51, 0x0f, 0x51, 0xc8, 0xdc, 0x0a, 0xc1, 0x03, 0x00, 0x66, 0x0c,
  0x08, 0x79, 0x90, 0x42, 0xe6, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0x40, 0xb9, 0x0b, 0xda, 0xfe, 0xff, 0xff, 0x1f, 0xee, 0x01, 0xce, 0xff,
  0xff, 0xff, 0x07, 0x5f, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x8a,
  0x07, 0x00, 0xcc, 0x18, 0x10, 0xf9, 0x70, 0xb5, 0xcc, 0xad, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x81, 0x82, 0x17, 0x36, 0xff, 0xff, 0xff, 0x3f,
  0xe0, 0x83, 0x9b, 0xff, 0xff, 0xff, 0x0f, 0xbf, 0xfe, 0xff, 0xff, 0x3f,
  0x4c, 0x18, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x60, 0x06, 0x68,
  0x91, 0x12, 0xef, 0x10, 0x16, 0x33, 0x06, 0x44, 0x3e, 0x94, 0x01, 0xcc,
  0xdc, 0xca, 0x68, 0x42, 0x30, 0x4c, 0x18, 0x00, 0xc3, 0x0d, 0x63, 0x11,
  0x90, 0xc1, 0x8c, 0x01, 0x91, 0x0f, 0x60, 0x00, 0x33, 0xb7, 0x32, 0xcb,
  0x80, 0x34, 0xc1, 0x8c, 0x01, 0x91, 0x0f, 0x4d, 0xcb, 0xdc, 0xca, 0x2c,
  0x41, 0x32, 0x61, 0x00, 0x0c, 0x54, 0x48, 0x64, 0x80, 0x84, 0xc1, 0x32,
  0x50, 0x21, 0x91, 0x01, 0x12, 0x06, 0xcb, 0x40, 0x05, 0x40, 0x06, 0x48,
  0x18, 0x2c, 0x03, 0x15, 0x80, 0xab, 0x20, 0x61, 0xb0, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0xf2, 0x17, 0xbb, 0xfd, 0xff, 0xff, 0x3f, 0xfc,
  0x03, 0x9f, 0xff, 0xff, 0xff, 0x0f, 0xe6, 0xfe, 0xff, 0xff, 0x3f, 0xcc,
  0x18, 0x10, 0xe3, 0x20, 0x85, 0xcc, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x81, 0xf2, 0x17, 0xba, 0xfd, 0xff, 0xff, 0x3f, 0xfc, 0x83, 0x9f,
  0xff, 0xff, 0xff, 0x0f, 0xe6, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10,
  0xe2, 0x30, 0x85, 0xcc, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81,
  0xf2, 0x17, 0xb9, 0xfd, 0xff, 0xff, 0x3f, 0xfc, 0x03, 0xa8, 0xff, 0xff,
  0xff, 0x0f, 0xe6, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xe1, 0x30,
  0x85, 0xcc, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xf2, 0x17,
  0xb8, 0xfd, 0xff, 0xff, 0x3f, 0xfc, 0x43, 0x9d, 0xff, 0xff, 0xff, 0x0f,
  0xe6, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xf9, 0x70, 0xb5, 0xcc,
  0xad, 0x94, 0x12, 0xc0, 0x8c, 0x01, 0xb1, 0x0f, 0xa0, 0x10, 0x33, 0xb7,
  0x42, 0xfa, 0x00, 0x80, 0x19, 0x03, 0x62, 0x1f, 0xac, 0x98, 0xb9, 0x95,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x42, 0x23, 0xb7, 0xff, 0xff,
  0xff, 0x87, 0x90, 0x98, 0xf3, 0xff, 0xff, 0xff, 0x01, 0xdd, 0xff, 0xff,
  0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x32,
  0xbc, 0x88, 0x09, 0x32, 0x10, 0x66, 0x0c, 0x08, 0x7e, 0x00, 0x83, 0x98,
  0xb9, 0x15, 0xe2, 0x07, 0x00, 0xcc, 0x18, 0x10, 0xfc, 0x70, 0xc5, 0xcc,
  0xad, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x32, 0x1a, 0xba, 0xfd,
  0xff, 0xff, 0x3f, 0x8c, 0xc4, 0x9c, 0xff, 0xff, 0xff, 0x0f, 0xea, 0xfe,
  0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0xc3, 0x11, 0x42, 0x4f, 0x38, 0xdf,
  0x8c, 0x01, 0xd1, 0x0f, 0x9c, 0xcd, 0xdc, 0xca, 0x2c, 0x83, 0xb2, 0x04,
  0x33, 0x06, 0x44, 0x3f, 0x54, 0x31, 0x73, 0x2b, 0x96, 0x0c, 0xf0, 0x99,
  0x31, 0x20, 0xfe, 0xc1, 0xbb, 0x99, 0x5b, 0xa1, 0x7f, 0x00, 0xc0, 0x84,
  0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8a, 0x69, 0xf0, 0xf6,
  0xff, 0xff, 0xff, 0x60, 0x12, 0xa7, 0xfe, 0xff, 0xff, 0x3f, 0xb4, 0xfb,
  0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x84, 0xc3, 0x14, 0x32, 0xb7, 0x62,
  0x45, 0x21, 0x9f, 0x19, 0x03, 0x02, 0x24, 0xde, 0xe0, 0x66, 0x6e, 0xc5,
  0x96, 0x00, 0x3e, 0x33, 0x06, 0x04, 0x48, 0x94, 0xc1, 0xcd, 0xdc, 0x0a,
  0x89, 0x04, 0x00, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x50, 0x52, 0xc3, 0xb7, 0xff, 0xff, 0xff, 0x87, 0x94, 0x40, 0xf5, 0xff,
  0xff, 0xff, 0x01, 0xde, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x42, 0x1c,
  0xa6, 0x90, 0xb9, 0x95, 0x62, 0xe8, 0x02, 0x66, 0x0c, 0x88, 0x90, 0xf0,
  0x6e, 0xe6, 0x56, 0x88, 0x24, 0x00, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0xb2, 0x1a, 0xbf, 0xfd, 0xff, 0xff, 0x3f, 0xac,
  0x04, 0xaa, 0xff, 0xff, 0xff, 0x0f, 0xf2, 0xfe, 0xff, 0xff, 0x3f, 0xcc,
  0x18, 0x10, 0xe3, 0x20, 0x85, 0xcc, 0xad, 0xcc, 0x12, 0x2c, 0x33, 0x06,
  0x84, 0x48, 0x44, 0x37, 0x73, 0x2b, 0x03, 0x15, 0x92, 0xa3, 0x80, 0x41,
  0x32, 0x50, 0x21, 0x29, 0x0a, 0x18, 0x24, 0x03, 0x15, 0x00, 0xa2, 0x80,
  0x41, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8a, 0x6b, 0x84, 0xf7,
  0xff, 0xff, 0xff, 0xe0, 0x12, 0xad, 0xfe, 0xff, 0xff, 0x3f, 0xd4, 0xfb,
  0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x88, 0xc3, 0x14, 0x32, 0xb7, 0x32,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8a, 0x6b, 0x80, 0xf7, 0xff, 0xff,
  0xff, 0xe0, 0x12, 0xab, 0xfe, 0xff, 0xff, 0x3f, 0xd4, 0xfb, 0xff, 0xff,
  0xff, 0x30, 0x63, 0x40, 0x8c, 0x83, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x8a, 0x6b, 0xfc, 0xf6, 0xff, 0xff, 0xff, 0xe0,
  0x12, 0xaf, 0xfe, 0xff, 0xff, 0x3f, 0xd4, 0xfb, 0xff, 0xff, 0xff, 0x30,
  0x63, 0x40, 0x84, 0xc3, 0x14, 0x32, 0xb7, 0x52, 0x50, 0x5e, 0xc0, 0x8c,
  0x01, 0x91, 0x0f, 0x74, 0x00, 0x33, 0xb7, 0x42, 0x29, 0x01, 0x80, 0x09,
  0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xd8, 0x00, 0xef,
  0xff, 0xff, 0xff, 0x01, 0x26, 0x4c, 0xfd, 0xff, 0xff, 0x7f, 0xb8, 0xf7,
  0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0xc8, 0x87, 0xab, 0x65, 0x6e, 0x65,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0x00, 0x34, 0xc2, 0xe2, 0x24,
  0xf2, 0x62, 0xc6, 0x80, 0xc8, 0x87, 0x32, 0x80, 0x99, 0x5b, 0x19, 0x4d,
  0x08, 0x86, 0x09, 0x03, 0x60, 0xb8, 0x81, 0x08, 0xc8, 0x60, 0xc6, 0x80,
  0xc8, 0x07, 0x30, 0x80, 0x99, 0x5b, 0x99, 0x65, 0x48, 0x98, 0x60, 0xc6,
  0x80, 0xc8, 0x87, 0xa6, 0x65, 0x6e, 0x65, 0x96, 0xa0, 0x99, 0x30, 0x00,
  0x06, 0x2a, 0x24, 0x88, 0xa1, 0x85, 0x63, 0xa0, 0x42, 0x82, 0x18, 0x5a,
  0x38, 0x06, 0x2a, 0x00, 0x88, 0xa1, 0x85, 0x63, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x14, 0xdb, 0x28, 0xef, 0xff, 0xff, 0xff, 0xc1, 0x26, 0x6e,
  0xfd, 0xff, 0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80,
  0x08, 0x87, 0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x14, 0xdb, 0x20, 0xef, 0xff, 0xff, 0xff, 0xc1, 0x26, 0x66, 0xfd, 0xff,
  0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x18, 0x07,
  0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xdb,
  0x18, 0xef, 0xff, 0xff, 0xff, 0xc1, 0x26, 0x6a, 0xfd, 0xff, 0xff, 0x7f,
  0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x10, 0x87, 0x29, 0x64,
  0x6e, 0xa5, 0xda, 0x41, 0x1d, 0x60, 0xc6, 0x80, 0x30, 0x89, 0x5a, 0x08,
  0x99, 0x5b, 0xa1, 0x98, 0x00, 0xc0, 0x8c, 0x01, 0x61, 0x12, 0xe4, 0x10,
  0x32, 0xb7, 0x52, 0x02, 0x5f, 0xc0, 0x8c, 0x01, 0x61, 0x12, 0xe2, 0x10,
  0x32, 0xb7, 0x32, 0x62, 0x50, 0x00, 0x20, 0x08, 0x06, 0xce, 0x6c, 0x98,
  0xc5, 0x8c, 0x01, 0x61, 0x12, 0x67, 0x10, 0x32, 0xb7, 0x52, 0x41, 0x69,
  0xc4, 0x8c, 0x01, 0x61, 0x12, 0x7a, 0x10, 0x32, 0xb7, 0x32, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x5b, 0x6c, 0x9c, 0x45, 0x30, 0xcc, 0x18, 0x10,
  0x26, 0x31, 0x06, 0x21, 0x73, 0x2b, 0x64, 0x13, 0x00, 0x98, 0x31, 0x20,
  0x4c, 0x42, 0x0a, 0x99, 0x5b, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0xa5, 0x37, 0xd2, 0xfb, 0xff, 0xff, 0x7f, 0xe8, 0x09, 0x55, 0xff, 0xff,
  0xff, 0x1f, 0x48, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0x20, 0xa3, 0x8d, 0xb6, 0x50, 0x84, 0x19, 0x03,
  0xe2, 0x24, 0xb2, 0x90, 0xb9, 0x15, 0x5b, 0x02, 0xf8, 0xcc, 0x18, 0x10,
  0x27, 0x61, 0x85, 0xcc, 0xad, 0x50, 0x4e, 0x00, 0x60, 0xc2, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x05, 0x3c, 0xd6, 0xfb, 0xff, 0xff,
  0x7f, 0x00, 0x8b, 0x70, 0xff, 0xff, 0xff, 0x1f, 0x4e, 0xfe, 0xff, 0xff,
  0x7f, 0x98, 0x31, 0x20, 0xc2, 0x61, 0x0a, 0x99, 0x5b, 0x19, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0xec, 0x36, 0xe0, 0x82, 0x29, 0x66, 0x0c, 0x08,
  0x94, 0x00, 0x83, 0x90, 0xb9, 0x15, 0x6b, 0x02, 0xf8, 0xcc, 0x18, 0x10,
  0x28, 0xd1, 0x85, 0xcc, 0xad, 0x10, 0x4f, 0x00, 0x60, 0xc2, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x65, 0x3c, 0xda, 0xfb, 0xff, 0xff,
  0x7f, 0x18, 0x0b, 0x71, 0xff, 0xff, 0xff, 0x1f, 0x54, 0xfe, 0xff, 0xff,
  0x7f, 0x98, 0x31, 0x20, 0xc4, 0x61, 0x0a, 0x99, 0x5b, 0x19, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x0d, 0x37, 0xe6, 0xc2, 0x41, 0x66, 0x0c, 0x88,
  0x94, 0xd0, 0x42, 0xe6, 0x56, 0xea, 0x09, 0x60, 0xc6, 0x80, 0x48, 0x89,
  0x2b, 0x64, 0x6e, 0x85, 0x7e, 0x02, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0xe6, 0xf1, 0xde, 0xff, 0xff, 0xff, 0x83,
  0x59, 0x8c, 0xfb, 0xff, 0xff, 0xff, 0xd0, 0xf2, 0xff, 0xff, 0xff, 0xc3,
  0x8c, 0x01, 0x31, 0x0e, 0x52, 0xc8, 0xdc, 0x0a, 0x81, 0x05, 0x00, 0x66,
  0x0c, 0x08, 0x96, 0xf0, 0x72, 0xe6, 0x56, 0x86, 0x1b, 0xf6, 0x61, 0x35,
  0xc8, 0x60, 0xc6, 0x80, 0x60, 0x09, 0x2e, 0x67, 0x6e, 0x65, 0x96, 0xc1,
  0x79, 0x82, 0x19, 0x03, 0x82, 0x25, 0xa2, 0x90, 0xb9, 0x15, 0x12, 0x0b,
  0x00, 0xcc, 0x18, 0x10, 0x2e, 0x01, 0x0a, 0x3a, 0x73, 0x2b, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0xa0, 0xa4, 0x07, 0x7d, 0xff, 0xff, 0xff, 0x0f,
  0x69, 0x21, 0xeb, 0xff, 0xff, 0xff, 0x03, 0xcd, 0xff, 0xff, 0xff, 0x0f,
  0x33, 0x06, 0x04, 0x19, 0x74, 0xab, 0xd0, 0x33, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xa0, 0xa4, 0xc7, 0x7c, 0xff, 0xff, 0xff, 0x0f, 0x69, 0x21,
  0xeb, 0xff, 0xff, 0xff, 0xc3, 0xcc, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06,
  0x00, 0x8d, 0x05, 0x00, 0x66, 0x0c, 0x08, 0x33, 0x50, 0x56, 0xa1, 0x67,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x51, 0x0f, 0xd4, 0xff, 0xff,
  0xff, 0x1f, 0xd4, 0x02, 0xd6, 0xff, 0xff, 0xff, 0x87, 0x98, 0xff, 0xff,
  0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xe8,
  0x7c, 0x23, 0x2f, 0x98, 0x19, 0x03, 0xe2, 0x0c, 0x9c, 0x55, 0xe8, 0x19,
  0x2a, 0x0b, 0x00, 0xcc, 0x18, 0x10, 0x67, 0xc0, 0xac, 0x42, 0xcf, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xc2, 0x1e, 0xf4, 0xfd, 0xff, 0xff,
  0x3f, 0xb0, 0x85, 0xac, 0xff, 0xff, 0xff, 0x0f, 0x33, 0xff, 0xff, 0xff,
  0x3f, 0xcc, 0x18, 0x10, 0x66, 0xa0, 0xac, 0x42, 0xcf, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x41, 0x07, 0x1e, 0x7b, 0xb1, 0xcc, 0x18, 0x10, 0x68,
  0xf0, 0xac, 0x42, 0xcf, 0x54, 0xf0, 0x1a, 0x37, 0x63, 0x40, 0xa0, 0xc1,
  0xb7, 0x0a, 0x3d, 0x53, 0x44, 0xb0, 0x33, 0x06, 0x04, 0x1a, 0x30, 0xab,
  0xd0, 0x33, 0x94, 0x16, 0x00, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x40, 0x81, 0x8f, 0xfb, 0xfe, 0xff, 0xff, 0x1f, 0xe0, 0xc2,
  0xd6, 0xff, 0xff, 0xff, 0x87, 0x9b, 0xff, 0xff, 0xff, 0x1f, 0x66, 0x0c,
  0x08, 0x33, 0x50, 0x56, 0xa1, 0x67, 0x48, 0x2d, 0x00, 0x30, 0x63, 0x40,
  0xa4, 0x41, 0xb1, 0x0a, 0x3d, 0x53, 0x24, 0x51, 0x1b, 0x32, 0x63, 0x40,
  0xb8, 0x44, 0xa4, 0x33, 0xb7, 0x52, 0x26, 0x11, 0xc0, 0x84, 0x01, 0xb0,
  0x82, 0xe1, 0x3e, 0x78, 0x23, 0x98, 0x30, 0x00, 0x86, 0x0d, 0x88, 0xc0,
  0x18, 0x80, 0x19, 0x03, 0xc2, 0x25, 0xfc, 0x40, 0x67, 0x6e, 0xa5, 0x4e,
  0x02, 0x37, 0x64, 0xc6, 0x80, 0x78, 0x89, 0x48, 0x67, 0x6e, 0xa5, 0x52,
  0x22, 0x80, 0x09, 0x03, 0x60, 0x05, 0x43, 0x7e, 0xfc, 0x46, 0x30, 0x61,
  0x00, 0x0c, 0x1b, 0x10, 0xc1, 0x34, 0x00, 0x33, 0x06, 0xc4, 0x4b, 0xe0,
  0x81, 0xce, 0xdc, 0xca, 0x2c, 0xc1, 0x33, 0x63, 0x40, 0xc0, 0x44, 0xa3,
  0x33, 0xb7, 0x42, 0x71, 0x01, 0x80, 0x19, 0x03, 0xa2, 0x14, 0xe6, 0x60,
  0x56, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xfc, 0xe0,
  0xfd, 0xff, 0xff, 0xff, 0x01, 0x2f, 0x5c, 0xfe, 0xff, 0xff, 0x7f, 0xf8,
  0xf9, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x28, 0x85, 0x47, 0x56, 0x6e,
  0x65, 0x96, 0x00, 0x9a, 0x31, 0x20, 0x4a, 0xa1, 0x90, 0x95, 0x5b, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x05, 0x3f, 0x78, 0xff, 0xff, 0xff,
  0x7f, 0xc0, 0x0b, 0x97, 0xff, 0xff, 0xff, 0x1f, 0x7e, 0xfe, 0xff, 0xff,
  0x7f, 0x98, 0x31, 0x20, 0x4a, 0xe1, 0x91, 0x95, 0x5b, 0x29, 0xb0, 0x08,
  0x0f, 0x98, 0x31, 0x20, 0x4e, 0x01, 0x0d, 0x68, 0xe5, 0x56, 0x0a, 0x2c,
  0xcc, 0x03, 0x26, 0x0c, 0x00, 0xa2, 0x0b, 0x00, 0xcc, 0x18, 0x10, 0xa7,
  0xf0, 0xd0, 0xca, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xb2,
  0x1f, 0x21, 0xfe, 0xff, 0xff, 0x3f, 0xec, 0xc5, 0xcb, 0xff, 0xff, 0xff,
  0x0f, 0x66, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0xa0, 0xec, 0x07, 0x88, 0xff, 0xff, 0xff, 0x0f, 0x7b,
  0xf1, 0xf2, 0xff, 0xff, 0xff, 0x43, 0xd9, 0xff, 0xff, 0xff, 0x0f, 0x13,
  0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xfb, 0x11, 0xe2,
  0xff, 0xff, 0xff, 0xc3, 0x5e, 0xbc, 0xfc, 0xff, 0xff, 0xff, 0x60, 0xf6,
  0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xca, 0x7e, 0x80, 0xf8, 0xff, 0xff, 0xff, 0xb0, 0x17, 0x2f, 0xff,
  0xff, 0xff, 0x3f, 0x94, 0xfd, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x0c,
  0x37, 0x08, 0x65, 0x31, 0x06, 0x33, 0x06, 0x04, 0x2a, 0x60, 0xf2, 0x72,
  0x2b, 0xb3, 0x0c, 0x7a, 0x10, 0x05, 0x33, 0x06, 0x04, 0x2a, 0x34, 0xb4,
  0x72, 0x2b, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x60, 0x06, 0xec, 0xd1,
  0x1a, 0x73, 0x71, 0x1e, 0x33, 0x06, 0x84, 0x2c, 0xc8, 0x02, 0xad, 0xdc,
  0xca, 0x68, 0x42, 0x20, 0x4c, 0x18, 0x00, 0x65, 0xa4, 0x87, 0xcc, 0x18,
  0x10, 0xb2, 0x50, 0x0a, 0xb4, 0x72, 0x2b, 0x65, 0x08, 0x32, 0x61, 0x00,
  0x14, 0x4f, 0x08, 0x30, 0x63, 0x40, 0xc8, 0x82, 0x1e, 0xd0, 0xca, 0xad,
  0x14, 0x4f, 0x08, 0x30, 0x61, 0x00, 0x10, 0x5f, 0x00, 0x60, 0xc6, 0x80,
  0x90, 0x05, 0x8b, 0x56, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x94, 0x11, 0x39, 0xf1, 0xff, 0xff, 0xff, 0x61, 0x34, 0x68, 0xfe, 0xff,
  0xff, 0x7f, 0x70, 0xfb, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x68, 0x83,
  0xaf, 0x0f, 0xea, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x11,
  0x31, 0xf1, 0xff, 0xff, 0xff, 0x61, 0x34, 0x68, 0xfe, 0xff, 0xff, 0x7f,
  0x68, 0xfb, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x65, 0x44, 0x4e, 0xfc, 0xff, 0xff, 0x7f, 0x18, 0x0d,
  0x9a, 0xff, 0xff, 0xff, 0x1f, 0xdc, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x30,
  0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x19, 0x11, 0x13, 0xff,
  0xff, 0xff, 0x1f, 0x46, 0x83, 0xe6, 0xff, 0xff, 0xff, 0x87, 0xb6, 0xff,
  0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x1b, 0x04, 0x10, 0xcc, 0x18, 0x10,
  0x6f, 0x20, 0x06, 0x7d, 0x50, 0x2f, 0x15, 0xbc, 0x87, 0xce, 0x18, 0x10,
  0x6f, 0xd0, 0x06, 0x7d, 0x50, 0x2f, 0xc3, 0x0d, 0x81, 0x7b, 0x80, 0xc1,
  0x8c, 0x01, 0xf1, 0x06, 0x72, 0xd0, 0x07, 0xf5, 0x72, 0x01, 0x10, 0x33,
  0x06, 0xc4, 0x1b, 0x28, 0x7d, 0x50, 0x2f, 0x14, 0x1a, 0x00, 0x98, 0x30,
  0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x41, 0x11, 0x15, 0xff,
  0xff, 0xff, 0x1f, 0x50, 0xc3, 0xe6, 0xff, 0xff, 0xff, 0x87, 0xb7, 0xff,
  0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0x30, 0x03, 0xfc, 0xc8, 0x8d, 0xbf, 0x98, 0x8f, 0x19, 0x03, 0x22, 0x0e,
  0x98, 0x3e, 0xa8, 0x97, 0xd1, 0x84, 0x00, 0x98, 0x30, 0x00, 0x86, 0x1b,
  0x82, 0xf9, 0x08, 0x83, 0x19, 0x03, 0x22, 0x0e, 0x92, 0x3e, 0xa8, 0x97,
  0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x30, 0x83, 0xfd, 0xe0, 0x0d, 0xd1,
  0xb0, 0x8f, 0x19, 0x03, 0x22, 0x0e, 0xd2, 0xa0, 0x0f, 0xea, 0x65, 0x34,
  0x21, 0x08, 0x26, 0x0c, 0x80, 0xe1, 0x86, 0xc3, 0x3e, 0xc2, 0x60, 0xc6,
  0x80, 0x88, 0x03, 0x50, 0xe8, 0x83, 0x7a, 0xb9, 0x00, 0x88, 0x09, 0x03,
  0x60, 0xb8, 0x61, 0x08, 0xc2, 0x60, 0xc6, 0x80, 0x88, 0x83, 0x3e, 0xe8,
  0x83, 0x7a, 0x29, 0x23, 0xd0, 0x19, 0x03, 0x22, 0x0e, 0xc6, 0xa0, 0x0f,
  0xea, 0xa5, 0x22, 0xfd, 0x80, 0x19, 0x03, 0x42, 0x0e, 0xa2, 0x3e, 0xa8,
  0x97, 0x8a, 0xfa, 0x03, 0x26, 0x0c, 0x80, 0xe9, 0x06, 0x61, 0x1a, 0x66,
  0x0c, 0x88, 0x38, 0x48, 0xfa, 0xa0, 0x5e, 0xa6, 0x1b, 0x84, 0x89, 0x98,
  0x30, 0x00, 0xe8, 0x35, 0x00, 0x30, 0x63, 0x40, 0xc0, 0x41, 0xd1, 0x07,
  0xf5, 0x42, 0xb0, 0x01, 0x80, 0x19, 0x03, 0x42, 0x16, 0x1c, 0x5a, 0xb9,
  0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x6e, 0x04, 0xc7, 0xff,
  0xff, 0xff, 0x87, 0xdb, 0x20, 0xfb, 0xff, 0xff, 0xff, 0x41, 0xf4, 0xff,
  0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x94, 0x1b, 0xb9, 0xf1, 0xff, 0xff, 0xff, 0xe1, 0x36, 0xc8, 0xfe, 0xff,
  0xff, 0x7f, 0x08, 0xfd, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0xa0, 0xd8,
  0x00, 0xc0, 0x8c, 0x01, 0x31, 0x0b, 0x0f, 0xad, 0xdc, 0xca, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0x38, 0x42, 0xf6, 0xff, 0xff, 0xff, 0x03,
  0x6e, 0x88, 0xfd, 0xff, 0xff, 0xff, 0xf0, 0xf7, 0xff, 0xff, 0xff, 0xc3,
  0x84, 0x01, 0x30, 0xdc, 0x00, 0x06, 0xa2, 0x41, 0x06, 0x33, 0x06, 0x44,
  0x2e, 0x60, 0xb5, 0x72, 0x2b, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x60,
  0x06, 0x29, 0xa2, 0x1e, 0xb0, 0x21, 0x22, 0x33, 0x06, 0x44, 0x2e, 0xd0,
  0x42, 0xad, 0xdc, 0xca, 0x68, 0x42, 0x00, 0x4c, 0x18, 0x00, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0xa0, 0xec, 0x88, 0x8e, 0xff, 0xff, 0xff, 0x0f,
  0xbb, 0x31, 0xf6, 0xff, 0xff, 0xff, 0x83, 0xe9, 0xff, 0xff, 0xff, 0x0f,
  0x33, 0x06, 0x84, 0x1f, 0xb0, 0x81, 0x29, 0xf8, 0xcb, 0x68, 0x82, 0x10,
  0xcc, 0x18, 0x10, 0xb9, 0x40, 0x0b, 0xb5, 0x72, 0x2b, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0xa0, 0xf0, 0x88, 0x8e, 0xff, 0xff, 0xff, 0x0f, 0xbc,
  0x41, 0xf6, 0xff, 0xff, 0xff, 0x83, 0xe9, 0xff, 0xff, 0xff, 0x0f, 0x33,
  0x06, 0x84, 0x1f, 0xb0, 0x81, 0x29, 0xf8, 0x0b, 0xd9, 0x06, 0x00, 0x66,
  0x0c, 0x88, 0x5c, 0xd8, 0x83, 0x5a, 0xb9, 0x95, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x50, 0x7a, 0x84, 0xc7, 0xff, 0xff, 0xff, 0x87, 0xde, 0x28,
  0xfb, 0xff, 0xff, 0xff, 0x01, 0xf5, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03,
  0xc2, 0x0f, 0xd8, 0xc0, 0x14, 0xfc, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x94, 0x1e, 0xd9, 0xf1, 0xff, 0xff, 0xff, 0xa1, 0x37, 0xca, 0xfe,
  0xff, 0xff, 0x7f, 0x38, 0xfd, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xa5, 0x47, 0x7c, 0xfc, 0xff, 0xff,
  0x7f, 0xe8, 0x0d, 0xb1, 0xff, 0xff, 0xff, 0x1f, 0x50, 0xff, 0xff, 0xff,
  0x7f, 0x98, 0x31, 0x20, 0xfc, 0xa0, 0x33, 0x05, 0x7f, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0xa5, 0x47, 0x7a, 0xfc, 0xff, 0xff, 0x7f, 0xe8,
  0x0d, 0xb1, 0xff, 0xff, 0xff, 0x1f, 0x4e, 0xff, 0xff, 0xff, 0x7f, 0x98,
  0x30, 0x00, 0x86, 0x1b, 0x14, 0x13, 0x39, 0x83, 0x19, 0x03, 0x02, 0x14,
  0x28, 0x53, 0xf0, 0x97, 0xe1, 0x06, 0xe5, 0x44, 0xce, 0x60, 0xc6, 0x80,
  0x00, 0x05, 0x32, 0x30, 0x05, 0x7f, 0x29, 0x21, 0xd0, 0x19, 0x03, 0x02,
  0x14, 0x32, 0x53, 0xf0, 0x97, 0xe1, 0x86, 0xc6, 0x40, 0x83, 0x19, 0x03,
  0x02, 0x14, 0xe8, 0xc0, 0x14, 0xfc, 0xa5, 0x84, 0x40, 0x67, 0x0c, 0x08,
  0x50, 0x48, 0x03, 0x53, 0xf0, 0x97, 0xe1, 0x06, 0xe7, 0x40, 0x83, 0x19,
  0x03, 0x02, 0x14, 0x5c, 0xc1, 0x14, 0xfc, 0xa5, 0x84, 0x40, 0x67, 0x0c,
  0x08, 0x50, 0x18, 0x05, 0x53, 0xf0, 0x17, 0xf2, 0x0d, 0x00, 0xcc, 0x18,
  0x10, 0xa0, 0x50, 0x98, 0x82, 0xbf, 0x54, 0x23, 0xe8, 0x8c, 0x01, 0x91,
  0x0b, 0x78, 0x50, 0x2b, 0xb7, 0x32, 0xcb, 0x20, 0x4d, 0xc1, 0x8c, 0x01,
  0x91, 0x0b, 0x0d, 0xad, 0xdc, 0xca, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18,
  0x5c, 0x3e, 0x42, 0x1f, 0xbe, 0xf1, 0x22, 0x93, 0x44, 0x22, 0x24, 0x42,
  0x22, 0x24, 0x32, 0x63, 0x40, 0xec, 0x42, 0x65, 0x2b, 0xb7, 0x32, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0x99, 0x90, 0xf9, 0xff, 0xff, 0xff,
  0x70, 0x1e, 0x71, 0xff, 0xff, 0xff, 0x3f, 0xb8, 0xfe, 0xff, 0xff, 0xff,
  0x30, 0x63, 0x40, 0xcc, 0xc2, 0x43, 0x2b, 0xb7, 0x32, 0x9a, 0x10, 0x00,
  0x33, 0x06, 0xc4, 0x2e, 0x54, 0xb6, 0x72, 0x2b, 0x24, 0x1e, 0x00, 0x98,
  0x31, 0x20, 0x76, 0x61, 0xb2, 0x95, 0x5b, 0x99, 0x25, 0x98, 0x66, 0x0c,
  0x08, 0x5e, 0x48, 0x6c, 0xe5, 0x56, 0x06, 0x2a, 0x24, 0x42, 0x32, 0xa1,
  0x68, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x35, 0x31, 0xf3, 0xff,
  0xff, 0xff, 0x41, 0x3d, 0xe8, 0xfe, 0xff, 0xff, 0x7f, 0x88, 0xfd, 0xff,
  0xff, 0xff, 0x61, 0xc6, 0x80, 0x98, 0x85, 0x87, 0x56, 0x6e, 0x85, 0xc8,
  0x03, 0x00, 0x33, 0x06, 0x44, 0x38, 0x4c, 0x21, 0x73, 0x2b, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0xa0, 0xac, 0x89, 0xdb, 0xff, 0xff, 0xff, 0x0f,
  0xeb, 0xc1, 0xf6, 0xff, 0xff, 0xff, 0x83, 0xec, 0xff, 0xff, 0xff, 0x0f,
  0x13, 0x06, 0x00, 0x95, 0x07, 0x00, 0x66, 0x0c, 0x08, 0x71, 0x98, 0x42,
  0xe6, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x61, 0x93, 0xb7,
  0xff, 0xff, 0xff, 0x1f, 0xd8, 0x63, 0xed, 0xff, 0xff, 0xff, 0x87, 0xd9,
  0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x32, 0x0f, 0x00, 0xcc, 0x18,
  0x10, 0xe3, 0x20, 0x85, 0xcc, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x81, 0xd2, 0x26, 0x4b, 0x7b, 0xa8, 0xfd, 0xff, 0xff, 0xff, 0x40, 0xfb,
  0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x40, 0xe7, 0x01, 0x80, 0x19, 0x03,
  0x42, 0x1d, 0xbc, 0x94, 0xb9, 0x95, 0xe1, 0x06, 0x3b, 0x90, 0x11, 0x32,
  0x98, 0x31, 0x20, 0xd4, 0x81, 0x4b, 0x99, 0x5b, 0x19, 0x8e, 0x30, 0x52,
  0xc4, 0xf9, 0x66, 0x0c, 0x08, 0x75, 0x90, 0x83, 0x94, 0xb9, 0x95, 0x12,
  0x02, 0x9d, 0x31, 0x20, 0xd4, 0x21, 0x0d, 0x52, 0xe6, 0x56, 0x66, 0x19,
  0xa8, 0x2a, 0x98, 0x31, 0x20, 0xd4, 0x21, 0x0a, 0x99, 0x5b, 0xa1, 0xf5,
  0x00, 0xc0, 0x8c, 0x01, 0xc1, 0x0e, 0x9a, 0xca, 0xdc, 0xca, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0x72, 0xe2, 0xe6, 0xff, 0xff, 0xff, 0x83,
  0x7c, 0xcc, 0xfd, 0xff, 0xff, 0xff, 0x90, 0xfb, 0xff, 0xff, 0xff, 0xc3,
  0x8c, 0x01, 0x11, 0x0e, 0x53, 0xc8, 0xdc, 0x8a, 0x25, 0x89, 0x7c, 0x66,
  0x0c, 0x88, 0x76, 0x48, 0x03, 0x95, 0xb9, 0x15, 0x6a, 0x0f, 0x00, 0xcc,
  0x18, 0x10, 0xed, 0x10, 0x06, 0x2a, 0x73, 0x2b, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xa0, 0xd0, 0xc9, 0x9b, 0xff, 0xff, 0xff, 0x0f, 0xf4, 0x31,
  0xf7, 0xff, 0xff, 0xff, 0xc3, 0xee, 0xff, 0xff, 0xff, 0x0f, 0x33, 0x06,
  0x84, 0x38, 0x4c, 0x21, 0x73, 0x2b, 0xe4, 0x1e, 0x00, 0x98, 0x31, 0x20,
  0xdc, 0x41, 0x53, 0x99, 0x5b, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0xa5, 0x4e, 0xb2, 0xfa, 0x90, 0xfb, 0xff, 0xff, 0xff, 0x81, 0xf7, 0xff,
  0xff, 0xff, 0x87, 0x19, 0x03, 0x62, 0x1c, 0xa4, 0x90, 0xb9, 0x95, 0x59,
  0x82, 0x6a, 0xc6, 0x80, 0x78, 0x87, 0x46, 0x65, 0x6e, 0x65, 0xa0, 0x42,
  0xc2, 0x28, 0x1e, 0x9a, 0x06, 0x2a, 0x24, 0x84, 0xf2, 0xa1, 0x69, 0xa0,
  0x02, 0x20, 0x25, 0x0a, 0x94, 0xa6, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x50, 0xf0, 0x44, 0xce, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xa8, 0xfb, 0xff,
  0xff, 0xff, 0xe1, 0xf7, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x62, 0x1c,
  0xa4, 0x90, 0xb9, 0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xf0,
  0x24, 0xce, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xc8, 0xfb, 0xff, 0xff, 0xff,
  0xe1, 0xf7, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x22, 0x1c, 0xa6, 0x90,
  0xb9, 0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xf0, 0x04, 0xce,
  0xff, 0xff, 0xff, 0x07, 0xfc, 0xb8, 0xfb, 0xff, 0xff, 0xff, 0xe1, 0xf7,
  0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x42, 0x1c, 0xa6, 0x90, 0xb9, 0x95,
  0x7a, 0x8d, 0x31, 0x81, 0x19, 0x03, 0x82, 0x1e, 0xa2, 0x90, 0xb9, 0x15,
  0x9a, 0x0f, 0x00, 0xcc, 0x18, 0x10, 0xf5, 0x10, 0x06, 0x21, 0x73, 0x2b,
  0xc3, 0x0d, 0xa2, 0xe0, 0x23, 0x64, 0x30, 0x63, 0x40, 0xd4, 0xc3, 0x17,
  0x32, 0xb7, 0x42, 0xf5, 0x01, 0x80, 0x19, 0x03, 0xe2, 0x1e, 0xca, 0x20,
  0x64, 0x6e, 0xa5, 0x48, 0x01, 0x4c, 0x62, 0xc6, 0x80, 0xb8, 0x87, 0x31,
  0x08, 0x99, 0x5b, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x33, 0x68,
  0x13, 0x17, 0xa1, 0x0f, 0x33, 0x99, 0x31, 0x20, 0xee, 0xc1, 0x0e, 0x42,
  0xe6, 0x56, 0x46, 0x13, 0x82, 0x61, 0xc2, 0x00, 0xa8, 0x21, 0x80, 0x19,
  0x03, 0xe2, 0x1e, 0xe2, 0x20, 0x64, 0x6e, 0x65, 0xba, 0x01, 0x15, 0x02,
  0x63, 0xc6, 0x80, 0xa8, 0x07, 0x2a, 0x64, 0x6e, 0xa5, 0x92, 0x00, 0x66,
  0x0c, 0x88, 0x7a, 0x88, 0x42, 0xe6, 0x56, 0x88, 0x3f, 0x00, 0x30, 0x63,
  0x40, 0xc8, 0x83, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xca, 0xa8, 0xe8, 0xf9, 0xff, 0xff, 0xff, 0x30, 0x22, 0x7c, 0xff,
  0xff, 0xff, 0x3f, 0xa8, 0xff, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x50,
  0x7f, 0x00, 0x60, 0xc6, 0x80, 0xc8, 0x87, 0xab, 0x65, 0x6e, 0x65, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x52, 0x11, 0x03, 0x12, 0xd1, 0xfb,
  0xff, 0xff, 0xff, 0x61, 0xfd, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0x80, 0x4e, 0x6a, 0x64, 0x3f,
  0xda, 0x64, 0xc6, 0x80, 0xc8, 0x87, 0x32, 0x80, 0x99, 0x5b, 0x19, 0x4d,
  0x08, 0x86, 0x09, 0x03, 0x60, 0xb8, 0xe1, 0x4d, 0x02, 0x32, 0x98, 0x31,
  0x20, 0xf2, 0x01, 0x0c, 0x60, 0xe6, 0x56, 0x66, 0x19, 0xac, 0x2d, 0x98,
  0x31, 0x20, 0xf2, 0xa1, 0x69, 0x99, 0x5b, 0x99, 0x25, 0xb8, 0x26, 0x0c,
  0x80, 0x81, 0x0a, 0x89, 0x0c, 0xac, 0x30, 0xc8, 0x06, 0x2a, 0x24, 0x32,
  0xb0, 0xc2, 0x20, 0x1b, 0xa8, 0x00, 0xc8, 0xc0, 0x0a, 0x83, 0x6c, 0xa0,
  0x02, 0x30, 0x27, 0x2b, 0x0c, 0xb2, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x50, 0x56, 0x25, 0xd4, 0xff, 0xff, 0xff, 0x87, 0x15, 0x41, 0xfd, 0xff,
  0xff, 0xff, 0x41, 0xfe, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x62, 0x1c,
  0xa4, 0x90, 0xb9, 0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x56,
  0x05, 0xd4, 0xff, 0xff, 0xff, 0x87, 0x15, 0x51, 0xfd, 0xff, 0xff, 0xff,
  0x41, 0xfe, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x42, 0x1c, 0xa6, 0x90,
  0xb9, 0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x56, 0xe5, 0xcf,
  0xff, 0xff, 0xff, 0x87, 0x15, 0x61, 0xfd, 0xff, 0xff, 0xff, 0x41, 0xfe,
  0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x22, 0x1c, 0xa6, 0x90, 0xb9, 0x95,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x56, 0xc5, 0xcf, 0xff, 0xff,
  0xff, 0x87, 0x15, 0x09, 0xfd, 0xff, 0xff, 0xff, 0x41, 0xfe, 0xff, 0xff,
  0xff, 0x87, 0x19, 0x03, 0x22, 0x1f, 0xae, 0x96, 0xb9, 0x95, 0x52, 0x02,
  0x98, 0x31, 0x20, 0xf6, 0x01, 0x14, 0x62, 0xe6, 0x56, 0xc8, 0x44, 0x00,
  0x30, 0x63, 0x40, 0xec, 0x83, 0x15, 0x33, 0xb7, 0x32, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x4a, 0xab, 0xfc, 0xf9, 0xff, 0xff, 0xff, 0xd0, 0x22,
  0x7f, 0xff, 0xff, 0xff, 0x3f, 0xd0, 0xff, 0xff, 0xff, 0xff, 0x30, 0x61,
  0x00, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x46, 0x2a, 0x3d, 0x42,
  0x06, 0xc2, 0x8c, 0x01, 0xc1, 0x0f, 0x60, 0x10, 0x33, 0xb7, 0x42, 0x28,
  0x02, 0x80, 0x19, 0x03, 0x82, 0x1f, 0xae, 0x98, 0xb9, 0x95, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x50, 0x5e, 0x05, 0xd4, 0xff, 0xff, 0xff, 0x87,
  0x17, 0xf9, 0xfb, 0xff, 0xff, 0xff, 0xc1, 0xfe, 0xff, 0xff, 0xff, 0x87,
  0x09, 0x03, 0x60, 0x38, 0x42, 0x48, 0x13, 0xe7, 0x9b, 0x31, 0x20, 0xfa,
  0x81, 0xb3, 0x99, 0x5b, 0x99, 0x65, 0xc0, 0xb2, 0x60, 0xc6, 0x80, 0xe8,
  0x87, 0x2a, 0x66, 0x6e, 0xc5, 0x92, 0x01, 0x3e, 0x33, 0x06, 0xc4, 0x3f,
  0x78, 0x37, 0x73, 0x2b, 0xb4, 0x22, 0x00, 0x98, 0x30, 0x00, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x40, 0x91, 0x15, 0x51, 0xff, 0xff, 0xff, 0x1f,
  0x64, 0x64, 0xf6, 0xff, 0xff, 0xff, 0x87, 0xfc, 0xff, 0xff, 0xff, 0x1f,
  0x66, 0x0c, 0x88, 0x70, 0x98, 0x42, 0xe6, 0x56, 0xac, 0x28, 0xe4, 0x33,
  0x63, 0x40, 0x80, 0xc4, 0x1b, 0xdc, 0xcc, 0xad, 0xd8, 0x12, 0xc0, 0x67,
  0xc6, 0x80, 0x00, 0x89, 0x32, 0xb8, 0x99, 0x5b, 0x21, 0x17, 0x01, 0xc0,
  0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0xad, 0x90,
  0xfa, 0xff, 0xff, 0xff, 0x50, 0x23, 0xb4, 0xff, 0xff, 0xff, 0x3f, 0xf0,
  0xff, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x88, 0xc3, 0x14, 0x32, 0xb7,
  0x52, 0x0c, 0xa8, 0xc0, 0x8c, 0x01, 0x11, 0x12, 0xde, 0xcd, 0xdc, 0x0a,
  0xc1, 0x08, 0x00, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x50, 0x6e, 0xa5, 0xd4, 0xff, 0xff, 0xff, 0x87, 0x1b, 0xa1, 0xfd, 0xff,
  0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x62, 0x1c,
  0xa4, 0x90, 0xb9, 0x95, 0x59, 0x82, 0x6c, 0xc6, 0x80, 0x10, 0x89, 0xe8,
  0x66, 0x6e, 0x65, 0xa0, 0x42, 0x72, 0x30, 0x30, 0xb8, 0x06, 0x2a, 0x24,
  0x05, 0x03, 0x83, 0x6b, 0xa0, 0x02, 0x40, 0x30, 0x30, 0xb8, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x40, 0xd1, 0x95, 0x53, 0xff, 0xff, 0xff, 0x1f,
  0x74, 0x24, 0xf7, 0xff, 0xff, 0xff, 0x87, 0x60, 0xc6, 0x80, 0x10, 0x87,
  0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x5d,
  0x31, 0xf5, 0xff, 0xff, 0xff, 0x41, 0x47, 0x6e, 0xff, 0xff, 0xff, 0x7f,
  0x08, 0x66, 0x0c, 0x88, 0x71, 0x90, 0x42, 0xe6, 0x56, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x40, 0xd1, 0x95, 0x52, 0xff, 0xff, 0xff, 0x1f, 0x74,
  0x64, 0xf7, 0xff, 0xff, 0xff, 0x87, 0x60, 0xc6, 0x80, 0x08, 0x87, 0x29,
  0x64, 0x6e, 0xa5, 0xa0, 0x52, 0x81, 0x19, 0x03, 0x22, 0x1f, 0xe8, 0x00,
  0x66, 0x6e, 0x85, 0x6a, 0x04, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0xbc, 0x62, 0xea, 0xff, 0xff, 0xff, 0x03, 0x8f,
  0xc8, 0xfe, 0xff, 0xff, 0xff, 0x30, 0xcc, 0x18, 0x10, 0xf9, 0x70, 0xb5,
  0xcc, 0xad, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x19, 0xb0, 0x4a,
  0x9b, 0xcc, 0x48, 0xa9, 0xcc, 0x18, 0x10, 0xf9, 0x50, 0x06, 0x30, 0x73,
  0x2b, 0xa3, 0x09, 0xc1, 0x30, 0x61, 0x00, 0x0c, 0x37, 0x10, 0x01, 0x19,
  0xcc, 0x18, 0x10, 0xf9, 0x00, 0x06, 0x30, 0x73, 0x2b, 0xb3, 0x0c, 0x97,
  0x16, 0xcc, 0x18, 0x10, 0xf9, 0xd0, 0xb4, 0xcc, 0xad, 0xcc, 0x12, 0x6c,
  0x13, 0x06, 0xc0, 0x40, 0x85, 0x04, 0x69, 0xb4, 0x50, 0x0d, 0x54, 0x48,
  0x90, 0x46, 0x0b, 0xd5, 0x40, 0x05, 0x00, 0x69, 0xb4, 0x50, 0x8d, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x81, 0x22, 0x2e, 0xab, 0xfe, 0xff, 0xff, 0x3f,
  0x88, 0xc9, 0xf8, 0xff, 0xff, 0xff, 0x0f, 0xc9, 0x8c, 0x01, 0x11, 0x0e,
  0x53, 0xc8, 0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xe2,
  0xa2, 0xea, 0xff, 0xff, 0xff, 0x83, 0x98, 0xfc, 0xfe, 0xff, 0xff, 0xff,
  0x90, 0xcc, 0x18, 0x10, 0xe3, 0x20, 0x85, 0xcc, 0xad, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0x22, 0x2e, 0xa9, 0xfe, 0xff, 0xff, 0x3f, 0x88,
  0x49, 0xf8, 0xff, 0xff, 0xff, 0x0f, 0xc9, 0x8c, 0x01, 0x21, 0x0e, 0x53,
  0xc8, 0xdc, 0x4a, 0xe5, 0x87, 0x3a, 0xc0, 0x8c, 0x01, 0x61, 0x12, 0xb5,
  0x10, 0x32, 0xb7, 0x42, 0x3d, 0x02, 0x80, 0x19, 0x03, 0xc2, 0x24, 0xc8,
  0x21, 0x64, 0x6e, 0xa5, 0x04, 0x54, 0x81, 0x19, 0x03, 0xc2, 0x24, 0xc4,
  0x21, 0x64, 0x6e, 0x65, 0xc4, 0xa0, 0x00, 0x40, 0x10, 0x0c, 0x9c, 0x5f,
  0x91, 0x93, 0x19, 0x03, 0xc2, 0x24, 0xce, 0x20, 0x64, 0x6e, 0xa5, 0x82,
  0x58, 0x89, 0x19, 0x03, 0xc2, 0x24, 0xf4, 0x20, 0x64, 0x6e, 0x65, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xb6, 0x5e, 0x99, 0x93, 0x60, 0x98, 0x31,
  0x20, 0x4c, 0x62, 0x0c, 0x42, 0xe6, 0x56, 0x48, 0x4c, 0x00, 0x30, 0x63,
  0x40, 0x98, 0x84, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x4a, 0xba, 0xbc, 0xfa, 0xff, 0xff, 0xff, 0x90, 0x26, 0xb6, 0xff,
  0xff, 0xff, 0x3f, 0x40, 0x13, 0x06, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x64, 0xe0, 0x92, 0x27, 0x8a, 0x30, 0x63, 0x40, 0x9c, 0x44, 0x16,
  0x32, 0xb7, 0x62, 0x4b, 0x00, 0x9f, 0x19, 0x03, 0xe2, 0x24, 0xac, 0x90,
  0xb9, 0x15, 0x2a, 0x13, 0x00, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xa0, 0xb0, 0x4b, 0xac, 0xff, 0xff, 0xff, 0x0f, 0x6c, 0xd2,
  0xfe, 0xff, 0xff, 0xff, 0xc3, 0x34, 0x63, 0x40, 0x84, 0xc3, 0x14, 0x32,
  0xb7, 0x32, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd9, 0xb8, 0xf0, 0x09,
  0x53, 0xcc, 0x18, 0x10, 0x28, 0x01, 0x06, 0x21, 0x73, 0x2b, 0xd6, 0x04,
  0xf0, 0x99, 0x31, 0x20, 0x50, 0xa2, 0x0b, 0x99, 0x5b, 0x21, 0x34, 0x01,
  0xc0, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0xbb,
  0xcc, 0xfa, 0xff, 0xff, 0xff, 0xf0, 0x26, 0xee, 0xff, 0xff, 0xff, 0x3f,
  0x58, 0x33, 0x06, 0x84, 0x38, 0x4c, 0x21, 0x73, 0x2b, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0xb0, 0x91, 0xcb, 0x9f, 0x38, 0xc8, 0x8c, 0x01, 0x91,
  0x12, 0x5a, 0xc8, 0xdc, 0x4a, 0x3d, 0x01, 0xcc, 0x18, 0x10, 0x29, 0x71,
  0x85, 0xcc, 0xad, 0xd0, 0x9a, 0x00, 0x60, 0xc2, 0x00, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0x45, 0x5e, 0x6a, 0xfd, 0xff, 0xff, 0x7f, 0x90,
  0x93, 0xf7, 0xff, 0xff, 0xff, 0x1f, 0xb2, 0x19, 0x03, 0x62, 0x1c, 0xa4,
  0x90, 0xb9, 0x15, 0x62, 0x13, 0x00, 0xcc, 0x18, 0x10, 0x2c, 0xe1, 0xe5,
  0xcc, 0xad, 0x0c, 0x37, 0xec, 0xc3, 0xad, 0x90, 0xc1, 0x8c, 0x01, 0xc1,
  0x12, 0x5c, 0xce, 0xdc, 0xca, 0x2c, 0x03, 0xd7, 0x05, 0x33, 0x06, 0x04,
  0x4b, 0x44, 0x21, 0x73, 0x2b, 0xe4, 0x26, 0x00, 0x98, 0x31, 0x20, 0x5c,
  0x02, 0x14, 0x74, 0xe6, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40,
  0xa9, 0x17, 0x5d, 0xff, 0xff, 0xff, 0x1f, 0xea, 0xc4, 0xf7, 0xff, 0xff,
  0xff, 0x07, 0x30, 0x98, 0x31, 0x20, 0xc8, 0xa0, 0x5b, 0x85, 0x9e, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xa5, 0x5e, 0x72, 0xfd, 0xff, 0xff,
  0x7f, 0xa8, 0x13, 0xdf, 0xff, 0xff, 0xff, 0x1f, 0xbe, 0x09, 0x03, 0x80,
  0xde, 0x04, 0x00, 0x33, 0x06, 0x84, 0x19, 0x28, 0xab, 0xd0, 0x33, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xd8, 0x0b, 0x2d, 0xd8, 0x09, 0xef,
  0xff, 0xff, 0xff, 0x0f, 0xdd, 0x84, 0x01, 0x30, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x9d, 0xba, 0x94, 0x0a, 0x33, 0x63, 0x40, 0x9c, 0x81, 0xb3,
  0x0a, 0x3d, 0x43, 0x71, 0x02, 0x80, 0x19, 0x03, 0xe2, 0x0c, 0x98, 0x55,
  0xe8, 0x99, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xf0, 0x45, 0xd7,
  0xff, 0xff, 0xff, 0x07, 0x3c, 0xf1, 0xfd, 0xff, 0xff, 0xff, 0xe1, 0x9b,
  0x31, 0x20, 0xcc, 0x40, 0x59, 0x85, 0x9e, 0x19, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x83, 0x8e, 0x5d, 0x4e, 0x65, 0x99, 0x31, 0x20, 0xd0, 0xe0, 0x59,
  0x85, 0x9e, 0xa9, 0x60, 0x57, 0x6e, 0xc6, 0x80, 0x40, 0x83, 0x6f, 0x15,
  0x7a, 0xa6, 0x88, 0x60, 0x67, 0x0c, 0x08, 0x34, 0x60, 0x56, 0xa1, 0x67,
  0xa8, 0x4e, 0x00, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x81, 0xc2, 0x2f, 0xbd, 0xfe, 0xff, 0xff, 0x3f, 0xf0, 0x89, 0xf8, 0xff,
  0xff, 0xff, 0x0f, 0x63, 0x30, 0x63, 0x40, 0x98, 0x81, 0xb2, 0x0a, 0x3d,
  0x43, 0x76, 0x02, 0x80, 0x19, 0x03, 0x22, 0x0d, 0x8a, 0x55, 0xe8, 0x99,
  0x22, 0x89, 0x70, 0x91, 0x19, 0x03, 0xc2, 0x25, 0x22, 0x9d, 0xb9, 0x95,
  0x32, 0x89, 0x00, 0x26, 0x0c, 0x80, 0x15, 0x0c, 0x23, 0x83, 0x2e, 0xc1,
  0x84, 0x01, 0x30, 0x6c, 0x40, 0x04, 0xc6, 0x00, 0xcc, 0x18, 0x10, 0x2e,
  0xe1, 0x07, 0x3a, 0x73, 0x2b, 0x75, 0x12, 0xe4, 0x22, 0x33, 0x06, 0xc4,
  0x4b, 0x44, 0x3a, 0x73, 0x2b, 0x95, 0x12, 0x01, 0x4c, 0x18, 0x00, 0x2b,
  0x18, 0x4a, 0x66, 0x5d, 0x82, 0x09, 0x03, 0x60, 0xd8, 0x80, 0x08, 0xa6,
  0x01, 0x98, 0x31, 0x20, 0x5e, 0x02, 0x0f, 0x74, 0xe6, 0x56, 0x66, 0x09,
  0xba, 0x19, 0x03, 0x02, 0x26, 0x1a, 0x9d, 0xb9, 0x15, 0xea, 0x13, 0x00,
  0xcc, 0x18, 0x10, 0xa5, 0x30, 0x07, 0xb3, 0x72, 0x2b, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0xa0, 0x90, 0x8c, 0xbd, 0x90, 0x8a, 0xb6, 0x06, 0x33,
  0x06, 0x44, 0x29, 0x3c, 0xb2, 0x72, 0x2b, 0xb3, 0x04, 0xde, 0x8c, 0x01,
  0x51, 0x0a, 0x85, 0xac, 0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x28, 0x24, 0x63, 0x2f, 0xa4, 0xa2, 0xad, 0xc1, 0x8c, 0x01, 0x51, 0x0a,
  0x8f, 0xac, 0xdc, 0x4a, 0xb1, 0x49, 0xbb, 0xc0, 0x8c, 0x01, 0x71, 0x0a,
  0x68, 0x40, 0x2b, 0xb7, 0x52, 0x6c, 0x92, 0x2e, 0x30, 0x61, 0x00, 0x10,
  0xa8, 0x00, 0x60, 0xc6, 0x80, 0x38, 0x85, 0x87, 0x56, 0x6e, 0x65, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x93, 0x39, 0xf7, 0xff, 0xff, 0xff,
  0xe1, 0x54, 0x36, 0x39, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0x40, 0x39, 0x19, 0x73, 0xff, 0xff, 0xff, 0x1f, 0x4e, 0x65, 0x8b,
  0x83, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x93,
  0x39, 0xf7, 0xff, 0xff, 0xff, 0xe1, 0x54, 0x36, 0x39, 0x98, 0x30, 0x00,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x39, 0x19, 0x73, 0xff, 0xff,
  0xff, 0x1f, 0x4e, 0x65, 0x8b, 0x83, 0x09, 0x03, 0x60, 0xb8, 0x41, 0x88,
  0x93, 0x31, 0x98, 0x31, 0x20, 0x50, 0x01, 0x93, 0x97, 0x5b, 0x99, 0x65,
  0xd0, 0x83, 0x2f, 0x98, 0x31, 0x20, 0x50, 0xa1, 0xa1, 0x95, 0x5b, 0x19,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x33, 0xc0, 0x97, 0x5c, 0xf9, 0x93,
  0x79, 0x99, 0x31, 0x20, 0x64, 0x41, 0x16, 0x68, 0xe5, 0x56, 0x46, 0x13,
  0x02, 0x61, 0xc2, 0x00, 0x28, 0xa3, 0x5e, 0x64, 0xc6, 0x80, 0x90, 0x85,
  0x52, 0xa0, 0x95, 0x5b, 0x29, 0x43, 0x90, 0x09, 0x03, 0xa0, 0xd0, 0x44,
  0x80, 0x19, 0x03, 0x42, 0x16, 0xf4, 0x80, 0x56, 0x6e, 0xa5, 0xd0, 0x44,
  0x80, 0x09, 0x03, 0x80, 0x50, 0x05, 0x00, 0x33, 0x06, 0x84, 0x2c, 0x58,
  0xb4, 0x72, 0x2b, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xbc, 0x4c,
  0xbb, 0xff, 0xff, 0xff, 0x0f, 0xaf, 0x02, 0x06, 0x7a, 0x30, 0x63, 0x40,
  0xb4, 0xc1, 0xd7, 0x07, 0xf5, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0xca, 0xcb, 0xb0, 0xfb, 0xff, 0xff, 0xff, 0xf0, 0x2a, 0x60, 0x90, 0x07,
  0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0x2f, 0xd3,
  0xee, 0xff, 0xff, 0xff, 0xc3, 0xab, 0x80, 0x81, 0x1e, 0x4c, 0x18, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xbc, 0x0c, 0xbb, 0xff, 0xff,
  0xff, 0x0f, 0xaf, 0x02, 0x06, 0x79, 0x30, 0x61, 0x00, 0xd8, 0x20, 0x80,
  0x60, 0xc6, 0x80, 0x78, 0x03, 0x31, 0xe8, 0x83, 0x7a, 0xa9, 0x60, 0x5f,
  0x74, 0xc6, 0x80, 0x78, 0x83, 0x36, 0xe8, 0x83, 0x7a, 0x19, 0x6e, 0x08,
  0xf4, 0x05, 0x0c, 0x66, 0x0c, 0x88, 0x37, 0x90, 0x83, 0x3e, 0xa8, 0x97,
  0x0b, 0x80, 0x98, 0x31, 0x20, 0xde, 0x40, 0xe9, 0x83, 0x7a, 0xa1, 0x56,
  0x01, 0xc0, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0a,
  0xcd, 0xc0, 0xfb, 0xff, 0xff, 0xff, 0x40, 0x2b, 0x62, 0xb0, 0x07, 0x13,
  0x06, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x98, 0x01, 0xc9, 0x94,
  0xcb, 0xaa, 0xfc, 0xcb, 0x8c, 0x01, 0x11, 0x07, 0x4c, 0x1f, 0xd4, 0xcb,
  0x68, 0x42, 0x00, 0x4c, 0x18, 0x00, 0xc3, 0x0d, 0xc1, 0xbf, 0x84, 0xc1,
  0x8c, 0x01, 0x11, 0x07, 0x49, 0x1f, 0xd4, 0xcb, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x98, 0xc1, 0xc9, 0xa0, 0x8b, 0xab, 0x88, 0xcc, 0x8c, 0x01,
  0x11, 0x07, 0x69, 0xd0, 0x07, 0xf5, 0x32, 0x9a, 0x10, 0x04, 0x13, 0x06,
  0xc0, 0x70, 0xc3, 0x21, 0x32, 0x61, 0x30, 0x63, 0x40, 0xc4, 0x01, 0x28,
  0xf4, 0x41, 0xbd, 0x5c, 0x00, 0xc4, 0x84, 0x01, 0x30, 0xdc, 0x30, 0x04,
  0x61, 0x30, 0x63, 0x40, 0xc4, 0x41, 0x1f, 0xf4, 0x41, 0xbd, 0x94, 0x11,
  0xe8, 0x8c, 0x01, 0x11, 0x07, 0x63, 0xd0, 0x07, 0xf5, 0x52, 0x91, 0xc9,
  0xc0, 0x8c, 0x01, 0x21, 0x07, 0x51, 0x1f, 0xd4, 0x4b, 0x45, 0x29, 0x03,
  0x13, 0x06, 0xc0, 0x74, 0x83, 0x30, 0x0d, 0x33, 0x06, 0x44, 0x1c, 0x24,
  0x7d, 0x50, 0x2f, 0xd3, 0x0d, 0xc2, 0x44, 0x4c, 0x18, 0x00, 0xb4, 0x2b,
  0x00, 0x98, 0x31, 0x20, 0xe0, 0xa0, 0xe8, 0x83, 0x7a, 0x21, 0x5e, 0x01,
  0xc0, 0x8c, 0x01, 0x21, 0x0b, 0x0e, 0xad, 0xdc, 0xca, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0x63, 0xe3, 0xef, 0xff, 0xff, 0xff, 0xc3, 0xb8,
  0xc0, 0x81, 0x2b, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0xa0, 0x8c, 0x4d, 0xbf, 0xff, 0xff, 0xff, 0x0f, 0xe3, 0x02, 0x07, 0xad,
  0x30, 0x61, 0x00, 0x50, 0xaf, 0x00, 0x60, 0xc6, 0x80, 0x98, 0x85, 0x87,
  0x56, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xb2, 0x81,
  0x03, 0x72, 0x71, 0x83, 0x55, 0x98, 0x30, 0x00, 0x86, 0x1b, 0xc0, 0xc0,
  0x55, 0xc8, 0x60, 0xc6, 0x80, 0xc8, 0x05, 0xac, 0x56, 0x6e, 0x65, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0xa0, 0x66, 0xec, 0x85, 0x57, 0x5c,
  0x66, 0xc6, 0x80, 0xc8, 0x05, 0x5a, 0xa8, 0x95, 0x5b, 0x19, 0x4d, 0x08,
  0x80, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0xb3,
  0x01, 0xf9, 0xff, 0xff, 0xff, 0xe1, 0x5c, 0xde, 0x40, 0x16, 0x66, 0x0c,
  0x08, 0x3f, 0x60, 0x03, 0x53, 0xf0, 0x97, 0xd1, 0x04, 0x21, 0x98, 0x31,
  0x20, 0x72, 0x81, 0x16, 0x6a, 0xe5, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0x40, 0x41, 0x1b, 0x90, 0xff, 0xff, 0xff, 0x1f, 0xd0, 0x05, 0x0e,
  0x64, 0x61, 0xc6, 0x80, 0xf0, 0x03, 0x36, 0x30, 0x05, 0x7f, 0x21, 0x71,
  0x01, 0xc0, 0x8c, 0x01, 0x91, 0x0b, 0x7b, 0x50, 0x2b, 0xb7, 0x32, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0xda, 0x88, 0xfc, 0xff, 0xff, 0xff,
  0x90, 0x2e, 0x71, 0x40, 0x0b, 0x33, 0x06, 0x84, 0x1f, 0xb0, 0x81, 0x29,
  0xf8, 0xcb, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0x69, 0x13, 0xf2,
  0xff, 0xff, 0xff, 0x43, 0xba, 0xc4, 0xc1, 0x2c, 0x4c, 0x18, 0x00, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xa4, 0x0d, 0xc9, 0xff, 0xff, 0xff,
  0x0f, 0xe9, 0xe2, 0x06, 0xb4, 0x30, 0x63, 0x40, 0xf8, 0x41, 0x67, 0x0a,
  0xfe, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4a, 0xda, 0x8c, 0xfc,
  0xff, 0xff, 0xff, 0x90, 0x2e, 0x6e, 0x30, 0x0b, 0x13, 0x06, 0xc0, 0x70,
  0x83, 0x22, 0x33, 0x67, 0x30, 0x63, 0x40, 0x80, 0x02, 0x65, 0x0a, 0xfe,
  0x32, 0xdc, 0xa0, 0xcc, 0xcc, 0x19, 0xcc, 0x18, 0x10, 0xa0, 0x40, 0x06,
  0xa6, 0xe0, 0x2f, 0x25, 0x04, 0x3a, 0x63, 0x40, 0x80, 0x42, 0x66, 0x0a,
  0xfe, 0x32, 0xdc, 0xd0, 0x18, 0x68, 0x30, 0x63, 0x40, 0x80, 0x02, 0x1d,
  0x98, 0x82, 0xbf, 0x94, 0x10, 0xe8, 0x8c, 0x01, 0x01, 0x0a, 0x69, 0x60,
  0x0a, 0xfe, 0x32, 0xdc, 0xe0, 0x1c, 0x68, 0x30, 0x63, 0x40, 0x80, 0x82,
  0x2b, 0x98, 0x82, 0xbf, 0x94, 0x10, 0xe8, 0x8c, 0x01, 0x01, 0x0a, 0xa3,
  0x60, 0x0a, 0xfe, 0x42, 0xea, 0x02, 0x80, 0x19, 0x03, 0x02, 0x14, 0x0a,
  0x53, 0xf0, 0x97, 0x6a, 0x04, 0x9d, 0x31, 0x20, 0x72, 0x01, 0x0f, 0x6a,
  0xe5, 0x56, 0x66, 0x19, 0xc0, 0x20, 0x0c, 0x82, 0x19, 0x03, 0x22, 0x17,
  0x1a, 0x5a, 0xb9, 0x95, 0x11, 0x83, 0x06, 0x00, 0x41, 0x30, 0xb8, 0xd4,
  0x06, 0x64, 0xd4, 0x65, 0x67, 0x26, 0x09, 0x66, 0x60, 0x06, 0x66, 0x60,
  0x66, 0xc6, 0x80, 0xd8, 0x85, 0xca, 0x56, 0x6e, 0x65, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x94, 0xb9, 0x51, 0xf9, 0xff, 0xff, 0xff, 0x61, 0x5e,
  0xfa, 0x40, 0x17, 0x66, 0x0c, 0x88, 0x59, 0x78, 0x68, 0xe5, 0x56, 0x46,
  0x13, 0x02, 0x60, 0xc6, 0x80, 0xd8, 0x85, 0xca, 0x56, 0x6e, 0x85, 0xdc,
  0x05, 0x00, 0x33, 0x06, 0xc4, 0x2e, 0x4c, 0xb6, 0x72, 0x2b, 0xb3, 0x04,
  0x61, 0x30, 0x63, 0x40, 0xf0, 0x42, 0x62, 0x2b, 0xb7, 0x32, 0x50, 0x21,
  0x11, 0x60, 0xe0, 0x63, 0xdf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28,
  0x76, 0xc3, 0xf2, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x80, 0x42, 0x2f, 0xcc,
  0x18, 0x10, 0xb3, 0xf0, 0xd0, 0xca, 0xad, 0x10, 0xbc, 0x00, 0x60, 0xc6,
  0x80, 0x08, 0x87, 0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x94, 0xbb, 0xd1, 0x83, 0x7b, 0xc1, 0x03, 0x5f, 0x98, 0x30, 0x00,
  0x28, 0x5e, 0x00, 0x30, 0x63, 0x40, 0x88, 0xc3, 0x14, 0x32, 0xb7, 0x32,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0a, 0xde, 0xec, 0x01, 0xbe, 0xdc,
  0xc1, 0x2f, 0x4c, 0x18, 0x00, 0x24, 0x2f, 0x00, 0x98, 0x31, 0x20, 0xc6,
  0x41, 0x0a, 0x99, 0x5b, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x25,
  0x6f, 0x6e, 0x22, 0x5f, 0xec, 0x00, 0x1c, 0x26, 0x0c, 0x00, 0x9a, 0x17,
  0x00, 0xcc, 0x18, 0x10, 0xea, 0xe0, 0xa5, 0xcc, 0xad, 0x0c, 0x37, 0xd8,
  0x81, 0xcf, 0x90, 0xc1, 0x8c, 0x01, 0xa1, 0x0e, 0x5c, 0xca, 0xdc, 0xca,
  0x70, 0x84, 0x51, 0x33, 0xce, 0x37, 0x63, 0x40, 0xa8, 0x83, 0x1c, 0xa4,
  0xcc, 0xad, 0x94, 0x10, 0xe8, 0x8c, 0x01, 0xa1, 0x0e, 0x69, 0x90, 0x32,
  0xb7, 0x32, 0xcb, 0x20, 0x06, 0x63, 0x10, 0xcc, 0x18, 0x10, 0xea, 0x10,
  0x85, 0xcc, 0xad, 0xd0, 0xbd, 0x00, 0x60, 0xc6, 0x80, 0x60, 0x07, 0x4d,
  0x65, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xbf, 0xa1,
  0xf9, 0xff, 0xff, 0xff, 0xc1, 0x5f, 0xfe, 0xa0, 0x1c, 0x66, 0x0c, 0x88,
  0x70, 0x98, 0x42, 0xe6, 0x56, 0x2c, 0x49, 0xe4, 0x33, 0x63, 0x40, 0xb4,
  0x43, 0x1a, 0xa8, 0xcc, 0xad, 0x50, 0xbe, 0x00, 0x60, 0xc6, 0x80, 0x68,
  0x87, 0x30, 0x50, 0x99, 0x5b, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0x05, 0x74, 0x6a, 0xfe, 0xff, 0xff, 0x7f, 0x00, 0x99, 0x3f, 0x38, 0x87,
  0x19, 0x03, 0x42, 0x1c, 0xa6, 0x90, 0xb9, 0x15, 0xd2, 0x17, 0x00, 0xcc,
  0x18, 0x10, 0xee, 0xa0, 0xa9, 0xcc, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x81, 0x12, 0x3a, 0x65, 0x11, 0x32, 0x7e, 0x80, 0x0e, 0x33, 0x06,
  0xc4, 0x38, 0x48, 0x21, 0x73, 0x2b, 0xb3, 0x04, 0x63, 0x30, 0x63, 0x40,
  0xbc, 0x43, 0xa3, 0x32, 0xb7, 0x32, 0x50, 0x21, 0x61, 0x62, 0x40, 0x67,
  0x61, 0x30, 0x50, 0x21, 0x21, 0x62, 0x60, 0x67, 0x61, 0x30, 0x50, 0x01,
  0xf0, 0x9a, 0x18, 0xe0, 0x5a, 0x18, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x81, 0x42, 0x3a, 0x38, 0xff, 0xff, 0xff, 0x3f, 0x90, 0x4c, 0x28, 0xac,
  0xc3, 0x8c, 0x01, 0x31, 0x0e, 0x52, 0xc8, 0xdc, 0xca, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0xa4, 0x73, 0xf3, 0xff, 0xff, 0xff, 0x03, 0xc9,
  0x94, 0xc2, 0x3a, 0xcc, 0x18, 0x10, 0xe1, 0x30, 0x85, 0xcc, 0xad, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x42, 0x3a, 0x36, 0xff, 0xff, 0xff,
  0x3f, 0x90, 0xcc, 0x28, 0xac, 0xc3, 0x8c, 0x01, 0x21, 0x0e, 0x53, 0xc8,
  0xdc, 0x4a, 0xed, 0xca, 0xdb, 0xc0, 0x8c, 0x01, 0x41, 0x0f, 0x51, 0xc8,
  0xdc, 0x0a, 0xfd, 0x0b, 0x00, 0x66, 0x0c, 0x88, 0x7a, 0x08, 0x83, 0x90,
  0xb9, 0x95, 0xe1, 0x06, 0x51, 0x50, 0x1b, 0x32, 0x98, 0x31, 0x20, 0xea,
  0xe1, 0x0b, 0x99, 0x5b, 0xa1, 0x90, 0x01, 0xc0, 0x8c, 0x01, 0x71, 0x0f,
  0x65, 0x10, 0x32, 0xb7, 0x52, 0xa4, 0xc0, 0x36, 0x31, 0x63, 0x40, 0xdc,
  0xc3, 0x18, 0x84, 0xcc, 0xad, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81,
  0x19, 0xe4, 0x8d, 0xce, 0x80, 0x8c, 0xdc, 0xcc, 0x18, 0x10, 0xf7, 0x60,
  0x07, 0x21, 0x73, 0x2b, 0xa3, 0x09, 0xc1, 0x30, 0x61, 0x00, 0xd4, 0x10,
  0xc0, 0x8c, 0x01, 0x71, 0x0f, 0x71, 0x10, 0x32, 0xb7, 0x32, 0xdd, 0x80,
  0x0a, 0x81, 0x31, 0x63, 0x40, 0xd4, 0x03, 0x15, 0x32, 0xb7, 0x52, 0x49,
  0x00, 0x33, 0x06, 0x44, 0x3d, 0x44, 0x21, 0x73, 0x2b, 0x84, 0x32, 0x00,
  0x98, 0x31, 0x20, 0xe4, 0x41, 0x0a, 0x99, 0x5b, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0xe5, 0x75, 0xc0, 0xfe, 0xff, 0xff, 0x7f, 0x78, 0x19,
  0x54, 0xb0, 0x87, 0x09, 0x03, 0x80, 0x52, 0x06, 0x00, 0x33, 0x06, 0x44,
  0x3e, 0x5c, 0x2d, 0x73, 0x2b, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0,
  0xc0, 0x8e, 0x5b, 0xc0, 0x8c, 0x29, 0xdc, 0xc3, 0x84, 0x01, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x66, 0x00, 0x3a, 0x61, 0x73, 0x32, 0x79,
  0x33, 0x63, 0x40, 0xe4, 0x43, 0x19, 0xc0, 0xcc, 0xad, 0x8c, 0x26, 0x04,
  0xc3, 0x84, 0x01, 0x30, 0xdc, 0xb0, 0x37, 0x01, 0x19, 0xcc, 0x18, 0x10,
  0xf9, 0x00, 0x06, 0x30, 0x73, 0x2b, 0xb3, 0x0c, 0x64, 0x90, 0x06, 0xc1,
  0x8c, 0x01, 0x91, 0x0f, 0x4d, 0xcb, 0xdc, 0xca, 0x2c, 0x41, 0x19, 0x4c,
  0x18, 0x00, 0x03, 0x15, 0x12, 0x19, 0x90, 0x41, 0x18, 0x9c, 0xc1, 0x40,
  0x85, 0x44, 0x06, 0x64, 0x10, 0x06, 0x67, 0x30, 0x50, 0x01, 0x90, 0x01,
  0x19, 0x84, 0xc1, 0x19, 0x0c, 0x54, 0x00, 0xfe, 0x46, 0x06, 0x61, 0x70,
  0x06, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xdc, 0xce, 0xd9, 0xff,
  0xff, 0xff, 0x0f, 0x37, 0x43, 0x0b, 0xfe, 0x30, 0x63, 0x40, 0x8c, 0x83,
  0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0xed,
  0x98, 0xfd, 0xff, 0xff, 0xff, 0x70, 0x33, 0xb6, 0xe0, 0x0f, 0x33, 0x06,
  0x84, 0x38, 0x4c, 0x21, 0x73, 0x2b, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0xa0, 0xdc, 0x4e, 0xd9, 0xff, 0xff, 0xff, 0x0f, 0x37, 0x83, 0x0b, 0xfe,
  0x30, 0x63, 0x40, 0x84, 0xc3, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0xca, 0xed, 0x90, 0xfd, 0xff, 0xff, 0xff, 0x70, 0x33,
  0xad, 0xe0, 0x0f, 0x33, 0x06, 0x44, 0x3e, 0x5c, 0x2d, 0x73, 0x2b, 0xa5,
  0x04, 0x30, 0x63, 0x40, 0xec, 0x03, 0x28, 0xc4, 0xcc, 0xad, 0x90, 0xcc,
  0x00, 0x60, 0xc6, 0x80, 0xd8, 0x07, 0x2b, 0x66, 0x6e, 0x65, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x94, 0xdc, 0x29, 0xfb, 0xff, 0xff, 0xff, 0x21,
  0x67, 0x56, 0x01, 0x24, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0xc8, 0x60, 0x27, 0x6d, 0xc8, 0x40, 0x98, 0x31, 0x20, 0xf8, 0x01,
  0x0c, 0x62, 0xe6, 0x56, 0x88, 0x66, 0x00, 0x30, 0x63, 0x40, 0xf0, 0xc3,
  0x15, 0x33, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0xee,
  0x98, 0xfd, 0xff, 0xff, 0xff, 0xb0, 0x33, 0xab, 0x20, 0x12, 0x13, 0x06,
  0xc0, 0x70, 0x84, 0x50, 0x37, 0xce, 0x37, 0x63, 0x40, 0xf4, 0x03, 0x67,
  0x33, 0xb7, 0x32, 0xcb, 0x60, 0x06, 0x67, 0x10, 0xcc, 0x18, 0x10, 0xfd,
  0x50, 0xc5, 0xcc, 0xad, 0x58, 0x32, 0xc0, 0x67, 0xc6, 0x80, 0xf8, 0x07,
  0xef, 0x66, 0x6e, 0x85, 0x6e, 0x06, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0xbe, 0x83, 0xf6, 0xff, 0xff, 0xff, 0x83,
  0xcf, 0xfc, 0x42, 0x49, 0xcc, 0x18, 0x10, 0xe1, 0x30, 0x85, 0xcc, 0xad,
  0x58, 0x51, 0xc8, 0x67, 0xc6, 0x80, 0x00, 0x89, 0x37, 0xb8, 0x99, 0x5b,
  0xb1, 0x25, 0x80, 0xcf, 0x8c, 0x01, 0x01, 0x12, 0x65, 0x70, 0x33, 0xb7,
  0x42, 0x3a, 0x03, 0x80, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x94, 0xf0, 0x51, 0xfb, 0xff, 0xff, 0xff, 0x21, 0x6c, 0xc0, 0x01,
  0x25, 0x66, 0x0c, 0x08, 0x71, 0x98, 0x42, 0xe6, 0x56, 0x8a, 0x61, 0x1d,
  0x98, 0x31, 0x20, 0x42, 0xc2, 0xbb, 0x99, 0x5b, 0x21, 0x9e, 0x01, 0xc0,
  0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0xf8, 0xac,
  0xfd, 0xff, 0xff, 0xff, 0x30, 0x36, 0xe0, 0xa0, 0x12, 0x33, 0x06, 0xc4,
  0x38, 0x48, 0x21, 0x73, 0x2b, 0xb3, 0x04, 0x67, 0x30, 0x63, 0x40, 0x88,
  0x44, 0x74, 0x33, 0xb7, 0x32, 0x50, 0x21, 0x39, 0x66, 0x00, 0x06, 0x65,
  0x30, 0x50, 0x21, 0x29, 0x66, 0x00, 0x06, 0x65, 0x30, 0x50, 0x01, 0x20,
  0x66, 0x00, 0x06, 0x65, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8a,
  0xf9, 0xb4, 0xfd, 0xff, 0xff, 0xff, 0x60, 0x36, 0xe5, 0xd0, 0x12, 0x33,
  0x06, 0x84, 0x38, 0x4c, 0x21, 0x73, 0x2b, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0xa0, 0x98, 0x0f, 0xdb, 0xff, 0xff, 0xff, 0x0f, 0x66, 0x33, 0x0e,
  0x2d, 0x31, 0x63, 0x40, 0x8c, 0x83, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x8a, 0xf9, 0xac, 0xfd, 0xff, 0xff, 0xff, 0x60,
  0x36, 0xe7, 0xd0, 0x12, 0x33, 0x06, 0x44, 0x38, 0x4c, 0x21, 0x73, 0x2b,
  0x05, 0xc5, 0x0e, 0xcc, 0x18, 0x10, 0xf9, 0x40, 0x07, 0x30, 0x73, 0x2b,
  0x14, 0x36, 0x00, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0x40, 0x41, 0x1f, 0xb6, 0xff, 0xff, 0xff, 0x1f, 0xd0, 0xc6, 0x17, 0x5e,
  0x62, 0xc6, 0x80, 0xc8, 0x87, 0xab, 0x65, 0x6e, 0x65, 0xc4, 0xe0, 0x00,
  0x40, 0x10, 0x0c, 0xcc, 0x00, 0x77, 0xf2, 0xe6, 0x67, 0x62, 0x67, 0xc6,
  0x80, 0xc8, 0x87, 0x32, 0x80, 0x99, 0x5b, 0x19, 0x4d, 0x08, 0x86, 0x09,
  0x03, 0x60, 0xb8, 0x81, 0x08, 0xc8, 0x60, 0xc6, 0x80, 0xc8, 0x07, 0x30,
  0x80, 0x99, 0x5b, 0x99, 0x65, 0x28, 0x03, 0x34, 0x08, 0x66, 0x0c, 0x88,
  0x7c, 0x68, 0x5a, 0xe6, 0x56, 0x66, 0x09, 0xd2, 0x60, 0xc2, 0x00, 0x18,
  0xa8, 0x90, 0x20, 0x34, 0xa0, 0x85, 0x31, 0x18, 0xa8, 0x90, 0x20, 0x34,
  0xa0, 0x85, 0x31, 0x18, 0xa8, 0x00, 0x20, 0x34, 0xa0, 0x85, 0x31, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xc5, 0x7d, 0xe2, 0xfe, 0xff, 0xff,
  0x7f, 0x70, 0x9b, 0x77, 0xa8, 0x89, 0x19, 0x03, 0x22, 0x1c, 0xa6, 0x90,
  0xb9, 0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xdc, 0x07, 0xee,
  0xff, 0xff, 0xff, 0x07, 0xb7, 0x59, 0x87, 0x9a, 0x98, 0x31, 0x20, 0xc6,
  0x41, 0x0a, 0x99, 0x5b, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xc5,
  0x7d, 0xde, 0xfe, 0xff, 0xff, 0x7f, 0x70, 0x9b, 0x76, 0xa8, 0x89, 0x19,
  0x03, 0x42, 0x1c, 0xa6, 0x90, 0xb9, 0x95, 0x2a, 0x19, 0x75, 0x80, 0x19,
  0x03, 0xc2, 0x24, 0x6a, 0x21, 0x64, 0x6e, 0x85, 0xd2, 0x06, 0x00, 0x33,
  0x06, 0x84, 0x49, 0x90, 0x43, 0xc8, 0xdc, 0x4a, 0x09, 0xb4, 0x03, 0x33,
  0x06, 0x84, 0x49, 0x88, 0x43, 0xc8, 0xdc, 0xca, 0x88, 0x41, 0x01, 0x80,
  0x20, 0x18, 0x38, 0xeb, 0xe3, 0x37, 0x33, 0x06, 0x84, 0x49, 0x9c, 0x41,
  0xc8, 0xdc, 0x4a, 0x05, 0xbd, 0x13, 0x33, 0x06, 0x84, 0x49, 0xe8, 0x41,
  0xc8, 0xdc, 0xca, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x6c, 0xe9, 0xf3,
  0x37, 0xc1, 0x30, 0x63, 0x40, 0x98, 0xc4, 0x18, 0x84, 0xcc, 0xad, 0x90,
  0xdb, 0x00, 0x60, 0xc6, 0x80, 0x30, 0x09, 0x29, 0x64, 0x6e, 0x65, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0xfa, 0xa9, 0xfb, 0xff, 0xff, 0xff,
  0xa1, 0x6e, 0xc4, 0x81, 0x27, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xc8, 0xd8, 0xa7, 0x74, 0x14, 0x61, 0xc6, 0x80, 0x38, 0x89,
  0x2c, 0x64, 0x6e, 0xc5, 0x96, 0x00, 0x3e, 0x33, 0x06, 0xc4, 0x49, 0x58,
  0x21, 0x73, 0x2b, 0x14, 0x37, 0x00, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x40, 0xc1, 0x9f, 0xbb, 0xff, 0xff, 0xff, 0x1f, 0xf0,
  0x26, 0x1f, 0x7e, 0x62, 0xc6, 0x80, 0x08, 0x87, 0x29, 0x64, 0x6e, 0x65,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xb2, 0xf7, 0x41, 0x1d, 0xa6, 0x98,
  0x31, 0x20, 0x50, 0x02, 0x0c, 0x42, 0xe6, 0x56, 0xac, 0x09, 0xe0, 0x33,
  0x63, 0x40, 0xa0, 0x44, 0x17, 0x32, 0xb7, 0x42, 0x74, 0x03, 0x80, 0x09,
  0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0xfd, 0xc9, 0xfb,
  0xff, 0xff, 0xff, 0x61, 0x6f, 0xf4, 0x41, 0x2c, 0x66, 0x0c, 0x08, 0x71,
  0x98, 0x42, 0xe6, 0x56, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60, 0x83,
  0x9f, 0xd5, 0x71, 0x90, 0x19, 0x03, 0x22, 0x25, 0xb4, 0x90, 0xb9, 0x95,
  0x7a, 0x02, 0x98, 0x31, 0x20, 0x52, 0xe2, 0x0a, 0x99, 0x5b, 0xa1, 0xbb,
  0x01, 0xc0, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8a,
  0xff, 0xec, 0xfd, 0xff, 0xff, 0xff, 0xe0, 0x37, 0xfb, 0x50, 0x16, 0x33,
  0x06, 0xc4, 0x38, 0x48, 0x21, 0x73, 0x2b, 0x84, 0x37, 0x00, 0x98, 0x31,
  0x20, 0x58, 0xc2, 0xcb, 0x99, 0x5b, 0x19, 0x6e, 0xd8, 0x87, 0xf1, 0x21,
  0x83, 0x19, 0x03, 0x82, 0x25, 0xb8, 0x9c, 0xb9, 0x95, 0x59, 0x06, 0x35,
  0x58, 0x83, 0x60, 0xc6, 0x80, 0x60, 0x89, 0x28, 0x64, 0x6e, 0x85, 0xf4,
  0x06, 0x00, 0x33, 0x06, 0x84, 0x4b, 0x80, 0x82, 0xce, 0xdc, 0xca, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0x21, 0x04, 0xfa, 0xff, 0xff, 0xff,
  0x43, 0xe8, 0xa8, 0x03, 0x5b, 0xcc, 0x18, 0x10, 0x64, 0xd0, 0xad, 0x42,
  0xcf, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x12, 0x42, 0x7f, 0xff,
  0xff, 0xff, 0x3f, 0x84, 0x8e, 0x3a, 0xac, 0xc5, 0x84, 0x01, 0x40, 0x7b,
  0x03, 0x80, 0x19, 0x03, 0xc2, 0x0c, 0x94, 0x55, 0xe8, 0x99, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x50, 0x44, 0x08, 0x3c, 0x44, 0x07, 0x1d, 0xd2,
  0x62, 0xc2, 0x00, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xce, 0x7e,
  0x62, 0x87, 0x99, 0x31, 0x20, 0xce, 0xc0, 0x59, 0x85, 0x9e, 0xa1, 0xbe,
  0x01, 0xc0, 0x8c, 0x01, 0x71, 0x06, 0xcc, 0x2a, 0xf4, 0xcc, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0x24, 0x04, 0xfa, 0xff, 0xff, 0xff, 0x03,
  0xe9, 0xa8, 0xc3, 0x5a, 0xcc, 0x18, 0x10, 0x66, 0xa0, 0xac, 0x42, 0xcf,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x87, 0x3f, 0xb3, 0xb3, 0xcc,
  0x18, 0x10, 0x68, 0xf0, 0xac, 0x42, 0xcf, 0x54, 0x70, 0x3e, 0x37, 0x63,
  0x40, 0xa0, 0xc1, 0xb7, 0x0a, 0x3d, 0x53, 0x44, 0xb0, 0x33, 0x06, 0x04,
  0x1a, 0x30, 0xab, 0xd0, 0x33, 0x14, 0x3a, 0x00, 0x98, 0x30, 0x00, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x41, 0xa1, 0xd1, 0xff, 0xff, 0xff,
  0x1f, 0x50, 0xc7, 0x1d, 0xde, 0x62, 0xc6, 0x80, 0x30, 0x03, 0x65, 0x15,
  0x7a, 0x86, 0x44, 0x07, 0x00, 0x33, 0x06, 0x44, 0x1a, 0x14, 0xab, 0xd0,
  0x33, 0x45, 0x12, 0xed, 0x23, 0x33, 0x06, 0x84, 0x4b, 0x44, 0x3a, 0x73,
  0x2b, 0x65, 0x12, 0x01, 0x4c, 0x18, 0x00, 0x2b, 0x18, 0x5e, 0x88, 0x7e,
  0x82, 0x09, 0x03, 0x60, 0xd8, 0x80, 0x08, 0x8c, 0x01, 0x98, 0x31, 0x20,
  0x5c, 0xc2, 0x0f, 0x74, 0xe6, 0x56, 0xea, 0x24, 0xe0, 0x47, 0x66, 0x0c,
  0x88, 0x97, 0x88, 0x74, 0xe6, 0x56, 0x2a, 0x25, 0x02, 0x98, 0x30, 0x00,
  0x56, 0x30, 0xc4, 0xd0, 0xfd, 0x04, 0x13, 0x06, 0xc0, 0xb0, 0x01, 0x11,
  0x4c, 0x03, 0x30, 0x63, 0x40, 0xbc, 0x04, 0x1e, 0xe8, 0xcc, 0xad, 0xcc,
  0x12, 0xac, 0xc1, 0x8c, 0x01, 0x01, 0x13, 0x8d, 0xce, 0xdc, 0x0a, 0xa5,
  0x0e, 0x00, 0x66, 0x0c, 0x88, 0x52, 0x98, 0x83, 0x59, 0xb9, 0x95, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x60, 0x68, 0x46, 0x60, 0xc7, 0x2c,
  0xee, 0x62, 0xc6, 0x80, 0x28, 0x85, 0x47, 0x56, 0x6e, 0x65, 0x96, 0x80,
  0x0d, 0x66, 0x0c, 0x88, 0x52, 0x28, 0x64, 0xe5, 0x56, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x40, 0x81, 0xa1, 0x19, 0x81, 0x1d, 0xb3, 0xb8, 0x8b,
  0x19, 0x03, 0xa2, 0x14, 0x1e, 0x59, 0xb9, 0x95, 0xc2, 0x9b, 0xfc, 0x81,
  0x19, 0x03, 0xe2, 0x14, 0xd0, 0x80, 0x56, 0x6e, 0xa5, 0xf0, 0x86, 0x7e,
  0x60, 0xc2, 0x00, 0x20, 0xd6, 0x01, 0xc0, 0x8c, 0x01, 0x71, 0x0a, 0x0f,
  0xad, 0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0x33, 0xd4,
  0xfa, 0xff, 0xff, 0xff, 0xc3, 0xec, 0x9c, 0x85, 0x5f, 0x4c, 0x18, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xcc, 0x10, 0xeb, 0xff, 0xff,
  0xff, 0x0f, 0xb3, 0x73, 0x16, 0x7d, 0x31, 0x61, 0x00, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0x32, 0x43, 0xad, 0xff, 0xff, 0xff, 0x3f, 0xcc,
  0xce, 0x59, 0xf8, 0xc5, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xca, 0x0c, 0xb1, 0xfe, 0xff, 0xff, 0xff, 0x30, 0x3b, 0x67, 0xd1,
  0x17, 0x13, 0x06, 0xc0, 0x70, 0x83, 0xd0, 0x37, 0x63, 0x30, 0x63, 0x40,
  0xa0, 0x02, 0x26, 0x2f, 0xb7, 0x32, 0xcb, 0xa0, 0x07, 0x6d, 0x10, 0xcc,
  0x18, 0x10, 0xa8, 0xd0, 0xd0, 0xca, 0xad, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x81, 0x19, 0x90, 0x50, 0xf9, 0xac, 0xce, 0xff, 0xcc, 0x18, 0x10,
  0xb2, 0x20, 0x0b, 0xb4, 0x72, 0x2b, 0xa3, 0x09, 0x81, 0x30, 0x61, 0x00,
  0x94, 0x11, 0x42, 0x32, 0x63, 0x40, 0xc8, 0x42, 0x29, 0xd0, 0xca, 0xad,
  0x94, 0x21, 0xc8, 0x84, 0x01, 0x50, 0x74, 0x23, 0xc0, 0x8c, 0x01, 0x21,
  0x0b, 0x7a, 0x40, 0x2b, 0xb7, 0x52, 0x74, 0x23, 0xc0, 0x84, 0x01, 0x40,
  0xb4, 0x03, 0x80, 0x19, 0x03, 0x42, 0x16, 0x2c, 0x5a, 0xb9, 0x95, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x76, 0x68, 0xf6, 0xff, 0xff, 0xff,
  0x87, 0xdd, 0x61, 0x0b, 0xd3, 0x98, 0x31, 0x20, 0xda, 0xe0, 0xeb, 0x83,
  0x7a, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x65, 0x87, 0x64, 0xff,
  0xff, 0xff, 0x7f, 0xd8, 0x1d, 0xb6, 0x28, 0x8d, 0x09, 0x03, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x1d, 0x9a, 0xfd, 0xff, 0xff, 0xff,
  0x61, 0x77, 0xd8, 0xc2, 0x34, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x50, 0x76, 0x48, 0xf6, 0xff, 0xff, 0xff, 0x87, 0xdd, 0x61,
  0x8b, 0xd2, 0x98, 0x30, 0x00, 0x6c, 0x10, 0x40, 0x30, 0x63, 0x40, 0xbc,
  0x81, 0x18, 0xf4, 0x41, 0xbd, 0x54, 0x70, 0x42, 0x3a, 0x63, 0x40, 0xbc,
  0x41, 0x1b, 0xf4, 0x41, 0xbd, 0x0c, 0x37, 0x04, 0x26, 0x04, 0x06, 0x33,
  0x06, 0xc4, 0x1b, 0xc8, 0x41, 0x1f, 0xd4, 0xcb, 0x05, 0x40, 0xcc, 0x18,
  0x10, 0x6f, 0xa0, 0xf4, 0x41, 0xbd, 0x50, 0xee, 0x00, 0x60, 0xc2, 0x00,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x05, 0x8c, 0x6c, 0xff, 0xff,
  0xff, 0x7f, 0x00, 0x1f, 0xb7, 0x38, 0x8d, 0x09, 0x03, 0x60, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0xcc, 0x00, 0x86, 0xe2, 0xe7, 0x76, 0x56, 0x68,
  0xc6, 0x80, 0x88, 0x03, 0xa6, 0x0f, 0xea, 0x65, 0x34, 0x21, 0x00, 0x26,
  0x0c, 0x80, 0xe1, 0x86, 0x60, 0x85, 0xc2, 0x60, 0xc6, 0x80, 0x88, 0x83,
  0xa4, 0x0f, 0xea, 0x65, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0x60,
  0x86, 0xe8, 0x47, 0x77, 0x5c, 0x68, 0xc6, 0x80, 0x88, 0x83, 0x34, 0xe8,
  0x83, 0x7a, 0x19, 0x4d, 0x08, 0x82, 0x09, 0x03, 0x60, 0xb8, 0xe1, 0x70,
  0xa1, 0x30, 0x98, 0x31, 0x20, 0xe2, 0x00, 0x14, 0xfa, 0xa0, 0x5e, 0x2e,
  0x00, 0x62, 0xc2, 0x00, 0x18, 0x6e, 0x18, 0x82, 0x30, 0x98, 0x31, 0x20,
  0xe2, 0xa0, 0x0f, 0xfa, 0xa0, 0x5e, 0xca, 0x08, 0x74, 0xc6, 0x80, 0x88,
  0x83, 0x31, 0xe8, 0x83, 0x7a, 0xa9, 0x48, 0x86, 0x60, 0xc6, 0x80, 0x90,
  0x83, 0xa8, 0x0f, 0xea, 0xa5, 0xa2, 0x1a, 0x82, 0x09, 0x03, 0x60, 0xba,
  0x41, 0x98, 0x86, 0x19, 0x03, 0x22, 0x0e, 0x92, 0x3e, 0xa8, 0x97, 0xe9,
  0x06, 0x61, 0x22, 0x26, 0x0c, 0x00, 0x3a, 0x1f, 0x00, 0xcc, 0x18, 0x10,
  0x70, 0x50, 0xf4, 0x41, 0xbd, 0x10, 0xfa, 0x00, 0x60, 0xc6, 0x80, 0x90,
  0x05, 0x87, 0x56, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94,
  0x37, 0x22, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x7d, 0xf8, 0x42, 0x37, 0x26,
  0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xde, 0x68, 0xfc,
  0xff, 0xff, 0xff, 0x87, 0xf7, 0xe1, 0x8b, 0xdc, 0x98, 0x30, 0x00, 0x28,
  0x7d, 0x00, 0x30, 0x63, 0x40, 0xcc, 0xc2, 0x43, 0x2b, 0xb7, 0x32, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x0a, 0x1c, 0xf1, 0x05, 0xfc, 0xe8, 0xc5,
  0x6d, 0x4c, 0x18, 0x00, 0xc3, 0x0d, 0x60, 0xa0, 0x3b, 0x64, 0x30, 0x63,
  0x40, 0xe4, 0x02, 0x56, 0x2b, 0xb7, 0x32, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x66, 0x10, 0x46, 0x22, 0x84, 0x3e, 0x3a, 0x34, 0x63, 0x40, 0xe4,
  0x02, 0x2d, 0xd4, 0xca, 0xad, 0x8c, 0x26, 0x04, 0xc0, 0x84, 0x01, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca, 0x1c, 0x99, 0xff, 0xff, 0xff,
  0xff, 0x30, 0x3f, 0x7b, 0xe1, 0x1b, 0x33, 0x06, 0x84, 0x1f, 0xb0, 0x81,
  0x29, 0xf8, 0xcb, 0x68, 0x82, 0x10, 0xcc, 0x18, 0x10, 0xb9, 0x40, 0x0b,
  0xb5, 0x72, 0x2b, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xd0, 0x91,
  0xf9, 0xff, 0xff, 0xff, 0x0f, 0xf4, 0xc3, 0x17, 0xbe, 0x31, 0x63, 0x40,
  0xf8, 0x01, 0x1b, 0x98, 0x82, 0xbf, 0x90, 0xfb, 0x00, 0x60, 0xc6, 0x80,
  0xc8, 0x85, 0x3d, 0xa8, 0x95, 0x5b, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x03, 0xa5, 0x8e, 0xd0, 0xff, 0xff, 0xff, 0x7f, 0xa8, 0x9f, 0xbe, 0x00,
  0x8f, 0x19, 0x03, 0xc2, 0x0f, 0xd8, 0xc0, 0x14, 0xfc, 0x65, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x94, 0x3a, 0x3a, 0xff, 0xff, 0xff, 0xff, 0xa1,
  0x7e, 0xfa, 0xe2, 0x37, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x50, 0xea, 0x48, 0xfd, 0xff, 0xff, 0xff, 0x87, 0xfa, 0xd1, 0x0b,
  0xf0, 0x98, 0x31, 0x20, 0xfc, 0xa0, 0x33, 0x05, 0x7f, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0xa5, 0x8e, 0xd2, 0xff, 0xff, 0xff, 0x7f, 0xa8,
  0x1f, 0xbd, 0xf8, 0x8d, 0x09, 0x03, 0x60, 0xb8, 0x41, 0xf1, 0xa1, 0x33,
  0x98, 0x31, 0x20, 0x40, 0x81, 0x32, 0x05, 0x7f, 0x19, 0x6e, 0x50, 0x7e,
  0xe8, 0x0c, 0x66, 0x0c, 0x08, 0x50, 0x20, 0x03, 0x53, 0xf0, 0x97, 0x12,
  0x02, 0x9d, 0x31, 0x20, 0x40, 0x21, 0x33, 0x05, 0x7f, 0x19, 0x6e, 0x68,
  0x0c, 0x34, 0x98, 0x31, 0x20, 0x40, 0x81, 0x0e, 0x4c, 0xc1, 0x5f, 0x4a,
  0x08, 0x74, 0xc6, 0x80, 0x00, 0x85, 0x34, 0x30, 0x05, 0x7f, 0x19, 0x6e,
  0x70, 0x0e, 0x34, 0x98, 0x31, 0x20, 0x40, 0xc1, 0x15, 0x4c, 0xc1, 0x5f,
  0x4a, 0x08, 0x74, 0xc6, 0x80, 0x00, 0x85, 0x51, 0x30, 0x05, 0x7f, 0x21,
  0xfb, 0x01, 0xc0, 0x8c, 0x01, 0x01, 0x0a, 0x85, 0x29, 0xf8, 0x4b, 0x35,
  0x82, 0xce, 0x18, 0x10, 0xb9, 0x80, 0x07, 0xb5, 0x72, 0x2b, 0xb3, 0x0c,
  0x6e, 0xf0, 0x06, 0xc1, 0x8c, 0x01, 0x91, 0x0b, 0x0d, 0xad, 0xdc, 0xca,
  0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x5c, 0x76, 0xc4, 0x42, 0xf6, 0x73,
  0x46, 0x93, 0xc4, 0x43, 0x3c, 0xc4, 0x43, 0x3c, 0x34, 0x63, 0x40, 0xec,
  0x42, 0x65, 0x2b, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xca,
  0x1f, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xa9, 0x61, 0x1e, 0x33,
  0x06, 0xc4, 0x2c, 0x3c, 0xb4, 0x72, 0x2b, 0xa3, 0x09, 0x01, 0x30, 0x63,
  0x40, 0xec, 0x42, 0x65, 0x2b, 0xb7, 0x42, 0xfa, 0x03, 0x80, 0x19, 0x03,
  0x62, 0x17, 0x26, 0x5b, 0xb9, 0x95, 0x59, 0x82, 0x37, 0x98, 0x31, 0x20,
  0x78, 0x21, 0xb1, 0x95, 0x5b, 0x19, 0xa8, 0x90, 0x08, 0x37, 0xb0, 0xc3,
  0xa0, 0x0d, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x11, 0x25, 0xf9,
  0xff, 0xff, 0xff, 0x1f, 0x44, 0x88, 0x35, 0xd2, 0x63, 0xc6, 0x80, 0x98,
  0x85, 0x87, 0x56, 0x6e, 0x85, 0xf8, 0x07, 0x00, 0x33, 0x06, 0x44, 0x38,
  0x4c, 0x21, 0x73, 0x2b, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0x8c,
  0x92, 0x69, 0x8c, 0x10, 0x69, 0xa8, 0xc7, 0x84, 0x01, 0x40, 0xfd, 0x03,
  0x80, 0x19, 0x03, 0x42, 0x1c, 0xa6, 0x90, 0xb9, 0x95, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0x50, 0x48, 0xe9, 0x34, 0x48, 0x68, 0x34, 0xd6, 0x63,
  0xc2, 0x00, 0x20, 0xff, 0x01, 0xc0, 0x8c, 0x01, 0x31, 0x0e, 0x52, 0xc8,
  0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xa5, 0x34, 0x26,
  0x25, 0x24, 0x1a, 0xec, 0x31, 0x61, 0x00, 0xd0, 0xff, 0x00, 0x60, 0xc6,
  0x80, 0x50, 0x07, 0x2f, 0x65, 0x6e, 0x65, 0xb8, 0xc1, 0x0e, 0xd4, 0x88,
  0x0c, 0x66, 0x0c, 0x08, 0x75, 0xe0, 0x52, 0xe6, 0x56, 0x86, 0x23, 0x8c,
  0x30, 0x72, 0xbe, 0x19, 0x03, 0x42, 0x1d, 0xe4, 0x20, 0x65, 0x6e, 0xa5,
  0x84, 0x40, 0x67, 0x0c, 0x08, 0x75, 0x48, 0x83, 0x94, 0xb9, 0x95, 0x59,
  0x06, 0x38, 0x88, 0x83, 0x60, 0xc6, 0x80, 0x50, 0x87, 0x28, 0x64, 0x6e,
  0x85, 0x46, 0x08, 0x00, 0x33, 0x06, 0x04, 0x3b, 0x68, 0x2a, 0x73, 0x2b,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xa8, 0x92, 0xfe, 0xff, 0xff,
  0xff, 0x0f, 0x2a, 0xb4, 0x1a, 0xf1, 0x31, 0x63, 0x40, 0x84, 0xc3, 0x14,
  0x32, 0xb7, 0x62, 0x49, 0x22, 0x9f, 0x19, 0x03, 0xa2, 0x1d, 0xd2, 0x40,
  0x65, 0x6e, 0x85, 0x4a, 0x08, 0x00, 0x33, 0x06, 0x44, 0x3b, 0x84, 0x81,
  0xca, 0xdc, 0xca, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xac, 0xb4,
  0xff, 0xff, 0xff, 0xff, 0x03, 0x0b, 0xad, 0xc6, 0x7c, 0xcc, 0x18, 0x10,
  0xe2, 0x30, 0x85, 0xcc, 0xad, 0x90, 0x09, 0x01, 0x60, 0xc6, 0x80, 0x70,
  0x07, 0x4d, 0x65, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94,
  0x56, 0x8a, 0x93, 0x16, 0x52, 0x0d, 0xfa, 0x98, 0x31, 0x20, 0xc6, 0x41,
  0x0a, 0x99, 0x5b, 0x99, 0x25, 0x88, 0x83, 0x19, 0x03, 0xe2, 0x1d, 0x1a,
  0x95, 0xb9, 0x95, 0x81, 0x0a, 0x09, 0x83, 0x03, 0x56, 0x0c, 0xde, 0x60,
  0xa0, 0x42, 0x42, 0xe0, 0xc0, 0x15, 0x83, 0x37, 0x18, 0xa8, 0x00, 0xe8,
  0x31, 0x80, 0x03, 0x78, 0x0c, 0xde, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x14, 0x58, 0xf2, 0xff, 0xff, 0xff, 0xff, 0x01, 0x86, 0x5a, 0xe3,
  0x3e, 0x66, 0x0c, 0x88, 0x71, 0x90, 0x42, 0xe6, 0x56, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x40, 0x81, 0xa5, 0xfe, 0xff, 0xff, 0xff, 0x1f, 0x60,
  0x28, 0x36, 0xee, 0x63, 0xc6, 0x80, 0x08, 0x87, 0x29, 0x64, 0x6e, 0x65,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x58, 0xe2, 0xff, 0xff, 0xff,
  0xff, 0x01, 0x86, 0x5e, 0xe3, 0x3e, 0x66, 0x0c, 0x08, 0x71, 0x98, 0x42,
  0xe6, 0x56, 0xea, 0x7c, 0xf6, 0x08, 0x66, 0x0c, 0x08, 0x7a, 0x88, 0x42,
  0xe6, 0x56, 0x68, 0x85, 0x00, 0x30, 0x63, 0x40, 0xd4, 0x43, 0x18, 0x84,
  0xcc, 0xad, 0x0c, 0x37, 0x88, 0x82, 0x1d, 0x91, 0xc1, 0x8c, 0x01, 0x51,
  0x0f, 0x5f, 0xc8, 0xdc, 0x0a, 0xb5, 0x10, 0x00, 0x66, 0x0c, 0x88, 0x7b,
  0x28, 0x83, 0x90, 0xb9, 0x95, 0x22, 0x05, 0x3c, 0x8a, 0x19, 0x03, 0xe2,
  0x1e, 0xc6, 0x20, 0x64, 0x6e, 0x65, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xcc, 0xa0, 0x94, 0xcc, 0x88, 0x85, 0xfc, 0x68, 0xc6, 0x80, 0xb8, 0x07,
  0x3b, 0x08, 0x99, 0x5b, 0x19, 0x4d, 0x08, 0x86, 0x09, 0x03, 0xa0, 0x86,
  0x00, 0x66, 0x0c, 0x88, 0x7b, 0x88, 0x83, 0x90, 0xb9, 0x95, 0xe9, 0x06,
  0x54, 0x08, 0x8c, 0x19, 0x03, 0xa2, 0x1e, 0xa8, 0x90, 0xb9, 0x95, 0x4a,
  0x02, 0x98, 0x31, 0x20, 0xea, 0x21, 0x0a, 0x99, 0x5b, 0x21, 0x1a, 0x02,
  0xc0, 0x8c, 0x01, 0x21, 0x0f, 0x52, 0xc8, 0xdc, 0xca, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0xbb, 0x64, 0xec, 0x10, 0x6d, 0x88, 0xc8, 0x84,
  0x01, 0x40, 0x35, 0x04, 0x80, 0x19, 0x03, 0x22, 0x1f, 0xae, 0x96, 0xb9,
  0x95, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x78, 0x49, 0x4f, 0x78,
  0x48, 0x36, 0x46, 0x64, 0xc2, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x03, 0x33, 0x60, 0xa5, 0x36, 0x9a, 0xa1, 0x52, 0x9a, 0x31, 0x20, 0xf2,
  0xa1, 0x0c, 0x60, 0xe6, 0x56, 0x46, 0x13, 0x82, 0x61, 0xc2, 0x00, 0x18,
  0x6e, 0x38, 0xa5, 0x80, 0x0c, 0x66, 0x0c, 0x88, 0x7c, 0x00, 0x03, 0x98,
  0xb9, 0x95, 0x59, 0x06, 0x39, 0xb8, 0x83, 0x60, 0xc6, 0x80, 0xc8, 0x87,
  0xa6, 0x65, 0x6e, 0x65, 0x96, 0x60, 0x0e, 0x26, 0x0c, 0x80, 0x81, 0x0a,
  0x89, 0x0c, 0xe4, 0x20, 0x0c, 0xea, 0x60, 0xa0, 0x42, 0x22, 0x03, 0x39,
  0x08, 0x83, 0x3a, 0x18, 0xa8, 0x00, 0xc8, 0x40, 0x0e, 0xc2, 0xa0, 0x0e,
  0x06, 0x2a, 0x00, 0x9b, 0x0c, 0xe4, 0x20, 0x0c, 0xea, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x94, 0x71, 0x6a, 0xc6, 0x08, 0x3c, 0x54, 0x64,
  0xc6, 0x80, 0x18, 0x07, 0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x94, 0x71, 0x62, 0xc6, 0x48, 0x3c, 0x54, 0x64, 0xc6, 0x80,
  0x10, 0x87, 0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x94, 0x71, 0x5a, 0xc6, 0x88, 0x3c, 0x54, 0x64, 0xc6, 0x80, 0x08, 0x87,
  0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x71,
  0x52, 0xc6, 0x28, 0x37, 0x54, 0x64, 0xc6, 0x80, 0xc8, 0x87, 0xab, 0x65,
  0x6e, 0xa5, 0x94, 0x00, 0x66, 0x0c, 0x88, 0x7d, 0x00, 0x85, 0x98, 0xb9,
  0x15, 0xf2, 0x21, 0x00, 0xcc, 0x18, 0x10, 0xfb, 0x60, 0xc5, 0xcc, 0xad,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x52, 0x4e, 0x4b, 0x19, 0xdd,
  0x06, 0x8b, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90,
  0xf1, 0x52, 0x1d, 0x91, 0x81, 0x30, 0x63, 0x40, 0xf0, 0x03, 0x18, 0xc4,
  0xcc, 0xad, 0x10, 0x18, 0x01, 0x60, 0xc6, 0x80, 0xe0, 0x87, 0x2b, 0x66,
  0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x73, 0x62, 0xce,
  0xe8, 0x36, 0x5c, 0x64, 0xc2, 0x00, 0x18, 0x8e, 0x10, 0x42, 0xc9, 0xf9,
  0x66, 0x0c, 0x88, 0x7e, 0xe0, 0x6c, 0xe6, 0x56, 0x66, 0x19, 0xe8, 0xa0,
  0x0e, 0x82, 0x19, 0x03, 0xa2, 0x1f, 0xaa, 0x98, 0xb9, 0x15, 0x4b, 0x06,
  0xf8, 0xcc, 0x18, 0x10, 0xff, 0xe0, 0xdd, 0xcc, 0xad, 0xd0, 0x18, 0x01,
  0x60, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x45, 0x9d,
  0x1c, 0x35, 0x5a, 0x8f, 0x18, 0x99, 0x31, 0x20, 0xc2, 0x61, 0x0a, 0x99,
  0x5b, 0xb1, 0xa2, 0x90, 0xcf, 0x8c, 0x01, 0x01, 0x12, 0x6f, 0x70, 0x33,
  0xb7, 0x62, 0x4b, 0x00, 0x9f, 0x19, 0x03, 0x02, 0x24, 0xca, 0xe0, 0x66,
  0x6e, 0x85, 0xcc, 0x08, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x28, 0xed, 0x04, 0xb5, 0x11, 0x7b, 0xd0, 0xc8, 0x8c, 0x01,
  0x21, 0x0e, 0x53, 0xc8, 0xdc, 0x4a, 0x31, 0xb8, 0x04, 0x33, 0x06, 0x44,
  0x48, 0x78, 0x37, 0x73, 0x2b, 0x84, 0x46, 0x00, 0x98, 0x30, 0x00, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x79, 0xa7, 0xe8, 0x8d, 0xd8, 0xc3,
  0x46, 0x66, 0x0c, 0x88, 0x71, 0x90, 0x42, 0xe6, 0x56, 0x66, 0x09, 0xea,
  0x60, 0xc6, 0x80, 0x10, 0x89, 0xe8, 0x66, 0x6e, 0x65, 0xa0, 0x42, 0x72,
  0xe8, 0x00, 0x0c, 0xe6, 0x60, 0xa0, 0x42, 0x52, 0xe8, 0x00, 0x0c, 0xe6,
  0x60, 0xa0, 0x02, 0x40, 0xe8, 0x00, 0x0c, 0xe6, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x14, 0x79, 0x9a, 0xe4, 0x28, 0x3e, 0x72, 0x64, 0xc6,
  0x80, 0x10, 0x87, 0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x14, 0x79, 0x92, 0xe4, 0xe8, 0x3d, 0x72, 0x64, 0xc6, 0x80, 0x18,
  0x07, 0x29, 0x64, 0x6e, 0x65, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14,
  0x79, 0x8a, 0xe4, 0x68, 0x3e, 0x72, 0x64, 0xc6, 0x80, 0x08, 0x87, 0x29,
  0x64, 0x6e, 0xa5, 0xa0, 0x5e, 0x82, 0x19, 0x03, 0x22, 0x1f, 0xe8, 0x00,
  0x66, 0x6e, 0x85, 0xda, 0x08, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0xf4, 0x24, 0xd1, 0x91, 0x7a, 0xec, 0xc8, 0x8c,
  0x01, 0x91, 0x0f, 0x57, 0xcb, 0xdc, 0xca, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x98, 0x01, 0x39, 0x95, 0xd2, 0x1a, 0xf5, 0xd2, 0x8c, 0x01, 0x91,
  0x0f, 0x65, 0x00, 0x33, 0xb7, 0x32, 0x9a, 0x10, 0x0c, 0x13, 0x06, 0xc0,
  0x70, 0x03, 0x11, 0x90, 0xc1, 0x8c, 0x01, 0x91, 0x0f, 0x60, 0x00, 0x33,
  0xb7, 0x32, 0xcb, 0x30, 0x07, 0x76, 0x10, 0xcc, 0x18, 0x10, 0xf9, 0xd0,
  0xb4, 0xcc, 0xad, 0xcc, 0x12, 0xdc, 0xc1, 0x84, 0x01, 0x30, 0x50, 0x21,
  0x41, 0x76, 0x40, 0x0b, 0x71, 0x30, 0x50, 0x21, 0x41, 0x76, 0x40, 0x0b,
  0x71, 0x30, 0x50, 0x01, 0x40, 0x76, 0x40, 0x0b, 0x71, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x8a, 0x3e, 0x5d, 0x7a, 0xb4, 0x1f, 0x61, 0x32,
  0x63, 0x40, 0x84, 0xc3, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x8a, 0x3e, 0x59, 0x7a, 0x74, 0x1f, 0x61, 0x32, 0x63, 0x40,
  0x8c, 0x83, 0x14, 0x32, 0xb7, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x8a, 0x3e, 0x55, 0x7a, 0x94, 0x1f, 0x61, 0x32, 0x63, 0x40, 0x88, 0xc3,
  0x14, 0x32, 0xb7, 0x52, 0x31, 0xa4, 0x0e, 0x30, 0x63, 0x40, 0x98, 0x44,
  0x2d, 0x84, 0xcc, 0xad, 0x50, 0x1d, 0x01, 0x60, 0xc6, 0x80, 0x30, 0x09,
  0x72, 0x08, 0x99, 0x5b, 0x29, 0x01, 0x9c, 0x60, 0xc6, 0x80, 0x30, 0x09,
  0x71, 0x08, 0x99, 0x5b, 0x19, 0x31, 0x28, 0x00, 0x10, 0x04, 0x03, 0xe7,
  0x9e, 0x54, 0x69, 0xc6, 0x80, 0x30, 0x89, 0x33, 0x08, 0x99, 0x5b, 0xa9,
  0x20, 0x9d, 0x62, 0xc6, 0x80, 0x30, 0x09, 0x3d, 0x08, 0x99, 0x5b, 0x19,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xad, 0x9e, 0x56, 0x29, 0x18, 0x66,
  0x0c, 0x08, 0x93, 0x18, 0x83, 0x90, 0xb9, 0x15, 0xd2, 0x23, 0x00, 0xcc,
  0x18, 0x10, 0x26, 0x21, 0x85, 0xcc, 0xad, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x81, 0x12, 0x52, 0x5b, 0x28, 0xb9, 0x07, 0x9a, 0x4c, 0x18, 0x00,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0xe1, 0x53, 0x2c, 0x29, 0xc2,
  0x8c, 0x01, 0x71, 0x12, 0x59, 0xc8, 0xdc, 0x8a, 0x2d, 0x01, 0x7c, 0x66,
  0x0c, 0x88, 0x93, 0xb0, 0x42, 0xe6, 0x56, 0xa8, 0x8f, 0x00, 0x30, 0x61,
  0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x42, 0x52, 0x1d, 0x29,
  0x95, 0xc8, 0x9a, 0xcc, 0x18, 0x10, 0xe1, 0x30, 0x85, 0xcc, 0xad, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xb6, 0x4f, 0xb4, 0xc4, 0x14, 0x33,
  0x06, 0x04, 0x4a, 0x80, 0x41, 0xc8, 0xdc, 0x8a, 0x35, 0x01, 0x7c, 0x66,
  0x0c, 0x08, 0x94, 0xe8, 0x42, 0xe6, 0x56, 0x08, 0x94, 0x00, 0x30, 0x61,
  0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x72, 0x52, 0xdf, 0x29,
  0x99, 0x88, 0x9b, 0xcc, 0x18, 0x10, 0xe2, 0x30, 0x85, 0xcc, 0xad, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0xc6, 0x4f, 0xb7, 0xe4, 0x20, 0x33,
  0x06, 0x44, 0x4a, 0x68, 0x21, 0x73, 0x2b, 0xf5, 0x04, 0x30, 0x63, 0x40,
  0xa4, 0xc4, 0x15, 0x32, 0xb7, 0x42, 0xa3, 0x04, 0x80, 0x09, 0x03, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x95, 0x0a, 0x03, 0x55, 0x3a,
  0x91, 0x38, 0x99, 0x31, 0x20, 0xc6, 0x41, 0x0a, 0x99, 0x5b, 0x21, 0x52,
  0x02, 0xc0, 0x8c, 0x01, 0xc1, 0x12, 0x5e, 0xce, 0xdc, 0xca, 0x70, 0xc3,
  0x3e, 0xbc, 0x13, 0x19, 0xcc, 0x18, 0x10, 0x2c, 0xc1, 0xe5, 0xcc, 0xad,
  0xcc, 0x32, 0xe0, 0x41, 0x1e, 0x04, 0x33, 0x06, 0x04, 0x4b, 0x44, 0x21,
  0x73, 0x2b, 0x64, 0x4a, 0x00, 0x98, 0x31, 0x20, 0x5c, 0x02, 0x14, 0x74,
  0xe6, 0x56, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x69, 0x29, 0x33,
  0x68, 0x25, 0xfb, 0xc0, 0x93, 0x19, 0x03, 0x82, 0x0c, 0xba, 0x55, 0xe8,
  0x99, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x5a, 0xaa, 0x0c, 0x5a,
  0xc9, 0x3e, 0xee, 0x64, 0xc2, 0x00, 0xa0, 0x53, 0x02, 0xc0, 0x8c, 0x01,
  0x61, 0x06, 0xca, 0x2a, 0xf4, 0xcc, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x28, 0x2e, 0xc5, 0x2e, 0xae, 0x44, 0x1f, 0x75, 0x32, 0x61, 0x00, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x27, 0x52, 0xbd, 0xc4, 0xcc, 0x18,
  0x10, 0x67, 0xe0, 0xac, 0x42, 0xcf, 0x50, 0x2a, 0x01, 0x60, 0xc6, 0x80,
  0x38, 0x03, 0x66, 0x15, 0x7a, 0x66, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x14, 0x98, 0x32, 0x03, 0x58, 0xb2, 0x8f, 0x3b, 0x99, 0x31, 0x20, 0xcc,
  0x40, 0x59, 0x85, 0x9e, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x8e,
  0xa4, 0x7e, 0x69, 0x99, 0x31, 0x20, 0xd0, 0xe0, 0x59, 0x85, 0x9e, 0xa9,
  0x60, 0x9e, 0x6e, 0xc6, 0x80, 0x40, 0x83, 0x6f, 0x15, 0x7a, 0xa6, 0x88,
  0x60, 0x67, 0x0c, 0x08, 0x34, 0x60, 0x56, 0xa1, 0x67, 0xa8, 0x95, 0x00,
  0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x42, 0x53,
  0x69, 0x40, 0x4b, 0xfa, 0xb1, 0x27, 0x33, 0x06, 0x84, 0x19, 0x28, 0xab,
  0xd0, 0x33, 0xe4, 0x4a, 0x00, 0x98, 0x31, 0x20, 0xd2, 0xa0, 0x58, 0x85,
  0x9e, 0x29, 0x92, 0xc8, 0x27, 0x99, 0x31, 0x20, 0x5c, 0x22, 0xd2, 0x99,
  0x5b, 0x29, 0x93, 0x08, 0x60, 0xc2, 0x00, 0x58, 0xc1, 0xb0, 0x53, 0x20,
  0x15, 0x4c, 0x18, 0x00, 0xc3, 0x06, 0x44, 0x60, 0x0c, 0xc0, 0x8c, 0x01,
  0xe1, 0x12, 0x7e, 0xa0, 0x33, 0xb7, 0x52, 0x27, 0xc1, 0x4f, 0x32, 0x63,
  0x40, 0xbc, 0x44, 0xa4, 0x33, 0xb7, 0x52, 0x29, 0x11, 0xc0, 0x84, 0x01,
  0xb0, 0x82, 0xa1, 0xa7, 0x46, 0x2a, 0x98, 0x30, 0x00, 0x86, 0x0d, 0x88,
  0x60, 0x1a, 0x80, 0x19, 0x03, 0xe2, 0x25, 0xf0, 0x40, 0x67, 0x6e, 0x65,
  0x96, 0x20, 0x0f, 0x66, 0x0c, 0x08, 0x98, 0x68, 0x74, 0xe6, 0x56, 0xa8,
  0x96, 0x00, 0x30, 0x63, 0x40, 0x94, 0xc2, 0x1c, 0xcc, 0xca, 0xad, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xc2, 0x53, 0xfe, 0xc1, 0x4b, 0x72,
  0x32, 0x2a, 0x33, 0x06, 0x44, 0x29, 0x3c, 0xb2, 0x72, 0x2b, 0xb3, 0x04,
  0x7d, 0x30, 0x63, 0x40, 0x94, 0x42, 0x21, 0x2b, 0xb7, 0x32, 0x50, 0x02,
  0xf8, 0x62, 0x20, 0x98, 0x1a, 0xe4, 0x46, 0x9e, 0x8d, 0xb0, 0xc1, 0x40,
  0x09, 0x20, 0x8e, 0x81, 0xa0, 0x6a, 0x90, 0x1c, 0x79, 0x3a, 0xc2, 0x06,
  0x84, 0x4b, 0x00, 0x98, 0x31, 0x20, 0x54, 0xc1, 0x2b, 0x9b, 0x5b, 0x19,
  0x6e, 0x10, 0x46, 0x8a, 0x0c, 0x66, 0x0c, 0x08, 0x55, 0xe0, 0xca, 0xe6,
  0x56, 0x66, 0x19, 0xf6, 0x80, 0x0f, 0x82, 0x19, 0x03, 0x42, 0x15, 0x22,
  0xb2, 0xb9, 0x95, 0x22, 0x48, 0x4a, 0x66, 0x0c, 0x08, 0x56, 0x88, 0xcc,
  0xe6, 0x56, 0x8a, 0x08, 0x60, 0xc2, 0x00, 0x58, 0xc1, 0x50, 0x56, 0x2b,
  0x15, 0x4c, 0x18, 0x00, 0xc3, 0x06, 0x44, 0xc0, 0x52, 0x03, 0x30, 0x63,
  0x40, 0xb0, 0x02, 0x1e, 0x98, 0xcd, 0xad, 0xcc, 0x12, 0xf0, 0xc1, 0x8c,
  0x01, 0xd1, 0x0a, 0x8d, 0xd9, 0xdc, 0xca, 0x2c, 0xc1, 0x1f, 0xcc, 0x18,
  0x10, 0xa2, 0x51, 0xcc, 0x01, 0x30, 0x4b, 0xe0, 0x07, 0x33, 0x06, 0x44,
  0x29, 0x14, 0xb2, 0x72, 0x2b, 0xb3, 0x04, 0x7f, 0x30, 0x63, 0x40, 0xcc,
  0x44, 0x80, 0x07, 0xb7, 0x42, 0xbd, 0x04, 0x80, 0x09, 0x03, 0x60, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0x9f, 0x3a, 0x27, 0x96, 0x9a, 0x31,
  0x20, 0x46, 0xa3, 0x98, 0x03, 0x80, 0x7c, 0x09, 0x00, 0x33, 0x06, 0x44,
  0x69, 0x14, 0x73, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x52,
  0x56, 0xbb, 0x51, 0x4e, 0x23, 0x02, 0x2b, 0x33, 0x06, 0x44, 0x4d, 0xb0,
  0x01, 0x2c, 0xa0, 0xcd, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0x65,
  0xa5, 0x1b, 0xe5, 0x34, 0x22, 0xaf, 0x32, 0x61, 0x00, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x81, 0x52, 0x56, 0xbe, 0x51, 0x4e, 0x21, 0x02, 0x2b,
  0x33, 0x06, 0x44, 0x4d, 0x74, 0xb0, 0x80, 0x36, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xa0, 0x94, 0x55, 0x6f, 0x94, 0x53, 0x88, 0xbc, 0xca, 0x84,
  0x01, 0x40, 0xbf, 0x04, 0x80, 0x19, 0x03, 0xe2, 0x26, 0x16, 0x58, 0x40,
  0x9b, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0xcc, 0x2a, 0x4d, 0xcc,
  0x29, 0x44, 0x5a, 0x65, 0xc2, 0x00, 0x20, 0x70, 0x02, 0xc0, 0x8c, 0x01,
  0x81, 0x13, 0x0b, 0x2c, 0xa0, 0xcd, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x28, 0x67, 0xa5, 0x26, 0xe7, 0x14, 0x22, 0xae, 0x32, 0x61, 0x00, 0x50,
  0x38, 0x01, 0x60, 0xc6, 0x80, 0xc8, 0x09, 0x05, 0x16, 0xd0, 0x66, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xb4, 0x32, 0x19, 0x74, 0x0a, 0x91,
  0x57, 0x99, 0x30, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0, 0x0c,
  0x70, 0x2a, 0x9f, 0x7e, 0x69, 0xa6, 0x66, 0x0c, 0x88, 0x9d, 0x00, 0x05,
  0x58, 0x40, 0x9b, 0xd1, 0x84, 0x40, 0x98, 0x30, 0x00, 0x4a, 0x97, 0x02,
  0x99, 0x31, 0x20, 0x76, 0x62, 0x0f, 0x60, 0x01, 0x6d, 0xa8, 0x9c, 0x00,
  0x30, 0x63, 0x40, 0xec, 0xc4, 0x04, 0x0b, 0x68, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x0a, 0x5b, 0x95, 0x07, 0x3b, 0xf5, 0xc9, 0xad, 0xcc,
  0x18, 0x10, 0x6d, 0xf0, 0xf5, 0x41, 0xdb, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x81, 0xc2, 0x56, 0xa0, 0xc0, 0x4e, 0x7d, 0x62, 0x2b, 0x13, 0x06,
  0x80, 0xf5, 0x92, 0x00, 0x82, 0x19, 0x03, 0xe2, 0x0d, 0xc4, 0xa0, 0x0f,
  0xda, 0xa6, 0x02, 0x9c, 0xd2, 0x19, 0x03, 0xe2, 0x0d, 0xda, 0xa0, 0x0f,
  0xda, 0x66, 0xb8, 0x21, 0xb8, 0x29, 0x30, 0x98, 0x31, 0x20, 0xde, 0x40,
  0x0e, 0xfa, 0xa0, 0x6d, 0x2e, 0x00, 0x62, 0xc6, 0x80, 0x78, 0x03, 0xa5,
  0x0f, 0xda, 0x86, 0xd4, 0x09, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x28, 0x71, 0x45, 0x0a, 0xf1, 0xf4, 0x27, 0xb8, 0x32,
  0x61, 0x00, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x19, 0x84, 0x95,
  0x48, 0xa1, 0x13, 0x4f, 0xcd, 0x18, 0x10, 0x71, 0xc0, 0xf4, 0x41, 0xdb,
  0x8c, 0x26, 0x04, 0xc0, 0x84, 0x01, 0x30, 0xdc, 0x10, 0xf0, 0x54, 0x18,
  0xcc, 0x18, 0x10, 0x71, 0x90, 0xf4, 0x41, 0xdb, 0x8c, 0x18, 0x1c, 0x00,
  0x08, 0x82, 0x81, 0x19, 0x90, 0x55, 0x49, 0xad, 0xd3, 0x4f, 0xcd, 0x18,
  0x10, 0x71, 0x90, 0x06, 0x7d, 0xd0, 0x36, 0xa3, 0x09, 0x41, 0x30, 0x61,
  0x00, 0x0c, 0x37, 0x1c, 0x3f, 0x15, 0x06, 0x33, 0x06, 0x44, 0x1c, 0x80,
  0x42, 0x1f, 0xb4, 0xcd, 0x05, 0x40, 0x4c, 0x18, 0x00, 0xc3, 0x0d, 0x43,
  0x10, 0x06, 0x33, 0x06, 0x44, 0x1c, 0xf4, 0x41, 0x1f, 0xb4, 0x4d, 0x19,
  0x81, 0xce, 0x18, 0x10, 0x71, 0x30, 0x06, 0x7d, 0xd0, 0x36, 0xb5, 0x4e,
  0x63, 0x05, 0x33, 0x06, 0x84, 0x1c, 0x44, 0x7d, 0xd0, 0x36, 0x15, 0x99,
  0x15, 0x4c, 0x18, 0x00, 0xd3, 0x0d, 0x42, 0x3b, 0x0d, 0x33, 0x06, 0x44,
  0x1c, 0x24, 0x7d, 0xd0, 0x36, 0xd3, 0x0d, 0xc2, 0x44, 0x4c, 0x18, 0x00,
  0x84, 0x4f, 0x00, 0x98, 0x31, 0x20, 0xe0, 0xa0, 0xe8, 0x83, 0xb6, 0xa1,
  0x7c, 0x02, 0xc0, 0x8c, 0x01, 0xb1, 0x13, 0x0b, 0x2c, 0xa0, 0xcd, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xa0, 0x25, 0x0b, 0x20, 0x75, 0x23,
  0xeb, 0x32, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x02,
  0x5a, 0xb1, 0x00, 0x52, 0x37, 0xa2, 0x2e, 0x13, 0x06, 0x00, 0xe9, 0x13,
  0x00, 0x66, 0x0c, 0x88, 0x9f, 0x78, 0xde, 0x06, 0x6d, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x40, 0x09, 0xad, 0x9f, 0x09, 0xa9, 0x1a, 0x41, 0x97,
  0x09, 0x03, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0x20, 0xae,
  0x64, 0x0a, 0x9f, 0xd4, 0x6a, 0xc6, 0x80, 0xf8, 0x89, 0x4e, 0x6e, 0xd0,
  0x66, 0x34, 0x21, 0x10, 0x26, 0x0c, 0x80, 0xe1, 0x06, 0xb6, 0x0a, 0xc8,
  0x60, 0xc6, 0x80, 0xf8, 0x09, 0x4c, 0x6e, 0xd0, 0x66, 0x96, 0x01, 0x14,
  0x4a, 0x21, 0x98, 0x31, 0x20, 0x7e, 0xa2, 0x78, 0x1b, 0xb4, 0x99, 0x25,
  0x08, 0x85, 0x09, 0x03, 0x60, 0xa0, 0x02, 0xd0, 0xd5, 0x00, 0x14, 0x42,
  0x61, 0x14, 0x06, 0x2a, 0x24, 0x3e, 0x0d, 0x40, 0x21, 0x14, 0x46, 0x61,
  0xa0, 0x42, 0xf2, 0xd3, 0x00, 0x14, 0x42, 0x61, 0x14, 0x06, 0x2a, 0x00,
  0x70, 0x0d, 0x40, 0x21, 0x14, 0x46, 0x61, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x14, 0xd4, 0xc2, 0x05, 0x94, 0xe2, 0x91, 0x77, 0x99, 0x31, 0x20,
  0x7e, 0xe2, 0x79, 0x1b, 0xb4, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0x05, 0xb5, 0x6e, 0x01, 0xa5, 0xc6, 0xe4, 0x5d, 0x66, 0x0c, 0x88, 0x9b,
  0x58, 0x60, 0x01, 0x6d, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x40, 0x41,
  0x2d, 0x5b, 0x40, 0xa9, 0x30, 0x79, 0x97, 0x19, 0x03, 0x22, 0x27, 0x14,
  0x58, 0x40, 0x9b, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x50, 0x50, 0xab,
  0x16, 0x50, 0x4a, 0x4c, 0xde, 0x65, 0xc6, 0x80, 0xc0, 0x89, 0x05, 0x16,
  0xd0, 0xa6, 0xf6, 0x29, 0x80, 0x19, 0x03, 0x22, 0x2c, 0xba, 0xb9, 0x41,
  0x1b, 0x1a, 0x29, 0x00, 0xcc, 0x18, 0x10, 0x61, 0xe1, 0xcc, 0x0d, 0xda,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xa2, 0x5a, 0xb6, 0xa0, 0x52,
  0x3a, 0x12, 0x2f, 0x13, 0x06, 0x40, 0x09, 0x6e, 0x25, 0x33, 0x06, 0x84,
  0x58, 0x6c, 0x73, 0x83, 0x36, 0xf5, 0x4f, 0x01, 0x4c, 0x18, 0x00, 0x2b,
  0x18, 0x5e, 0xab, 0xae, 0x82, 0x09, 0x03, 0x80, 0x02, 0x60, 0x4c, 0x18,
  0x00, 0x84, 0x52, 0x00, 0x98, 0x31, 0x20, 0xc4, 0xc2, 0x99, 0x1b, 0xb4,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xe5, 0xb5, 0x74, 0xe1, 0xa5,
  0x7a, 0xc4, 0x5e, 0x26, 0x0c, 0x80, 0xe1, 0x06, 0x01, 0xaf, 0xc4, 0x60,
  0xc6, 0x80, 0x20, 0x0b, 0x0c, 0x6f, 0xd0, 0x66, 0x96, 0x41, 0x14, 0x46,
  0x21, 0x98, 0x31, 0x20, 0xc8, 0xa2, 0x99, 0x1b, 0xb4, 0x29, 0x84, 0xae,
  0x64, 0xc6, 0x80, 0x30, 0x0b, 0x39, 0xc8, 0x1b, 0xb4, 0xa9, 0x92, 0x0a,
  0x60, 0xc2, 0x00, 0x58, 0xc1, 0x60, 0x5b, 0x7b, 0x15, 0x4c, 0x18, 0x00,
  0x14, 0x00, 0x63, 0xc2, 0x00, 0x20, 0x97, 0x02, 0xc0, 0x8c, 0x01, 0x61,
  0x16, 0x65, 0x90, 0x37, 0x68, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x4a, 0x6d, 0xfd, 0x42, 0x4d, 0x81, 0x09, 0xbf, 0xcc, 0x18, 0x10, 0x6c,
  0xd0, 0xd5, 0xc2, 0xde, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x18,
  0x98, 0x16, 0x4f, 0x09, 0x33, 0x06, 0xc4, 0x1b, 0x40, 0xb5, 0xb0, 0x37,
  0x04, 0x53, 0x00, 0x98, 0x31, 0x20, 0xde, 0xc0, 0xa9, 0x85, 0xbd, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xe5, 0xb6, 0xc0, 0xe1, 0xa6, 0xc0,
  0x44, 0x64, 0x66, 0x0c, 0x08, 0x37, 0x60, 0x6a, 0x61, 0x6f, 0x8a, 0xc8,
  0x2b, 0x9c, 0x31, 0x20, 0xe0, 0xa0, 0xab, 0x85, 0xbd, 0x19, 0x31, 0x30,
  0x00, 0x10, 0x04, 0x83, 0x31, 0x48, 0xad, 0x9f, 0x0a, 0x66, 0x0c, 0x08,
  0x38, 0x80, 0x6a, 0x61, 0x6f, 0x68, 0xa6, 0x00, 0x30, 0x63, 0x40, 0xc0,
  0x81, 0x53, 0x0b, 0x7b, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8a,
  0x6e, 0x8d, 0x83, 0x4e, 0x8d, 0x49, 0xc9, 0xcc, 0x18, 0x10, 0x6e, 0xc0,
  0xd4, 0xc2, 0xde, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xa2, 0x5b,
  0xe2, 0xa0, 0x53, 0x63, 0x42, 0x32, 0x13, 0x06, 0x00, 0xd1, 0x14, 0x00,
  0x66, 0x0c, 0x88, 0x38, 0x28, 0x6a, 0x61, 0x6f, 0xa8, 0xa6, 0x00, 0x30,
  0x63, 0x40, 0x98, 0x05, 0x95, 0x37, 0x68, 0x33, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x0a, 0x6f, 0x95, 0x03, 0x4f, 0x8d, 0xc9, 0xc9, 0x4c, 0x18,
  0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xf0, 0x16, 0x39, 0xf0,
  0xd4, 0x98, 0x98, 0xcc, 0x84, 0x01, 0x40, 0x36, 0x05, 0x80, 0x19, 0x03,
  0xe2, 0x2c, 0xa6, 0xbc, 0x41, 0x9b, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x50, 0x7a, 0xcb, 0x1c, 0x7a, 0x4a, 0x4c, 0x48, 0x66, 0xc2, 0x00, 0xa0,
  0x9b, 0x02, 0xc0, 0x8c, 0x01, 0x81, 0x16, 0x53, 0xde, 0xa0, 0xcd, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xbe, 0x65, 0x0e, 0x3e, 0x15, 0x26,
  0x25, 0x33, 0x61, 0x00, 0x18, 0x96, 0xc0, 0x67, 0xc6, 0x80, 0x50, 0x0b,
  0x2b, 0x6f, 0xd0, 0x86, 0x72, 0x0a, 0x00, 0x13, 0x06, 0xc0, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x28, 0xe0, 0x75, 0x0e, 0x60, 0xb5, 0x27, 0x27,
  0x33, 0x63, 0x40, 0xdc, 0xc4, 0x02, 0x0b, 0x68, 0x63, 0x1b, 0x02, 0x9f,
  0x19, 0x03, 0x62, 0x2d, 0xba, 0xbc, 0x41, 0x1b, 0xda, 0x29, 0x00, 0x4c,
  0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0x88, 0x17, 0x3a,
  0x88, 0x15, 0x9f, 0xa4, 0xcc, 0x8c, 0x01, 0x81, 0x13, 0x0b, 0x2c, 0xa0,
  0x4d, 0x79, 0x15, 0xcc, 0x18, 0x10, 0x6c, 0x71, 0xe5, 0x0d, 0xda, 0x50,
  0x4f, 0x01, 0x60, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0x85, 0xbc, 0xd2, 0x81, 0xac, 0xfa, 0x64, 0x65, 0x66, 0x0c, 0x88, 0x9c,
  0x50, 0x60, 0x01, 0x6d, 0x66, 0x09, 0x46, 0x61, 0xc6, 0x80, 0x68, 0x8b,
  0x24, 0x6f, 0xd0, 0x66, 0xa0, 0x02, 0x20, 0x44, 0x01, 0x14, 0x42, 0x61,
  0xa0, 0x42, 0x52, 0x44, 0x01, 0x14, 0x42, 0x61, 0xa0, 0x42, 0x82, 0x44,
  0x01, 0x14, 0x42, 0x61, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x94, 0xf3,
  0x4a, 0x93, 0xb3, 0x82, 0x13, 0x99, 0x99, 0x31, 0x20, 0xdc, 0x80, 0xa9,
  0x85, 0xbd, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xe5, 0xbc, 0xd2,
  0xe4, 0xac, 0xe0, 0x24, 0x66, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x50, 0xce, 0x6b, 0x1d, 0xce, 0x4a, 0x54, 0x5c, 0x66, 0xc6,
  0x80, 0xb8, 0x89, 0x05, 0x16, 0xd0, 0x66, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x94, 0xf3, 0x52, 0x87, 0xb3, 0x02, 0x15, 0x97, 0x99, 0x31, 0x20,
  0x72, 0x42, 0x81, 0x05, 0xb4, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0xe5, 0xbc, 0xd2, 0xe1, 0xac, 0x42, 0xc5, 0x65, 0x66, 0x0c, 0x08, 0x9c,
  0x58, 0x60, 0x01, 0x6d, 0x0a, 0x0c, 0x64, 0x0b, 0x66, 0x0c, 0x88, 0x9f,
  0x58, 0x03, 0xb9, 0x41, 0x1b, 0x12, 0x2b, 0x00, 0x4c, 0x18, 0x00, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xa4, 0x97, 0x3a, 0xa4, 0x55, 0x9f,
  0xc0, 0xcc, 0x8c, 0x01, 0xf1, 0x13, 0xcf, 0xdb, 0xa0, 0xcd, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x98, 0x41, 0x6e, 0xe9, 0x15, 0x58, 0xc9, 0xd6,
  0x8c, 0x01, 0xf1, 0x13, 0x9d, 0xdc, 0xa0, 0xcd, 0x68, 0x42, 0x20, 0x4c,
  0x18, 0x00, 0xc3, 0x0d, 0x44, 0x40, 0x06, 0x33, 0x06, 0xc4, 0x4f, 0x60,
  0x72, 0x83, 0x36, 0xb3, 0x0c, 0xa1, 0x40, 0x0a, 0xc1, 0x8c, 0x01, 0xf1,
  0x13, 0xc5, 0xdb, 0xa0, 0xcd, 0x40, 0x83, 0xc4, 0x8c, 0xc2, 0x40, 0x83,
  0x04, 0x8d, 0xc2, 0x40, 0x03, 0x40, 0x8d, 0xc2, 0x2c, 0x41, 0x29, 0x4c,
  0x18, 0x00, 0x03, 0x15, 0x80, 0x40, 0x0a, 0x70, 0x1b, 0xfc, 0xc1, 0x40,
  0x85, 0x64, 0x90, 0x82, 0xcc, 0x06, 0x7f, 0x30, 0x50, 0x21, 0x29, 0xa4,
  0x40, 0xb3, 0xc1, 0x1f, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x22,
  0x5f, 0xf2, 0x20, 0x57, 0xab, 0x92, 0x33, 0x33, 0x06, 0x44, 0x4e, 0x28,
  0xb0, 0x80, 0x36, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0, 0xc8, 0x57,
  0x3c, 0xc8, 0x55, 0xab, 0xe4, 0xcc, 0x8c, 0x01, 0x71, 0x13, 0x0b, 0x2c,
  0xa0, 0xcd, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xf2, 0x05, 0x0f,
  0x72, 0xc5, 0x2a, 0x39, 0x33, 0x63, 0x40, 0xe0, 0xc4, 0x02, 0x0b, 0x68,
  0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x1b, 0x7a, 0xe1, 0xd5, 0xd0,
  0x5b, 0x33, 0x06, 0x44, 0x5c, 0x60, 0xb0, 0x80, 0x36, 0x17, 0x48, 0x35,
  0x61, 0x00, 0xd8, 0x5b, 0x05, 0xf4, 0x99, 0x31, 0x20, 0xe2, 0xc2, 0x82,
  0x05, 0xb4, 0xa1, 0xb7, 0x02, 0xc0, 0x8c, 0x01, 0x11, 0x17, 0x0b, 0x2c,
  0xa0, 0xcd, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0xf6, 0x35, 0x0f,
  0x76, 0x65, 0x27, 0x3d, 0x33, 0x61, 0x00, 0x98, 0x50, 0xc8, 0x67, 0xc6,
  0x80, 0x90, 0x8b, 0x0b, 0x16, 0xd0, 0x86, 0xe2, 0x0a, 0x00, 0x33, 0x06,
  0x84, 0x5c, 0x2c, 0xb0, 0x80, 0x36, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0xa0, 0xe0, 0x17, 0x3d, 0xe0, 0x95, 0x9d, 0xfc, 0xcc, 0x84, 0x01, 0x70,
  0x89, 0x54, 0x33, 0x06, 0x84, 0x5d, 0x78, 0xb0, 0x80, 0x36, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0xb0, 0xbd, 0xd7, 0x5f, 0x29, 0xe7, 0x35, 0x63,
  0x40, 0xd8, 0x05, 0x1c, 0xc0, 0x02, 0xda, 0x54, 0x50, 0x5e, 0x31, 0x63,
  0x40, 0xd8, 0x85, 0x28, 0xc0, 0x02, 0xda, 0x5c, 0x20, 0xd5, 0x8c, 0x01,
  0x61, 0x17, 0x70, 0x00, 0x0b, 0x68, 0x63, 0x44, 0x40, 0x9f, 0x19, 0x03,
  0xc2, 0x2e, 0xd0, 0x00, 0x16, 0xd0, 0x86, 0xee, 0x0a, 0x00, 0x33, 0x06,
  0x84, 0x5d, 0x2c, 0xb0, 0x80, 0x36, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0xa0, 0xf8, 0x57, 0x3e, 0xf8, 0x95, 0x9e, 0x94, 0xcd, 0x84, 0x01, 0x60,
  0x8a, 0x23, 0x9f, 0x19, 0x03, 0xe2, 0x2e, 0xde, 0x00, 0x16, 0xd0, 0xc6,
  0x92, 0x44, 0x3e, 0x33, 0x06, 0xc4, 0x5d, 0xa0, 0x02, 0x2c, 0xa0, 0x8d,
  0x09, 0x41, 0x7c, 0x66, 0x0c, 0x88, 0xbb, 0x08, 0x05, 0x58, 0x40, 0x1b,
  0x2b, 0x02, 0xf9, 0xcc, 0x18, 0x10, 0x77, 0x71, 0x06, 0xb0, 0x80, 0x36,
  0xc4, 0x57, 0x00, 0x98, 0x31, 0x20, 0xee, 0x62, 0x81, 0x05, 0xb4, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x65, 0xc4, 0xfa, 0x61, 0xb4, 0xfa,
  0x44, 0x6d, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xf8,
  0xec, 0xab, 0xb4, 0x78, 0x4b, 0x98, 0x31, 0x20, 0xf2, 0x02, 0x82, 0x05,
  0xb4, 0x21, 0xbf, 0x02, 0xc0, 0x8c, 0x01, 0x91, 0x17, 0x0e, 0x2c, 0xa0,
  0xcd, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x28, 0x25, 0xe6, 0x0f, 0xa5,
  0xf5, 0x27, 0x6c, 0x33, 0x63, 0x40, 0xdc, 0xc5, 0x02, 0x0b, 0x68, 0x33,
  0xdc, 0x60, 0xb9, 0x97, 0x18, 0xcc, 0x18, 0x10, 0x7b, 0xa1, 0x06, 0xb0,
  0x80, 0x36, 0xd3, 0x0d, 0x10, 0x78, 0x05, 0x33, 0x06, 0xc4, 0x5e, 0x80,
  0x01, 0x2c, 0xa0, 0xcd, 0x74, 0x03, 0x11, 0x5e, 0xc2, 0x84, 0x01, 0x30,
  0x62, 0xe0, 0x00, 0x20, 0x08, 0x06, 0x61, 0xa0, 0x5f, 0xa9, 0x15, 0x5a,
  0xac, 0xb0, 0x0a, 0xe6, 0x25, 0x04, 0x82, 0x70, 0x5a, 0x33, 0x06, 0xc4,
  0x5e, 0x78, 0xb0, 0x80, 0x36, 0x24, 0x5a, 0x00, 0x98, 0x31, 0x20, 0xf8,
  0x22, 0x80, 0x05, 0xb4, 0xa1, 0xd1, 0x02, 0xc0, 0x8c, 0x01, 0x61, 0x1a,
  0xc1, 0x1c, 0x00, 0x38, 0x61, 0x00, 0x84, 0x03, 0x01, 0x00, 0x00, 0x00,
  0x8b, 0x02, 0x00, 0x00, 0xa4, 0x9f, 0x38, 0x08, 0xf8, 0x31, 0x4a, 0x63,
  0xa3, 0x2b, 0x93, 0x43, 0x7a, 0x93, 0x4b, 0xd3, 0x7b, 0x73, 0xa3, 0x0b,
  0x63, 0x63, 0xcb, 0x03, 0x02, 0xca, 0x0a, 0xc2, 0xb2, 0xfa, 0x21, 0xb1,
  0x2b, 0x1b, 0xa3, 0x7b, 0x93, 0x03, 0x4a, 0x22, 0x81, 0x89, 0x01, 0x02,
  0x4a, 0x02, 0xd2, 0x72, 0x29, 0xc3, 0x4b, 0xa3, 0x23, 0xf9, 0xe8, 0x41,
  0xc0, 0x8f, 0x51, 0x1a, 0x1b, 0x5d, 0x99, 0x1c, 0xd2, 0x9b, 0x5c, 0x9a,
  0xde, 0x9b, 0x1b, 0x5d, 0x18, 0x1b, 0x5b, 0x1e, 0x10, 0x50, 0x56, 0x10,
  0x96, 0xd5, 0x0f, 0x89, 0x5d, 0xd9, 0x18, 0xdd, 0x9b, 0x1c, 0x50, 0x12,
  0x09, 0x4c, 0x0c, 0x10, 0x50, 0x12, 0x90, 0x96, 0x4b, 0x19, 0x5e, 0x1a,
  0x9d, 0x0b, 0xdb, 0xdb, 0x1b, 0x5c, 0x19, 0x5e, 0x1a, 0x1d, 0xa9, 0xe8,
  0x0d, 0x02, 0x7e, 0x8c, 0xd2, 0xd8, 0xe8, 0xca, 0xe4, 0xac, 0xca, 0xe4,
  0xe8, 0xd2, 0xc6, 0xc2, 0xd8, 0xd8, 0xf2, 0x80, 0x80, 0xb2, 0x82, 0xb0,
  0xac, 0x7e, 0x48, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4, 0x80, 0x92, 0x48,
  0x60, 0x62, 0x80, 0x80, 0x60, 0x80, 0xb4, 0x5c, 0xca, 0xf0, 0xd2, 0xe8,
  0x48, 0x3d, 0xa5, 0xe0, 0x12, 0xf0, 0x63, 0x94, 0xc6, 0x46, 0x57, 0x26,
  0x87, 0xf4, 0x26, 0x97, 0xa6, 0xf7, 0xe6, 0x46, 0x17, 0xc6, 0xc6, 0x96,
  0x07, 0x04, 0x94, 0x15, 0x84, 0x65, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46,
  0xf7, 0x26, 0x07, 0x94, 0x44, 0x02, 0x13, 0x03, 0x04, 0x94, 0x04, 0xa4,
  0xe5, 0x52, 0x86, 0x97, 0x46, 0xe7, 0xc2, 0xf6, 0xf6, 0x06, 0x57, 0x86,
  0x97, 0x46, 0xf7, 0x35, 0x26, 0x97, 0x46, 0xf7, 0x55, 0x46, 0x76, 0x56,
  0x46, 0x22, 0xd2, 0x03, 0x97, 0x80, 0x1f, 0xa3, 0x34, 0x36, 0xba, 0x32,
  0x39, 0xab, 0x32, 0x39, 0xba, 0xb4, 0xb1, 0x30, 0x36, 0xb6, 0x3c, 0x20,
  0xa0, 0xac, 0x20, 0x2c, 0xab, 0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37,
  0x39, 0xa0, 0x24, 0x12, 0x98, 0x18, 0x20, 0x20, 0x18, 0x20, 0x2d, 0x97,
  0x32, 0xbc, 0x34, 0xba, 0xaf, 0x31, 0xb9, 0x34, 0xba, 0xaf, 0x32, 0xb2,
  0xb3, 0xb2, 0xd3, 0x78, 0xfc, 0x5f, 0x88, 0x90, 0xe9, 0x27, 0x06, 0x83,
  0xf0, 0x6b, 0xba, 0x3f, 0x94, 0xc7, 0xff, 0x85, 0x08, 0x99, 0x7e, 0x62,
  0x30, 0x08, 0xbf, 0xc6, 0xef, 0xb3, 0x79, 0xfc, 0x5f, 0x88, 0x90, 0xe9,
  0x27, 0x06, 0x83, 0xf0, 0xeb, 0x7d, 0x3f, 0x06, 0xc7, 0xff, 0x85, 0x08,
  0x99, 0x7e, 0x62, 0x30, 0x08, 0x7f, 0xcf, 0x0d, 0xac, 0xf0, 0x11, 0xda,
  0xa6, 0x8d, 0xac, 0xf0, 0x11, 0xda, 0xb6, 0x0d, 0xad, 0xf0, 0x11, 0xda,
  0xce, 0x0d, 0x71, 0x20, 0xf1, 0x11, 0xda, 0xe6, 0xfd, 0xda, 0xae, 0x8d,
  0x92, 0x20, 0xf1, 0x11, 0xda, 0xe6, 0xfd, 0x3a, 0xcf, 0x0d, 0x0e, 0xf1,
  0x11, 0xda, 0xe6, 0xfd, 0xfc, 0x36, 0xfe, 0x00, 0xc4, 0x47, 0x68, 0x9b,
  0xf7, 0xf9, 0xdd, 0x42, 0x0b, 0x16, 0x1f, 0xa1, 0x6d, 0xde, 0x5f, 0x04,
  0x49, 0x02, 0xcc, 0x71, 0x20, 0xf1, 0x11, 0xfa, 0xae, 0xfd, 0xda, 0xbe,
  0x4d, 0x93, 0x20, 0xf1, 0x11, 0xfa, 0xae, 0xfd, 0x3a, 0xdf, 0xcd, 0x0e,
  0xf1, 0x11, 0xfa, 0xae, 0xfd, 0x3c, 0x37, 0x41, 0x01, 0xc4, 0x47, 0xe8,
  0xbb, 0xf6, 0xf9, 0xde, 0x20, 0x07, 0x12, 0x1f, 0xa1, 0xef, 0xdb, 0xaf,
  0xed, 0xdc, 0x38, 0x09, 0x12, 0x1f, 0xa1, 0xef, 0xdb, 0xaf, 0xf3, 0xde,
  0xf0, 0x10, 0x1f, 0xa1, 0xef, 0xdb, 0xcf, 0x77, 0x23, 0x14, 0x40, 0x7c,
  0x84, 0xbe, 0x6f, 0xbf, 0xaf, 0x2d, 0x74, 0x20, 0xf1, 0x11, 0xfa, 0xd6,
  0xfd, 0xda, 0xde, 0xad, 0x95, 0x20, 0xf1, 0x11, 0xfa, 0xd6, 0xfd, 0x5a,
  0xaf, 0x2d, 0x31, 0x00, 0xf1, 0x11, 0xfa, 0xd6, 0xfd, 0xbc, 0xb7, 0x4a,
  0x01, 0xc4, 0x47, 0xe8, 0x5b, 0xf7, 0xfb, 0xdb, 0x7c, 0x0b, 0x0a, 0x1f,
  0xa1, 0x71, 0xda, 0xc2, 0x0a, 0x1f, 0xa9, 0xed, 0xda, 0xca, 0x0a, 0x1f,
  0xa9, 0xed, 0xdb, 0xd2, 0x0a, 0x1f, 0xa9, 0x6d, 0xdd, 0x12, 0x07, 0x12,
  0x1f, 0xa9, 0xed, 0xde, 0xaf, 0x6d, 0xdb, 0x2a, 0x09, 0x12, 0x1f, 0xa9,
  0xed, 0xde, 0xaf, 0x73, 0xdd, 0xe2, 0x10, 0x1f, 0xa9, 0xed, 0xde, 0xcf,
  0x71, 0xeb, 0x0f, 0x40, 0x7c, 0xa4, 0xb6, 0x7b, 0x9f, 0xe7, 0x0d, 0xb4,
  0x60, 0xf1, 0x91, 0xda, 0xee, 0xfd, 0x45, 0x90, 0x24, 0xc0, 0x1e, 0x07,
  0x12, 0x1f, 0xa9, 0x6f, 0xdb, 0xaf, 0x6d, 0xdc, 0x36, 0x09, 0x12, 0x1f,
  0xa9, 0x6f, 0xdb, 0xaf, 0x73, 0xde, 0xee, 0x10, 0x1f, 0xa9, 0x6f, 0xdb,
  0xcf, 0x75, 0x1b, 0x14, 0x40, 0x7c, 0xa4, 0xbe, 0x6d, 0xbf, 0xa7, 0x2d,
  0x72, 0x20, 0xf1, 0x91, 0xfa, 0xc6, 0xfd, 0xda, 0xd6, 0xad, 0x93, 0x20,
  0xf1, 0x91, 0xfa, 0xc6, 0xfd, 0x5a, 0xa7, 0x2d, 0x0f, 0xf1, 0x91, 0xfa,
  0xc6, 0xfd, 0x9c, 0xb7, 0x42, 0x01, 0xc4, 0x47, 0xea, 0x1b, 0xf7, 0x7b,
  0xdb, 0x44, 0x07, 0x12, 0x1f, 0xa9, 0x6f, 0xde, 0xaf, 0x6d, 0xde, 0x5c,
  0x09, 0x12, 0x1f, 0xa9, 0x6f, 0xde, 0xaf, 0x75, 0xdb, 0x14, 0x03, 0x10,
  0x1f, 0xa9, 0x6f, 0xde, 0xd7, 0x69, 0xb3, 0x14, 0x40, 0x7c, 0xa4, 0xbe,
  0x79, 0xbf, 0xc7, 0xed, 0xb7, 0xa0, 0xf0, 0x91, 0x1a, 0xb7, 0x0f, 0xc8,
  0xf0, 0x97, 0xc8, 0x7f, 0x8e, 0xb3, 0x58, 0xfc, 0x25, 0xf2, 0x9f, 0x63,
  0xf7, 0x6b, 0x9a, 0x3e, 0x92, 0xc5, 0x5f, 0x22, 0xff, 0x39, 0x76, 0xbf,
  0xbe, 0xf1, 0x93, 0x59, 0xfc, 0x25, 0xf2, 0x9f, 0x63, 0xf7, 0x6b, 0x9d,
  0x3f, 0x04, 0xc5, 0x5f, 0x22, 0xff, 0x39, 0x76, 0x5f, 0xd7, 0x2f, 0xe0,
  0xf0, 0x97, 0xc8, 0x7f, 0x8e, 0xde, 0x0e, 0x0d, 0x88, 0xcf, 0x04, 0x2e,
  0xe3, 0x2e, 0x70, 0x4a, 0xc2, 0x00, 0x04, 0xec, 0xab, 0xf5, 0xd6, 0xf9,
  0x6e, 0xdb, 0xb2, 0x0b, 0xa0, 0x92, 0x30, 0x00, 0x01, 0xfb, 0x6a, 0xbd,
  0x75, 0xbe, 0xdb, 0xae, 0x75, 0xe3, 0x17, 0x90, 0x4a, 0xc2, 0x00, 0x04,
  0xec, 0xbb, 0xed, 0xd6, 0xf9, 0x6a, 0xdd, 0xaf, 0xeb, 0xde, 0x10, 0x09,
  0xa4, 0x92, 0x30, 0x00, 0x01, 0xfb, 0x6e, 0xbb, 0x75, 0xbe, 0x5a, 0xf7,
  0xeb, 0xfc, 0x36, 0xca, 0x02, 0xa9, 0x24, 0x0c, 0x40, 0xc0, 0xbe, 0xdb,
  0x6e, 0x9d, 0xaf, 0xd6, 0xfd, 0x9a, 0xdf, 0x0d, 0x3e, 0x20, 0x2a, 0x09,
  0x03, 0x10, 0xb0, 0xef, 0xb6, 0x5b, 0xe7, 0xab, 0x75, 0x9f, 0xcf, 0x4d,
  0x5f, 0x80, 0x2a, 0x09, 0x03, 0x10, 0xb0, 0xef, 0xb6, 0x5b, 0xe7, 0xab,
  0xf5, 0x3a, 0xf7, 0xeb, 0x9a, 0x37, 0x43, 0x02, 0xaa, 0x24, 0x0c, 0x40,
  0xc0, 0xbe, 0xdb, 0x6e, 0x9d, 0xaf, 0xd6, 0xeb, 0xdc, 0xaf, 0x73, 0xdb,
  0x24, 0x0b, 0xa8, 0x92, 0x30, 0x00, 0x01, 0xfb, 0x6e, 0xbb, 0x75, 0xbe,
  0x5a, 0xaf, 0x73, 0xbf, 0xe6, 0x75, 0x73, 0x0f, 0x98, 0x4a, 0xc2, 0x00,
  0x04, 0xec, 0xbb, 0xed, 0xd6, 0xf9, 0x6a, 0xbd, 0xce, 0x7d, 0x1e, 0x37,
  0xdb, 0x81, 0xa7, 0x25, 0xae, 0x89, 0x8a, 0x88, 0xd2, 0x01, 0x06, 0xbf,
  0xb6, 0x7b, 0x13, 0x26, 0x78, 0x5a, 0xe2, 0x9a, 0xa8, 0x88, 0x28, 0x1d,
  0x60, 0xf0, 0x6b, 0xfd, 0x36, 0xcf, 0x00, 0xa7, 0x25, 0xae, 0x89, 0x8a,
  0x88, 0xd2, 0x01, 0x06, 0x5f, 0xaf, 0x4d, 0x55, 0xc0, 0x69, 0x89, 0x6b,
  0xa2, 0x22, 0xa2, 0x74, 0x80, 0xc1, 0xef, 0x73, 0xeb, 0x2f, 0x20, 0x5c,
  0x13, 0xb8, 0xcc, 0xbe, 0xc0, 0x70, 0x4d, 0xe0, 0xaa, 0x6f, 0x5b, 0x17,
  0x40, 0x5c, 0x13, 0x69, 0xfc, 0xba, 0xc6, 0xed, 0x7e, 0x00, 0x71, 0x4d,
  0xa4, 0xf1, 0x6b, 0x9c, 0xb7, 0xc1, 0x02, 0xc4, 0x35, 0x91, 0xc6, 0xaf,
  0x79, 0xdb, 0xbe, 0x03, 0x0e, 0xd7, 0x44, 0x1a, 0x9f, 0xa7, 0x2d, 0x5d,
  0x80, 0x82, 0x81, 0x8a, 0x00, 0x89, 0xa9, 0x04, 0x1a, 0x82, 0x73, 0xa8,
  0x66, 0xf2, 0xeb, 0xfa, 0xb6, 0xfa, 0x01, 0x0a, 0x06, 0x2a, 0x02, 0x24,
  0xa6, 0x12, 0x68, 0x08, 0xce, 0xa1, 0x9a, 0xc9, 0xaf, 0xf1, 0xdd, 0x02,
  0x0b, 0x28, 0x18, 0xa8, 0x08, 0x90, 0x98, 0x4a, 0xa0, 0x21, 0x38, 0x87,
  0x6a, 0x26, 0xbf, 0xe6, 0x6b, 0xeb, 0x0e, 0x98, 0x60, 0xa0, 0x22, 0x40,
  0x62, 0x2a, 0x81, 0x86, 0xe0, 0x1c, 0xaa, 0x99, 0xfc, 0xbd, 0xb7, 0x35,
  0x08, 0x06, 0x2a, 0x02, 0x24, 0xa6, 0x12, 0x68, 0x08, 0xb1, 0x19, 0x88,
  0xcb, 0xa2, 0x05, 0x24, 0x18, 0xa8, 0x88, 0x95, 0x00, 0x86, 0x12, 0x68,
  0x08, 0x6d, 0xf2, 0x6b, 0x3a, 0xb7, 0xee, 0x01, 0x09, 0x06, 0x2a, 0x62,
  0x25, 0x80, 0xa1, 0x04, 0x1a, 0x42, 0x9b, 0xfc, 0xfa, 0xee, 0x2d, 0x9d,
  0x40, 0x82, 0x81, 0x8a, 0x58, 0x09, 0x60, 0x28, 0x81, 0x86, 0xd0, 0x26,
  0xbf, 0xde, 0x6f, 0x2b, 0x0e, 0x88, 0x60, 0xa0, 0x22, 0x56, 0x02, 0x18,
  0x4a, 0xa0, 0x21, 0xb4, 0xc9, 0xdf, 0x6b, 0x83, 0x17, 0xa0, 0x60, 0xa0,
  0x22, 0x56, 0x02, 0x18, 0x4a, 0xa0, 0x21, 0xb4, 0xa9, 0xae, 0xfd, 0xba,
  0xd6, 0x8d, 0x7f, 0x80, 0x82, 0x81, 0x8a, 0x58, 0x09, 0x60, 0x28, 0x81,
  0x86, 0xd0, 0xa6, 0xba, 0xf6, 0xeb, 0x9c, 0x36, 0xc4, 0x02, 0x0a, 0x06,
  0x2a, 0x62, 0x25, 0x80, 0xa1, 0x04, 0x1a, 0x42, 0x9b, 0xea, 0xda, 0xaf,
  0x79, 0xdc, 0xc8, 0x03, 0x26, 0x18, 0xa8, 0x88, 0x95, 0x00, 0x86, 0x12,
  0x68, 0x08, 0x6d, 0xaa, 0x6b, 0x9f, 0xb7, 0xad, 0x5d, 0x80, 0x82, 0x81,
  0x8a, 0x58, 0x09, 0x60, 0x28, 0x81, 0x86, 0xd0, 0xa6, 0xda, 0xf6, 0xeb,
  0x3a, 0xb7, 0xfc, 0x01, 0x0a, 0x06, 0x2a, 0x62, 0x25, 0x80, 0xa1, 0x04,
  0x1a, 0x42, 0x9b, 0x6a, 0xdb, 0xaf, 0xf1, 0xde, 0x0a, 0x0b, 0x28, 0x18,
  0xa8, 0x88, 0x95, 0x00, 0x86, 0x12, 0x68, 0x08, 0x6d, 0xaa, 0x6d, 0xbf,
  0xe6, 0x6f, 0x0b, 0x0f, 0x98, 0x60, 0xa0, 0x22, 0x56, 0x02, 0x18, 0x4a,
  0xa0, 0x21, 0xb4, 0xa9, 0xb6, 0x7d, 0xbe, 0xb6, 0x79, 0x01, 0x0a, 0x06,
  0x2a, 0x62, 0x25, 0x80, 0xa1, 0x04, 0x1a, 0x42, 0x9b, 0x6a, 0xdc, 0xaf,
  0xeb, 0xdd, 0xfe, 0x07, 0x28, 0x18, 0xa8, 0x88, 0x95, 0x00, 0x86, 0x12,
  0x68, 0x08, 0x6d, 0xaa, 0x71, 0xbf, 0xce, 0x6b, 0x5b, 0x2c, 0xa0, 0x60,
  0xa0, 0x22, 0x56, 0x02, 0x18, 0x4a, 0xa0, 0x21, 0xb4, 0xa9, 0xc6, 0xfd,
  0x9a, 0xcf, 0xed, 0x3c, 0x60, 0x82, 0x81, 0x8a, 0x58, 0x09, 0x60, 0x28,
  0x81, 0x86, 0xd0, 0xa6, 0x1a, 0xf7, 0xf9, 0xdb, 0x9c, 0x05, 0x12, 0xc1,
  0x47, 0x7c, 0xda, 0xaf, 0x69, 0xdc, 0xb4, 0x07, 0x12, 0xc1, 0x47, 0x7c,
  0xda, 0xaf, 0x6f, 0xde, 0xcc, 0x09, 0x12, 0xc1, 0x47, 0x7c, 0xda, 0xaf,
  0x77, 0xdb, 0x84, 0x03, 0x10, 0xc1, 0x47, 0x7c, 0xda, 0xdf, 0x69, 0x6b,
  0x52, 0x84, 0xe0, 0x17, 0x02, 0xaa, 0x28, 0x88, 0xc8, 0x98, 0x28, 0xe3,
  0x47, 0x9a, 0x17, 0x58, 0x28, 0xe2, 0x9f, 0x88, 0x6b, 0xa2, 0x22, 0xe2,
  0xb7, 0x07, 0x5b, 0xc2, 0x8c, 0xdf, 0xa1, 0x26, 0x93, 0x00, 0x9a, 0x17,
  0x88, 0x10, 0xa0, 0x11, 0x88, 0xdf, 0xd5, 0xde, 0xdf, 0x1e, 0xec, 0x78,
  0x20, 0x6a, 0x28, 0xe6, 0x05, 0x16, 0x8a, 0x90, 0x7c, 0xc4, 0xa7, 0xfd,
  0xfa, 0xbe, 0x6d, 0x9a, 0x20, 0x6a, 0x28, 0xe6, 0x05, 0x16, 0x8a, 0x90,
  0x7c, 0xc4, 0xa7, 0xfd, 0x5a, 0xdf, 0xed, 0x35, 0x00, 0x6a, 0x28, 0xe6,
  0x05, 0x16, 0x8a, 0x90, 0x7c, 0xc4, 0xa7, 0x7d, 0x3d, 0xb7, 0x5d, 0x01,
  0xa8, 0xa1, 0x98, 0x17, 0x58, 0x28, 0x42, 0xf2, 0x11, 0x9f, 0xf6, 0xfb,
  0xde, 0x9a, 0x05, 0xa2, 0x86, 0x62, 0x5e, 0x60, 0xa1, 0x08, 0xc9, 0x47,
  0xfc, 0xda, 0xaf, 0xe9, 0xdb, 0xb2, 0x07, 0xa2, 0x86, 0x62, 0x5e, 0x60,
  0xa1, 0x08, 0xc9, 0x47, 0xfc, 0xda, 0xaf, 0xef, 0xdd, 0xca, 0x09, 0xa2,
  0x86, 0x62, 0x5e, 0x60, 0xa1, 0x08, 0xc9, 0x47, 0xfc, 0xda, 0xaf, 0xf7,
  0xda, 0x82, 0x03, 0xa0, 0x86, 0x62, 0x5e, 0x60, 0xa1, 0x08, 0xc9, 0x47,
  0xfc, 0xda, 0xd7, 0x7b, 0xeb, 0x16, 0x88, 0x1a, 0x8a, 0x79, 0x81, 0x85,
  0x22, 0x24, 0x1f, 0xf1, 0x6d, 0xbf, 0xa6, 0x79, 0x4b, 0x1f, 0x88, 0x1a,
  0x8a, 0x79, 0x81, 0x85, 0x22, 0x24, 0x1f, 0xf1, 0x6d, 0xbf, 0xc6, 0x6d,
  0xab, 0x27, 0x88, 0x1a, 0x8a, 0x79, 0x81, 0x85, 0x22, 0x24, 0x1f, 0xf1,
  0x6d, 0xbf, 0xde, 0x75, 0x8b, 0x0e, 0x80, 0x1a, 0x8a, 0x79, 0x81, 0x85,
  0x22, 0x24, 0x1f, 0xf1, 0x6d, 0x7f, 0xc7, 0xad, 0x5c, 0x20, 0x6a, 0x28,
  0xe6, 0x05, 0x16, 0x8a, 0x90, 0x7c, 0xc4, 0xbf, 0xfd, 0xba, 0xb6, 0x2d,
  0x7e, 0x20, 0x6a, 0x28, 0xe6, 0x05, 0x16, 0x8a, 0x90, 0x7c, 0xc4, 0xbf,
  0xfd, 0x1a, 0xd7, 0xad, 0x9f, 0x20, 0x6a, 0x28, 0xe6, 0x05, 0x16, 0x8a,
  0x90, 0x7c, 0xc4, 0xbf, 0xfd, 0x9a, 0xa7, 0x2d, 0x3b, 0x00, 0x6a, 0x28,
  0xe6, 0x05, 0x16, 0x8a, 0x90, 0x7c, 0xc4, 0xbf, 0xfd, 0x9d, 0x37, 0xe4,
  0x82, 0xa7, 0xa1, 0x98, 0x17, 0x58, 0x28, 0x42, 0xf2, 0x11, 0x3f, 0xf7,
  0x69, 0x43, 0x2f, 0x78, 0x1a, 0x8a, 0x79, 0x81, 0x85, 0x22, 0x24, 0x1f,
  0xf1, 0x73, 0xbf, 0x36, 0xf9, 0x82, 0xaa, 0xa1, 0x98, 0x17, 0x58, 0x28,
  0x42, 0xf2, 0x11, 0x3f, 0xf7, 0x6b, 0x7f, 0x11, 0x24, 0x09, 0xb0, 0xf9,
  0x82, 0xa7, 0xa1, 0x98, 0x17, 0x58, 0x28, 0x42, 0xf2, 0x11, 0x3f, 0xf7,
  0x6d, 0x5b, 0x2e, 0x28, 0x22, 0x1f, 0xf1, 0x69, 0x33, 0x1e, 0xb8, 0x24,
  0x88, 0x02, 0x22, 0x62, 0x78, 0x81, 0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11,
  0x9f, 0xf6, 0xeb, 0xdb, 0x36, 0x69, 0x82, 0x4b, 0x82, 0x28, 0x20, 0x22,
  0x86, 0x17, 0x58, 0x28, 0x82, 0xa5, 0x18, 0x1f, 0xf1, 0x69, 0xbf, 0xd6,
  0x75, 0x73, 0x0d, 0xb0, 0x24, 0x88, 0x02, 0x22, 0x62, 0x78, 0x81, 0x85,
  0x22, 0x58, 0x8a, 0xf1, 0x11, 0x9f, 0xf6, 0x75, 0xdc, 0x74, 0x05, 0x2c,
  0x09, 0xa2, 0x80, 0x88, 0x18, 0x5e, 0x60, 0xa1, 0x08, 0x96, 0x62, 0x7c,
  0xc4, 0xa7, 0xfd, 0x9e, 0x37, 0x66, 0x81, 0x4b, 0x82, 0x28, 0x20, 0x22,
  0x86, 0x17, 0x58, 0x28, 0x82, 0xa5, 0x18, 0x1f, 0xf1, 0x6b, 0xbf, 0xa6,
  0x6d, 0xc3, 0x1e, 0xb8, 0x24, 0x88, 0x02, 0x22, 0x62, 0x78, 0x81, 0x85,
  0x22, 0x58, 0x8a, 0xf1, 0x11, 0xbf, 0xf6, 0xeb, 0x5b, 0x37, 0x72, 0x82,
  0x4b, 0x82, 0x28, 0x20, 0x22, 0x86, 0x17, 0x58, 0x28, 0x82, 0xa5, 0x18,
  0x1f, 0xf1, 0x6b, 0xbf, 0xde, 0x69, 0x03, 0x0e, 0xb0, 0x24, 0x88, 0x02,
  0x22, 0x62, 0x78, 0x81, 0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11, 0xbf, 0xf6,
  0x75, 0xde, 0xb8, 0x05, 0x2e, 0x09, 0xa2, 0x80, 0x88, 0x18, 0x5e, 0x60,
  0xa1, 0x08, 0x96, 0x62, 0x7c, 0xc4, 0xb7, 0xfd, 0x9a, 0xde, 0x0d, 0x7d,
  0xe0, 0x92, 0x20, 0x0a, 0x88, 0x88, 0xe1, 0x05, 0x16, 0x8a, 0x60, 0x29,
  0xc6, 0x47, 0x7c, 0xdb, 0xaf, 0xf1, 0xda, 0xe8, 0x09, 0x2e, 0x09, 0xa2,
  0x80, 0x88, 0x18, 0x5e, 0x60, 0xa1, 0x08, 0x96, 0x62, 0x7c, 0xc4, 0xb7,
  0xfd, 0x7a, 0xcf, 0x0d, 0x3a, 0xc0, 0x92, 0x20, 0x0a, 0x88, 0x88, 0xe1,
  0x05, 0x16, 0x8a, 0x60, 0x29, 0xc6, 0x47, 0x7c, 0xdb, 0xdf, 0x6f, 0x23,
  0x17, 0xb8, 0x24, 0x88, 0x02, 0x22, 0x62, 0x78, 0x81, 0x85, 0x22, 0x58,
  0x8a, 0xf1, 0x11, 0xff, 0xf6, 0xeb, 0xba, 0x36, 0xf8, 0x81, 0x4b, 0x82,
  0x28, 0x20, 0x22, 0x86, 0x17, 0x58, 0x28, 0x82, 0xa5, 0x18, 0x1f, 0xf1,
  0x6f, 0xbf, 0xc6, 0x73, 0xe3, 0x27, 0xb8, 0x24, 0x88, 0x02, 0x22, 0x62,
  0x78, 0x81, 0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11, 0xff, 0xf6, 0xeb, 0xbd,
  0x37, 0xec, 0x00, 0x4b, 0x82, 0x28, 0x20, 0x22, 0x86, 0x17, 0x58, 0x28,
  0x82, 0xa5, 0x18, 0x1f, 0xf1, 0x6f, 0x7f, 0xdf, 0x2d, 0xb9, 0xa0, 0x92,
  0x20, 0x0a, 0x88, 0x88, 0xe1, 0x05, 0x16, 0x8a, 0x60, 0x29, 0xc6, 0x47,
  0x7c, 0xdc, 0xa7, 0x2d, 0xbd, 0xa0, 0x92, 0x20, 0x0a, 0x88, 0x88, 0xe1,
  0x05, 0x16, 0x8a, 0x60, 0x29, 0xc6, 0x47, 0x7c, 0xdc, 0xaf, 0x2d, 0xbe,
  0x60, 0x93, 0x20, 0x0a, 0x88, 0x88, 0xe1, 0x05, 0x16, 0x8a, 0x60, 0x29,
  0xc6, 0x47, 0x7c, 0xdc, 0xaf, 0xfd, 0x45, 0x90, 0x24, 0xc0, 0xe8, 0x0b,
  0x2a, 0x09, 0xa2, 0x80, 0x88, 0x18, 0x5e, 0x60, 0xa1, 0x08, 0x96, 0x62,
  0x7c, 0xc4, 0xc7, 0x7d, 0xdb, 0x72, 0x07, 0x9a, 0x0a, 0x58, 0x28, 0xc2,
  0x47, 0x7c, 0xda, 0xaf, 0x6f, 0xda, 0x8a, 0x09, 0x9a, 0x0a, 0x58, 0x28,
  0xc2, 0x47, 0x7c, 0xda, 0xaf, 0x75, 0xdc, 0x42, 0x03, 0x98, 0x0a, 0x58,
  0x28, 0xc2, 0x47, 0x7c, 0xda, 0xd7, 0x6d, 0x6b, 0x15, 0x60, 0x2a, 0x60,
  0xa1, 0x08, 0x1f, 0xf1, 0x69, 0xbf, 0xd7, 0xad, 0x78, 0x00, 0xaa, 0x80,
  0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11, 0x9f, 0xf6, 0xeb, 0xbb, 0xb6, 0x68,
  0x02, 0xa8, 0x02, 0x16, 0x8a, 0x60, 0x29, 0xc6, 0x47, 0x7c, 0xda, 0xaf,
  0xf5, 0xdc, 0x5a, 0x03, 0x9e, 0x0a, 0x58, 0x28, 0x82, 0xa5, 0x18, 0x1f,
  0xf1, 0x69, 0x5f, 0xbf, 0x2d, 0x57, 0xe0, 0xa9, 0x80, 0x85, 0x22, 0x58,
  0x8a, 0xf1, 0x11, 0x9f, 0xf6, 0xfb, 0xdd, 0x96, 0x05, 0xa0, 0x0a, 0x58,
  0x28, 0x82, 0xa5, 0x18, 0x1f, 0xf1, 0x6b, 0xbf, 0xa6, 0x6b, 0xbb, 0x1e,
  0x80, 0x2a, 0x60, 0xa1, 0x08, 0x96, 0x62, 0x7c, 0xc4, 0xaf, 0xfd, 0xfa,
  0xce, 0x6d, 0x9c, 0x00, 0xaa, 0x80, 0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11,
  0xbf, 0xf6, 0x6b, 0xbd, 0xb7, 0xdf, 0x80, 0xa7, 0x02, 0x16, 0x8a, 0x60,
  0x29, 0xc6, 0x47, 0xfc, 0xda, 0xd7, 0x77, 0xdb, 0x16, 0x80, 0x2a, 0x60,
  0xa1, 0x08, 0x96, 0x62, 0x7c, 0xc4, 0xb7, 0xfd, 0x9a, 0xd6, 0xed, 0x7c,
  0x00, 0xaa, 0x80, 0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11, 0xdf, 0xf6, 0x6b,
  0x9c, 0xb6, 0x79, 0x02, 0xa8, 0x02, 0x16, 0x8a, 0x60, 0x29, 0xc6, 0x47,
  0x7c, 0xdb, 0xaf, 0x77, 0xdc, 0x9e, 0x03, 0x9e, 0x0a, 0x58, 0x28, 0x82,
  0xa5, 0x18, 0x1f, 0xf1, 0x6d, 0x7f, 0xb7, 0x4d, 0xb9, 0xc0, 0xa9, 0x80,
  0x85, 0x22, 0x58, 0x8a, 0xf1, 0x11, 0xff, 0xf6, 0x69, 0x53, 0x2f, 0x70,
  0x2a, 0x60, 0xa1, 0x08, 0x96, 0x62, 0x7c, 0xc4, 0xbf, 0xfd, 0xda, 0xe0,
  0x0b, 0xa8, 0x0a, 0x58, 0x28, 0x82, 0xa5, 0x18, 0x1f, 0xf1, 0x6f, 0xbf,
  0xf6, 0x17, 0x41, 0x92, 0x00, 0xab, 0x2f, 0x70, 0x2a, 0x60, 0xa1, 0x08,
  0x96, 0x62, 0x7c, 0xc4, 0xbf, 0x7d, 0xdb, 0xc6, 0x05, 0xa4, 0x0a, 0x58,
  0x28, 0x82, 0xa5, 0x18, 0x1f, 0xf1, 0xef, 0x9a, 0xf6, 0xeb, 0x9a, 0xb6,
  0xf7, 0x01, 0xa9, 0x02, 0x16, 0x8a, 0x60, 0x29, 0xc6, 0x47, 0xfc, 0xbb,
  0xa6, 0xfd, 0x1a, 0xc7, 0x6d, 0x9f, 0x40, 0xaa, 0x80, 0x85, 0x22, 0x58,
  0x8a, 0xf1, 0x11, 0xff, 0xae, 0x69, 0xbf, 0xde, 0x79, 0xbb, 0x0e, 0x88,
  0x2a, 0x60, 0xa1, 0x08, 0x96, 0x62, 0x7c, 0xc4, 0xbf, 0x6b, 0xda, 0xdf,
  0x75, 0x00, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x5b, 0x86, 0x16, 0x79, 0xc2, 0x66, 0xcb, 0x30, 0x3e, 0x4f, 0xd8, 0x6c,
  0x19, 0xf2, 0xea, 0x09, 0x9b, 0x2d, 0xc3, 0xcb, 0x3d, 0x61, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0x34, 0x0a, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00, 0x8d, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x1c, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x84, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0xc0,
  0x00, 0xd2, 0x06, 0x63, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x80,
  0x6a, 0x03, 0x41, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x65, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xcc, 0xc1, 0x1c,
  0x01, 0x18, 0x24, 0x60, 0x00, 0x30, 0x88, 0x10, 0x0c, 0x19, 0x00, 0xd0,
  0x30, 0x02, 0x50, 0x82, 0x82, 0x8c, 0x32, 0x00, 0x00, 0x40, 0x48, 0x11,
  0x00, 0x80, 0x94, 0x32, 0x14, 0x00, 0x40, 0xcc, 0x0c, 0xc0, 0x4d, 0xc3,
  0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc5,
  0x6d, 0xa3, 0xc2, 0x71, 0x1c, 0x07, 0x98, 0x23, 0x40, 0x08, 0xba, 0x67,
  0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14,
  0x44, 0x45, 0x79, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x0a,
  0xe1, 0x00, 0x0e, 0x40, 0x55, 0x21, 0x00, 0x00, 0x00, 0xe8, 0x2a, 0x03,
  0x00, 0x38, 0x94, 0x15, 0xc2, 0x01, 0x1c, 0x87, 0xb6, 0xb2, 0x14, 0x80,
  0x04, 0x00, 0x80, 0xe3, 0x38, 0x0e, 0x44, 0x5d, 0x19, 0x1c, 0x00, 0xa0,
  0xef, 0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62,
  0x25, 0x26, 0x1f, 0xb9, 0x6d, 0x44, 0x00, 0x00, 0x00, 0x14, 0x22, 0x04,
  0x24, 0x80, 0xc4, 0x39, 0x82, 0xa0, 0x18, 0x12, 0x00, 0x01, 0x00, 0x49,
  0xe5, 0x40, 0xc0, 0x4c, 0x61, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30,
  0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50,
  0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40,
  0x0f, 0x7e, 0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00, 0x0f, 0xf3, 0xf0,
  0x0b, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x00, 0x66, 0xb2, 0xc6,
  0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0,
  0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xcc,
  0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0xc1, 0x0f, 0x90, 0xe0, 0xa0, 0x94,
  0x0e, 0x23, 0x08, 0xce, 0x4c, 0x64, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3,
  0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4,
  0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5,
  0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef,
  0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x20, 0x07, 0x7e, 0x00, 0x06, 0x7e,
  0x80, 0x82, 0x95, 0xd8, 0x61, 0x04, 0x01, 0x38, 0x35, 0x90, 0xa6, 0x88,
  0x12, 0x26, 0x9f, 0x03, 0x16, 0x81, 0x5a, 0x80, 0x89, 0x30, 0x09, 0xa0,
  0x79, 0x81, 0x08, 0x01, 0x1a, 0x81, 0xe0, 0x9c, 0x46, 0x9a, 0x80, 0x66,
  0xda, 0xa8, 0xa2, 0x20, 0x22, 0x74, 0xb8, 0x00, 0x00, 0x00, 0x80, 0x73,
  0x82, 0x10, 0xa0, 0xe0, 0x25, 0x78, 0x8e, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x44, 0x90, 0x21, 0x23,
  0x45, 0x44, 0x00, 0xe6, 0xd0, 0x01, 0x98, 0x39, 0x74, 0x00, 0xe6, 0x83,
  0x1b, 0x0c, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x20, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x51, 0x80, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x83, 0x00, 0x01, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x01, 0x02,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02,
  0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e,
  0x05, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x13, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x2a, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x5c, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x93, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x03, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x07, 0x04, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0f, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x62, 0x00,
  0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e,
  0x32, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x2c, 0x10, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0xa0, 0x0c, 0x46, 0x00, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x80, 0xca,
  0xa1, 0x14, 0x0a, 0xa2, 0x30, 0x0a, 0xa4, 0x10, 0x0a, 0xa5, 0x60, 0x0a,
  0xa7, 0x00, 0x21, 0xca, 0xa2, 0xb4, 0x0a, 0x95, 0xa1, 0xf0, 0x05, 0x8a,
  0x8e, 0xe4, 0x12, 0x04, 0x04, 0x22, 0x72, 0x04, 0x80, 0x86, 0x11, 0x00,
  0x52, 0x67, 0x00, 0xa8, 0x9d, 0x01, 0xa0, 0x77, 0x06, 0x80, 0xe0, 0x19,
  0x00, 0x8a, 0x67, 0x00, 0x28, 0x98, 0x01, 0x00, 0x79, 0x18, 0x00, 0x00,
  0xbb, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0xa0, 0x9a, 0x20, 0x00, 0xd6, 0x06, 0x61, 0x20, 0x26, 0x08, 0xc0, 0xb5,
  0x41, 0x30, 0x0c, 0x0a, 0x63, 0x73, 0x13, 0x04, 0x00, 0xdb, 0x30, 0x20,
  0x09, 0x31, 0x41, 0x50, 0x03, 0x37, 0x60, 0x72, 0xf6, 0x95, 0xe6, 0x66,
  0x15, 0xc6, 0x56, 0x57, 0x36, 0x41, 0x00, 0xb2, 0x09, 0x02, 0xa0, 0x6d,
  0x10, 0x0c, 0x67, 0x43, 0x62, 0x2c, 0x8c, 0x61, 0x0c, 0x8d, 0xf1, 0x6c,
  0x08, 0xa0, 0x09, 0x42, 0x1b, 0xbc, 0x01, 0xa3, 0xb3, 0xaf, 0xb7, 0x3a,
  0xba, 0xa6, 0xb2, 0x30, 0x37, 0xab, 0x30, 0xb9, 0xb4, 0x30, 0xb7, 0xb1,
  0xb2, 0x09, 0x02, 0x19, 0xb0, 0xc1, 0x86, 0xc5, 0x90, 0x26, 0xc3, 0x18,
  0x1a, 0x8a, 0xa2, 0x9e, 0x0d, 0x41, 0x35, 0x41, 0x88, 0x03, 0x39, 0xa0,
  0x30, 0x26, 0x36, 0x41, 0x00, 0xb6, 0x0d, 0x88, 0x71, 0x61, 0x86, 0x31,
  0x64, 0xc0, 0x86, 0x40, 0xdb, 0x40, 0x44, 0xd6, 0x06, 0x4c, 0x10, 0xde,
  0x00, 0x0e, 0xa8, 0xd0, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95, 0x11, 0xa5,
  0xb5, 0x4d, 0x10, 0x00, 0x6e, 0x82, 0x00, 0x74, 0x1b, 0x8c, 0xc4, 0x23,
  0x8c, 0x0f, 0x0c, 0xb8, 0xac, 0x95, 0xc9, 0xb9, 0x95, 0xb1, 0x5d, 0xa5,
  0x91, 0xd1, 0xa1, 0x4d, 0x10, 0x00, 0x6f, 0x83, 0x91, 0x88, 0x01, 0x31,
  0x06, 0x1f, 0x18, 0x90, 0x59, 0x2b, 0x93, 0x73, 0x2b, 0x63, 0x93, 0x0a,
  0x23, 0x4b, 0xab, 0x9b, 0x9b, 0x20, 0x00, 0xdf, 0x06, 0x23, 0x29, 0x03,
  0xc2, 0x0c, 0x3e, 0x30, 0xa0, 0x45, 0xf6, 0x36, 0x84, 0x56, 0x36, 0xb6,
  0x56, 0x26, 0x27, 0xf6, 0x16, 0x26, 0x47, 0x36, 0x15, 0xd6, 0x06, 0xc7,
  0x96, 0xe6, 0x76, 0x36, 0x41, 0x00, 0xc0, 0x60, 0x82, 0x00, 0x84, 0xc1,
  0x06, 0x23, 0x41, 0x03, 0x22, 0x0d, 0x3e, 0x35, 0xe0, 0x14, 0x26, 0x57,
  0x56, 0x64, 0x57, 0xe6, 0x06, 0x95, 0x86, 0x57, 0xc6, 0x36, 0x17, 0x34,
  0x46, 0x97, 0x66, 0x57, 0x36, 0x41, 0x00, 0xc4, 0x60, 0x83, 0x91, 0xb0,
  0x01, 0xd1, 0x06, 0x9f, 0x1a, 0x50, 0x81, 0x4b, 0xc3, 0x2b, 0x63, 0x9b,
  0xa2, 0x2b, 0x83, 0xcb, 0x9a, 0x20, 0x00, 0x63, 0xb0, 0xc1, 0x48, 0xde,
  0x80, 0x80, 0x83, 0x0f, 0x0c, 0x78, 0xc0, 0x85, 0x91, 0x91, 0xa5, 0xb9,
  0x9d, 0x4d, 0x10, 0x00, 0x32, 0xd8, 0x60, 0x24, 0x72, 0x40, 0xcc, 0xc1,
  0xe7, 0x6c, 0x40, 0xb2, 0x30, 0x20, 0x83, 0x33, 0x58, 0x03, 0x37, 0x88,
  0x03, 0x3a, 0x98, 0x20, 0xc0, 0x41, 0x1c, 0x6c, 0x20, 0x12, 0x8c, 0x30,
  0x36, 0x08, 0xd9, 0x1d, 0x6c, 0x28, 0x8c, 0xae, 0x0e, 0xec, 0x00, 0x0f,
  0x26, 0x08, 0xc7, 0xb0, 0x01, 0xd8, 0x30, 0x18, 0x7b, 0xb0, 0x07, 0x1b,
  0x02, 0x3e, 0xd8, 0x30, 0x0c, 0x7a, 0xd0, 0x07, 0x24, 0xda, 0xc2, 0xd2,
  0xdc, 0x26, 0x08, 0x72, 0xb0, 0x06, 0x1b, 0x86, 0x31, 0x18, 0x83, 0x61,
  0x03, 0x61, 0x80, 0x82, 0x1a, 0x84, 0xc2, 0x86, 0x42, 0x0f, 0xfe, 0x00,
  0xe0, 0x44, 0x81, 0x50, 0x98, 0x9c, 0x5c, 0x58, 0xde, 0x17, 0xdd, 0xd9,
  0x5c, 0xdb, 0x97, 0x58, 0x1e, 0x5d, 0xd9, 0xdc, 0x04, 0x01, 0x28, 0x03,
  0x3e, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x67, 0x73, 0x6d, 0x5f,
  0x6c, 0x64, 0x73, 0x74, 0x13, 0x04, 0xc0, 0x0c, 0x78, 0x88, 0x85, 0xc9,
  0xc9, 0xa5, 0x95, 0xc9, 0x11, 0x11, 0x93, 0x0b, 0x73, 0x1b, 0x43, 0x2b,
  0x9b, 0xa3, 0x61, 0xc6, 0xf6, 0x16, 0x46, 0x37, 0x37, 0x41, 0x00, 0xce,
  0x80, 0x45, 0x9a, 0xdb, 0x1c, 0xdd, 0xdc, 0x04, 0x01, 0x40, 0x03, 0x12,
  0x69, 0x6e, 0x74, 0x73, 0x13, 0x04, 0x20, 0x0d, 0x88, 0xd0, 0x95, 0xe1,
  0x7d, 0xb1, 0xbd, 0x85, 0x91, 0x31, 0xa1, 0x2b, 0xc3, 0xfb, 0x9a, 0xa3,
  0x7b, 0x93, 0x2b, 0x63, 0x51, 0x97, 0xe6, 0x46, 0x37, 0x37, 0x41, 0x00,
  0xd4, 0x60, 0x03, 0x45, 0x0a, 0xa5, 0x60, 0x0a, 0xa7, 0x80, 0x0a, 0x43,
  0x2a, 0x64, 0xaa, 0xb0, 0x0a, 0xac, 0xd0, 0x0a, 0xae, 0xf0, 0x0a, 0xb0,
  0xa0, 0x06, 0xb1, 0x30, 0xc8, 0xc2, 0x2c, 0x54, 0x61, 0x63, 0xb3, 0x6b,
  0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0,
  0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13,
  0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81, 0x51,
  0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d,
  0xac, 0x8c, 0x6d, 0x4a, 0x90, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b,
  0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x6c, 0x95, 0xc8, 0xf0,
  0x5c, 0xe8, 0xf2, 0xe0, 0xca, 0x82, 0xdc, 0xdc, 0xde, 0xe8, 0xc2, 0xe8,
  0xd2, 0xde, 0xdc, 0xe6, 0xa6, 0x08, 0x78, 0xd0, 0x07, 0x75, 0xc8, 0xf0,
  0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6,
  0xa6, 0x04, 0xa2, 0xd0, 0x85, 0x0c, 0xcf, 0x65, 0xec, 0xad, 0xce, 0x8d,
  0xae, 0x4c, 0x6e, 0x6e, 0x4a, 0x30, 0x0b, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0,
  0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0,
  0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4,
  0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x61, 0x06, 0x13,
  0x91, 0x03, 0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43, 0x39, 0x84, 0xc3, 0x3a,
  0xb8, 0x81, 0x38, 0xc8, 0x03, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0x15, 0x30, 0x06, 0x81, 0x9f, 0xb3, 0xde, 0xb6,
  0x86, 0xd9, 0xf5, 0xf2, 0x7c, 0x18, 0x1e, 0xa3, 0xcb, 0x40, 0xe0, 0x0c,
  0x1a, 0xcc, 0xc2, 0x6e, 0x24, 0xd2, 0x30, 0x98, 0x0c, 0xba, 0x62, 0xe4,
  0x74, 0xbb, 0x00, 0xd2, 0x20, 0xf0, 0x83, 0x86, 0xc7, 0xeb, 0x32, 0x59,
  0xfa, 0xbe, 0x4b, 0xcb, 0xf3, 0x3a, 0x9b, 0x3e, 0x0c, 0x8f, 0xd1, 0x65,
  0x20, 0x70, 0x06, 0x0d, 0x66, 0x61, 0x37, 0x12, 0x69, 0x18, 0x4c, 0x06,
  0x5d, 0x31, 0x72, 0xba, 0x6d, 0x02, 0xcc, 0x70, 0xf9, 0x8d, 0x33, 0x1d,
  0x48, 0x63, 0xf8, 0x80, 0x21, 0x34, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x00,
  0x51, 0x84, 0x10, 0x91, 0x41, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20,
  0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0xd6, 0x00, 0x0d, 0x97, 0xef, 0x3c,
  0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9, 0xc8, 0x6d, 0xdb, 0xc4, 0x36, 0x5c,
  0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94,
  0x84, 0x01, 0x08, 0x98, 0x8f, 0xdc, 0xb6, 0x51, 0x48, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06,
  0x62, 0x30, 0x5c, 0xbe, 0xf3, 0xf8, 0xc5, 0x02, 0x4c, 0x13, 0xd1, 0x10,
  0x43, 0x7b, 0x44, 0x04, 0x30, 0x88, 0x83, 0xd8, 0x80, 0x91, 0x43, 0x3d,
  0x3e, 0x72, 0xdb, 0x46, 0x10, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x11, 0x39,
  0xd4, 0x23, 0x0e, 0x3e, 0x72, 0xdb, 0x26, 0x41, 0x0d, 0x97, 0xef, 0x3c,
  0xfe, 0x42, 0x18, 0x80, 0x80, 0x7d, 0xb5, 0xde, 0x3a, 0xdf, 0x6d, 0xdb,
  0x03, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x0b, 0x61, 0x00, 0x02, 0xf6, 0xdd,
  0x76, 0xeb, 0x7c, 0xb5, 0x6e, 0x0b, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f,
  0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x11,
  0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e,
  0x4e, 0x44, 0xf8, 0xc5, 0x6d, 0xdb, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0xd3, 0x11, 0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x56, 0x90, 0x0d,
  0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44, 0x04, 0x30, 0x88, 0x83, 0xd8, 0x80,
  0x91, 0x43, 0x3d, 0x3e, 0x72, 0xdb, 0x96, 0x60, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x05, 0x54, 0x04, 0x48, 0x4c, 0x25, 0xd0, 0x10, 0x9c, 0x43, 0x35,
  0x93, 0x29, 0x58, 0xc3, 0xe5, 0x3b, 0x8f, 0x6f, 0x01, 0x15, 0x01, 0x12,
  0x53, 0x09, 0x34, 0x84, 0xd8, 0x0c, 0xc4, 0x65, 0x0c, 0xd8, 0x70, 0xf9,
  0xce, 0xe3, 0x5b, 0x40, 0x45, 0xac, 0x04, 0x30, 0x94, 0x40, 0x43, 0x68,
  0x93, 0x5f, 0xdc, 0xb6, 0x39, 0x60, 0xc3, 0xe5, 0x3b, 0x8f, 0x6f, 0x01,
  0x15, 0xb1, 0x12, 0xc0, 0x50, 0x02, 0x0d, 0xa1, 0x4d, 0x3e, 0x72, 0xdb,
  0x36, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
  0x39, 0x39, 0x36, 0x65, 0x37, 0x33, 0x61, 0x35, 0x33, 0x64, 0x37, 0x61,
  0x34, 0x30, 0x35, 0x61, 0x30, 0x32, 0x30, 0x66, 0x31, 0x34, 0x39, 0x63,
  0x38, 0x66, 0x39, 0x36, 0x32, 0x30, 0x36, 0x31, 0x2e, 0x70, 0x64, 0x62,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x99, 0x6e, 0x73, 0xa5, 0x3d, 0x7a, 0x40, 0x5a,
  0x02, 0x0f, 0x14, 0x9c, 0x8f, 0x96, 0x20, 0x61, 0x44, 0x58, 0x49, 0x4c,
  0xf4, 0x18, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00, 0x3d, 0x06, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xdc, 0x18, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x34, 0x06, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0xc0,
  0x00, 0xd2, 0x06, 0x63, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x80,
  0x6a, 0x03, 0x41, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x00, 0x48, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd8, 0xc1, 0x1c,
  0x01, 0x18, 0x24, 0x60, 0x00, 0x30, 0x88, 0x10, 0x0c, 0x19, 0x00, 0xd0,
  0x30, 0x02, 0x50, 0x82, 0x82, 0x8c, 0x32, 0x00, 0x00, 0x40, 0x48, 0x11,
  0x00, 0x80, 0x94, 0x32, 0x14, 0x00, 0x40, 0xcc, 0x0c, 0xc0, 0x4d, 0xc3,
  0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc5,
  0x6d, 0xa3, 0xc2, 0x71, 0x1c, 0x07, 0x98, 0x23, 0x40, 0x08, 0xba, 0x67,
  0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14,
  0x44, 0x45, 0x79, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x0a,
  0xe1, 0x00, 0x0e, 0x40, 0x55, 0x21, 0x00, 0x00, 0x00, 0xe8, 0x2a, 0x03,
  0x00, 0x38, 0x94, 0x15, 0xc2, 0x01, 0x1c, 0x87, 0xb6, 0xb2, 0x14, 0x80,
  0x04, 0x00, 0x80, 0xe3, 0x38, 0x0e, 0x44, 0x5d, 0x19, 0x1c, 0x00, 0xa0,
  0xef, 0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62,
  0x25, 0x26, 0x1f, 0xb9, 0x6d, 0x44, 0x00, 0x00, 0x00, 0x14, 0x22, 0x04,
  0x24, 0x80, 0xc4, 0x39, 0x82, 0xa0, 0x18, 0x12, 0x00, 0x01, 0x00, 0x49,
  0xe5, 0x40, 0xc0, 0x4c, 0x61, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30,
  0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50,
  0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40,
  0x0f, 0x7e, 0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00, 0x0f, 0xf3, 0xf0,
  0x0b, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x00, 0x66, 0xb2, 0xc6,
  0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0,
  0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xcc,
  0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0xc1, 0x0f, 0x90, 0xe0, 0xa0, 0x94,
  0x0e, 0x23, 0x08, 0xce, 0x4c, 0x64, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3,
  0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4,
  0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5,
  0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef,
  0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x20, 0x07, 0x7e, 0x00, 0x06, 0x7e,
  0x80, 0x82, 0x95, 0xd8, 0x61, 0x04, 0x01, 0x38, 0x35, 0x90, 0xa6, 0x88,
  0x12, 0x26, 0x9f, 0x03, 0x16, 0x81, 0x5a, 0x80, 0x89, 0x30, 0x09, 0xa0,
  0x79, 0x81, 0x08, 0x01, 0x1a, 0x81, 0xe0, 0x9c, 0x46, 0x9a, 0x80, 0x66,
  0xda, 0xa8, 0xa2, 0x20, 0x22, 0x74, 0xb8, 0x00, 0x00, 0x00, 0x80, 0x73,
  0x82, 0x10, 0xa0, 0xe0, 0x25, 0x78, 0x8e, 0x00, 0x14, 0x08, 0x98, 0x02,
  0x18, 0x44, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x44, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xe6,
  0x94, 0x01, 0x98, 0x39, 0x65, 0x00, 0xe6, 0x43, 0x18, 0x0c, 0x86, 0x3c,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0x10, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0xf2, 0x20, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x30, 0xe4, 0x51, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0x83, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x05, 0x08, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x13, 0x10, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x2a, 0x20,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x5c,
  0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0xb9, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x93, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x67, 0x03, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0x4f, 0x07, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x0f, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x62, 0x00, 0x04, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x32, 0x00, 0x02, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x0c, 0x8a,
  0x61, 0x04, 0xa0, 0x08, 0x4a, 0xa2, 0x80, 0x0a, 0xa1, 0x20, 0x48, 0x2e,
  0x41, 0x40, 0x20, 0x22, 0x47, 0x00, 0x68, 0x18, 0x01, 0x20, 0x75, 0x06,
  0x80, 0xda, 0x19, 0x00, 0x8a, 0x67, 0x00, 0x28, 0x98, 0x01, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x04, 0xa0, 0x9a, 0x20, 0x00, 0xd6, 0x06, 0x61, 0x20,
  0x26, 0x08, 0xc0, 0xb5, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0x00, 0x36, 0x41, 0x50, 0x83, 0x30, 0x20, 0x30,
  0x41, 0x00, 0xb2, 0x09, 0x02, 0xa0, 0x6d, 0x10, 0x14, 0x67, 0x43, 0xa2,
  0x2c, 0x8c, 0xa2, 0x0c, 0x8d, 0xf2, 0x6c, 0x08, 0xa0, 0x09, 0x42, 0x1b,
  0x88, 0xc1, 0x04, 0x81, 0x0c, 0xbe, 0x0d, 0x8b, 0x22, 0x31, 0x8a, 0x32,
  0x34, 0xd3, 0x34, 0x3d, 0x1b, 0x02, 0x6a, 0x82, 0x10, 0x07, 0x63, 0x30,
  0x41, 0x00, 0xb6, 0x0d, 0x88, 0x62, 0x31, 0x8a, 0x32, 0x5c, 0xc0, 0x86,
  0x00, 0xdb, 0x40, 0x44, 0x55, 0x06, 0x4c, 0x10, 0x8e, 0x81, 0x44, 0x5b,
  0x58, 0x9a, 0xdb, 0x04, 0x41, 0x0e, 0xbc, 0x09, 0x02, 0xc0, 0x4d, 0x10,
  0x80, 0x6e, 0xc3, 0xf0, 0x7d, 0xc3, 0x06, 0x42, 0xe9, 0x3c, 0x30, 0xd8,
  0x50, 0x6c, 0x1c, 0xa0, 0x85, 0x01, 0x2b, 0x36, 0x36, 0xbb, 0x36, 0x17,
  0xb6, 0xb7, 0x37, 0x38, 0x97, 0x3a, 0x37, 0xb9, 0x37, 0x36, 0x36, 0x17,
  0xb3, 0x3a, 0x36, 0xb6, 0x0d, 0xc1, 0x18, 0xac, 0x10, 0xca, 0x80, 0x0c,
  0xaa, 0xb0, 0xb1, 0xd9, 0xb5, 0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d,
  0x09, 0x82, 0x2a, 0x64, 0x78, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
  0x6e, 0x53, 0x02, 0xa2, 0x09, 0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d,
  0x99, 0xdc, 0x94, 0xc0, 0xa8, 0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46,
  0x56, 0x26, 0xd7, 0xf4, 0x46, 0x56, 0xc6, 0x36, 0x25, 0x40, 0xca, 0x90,
  0xe1, 0xb9, 0xc8, 0x95, 0xcd, 0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d,
  0x09, 0xb2, 0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50,
  0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x82, 0x30, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x61, 0x06, 0x13, 0x91, 0x03, 0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43,
  0x39, 0x84, 0xc3, 0x3a, 0xb8, 0x81, 0x38, 0xc8, 0x03, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x15, 0x30, 0x06, 0x81,
  0x9f, 0xb3, 0xde, 0xb6, 0x86, 0xd9, 0xf5, 0xf2, 0x7c, 0x18, 0x1e, 0xa3,
  0xcb, 0x40, 0xe0, 0x0c, 0x1a, 0xcc, 0xc2, 0x6e, 0x24, 0xd2, 0x30, 0x98,
  0x0c, 0xba, 0x62, 0xe4, 0x74, 0xbb, 0x00, 0xd2, 0x20, 0xf0, 0x83, 0x86,
  0xc7, 0xeb, 0x32, 0x59, 0xfa, 0xbe, 0x4b, 0xcb, 0xf3, 0x3a, 0x9b, 0x3e,
  0x0c, 0x8f, 0xd1, 0x65, 0x20, 0x70, 0x06, 0x0d, 0x66, 0x61, 0x37, 0x12,
  0x69, 0x18, 0x4c, 0x06, 0x5d, 0x31, 0x72, 0xba, 0x6d, 0x02, 0xcc, 0x70,
  0xf9, 0x8d, 0x33, 0x1d, 0x48, 0x63, 0xf8, 0x80, 0x21, 0x34, 0xc3, 0xe5,
  0x3b, 0x8f, 0x1f, 0x00, 0x51, 0x84, 0x10, 0x91, 0x41, 0x40, 0xc3, 0xe5,
  0x3b, 0x8f, 0x1f, 0x20, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0xd6, 0x00,
  0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9, 0xc8, 0x6d,
  0xdb, 0xc4, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11,
  0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x8f, 0xdc, 0xb6, 0x51,
  0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0,
  0x0c, 0x0b, 0x61, 0x06, 0x62, 0x30, 0x5c, 0xbe, 0xf3, 0xf8, 0xc5, 0x02,
  0x4c, 0x13, 0xd1, 0x10, 0x43, 0x7b, 0x44, 0x04, 0x30, 0x88, 0x83, 0xd8,
  0x80, 0x91, 0x43, 0x3d, 0x3e, 0x72, 0xdb, 0x46, 0x10, 0x0d, 0x97, 0xef,
  0x3c, 0xbe, 0x11, 0x39, 0xd4, 0x23, 0x0e, 0x3e, 0x72, 0xdb, 0x26, 0x41,
  0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x42, 0x18, 0x80, 0x80, 0x7d, 0xb5, 0xde,
  0x3a, 0xdf, 0x6d, 0xdb, 0x03, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x0b, 0x61,
  0x00, 0x02, 0xf6, 0xdd, 0x76, 0xeb, 0x7c, 0xb5, 0x6e, 0x0b, 0xd5, 0x70,
  0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0,
  0x17, 0xb7, 0x6d, 0x11, 0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35,
  0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8, 0xc5, 0x6d, 0xdb, 0x81, 0x34,
  0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72,
  0xdb, 0x56, 0x90, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44, 0x04, 0x30,
  0x88, 0x83, 0xd8, 0x80, 0x91, 0x43, 0x3d, 0x3e, 0x72, 0xdb, 0x96, 0x60,
  0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x05, 0x54, 0x04, 0x48, 0x4c, 0x25, 0xd0,
  0x10, 0x9c, 0x43, 0x35, 0x93, 0x29, 0x58, 0xc3, 0xe5, 0x3b, 0x8f, 0x6f,
  0x01, 0x15, 0x01, 0x12, 0x53, 0x09, 0x34, 0x84, 0xd8, 0x0c, 0xc4, 0x65,
  0x0c, 0xd8, 0x70, 0xf9, 0xce, 0xe3, 0x5b, 0x40, 0x45, 0xac, 0x04, 0x30,
  0x94, 0x40, 0x43, 0x68, 0x93, 0x5f, 0xdc, 0xb6, 0x39, 0x60, 0xc3, 0xe5,
  0x3b, 0x8f, 0x6f, 0x01, 0x15, 0xb1, 0x12, 0xc0, 0x50, 0x02, 0x0d, 0xa1,
  0x4d, 0x3e, 0x72, 0xdb, 0x36, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x13, 0x04, 0xa6, 0x10,
  0x0b, 0x04, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x94, 0xdd, 0x0c,
  0x40, 0xa9, 0x07, 0x14, 0x48, 0x11, 0x0a, 0x14, 0x61, 0x40, 0x81, 0x07,
  0x14, 0x54, 0xc9, 0x15, 0x6f, 0x40, 0xf9, 0x06, 0x94, 0x6e, 0x40, 0x19,
  0x0a, 0x94, 0x53, 0x01, 0x07, 0x94, 0x77, 0x40, 0x61, 0x14, 0x68, 0x40,
  0x19, 0x95, 0x61, 0x00, 0x41, 0xe5, 0x51, 0x04, 0x23, 0x00, 0x25, 0x40,
  0xce, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x8d, 0x00, 0x8c, 0x11, 0x80,
  0x20, 0x08, 0xe2, 0xbf, 0x40, 0xf3, 0x50, 0xc7, 0x40, 0x08, 0x00, 0x06,
  0x60, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x50, 0x06,
  0x6d, 0x40, 0x15, 0x69, 0x90, 0x06, 0x62, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x65, 0xe0, 0x06, 0xd5, 0xa1, 0x06, 0x6a, 0x30, 0x06, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x50, 0x06, 0x6f, 0x60, 0x25, 0x6b, 0xb0,
  0x06, 0x64, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x08, 0x28, 0x58,
  0x6c, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x48, 0x28, 0x5c, 0x70,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x48, 0x28, 0x5c, 0x6e, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x88, 0x28, 0x60, 0x72, 0x30, 0x62,
  0x50, 0x00, 0x20, 0x08, 0x06, 0x8a, 0x28, 0x54, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x80, 0x88, 0x42, 0x16, 0x07, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0x80, 0x8c, 0x82, 0x56, 0x07, 0xb4, 0x00, 0x80, 0x18, 0x00, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x18, 0xe8, 0x01, 0x1a, 0x28, 0x75,
  0x30, 0x9a, 0x10, 0x08, 0x15, 0xe8, 0x41, 0xd4, 0x1c, 0x04, 0x40, 0x11,
  0x00, 0x4a, 0x51, 0x83, 0xaa, 0x65, 0x0d, 0x86, 0x28, 0x00, 0x50, 0x05,
  0x80, 0x92, 0xf2, 0x40, 0x4a, 0xd2, 0x03, 0x19, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x03, 0x31, 0x28, 0x85, 0x39, 0xa8, 0x40, 0x61, 0x34, 0x21, 0x18,
  0x8a, 0x08, 0xa2, 0x08, 0x21, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40,
  0x0c, 0x52, 0xe1, 0x0e, 0xb2, 0x53, 0x18, 0x4d, 0x08, 0x84, 0x22, 0x52,
  0x41, 0x8a, 0x10, 0x84, 0xc0, 0x00, 0x00, 0x23, 0x06, 0x05, 0x00, 0x82,
  0x60, 0xa0, 0xdc, 0x42, 0x1b, 0x54, 0xa0, 0x07, 0x53, 0xc1, 0x1e, 0x08,
  0x91, 0x01, 0x00, 0xa8, 0x0c, 0x00, 0x30, 0x4b, 0x10, 0xcc, 0x12, 0x08,
  0x45, 0xb9, 0x02, 0x14, 0xf5, 0x0a, 0x40, 0x68, 0x00, 0x80, 0xe1, 0x06,
  0x21, 0x1b, 0x83, 0x59, 0x06, 0x3d, 0x18, 0x82, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0x10, 0x83, 0x5b, 0x28, 0x85, 0x33, 0xa8, 0x85, 0xd1, 0x84,
  0x40, 0x28, 0xe3, 0x16, 0xa4, 0x0c, 0x41, 0x0a, 0x12, 0xa0, 0x20, 0x01,
  0x08, 0x0e, 0x00, 0x60, 0x83, 0x00, 0x82, 0x0a, 0x7a, 0x41, 0x87, 0x1b,
  0x82, 0x5d, 0x00, 0x83, 0x0b, 0x80, 0xa0, 0x3a, 0x00, 0xc0, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x88, 0xc1, 0x38, 0xc4, 0xc2, 0x1c, 0x84, 0xc3,
  0x68, 0x42, 0x00, 0x0c, 0x37, 0x04, 0xe0, 0x10, 0x06, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x20, 0x06, 0xe6, 0x40, 0x0b, 0x76, 0x40, 0x0e, 0xa3,
  0x09, 0x41, 0x30, 0xdc, 0x70, 0x8c, 0x43, 0x18, 0x5c, 0x00, 0xc4, 0x70,
  0xc3, 0x10, 0x84, 0x41, 0x19, 0x81, 0x56, 0x74, 0x0e, 0x50, 0xd1, 0x3a,
  0xc0, 0x74, 0x83, 0x30, 0x0d, 0xd3, 0x0d, 0xc2, 0x44, 0xd0, 0x28, 0x00,
  0x80, 0x48, 0x01, 0x00, 0x54, 0x0a, 0x00, 0x18, 0x6e, 0x00, 0x03, 0x3b,
  0x20, 0x83, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x10, 0x03, 0x7a, 0x10,
  0x07, 0x52, 0x78, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x02, 0x52,
  0x05, 0x00, 0x0c, 0x37, 0x28, 0xf3, 0x70, 0x06, 0xc3, 0x0d, 0x0a, 0x3d,
  0x9c, 0x41, 0x09, 0x81, 0x0e, 0x37, 0x34, 0x06, 0x1a, 0x94, 0x10, 0xe8,
  0x70, 0x83, 0x73, 0xa0, 0x41, 0x09, 0x81, 0x92, 0x2c, 0x00, 0xa0, 0x1a,
  0x41, 0x67, 0x19, 0x88, 0x22, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04, 0x83,
  0x29, 0x25, 0xd4, 0x41, 0x16, 0xf8, 0x61, 0x92, 0xdc, 0xc1, 0x1d, 0xdc,
  0xc1, 0x1d, 0x46, 0x13, 0x02, 0x80, 0x6c, 0x01, 0x00, 0xb3, 0x04, 0xc5,
  0x40, 0x85, 0x43, 0x10, 0x70, 0x31, 0x10, 0x2e, 0x00, 0x80, 0x72, 0x01,
  0x00, 0xa4, 0x0b, 0x00, 0xa0, 0x5d, 0x00, 0xc0, 0x70, 0x83, 0x1d, 0xfc,
  0x03, 0x19, 0x0c, 0x47, 0x18, 0xbe, 0xe0, 0x7c, 0x25, 0x04, 0x3a, 0xcb,
  0x60, 0x1c, 0x01, 0xfd, 0x02, 0x00, 0x2c, 0x49, 0xe4, 0x43, 0xe1, 0x00,
  0x00, 0x12, 0x07, 0x00, 0xcc, 0x12, 0x1c, 0x03, 0x15, 0x0e, 0x66, 0xa8,
  0x46, 0x31, 0x50, 0xe1, 0x20, 0x06, 0x6b, 0x14, 0x03, 0x15, 0x00, 0x98,
  0x18, 0x3a, 0x52, 0xd4, 0x28, 0xc4, 0x04, 0xd0, 0x39, 0x00, 0x60, 0xb8,
  0x41, 0x14, 0x56, 0x82, 0x0c, 0x28, 0x1d, 0x00, 0x50, 0xa4, 0xd0, 0x12,
  0x31, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x62, 0x80, 0x13, 0x26, 0x81,
  0x0e, 0x33, 0x31, 0x9a, 0x10, 0x0c, 0x35, 0x04, 0x30, 0xdd, 0x80, 0x0a,
  0x81, 0x51, 0x49, 0x00, 0x04, 0x0f, 0x00, 0xa0, 0x78, 0x00, 0xc0, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x88, 0xc1, 0x4f, 0xb4, 0xc4, 0x3b, 0xe8,
  0xc4, 0x68, 0x42, 0x30, 0x0c, 0x37, 0xf0, 0x44, 0x40, 0x06, 0xb3, 0x0c,
  0x48, 0x13, 0xcc, 0x12, 0x24, 0x03, 0x15, 0x0e, 0x19, 0x20, 0x61, 0xb0,
  0x0c, 0x54, 0x38, 0x64, 0x80, 0x84, 0xc1, 0x32, 0x50, 0x01, 0x90, 0x01,
  0x12, 0x06, 0xcb, 0x40, 0x05, 0x00, 0x2a, 0x48, 0x18, 0x2c, 0xa5, 0x04,
  0x40, 0xfa, 0x00, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8, 0xde,
  0x82, 0x26, 0xc8, 0x40, 0x20, 0x7e, 0x00, 0xc0, 0x70, 0x84, 0xe0, 0x0f,
  0xce, 0x37, 0xcb, 0xa0, 0x2c, 0x81, 0x25, 0x03, 0x7c, 0xe8, 0x1f, 0x00,
  0x60, 0x45, 0x21, 0x1f, 0x5b, 0x02, 0xf8, 0x90, 0x48, 0x00, 0xa0, 0x18,
  0xb7, 0x00, 0x22, 0x09, 0x00, 0xcc, 0x12, 0x2c, 0x03, 0x15, 0x8e, 0xa3,
  0x80, 0x41, 0x32, 0x50, 0xe1, 0x28, 0x0a, 0x18, 0x24, 0x03, 0x15, 0x00,
  0xa2, 0x80, 0x41, 0x52, 0xd0, 0x5c, 0x00, 0xa5, 0x04, 0x00, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0x40, 0x0c, 0xee, 0xa2, 0x2c, 0x4e, 0x42, 0x2e,
  0x46, 0x13, 0x82, 0x61, 0xb8, 0x81, 0x08, 0xc8, 0x60, 0x96, 0x21, 0x61,
  0x82, 0x59, 0x82, 0x66, 0xa0, 0xc2, 0x81, 0x18, 0x5a, 0x38, 0x06, 0x2a,
  0x1c, 0x88, 0xa1, 0x85, 0x63, 0xa0, 0x02, 0x80, 0x18, 0x5a, 0x38, 0xaa,
  0x1d, 0xd4, 0x01, 0x28, 0x26, 0x00, 0x50, 0x42, 0x5d, 0xc0, 0x88, 0x41,
  0x01, 0x80, 0x20, 0x18, 0x28, 0xaa, 0x81, 0x16, 0x15, 0xfc, 0x45, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x85, 0x1a, 0x69, 0x11, 0x0c, 0x64,
  0x13, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x6a, 0x35, 0xe0,
  0x42, 0x11, 0x6c, 0x09, 0xe0, 0x43, 0x39, 0x01, 0x80, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xa8, 0x5c, 0x63, 0x2e, 0x98, 0xc2, 0x9a, 0x00, 0x3e,
  0xc4, 0x13, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xeb, 0x35,
  0xec, 0xc2, 0x41, 0xea, 0x09, 0x80, 0x7e, 0x02, 0x00, 0x04, 0x16, 0x00,
  0x18, 0x6e, 0xd8, 0x07, 0xd2, 0x20, 0x83, 0x59, 0x06, 0xe7, 0x09, 0x48,
  0x2c, 0x00, 0x40, 0x63, 0x01, 0x80, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0xc8, 0x6a, 0x63, 0x2f, 0x18, 0x2a, 0x0b, 0x00, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x41, 0x76, 0x1b, 0x7d, 0xb1, 0x54, 0xf0, 0x17, 0x57, 0x44,
  0xb0, 0x94, 0x16, 0x00, 0x20, 0xb5, 0x00, 0x40, 0x91, 0x84, 0x6b, 0x48,
  0x99, 0x44, 0x00, 0x2b, 0x18, 0xda, 0xa3, 0x36, 0x82, 0x61, 0x03, 0x22,
  0x30, 0x06, 0xa0, 0x4e, 0x22, 0x36, 0xa4, 0x52, 0x22, 0x80, 0x15, 0x0c,
  0xef, 0x81, 0x1b, 0xc1, 0xb0, 0x01, 0x11, 0x4c, 0x03, 0x30, 0x4b, 0xf0,
  0x50, 0x5c, 0x00, 0x60, 0x96, 0x00, 0x2a, 0xb0, 0xd0, 0x0d, 0x28, 0xb0,
  0xb8, 0x0d, 0x20, 0xba, 0x00, 0xc0, 0x70, 0x83, 0x50, 0x16, 0x63, 0x30,
  0xcb, 0xa0, 0x07, 0x51, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x62,
  0x30, 0x1e, 0xb1, 0x31, 0x17, 0xe1, 0x31, 0x9a, 0x10, 0x08, 0x65, 0x8c,
  0x87, 0x94, 0x21, 0x48, 0xf1, 0x84, 0x00, 0xc5, 0x13, 0x02, 0x10, 0x5f,
  0x00, 0xc0, 0x06, 0x01, 0x04, 0x15, 0xa4, 0x87, 0x0e, 0x37, 0x04, 0xe7,
  0x01, 0x06, 0x17, 0x00, 0x41, 0xa1, 0x01, 0x80, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0x10, 0x83, 0xf7, 0xe8, 0x8d, 0xbf, 0x68, 0x8f, 0xd1, 0x84,
  0x00, 0x18, 0x6e, 0x08, 0xd8, 0x23, 0x0c, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x40, 0x0c, 0xe4, 0x03, 0x3c, 0x44, 0x03, 0x3e, 0x46, 0x13, 0x82,
  0x60, 0xb8, 0xe1, 0x78, 0x8f, 0x30, 0xb8, 0x00, 0x88, 0xe1, 0x86, 0x21,
  0x08, 0x83, 0x32, 0x02, 0xad, 0x68, 0x3e, 0xa0, 0xa2, 0xfb, 0x80, 0xe9,
  0x06, 0x61, 0x1a, 0xa6, 0x1b, 0x84, 0x89, 0xa0, 0xd7, 0x00, 0x00, 0xc1,
  0x06, 0x00, 0x28, 0x36, 0x00, 0x30, 0xdc, 0x00, 0x06, 0xa2, 0x41, 0x06,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x20, 0x06, 0x20, 0xe2, 0x1e, 0xb0,
  0xb1, 0x1f, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0x64, 0x1b, 0x00,
  0x18, 0x6e, 0x50, 0xfe, 0xe3, 0x0c, 0x86, 0x1b, 0x14, 0x10, 0x39, 0x83,
  0x12, 0x02, 0x1d, 0x6e, 0x68, 0x0c, 0x34, 0x28, 0x21, 0xd0, 0xe1, 0x06,
  0xe7, 0x40, 0x83, 0x12, 0x02, 0x25, 0xdf, 0x00, 0x40, 0x35, 0x82, 0xce,
  0x32, 0x48, 0x53, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x53, 0x8d,
  0xd8, 0x87, 0x6f, 0xa0, 0xc8, 0x24, 0xe9, 0x87, 0x7e, 0xe8, 0x87, 0x7e,
  0x8c, 0x26, 0x04, 0x00, 0x89, 0x07, 0x00, 0x66, 0x09, 0xa6, 0x81, 0x0a,
  0x87, 0x90, 0x50, 0x27, 0x22, 0xf2, 0x00, 0x00, 0x95, 0x07, 0x00, 0xc8,
  0x3c, 0x00, 0x40, 0xe7, 0x01, 0x80, 0xe1, 0x06, 0x3b, 0x58, 0x11, 0x32,
  0x18, 0x8e, 0x30, 0xd4, 0xc3, 0xf9, 0x4a, 0x08, 0x74, 0x96, 0x81, 0xaa,
  0x02, 0x5a, 0x0f, 0x00, 0x58, 0x92, 0xc8, 0x87, 0xda, 0x03, 0x00, 0xe4,
  0x1e, 0x00, 0x98, 0x25, 0xa8, 0x06, 0x2a, 0x1c, 0x8c, 0x12, 0x9f, 0x69,
  0xa0, 0xc2, 0x41, 0x28, 0xf2, 0x99, 0x06, 0x2a, 0x00, 0x3c, 0xa2, 0xe4,
  0x68, 0xaa, 0xd7, 0xe8, 0x11, 0xa0, 0xf9, 0x00, 0xc0, 0x70, 0x83, 0x28,
  0xdc, 0x08, 0x19, 0x50, 0x7d, 0x00, 0xa0, 0x48, 0x21, 0x47, 0x62, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc4, 0x80, 0x4c, 0x64, 0x84, 0x3e, 0x7e,
  0x64, 0x34, 0x21, 0x18, 0x6a, 0x08, 0x60, 0xba, 0x01, 0x15, 0x02, 0xa3,
  0x92, 0x00, 0x88, 0x3f, 0x00, 0x40, 0xfd, 0x01, 0x80, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0x10, 0x83, 0x35, 0xc9, 0x91, 0xfd, 0x30, 0x93, 0xd1,
  0x84, 0x60, 0x18, 0x6e, 0x40, 0x93, 0x80, 0x0c, 0x66, 0x19, 0xac, 0x2d,
  0x98, 0x25, 0xb8, 0x06, 0x2a, 0x1c, 0x32, 0xb0, 0xc2, 0x20, 0x1b, 0xa8,
  0x70, 0xc8, 0xc0, 0x0a, 0x83, 0x6c, 0xa0, 0x02, 0x20, 0x03, 0x2b, 0x0c,
  0xb2, 0x81, 0x0a, 0x00, 0x97, 0xac, 0x30, 0xc8, 0x4a, 0x09, 0x80, 0x4c,
  0x04, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xed, 0x09, 0x98,
  0x90, 0x81, 0x40, 0x28, 0x02, 0x80, 0xe1, 0x08, 0x41, 0x45, 0x9c, 0x6f,
  0x96, 0x01, 0xcb, 0x02, 0x4b, 0x06, 0xf8, 0xd0, 0x8a, 0x00, 0xc0, 0x8a,
  0x42, 0x3e, 0xb6, 0x04, 0xf0, 0x21, 0x17, 0x01, 0x40, 0x31, 0x7a, 0x02,
  0x04, 0x23, 0x00, 0x98, 0x25, 0xc8, 0x06, 0x2a, 0x1c, 0x07, 0x03, 0x83,
  0x6b, 0xa0, 0xc2, 0x51, 0x30, 0x30, 0xb8, 0x06, 0x2a, 0x00, 0x04, 0x03,
  0x83, 0xab, 0xa0, 0x3f, 0x01, 0xaa, 0x11, 0x00, 0x8c, 0x18, 0x1c, 0x00,
  0x08, 0x82, 0x81, 0x18, 0x8c, 0x4a, 0x9c, 0xcc, 0x88, 0x9f, 0x8c, 0x26,
  0x04, 0xc3, 0x70, 0x03, 0x11, 0x90, 0xc1, 0x2c, 0xc3, 0xa5, 0x05, 0xb3,
  0x04, 0xdb, 0x40, 0x85, 0x03, 0x69, 0xb4, 0x50, 0x0d, 0x54, 0x38, 0x90,
  0x46, 0x0b, 0xd5, 0x40, 0x05, 0x00, 0x69, 0xb4, 0x50, 0x55, 0x7e, 0xa8,
  0x03, 0x50, 0x8f, 0x00, 0xa0, 0x84, 0x50, 0x81, 0x11, 0x83, 0x02, 0x00,
  0x41, 0x30, 0x50, 0x6c, 0x85, 0x4e, 0x2a, 0x58, 0x95, 0x18, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x8b, 0x56, 0xea, 0x24, 0x18, 0x48, 0x4c, 0x00,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd5, 0xad, 0xf0, 0x89, 0x22,
  0xd8, 0x12, 0xc0, 0x87, 0xca, 0x04, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x50, 0xe9, 0xca, 0x9f, 0x30, 0x85, 0x35, 0x01, 0x7c, 0x08, 0x4d,
  0x00, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd7, 0xae, 0x88, 0x8a,
  0x83, 0xd4, 0x13, 0x00, 0xad, 0x09, 0x00, 0x88, 0x4d, 0x00, 0x30, 0xdc,
  0xb0, 0x0f, 0xb0, 0x42, 0x06, 0xb3, 0x0c, 0x5c, 0x17, 0x90, 0x9b, 0x00,
  0x80, 0xde, 0x04, 0x00, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x90, 0x85,
  0xcb, 0xa9, 0x30, 0x14, 0x27, 0x00, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04,
  0x83, 0x6c, 0x5c, 0x52, 0x65, 0xa9, 0x60, 0x55, 0xae, 0x88, 0x60, 0xa9,
  0x4e, 0x00, 0x40, 0x76, 0x02, 0x80, 0x22, 0x09, 0x5d, 0x91, 0x32, 0x89,
  0x00, 0x56, 0x30, 0xe4, 0x4b, 0xb8, 0x04, 0xc3, 0x06, 0x44, 0x60, 0x0c,
  0x40, 0x9d, 0x44, 0xaf, 0x48, 0xa5, 0x44, 0x00, 0x2b, 0x18, 0xf6, 0x85,
  0x5c, 0x82, 0x61, 0x03, 0x22, 0x98, 0x06, 0x60, 0x96, 0xa0, 0xa3, 0x3e,
  0x01, 0xc0, 0x2c, 0x81, 0x57, 0x6c, 0x62, 0x2e, 0x50, 0x6c, 0x22, 0x2e,
  0x40, 0xa0, 0x02, 0x80, 0xe1, 0x06, 0x21, 0x4e, 0xc6, 0x60, 0x96, 0x41,
  0x0f, 0xbe, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc4, 0xe0, 0x5d,
  0x7a, 0xe5, 0x4f, 0xda, 0x65, 0x34, 0x21, 0x10, 0xca, 0x78, 0x17, 0x29,
  0x43, 0x90, 0x42, 0x13, 0x01, 0x0a, 0x4d, 0x04, 0x20, 0x54, 0x01, 0x80,
  0x0d, 0x02, 0x08, 0x2a, 0xa8, 0x17, 0x1d, 0x6e, 0x08, 0xe6, 0x05, 0x0c,
  0x2e, 0x00, 0x82, 0x5a, 0x05, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x20, 0x06, 0xfb, 0x92, 0x2e, 0xab, 0x92, 0x2f, 0xa3, 0x09, 0x01, 0x30,
  0xdc, 0x10, 0xe0, 0x4b, 0x18, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81,
  0x18, 0xf8, 0x0b, 0xbb, 0xb8, 0x0a, 0xbf, 0x8c, 0x26, 0x04, 0xc1, 0x70,
  0xc3, 0xb1, 0x2f, 0x61, 0x70, 0x01, 0x10, 0xc3, 0x0d, 0x43, 0x10, 0x06,
  0x65, 0x04, 0x5a, 0xd1, 0xbf, 0x40, 0x45, 0x23, 0x03, 0xd3, 0x0d, 0xc2,
  0x34, 0x4c, 0x37, 0x08, 0x13, 0x41, 0xbb, 0x02, 0x00, 0xe2, 0x15, 0x00,
  0x50, 0xaf, 0x00, 0x60, 0xb8, 0x01, 0x0c, 0x5c, 0x85, 0x0c, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0x40, 0x0c, 0x58, 0x46, 0x5f, 0x78, 0xe5, 0x64,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x48, 0x5c, 0x00, 0x30, 0xdc,
  0xa0, 0xac, 0xcc, 0x19, 0x0c, 0x37, 0x28, 0x2c, 0x73, 0x06, 0x25, 0x04,
  0x3a, 0xdc, 0xd0, 0x18, 0x68, 0x50, 0x42, 0xa0, 0xc3, 0x0d, 0xce, 0x81,
  0x06, 0x25, 0x04, 0x4a, 0xea, 0x02, 0x80, 0x6a, 0x04, 0x9d, 0x65, 0x00,
  0x83, 0x30, 0x08, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x60, 0x0a, 0x1b,
  0x91, 0x51, 0x17, 0x9a, 0x99, 0x24, 0x93, 0x31, 0x19, 0x93, 0x31, 0x99,
  0xd1, 0x84, 0x00, 0x20, 0x77, 0x01, 0xc0, 0x2c, 0x41, 0x18, 0x0c, 0x54,
  0x38, 0x04, 0x18, 0x80, 0xd7, 0x47, 0xf0, 0x02, 0x00, 0x8a, 0x17, 0x00,
  0x90, 0xbc, 0x00, 0x80, 0xe6, 0x05, 0x00, 0xc3, 0x0d, 0x76, 0x70, 0x33,
  0x64, 0x30, 0x1c, 0x61, 0xd8, 0x8b, 0xf3, 0x95, 0x10, 0xe8, 0x2c, 0x83,
  0x18, 0x8c, 0x41, 0x40, 0xf7, 0x02, 0x00, 0x4b, 0x12, 0xf9, 0x50, 0xbe,
  0x00, 0x80, 0xf4, 0x05, 0x00, 0xb3, 0x04, 0x63, 0x30, 0x50, 0xe1, 0x60,
  0x62, 0xa0, 0x5f, 0x61, 0x30, 0x50, 0xe1, 0x20, 0x62, 0xc0, 0x5f, 0x61,
  0x30, 0x50, 0x01, 0xc0, 0x9a, 0x18, 0xa8, 0x5a, 0x18, 0xd4, 0xae, 0xa4,
  0x0d, 0xd0, 0xbf, 0x00, 0x60, 0xb8, 0x41, 0x14, 0xc6, 0x86, 0x0c, 0x28,
  0x64, 0x00, 0x50, 0xa4, 0x50, 0x36, 0x31, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x62, 0x00, 0x37, 0x3e, 0x03, 0x32, 0x6b, 0x33, 0x9a, 0x10, 0x0c,
  0x35, 0x04, 0x30, 0xdd, 0x80, 0x0a, 0x81, 0x51, 0x49, 0x00, 0x84, 0x32,
  0x00, 0xa0, 0x94, 0x01, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x88,
  0xc1, 0xdd, 0x94, 0xcd, 0xc9, 0xc8, 0xcd, 0x68, 0x42, 0x30, 0x0c, 0x37,
  0xd0, 0x4d, 0x40, 0x06, 0xb3, 0x0c, 0x64, 0x90, 0x06, 0xc1, 0x2c, 0x41,
  0x19, 0x0c, 0x54, 0x38, 0x64, 0x40, 0x06, 0x61, 0x70, 0x06, 0x03, 0x15,
  0x0e, 0x19, 0x90, 0x41, 0x18, 0x9c, 0xc1, 0x40, 0x05, 0x40, 0x06, 0x64,
  0x10, 0x06, 0x67, 0x30, 0x50, 0x01, 0xc0, 0x1b, 0x19, 0x84, 0xc1, 0x19,
  0x94, 0x12, 0x00, 0xc9, 0x0c, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0xa0, 0x3a, 0x1d, 0xb6, 0x21, 0x03, 0x81, 0x68, 0x06, 0x00, 0xc3, 0x11,
  0x82, 0xcd, 0x38, 0xdf, 0x2c, 0x83, 0x19, 0x9c, 0x41, 0x60, 0xc9, 0x00,
  0x1f, 0xba, 0x19, 0x00, 0x58, 0x51, 0xc8, 0xc7, 0x96, 0x00, 0x3e, 0xa4,
  0x33, 0x00, 0x28, 0xc6, 0x74, 0x80, 0x78, 0x06, 0x00, 0xb3, 0x04, 0x67,
  0x30, 0x50, 0xe1, 0x38, 0x66, 0x00, 0x06, 0x65, 0x30, 0x50, 0xe1, 0x28,
  0x66, 0x00, 0x06, 0x65, 0x30, 0x50, 0x01, 0x20, 0x66, 0x00, 0x06, 0x65,
  0x50, 0xd0, 0xea, 0x00, 0x85, 0x0d, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x40, 0x0c, 0x5e, 0xa7, 0x6f, 0x7e, 0x46, 0x75, 0x46, 0x13, 0x82,
  0x61, 0xb8, 0x81, 0x08, 0xc8, 0x60, 0x96, 0xa1, 0x0c, 0xd0, 0x20, 0x98,
  0x25, 0x48, 0x83, 0x81, 0x0a, 0x07, 0x42, 0x03, 0x5a, 0x18, 0x83, 0x81,
  0x0a, 0x07, 0x42, 0x03, 0x5a, 0x18, 0x83, 0x81, 0x0a, 0x00, 0x42, 0x03,
  0x5a, 0x18, 0x83, 0x2a, 0x19, 0x75, 0x00, 0x4a, 0x1b, 0x00, 0x94, 0xd0,
  0x3a, 0x30, 0x62, 0x50, 0x00, 0x20, 0x08, 0x06, 0x8a, 0xf8, 0x80, 0x4e,
  0x05, 0xb7, 0x13, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x70, 0x81, 0x4f,
  0xe8, 0x04, 0x03, 0xb9, 0x0d, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0xa0, 0x1a, 0x1f, 0xd4, 0x51, 0x04, 0x5b, 0x02, 0xf8, 0x50, 0xdc, 0x00,
  0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a, 0xf3, 0x59, 0x1d, 0xa6,
  0xb0, 0x26, 0x80, 0x0f, 0xd1, 0x0d, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0xe0, 0x3a, 0x1f, 0xd7, 0x71, 0x90, 0x7a, 0x02, 0xa0, 0xbb, 0x01,
  0x00, 0xe1, 0x0d, 0x00, 0x86, 0x1b, 0xf6, 0x81, 0x77, 0xc8, 0x60, 0x96,
  0x41, 0x0d, 0xd6, 0x20, 0x20, 0xbd, 0x01, 0x00, 0xed, 0x0d, 0x00, 0x46,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x6b, 0x9f, 0xd9, 0x61, 0xa8, 0x6f,
  0x00, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xd9, 0xfb, 0xd4, 0xce,
  0x52, 0xc1, 0xed, 0x5c, 0x11, 0xc1, 0x52, 0xe8, 0x00, 0x80, 0x44, 0x07,
  0x00, 0x45, 0x12, 0xe6, 0x23, 0x65, 0x12, 0x01, 0xac, 0x60, 0x28, 0xa1,
  0xf6, 0x09, 0x86, 0x0d, 0x88, 0xc0, 0x18, 0x80, 0x3a, 0x89, 0xf4, 0x91,
  0x4a, 0x89, 0x00, 0x56, 0x30, 0x9c, 0x10, 0xfc, 0x04, 0xc3, 0x06, 0x44,
  0x30, 0x0d, 0xc0, 0x2c, 0xc1, 0x1a, 0x50, 0xea, 0x00, 0x60, 0x96, 0x80,
  0x0d, 0x0a, 0x6f, 0xe4, 0x07, 0x0a, 0x6f, 0x6c, 0x07, 0x88, 0x75, 0x00,
  0x30, 0xdc, 0x20, 0xf4, 0xcd, 0x18, 0xcc, 0x32, 0xe8, 0x41, 0x1b, 0x04,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x20, 0x06, 0xfb, 0x93, 0x3e, 0xab,
  0x93, 0x3f, 0xa3, 0x09, 0x81, 0x50, 0xc6, 0xfe, 0x48, 0x19, 0x82, 0x14,
  0xdd, 0x08, 0x50, 0x74, 0x23, 0x00, 0xd1, 0x0e, 0x00, 0x6c, 0x10, 0x40,
  0x50, 0x41, 0x08, 0xe9, 0x70, 0x43, 0xf0, 0x3f, 0x60, 0x70, 0x01, 0x10,
  0x94, 0x3b, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x31, 0x38,
  0xa1, 0xfa, 0xb9, 0x9d, 0x12, 0x1a, 0x4d, 0x08, 0x80, 0xe1, 0x86, 0x80,
  0x84, 0xc2, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc4, 0x40, 0x85,
  0xf0, 0x47, 0x77, 0x50, 0x68, 0x34, 0x21, 0x08, 0x86, 0x1b, 0x8e, 0x13,
  0x0a, 0x83, 0x0b, 0x80, 0x18, 0x6e, 0x18, 0x82, 0x30, 0x28, 0x23, 0xd0,
  0x8a, 0x56, 0x08, 0x2a, 0x7a, 0x21, 0x98, 0x6e, 0x10, 0xa6, 0x61, 0xba,
  0x41, 0x98, 0x08, 0x3a, 0x1f, 0x00, 0x10, 0xfa, 0x00, 0x80, 0xd2, 0x07,
  0x00, 0xc3, 0x0d, 0x60, 0xa0, 0x3b, 0x64, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x62, 0x80, 0x43, 0x26, 0x84, 0x3e, 0x33, 0x34, 0x9a, 0x10,
  0x00, 0xa3, 0x09, 0x42, 0x40, 0xee, 0x03, 0x80, 0xe1, 0x06, 0xe5, 0x86,
  0xce, 0x60, 0xb8, 0x41, 0xc1, 0xa1, 0x33, 0x28, 0x21, 0xd0, 0xe1, 0x86,
  0xc6, 0x40, 0x83, 0x12, 0x02, 0x1d, 0x6e, 0x70, 0x0e, 0x34, 0x28, 0x21,
  0x50, 0xb2, 0x1f, 0x00, 0x54, 0x23, 0xe8, 0x2c, 0x83, 0x1b, 0xbc, 0x41,
  0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x53, 0x1b, 0xb9, 0x90, 0xfd,
  0x80, 0xd1, 0x24, 0xc9, 0x90, 0x0c, 0xc9, 0x90, 0x0c, 0x8d, 0x26, 0x04,
  0x00, 0xe9, 0x0f, 0x00, 0x66, 0x09, 0xde, 0x60, 0xa0, 0xc2, 0x21, 0xdc,
  0x00, 0xff, 0xda, 0x80, 0xf8, 0x07, 0x00, 0xd4, 0x3f, 0x00, 0x20, 0xff,
  0x01, 0x00, 0xfd, 0x0f, 0x00, 0x86, 0x1b, 0xec, 0x60, 0x8c, 0xc8, 0x60,
  0x38, 0xc2, 0x10, 0x21, 0xe7, 0x2b, 0x21, 0xd0, 0x59, 0x06, 0x38, 0x88,
  0x83, 0x80, 0x46, 0x08, 0x00, 0x96, 0x24, 0xf2, 0xa1, 0x12, 0x02, 0x00,
  0x99, 0x10, 0x00, 0x66, 0x09, 0xe2, 0x60, 0xa0, 0xc2, 0xc1, 0xe0, 0x40,
  0x06, 0x83, 0x37, 0x18, 0xa8, 0x70, 0x10, 0x38, 0xa0, 0xc1, 0xe0, 0x0d,
  0x06, 0x2a, 0x00, 0x74, 0x0c, 0xe0, 0x40, 0x1c, 0x83, 0x37, 0xa8, 0xf3,
  0xa9, 0x23, 0xa0, 0x15, 0x02, 0xc0, 0x70, 0x83, 0x28, 0xbc, 0x11, 0x19,
  0x50, 0x0b, 0x01, 0xa0, 0x48, 0x21, 0x8e, 0x62, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xc4, 0x80, 0x8f, 0xd4, 0x88, 0x85, 0xee, 0x68, 0x34, 0x21,
  0x18, 0x6a, 0x08, 0x60, 0xba, 0x01, 0x15, 0x02, 0xa3, 0x92, 0x00, 0x88,
  0x86, 0x00, 0x40, 0x35, 0x04, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0x10, 0x83, 0x51, 0x8a, 0xa3, 0x19, 0xf2, 0xa3, 0xd1, 0x84, 0x60, 0x18,
  0x6e, 0x00, 0xa5, 0x80, 0x0c, 0x66, 0x19, 0xe4, 0xe0, 0x0e, 0x82, 0x59,
  0x82, 0x39, 0x18, 0xa8, 0x70, 0xc8, 0x40, 0x0e, 0xc2, 0xa0, 0x0e, 0x06,
  0x2a, 0x1c, 0x32, 0x90, 0x83, 0x30, 0xa8, 0x83, 0x81, 0x0a, 0x80, 0x0c,
  0xe4, 0x20, 0x0c, 0xea, 0x60, 0xa0, 0x02, 0x40, 0xc9, 0x40, 0x0e, 0xc2,
  0xa0, 0x0e, 0x4a, 0x09, 0x80, 0x7c, 0x08, 0x00, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x50, 0xcd, 0x12, 0x1e, 0x91, 0x81, 0x40, 0x60, 0x04, 0x80,
  0xe1, 0x08, 0x41, 0x8c, 0x9c, 0x6f, 0x96, 0x81, 0x0e, 0xea, 0x20, 0xb0,
  0x64, 0x80, 0x0f, 0x8d, 0x11, 0x00, 0xac, 0x28, 0xe4, 0x63, 0x4b, 0x00,
  0x1f, 0x32, 0x23, 0x00, 0x14, 0x23, 0x4b, 0x40, 0x68, 0x04, 0x80, 0x59,
  0x82, 0x3a, 0x18, 0xa8, 0x70, 0x1c, 0x3a, 0x00, 0x83, 0x39, 0x18, 0xa8,
  0x70, 0x14, 0x3a, 0x00, 0x83, 0x39, 0x18, 0xa8, 0x00, 0x10, 0x3a, 0x00,
  0x83, 0x39, 0x28, 0xe8, 0x96, 0x80, 0xda, 0x08, 0x00, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x20, 0x06, 0xbb, 0x94, 0x4a, 0x6b, 0x64, 0x4b, 0xa3,
  0x09, 0xc1, 0x30, 0xdc, 0x40, 0x04, 0x64, 0x30, 0xcb, 0x30, 0x07, 0x76,
  0x10, 0xcc, 0x12, 0xdc, 0xc1, 0x40, 0x85, 0x03, 0xd9, 0x01, 0x2d, 0xc4,
  0xc1, 0x40, 0x85, 0x03, 0xd9, 0x01, 0x2d, 0xc4, 0xc1, 0x40, 0x05, 0x00,
  0xd9, 0x01, 0x2d, 0xc4, 0x41, 0xc5, 0x90, 0x3a, 0x00, 0xd5, 0x11, 0x00,
  0x4a, 0xc8, 0x25, 0x18, 0x31, 0x28, 0x00, 0x10, 0x04, 0x03, 0xc5, 0x9d,
  0x58, 0xa9, 0x82, 0x71, 0x8a, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xb8,
  0xd8, 0xa9, 0x95, 0x82, 0x81, 0xf4, 0x08, 0x00, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x50, 0xbd, 0x13, 0x2d, 0x29, 0x82, 0x2d, 0x01, 0x7c, 0xa8,
  0x8f, 0x00, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x95, 0x3c, 0xdd,
  0x12, 0x53, 0x58, 0x13, 0xc0, 0x87, 0x40, 0x09, 0x00, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x70, 0xcd, 0x93, 0x2e, 0x39, 0x48, 0x3d, 0x01, 0xd0,
  0x28, 0x01, 0x80, 0x48, 0x09, 0x00, 0xc3, 0x0d, 0xfb, 0x80, 0x4e, 0x64,
  0x30, 0xcb, 0x80, 0x07, 0x79, 0x10, 0x90, 0x29, 0x01, 0x80, 0x4e, 0x09,
  0x00, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x90, 0xe5, 0xd3, 0x2f, 0x31,
  0x94, 0x4a, 0x00, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x6c, 0x9f,
  0xc2, 0x69, 0xa9, 0x60, 0x9c, 0xae, 0x88, 0x60, 0xa9, 0x95, 0x00, 0x40,
  0xae, 0x04, 0x80, 0x22, 0x09, 0x79, 0x92, 0x32, 0x89, 0x00, 0x56, 0x30,
  0xc4, 0x54, 0x3e, 0x05, 0xc3, 0x06, 0x44, 0x60, 0x0c, 0x40, 0x9d, 0x44,
  0x3d, 0x49, 0xa5, 0x44, 0x00, 0x2b, 0x18, 0x66, 0x8a, 0x9f, 0x82, 0x61,
  0x03, 0x22, 0x98, 0x06, 0x60, 0x96, 0x20, 0x0f, 0xa8, 0x96, 0x00, 0x30,
  0x4b, 0xd0, 0x07, 0x03, 0x25, 0x80, 0x2f, 0x06, 0x82, 0xa9, 0x41, 0x6e,
  0xe4, 0xd9, 0x08, 0x1b, 0x0c, 0x94, 0x00, 0xe2, 0x18, 0x08, 0xaa, 0x06,
  0xc9, 0x91, 0xa7, 0x23, 0x6c, 0x40, 0xb8, 0x04, 0x80, 0xe1, 0x06, 0x81,
  0x9f, 0xc8, 0x60, 0x96, 0x61, 0x0f, 0xf8, 0x20, 0x28, 0xa2, 0x9f, 0xa4,
  0x88, 0x00, 0x56, 0x30, 0xec, 0x14, 0x49, 0x05, 0xc3, 0x06, 0x44, 0x50,
  0x52, 0x03, 0x30, 0x4b, 0xc0, 0x07, 0xb3, 0x04, 0x7f, 0x30, 0x4b, 0xe0,
  0x07, 0xb3, 0x04, 0x7f, 0x40, 0xbd, 0x04, 0x80, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x60, 0x6c, 0x0a, 0x9d, 0x48, 0x8a, 0x7c, 0x09, 0x00, 0xf4,
  0x4b, 0x00, 0x20, 0x70, 0x02, 0x00, 0x85, 0x13, 0x00, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0x40, 0x0c, 0x5e, 0xaa, 0x9f, 0x7e, 0xa9, 0xa5, 0x46,
  0x13, 0x02, 0xa1, 0x74, 0x29, 0x10, 0x2a, 0x27, 0x00, 0x58, 0x2f, 0x09,
  0x20, 0xa8, 0x40, 0xa6, 0x74, 0xb8, 0x21, 0x80, 0x29, 0x30, 0xb8, 0x00,
  0x08, 0x52, 0x27, 0x00, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x18,
  0xe0, 0x94, 0x49, 0xa1, 0x93, 0x4d, 0x8d, 0x26, 0x04, 0xc0, 0x70, 0x43,
  0x50, 0x53, 0x61, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x62, 0xb0,
  0x53, 0x29, 0xb5, 0x4e, 0x39, 0x35, 0x9a, 0x10, 0x04, 0xc3, 0x0d, 0x07,
  0x4e, 0x85, 0xc1, 0x05, 0x40, 0x0c, 0x37, 0x0c, 0x41, 0x18, 0x94, 0x11,
  0x68, 0xad, 0x13, 0x4f, 0x41, 0x45, 0x60, 0x05, 0xd3, 0x0d, 0x42, 0x3b,
  0x0d, 0xd3, 0x0d, 0xc2, 0x44, 0x10, 0x3e, 0x01, 0x80, 0xf2, 0x09, 0x00,
  0xa4, 0x4f, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x31, 0x40,
  0x2b, 0x9b, 0xc2, 0xa7, 0xb1, 0x1a, 0x4d, 0x08, 0x84, 0xe1, 0x86, 0xb2,
  0x0a, 0xc8, 0x60, 0x96, 0x01, 0x14, 0x4a, 0x21, 0x98, 0x25, 0x08, 0x85,
  0x81, 0x0a, 0x80, 0x55, 0x03, 0x50, 0x08, 0x85, 0x51, 0x18, 0xa8, 0x70,
  0x44, 0x34, 0x00, 0x85, 0x50, 0x18, 0x85, 0x81, 0x0a, 0x87, 0x44, 0x03,
  0x50, 0x08, 0x85, 0x51, 0x18, 0xa8, 0x00, 0x64, 0x35, 0x00, 0x85, 0x50,
  0x18, 0x85, 0xda, 0xa7, 0x00, 0x68, 0xa4, 0x00, 0x50, 0xc2, 0x59, 0x49,
  0xfd, 0x53, 0x00, 0x2b, 0x18, 0x4a, 0xcb, 0xad, 0x02, 0x0a, 0x80, 0x41,
  0x28, 0x05, 0x80, 0xe1, 0x06, 0x21, 0xae, 0xc4, 0x60, 0x96, 0x41, 0x14,
  0x46, 0x21, 0x28, 0xa4, 0xad, 0xa4, 0x4a, 0x2a, 0x80, 0x15, 0x0c, 0xac,
  0x45, 0x57, 0x01, 0x05, 0xc0, 0x20, 0x97, 0x02, 0xc0, 0x88, 0x81, 0x01,
  0x80, 0x20, 0x18, 0x7c, 0x7d, 0xe5, 0x53, 0x02, 0xc1, 0x14, 0x00, 0x8a,
  0x48, 0x2b, 0x1c, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x0f, 0xb4, 0xc2,
  0x2a, 0xa0, 0x99, 0x02, 0x00, 0xd1, 0x14, 0x00, 0xa8, 0xa6, 0x00, 0x40,
  0x36, 0x05, 0x00, 0xba, 0x29, 0x00, 0x18, 0x96, 0xc0, 0x87, 0x72, 0x0a,
  0x00, 0xb6, 0x21, 0xf0, 0xa1, 0x9d, 0x02, 0x40, 0x79, 0x15, 0x50, 0x4f,
  0x01, 0x60, 0x96, 0x60, 0x14, 0x06, 0x2a, 0x00, 0x42, 0x14, 0x40, 0x21,
  0x14, 0x06, 0x2a, 0x1c, 0x45, 0x14, 0x40, 0x21, 0x14, 0x06, 0x2a, 0x1c,
  0x48, 0x14, 0x40, 0x21, 0x14, 0x0a, 0x0c, 0x58, 0x0b, 0x48, 0xac, 0x00,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x62, 0x00, 0x5b, 0x7e, 0x05,
  0x56, 0xab, 0x35, 0x9a, 0x10, 0x08, 0xc3, 0x0d, 0x44, 0x40, 0x06, 0xb3,
  0x0c, 0xa1, 0x40, 0x0a, 0xc1, 0x40, 0x83, 0xc3, 0x8c, 0xc2, 0x40, 0x83,
  0x03, 0x8d, 0xc2, 0x40, 0x03, 0x40, 0x8d, 0xc2, 0x2c, 0x41, 0x29, 0x0c,
  0x54, 0x00, 0x02, 0x29, 0x88, 0x6d, 0xf0, 0x07, 0x03, 0x15, 0x8e, 0x41,
  0x0a, 0xb8, 0x1a, 0xfc, 0xc1, 0x40, 0x85, 0xa3, 0x90, 0x82, 0xae, 0x06,
  0x7f, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x6f, 0xe9, 0xd5,
  0x70, 0x5b, 0x17, 0x38, 0x65, 0x71, 0x15, 0xd0, 0x87, 0xde, 0x0a, 0x00,
  0x26, 0x14, 0xf2, 0xa1, 0xb8, 0x02, 0xc0, 0x25, 0x4e, 0x8d, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0xc1, 0x65, 0x5e, 0xa1, 0xa5, 0xe8, 0x56, 0x05, 0xbf,
  0x15, 0x17, 0x38, 0x65, 0x44, 0x40, 0x1f, 0xba, 0x2b, 0x00, 0x98, 0xe2,
  0xc8, 0xc7, 0x92, 0x44, 0x3e, 0x26, 0x04, 0xf1, 0xb1, 0x22, 0x90, 0x0f,
  0xf1, 0x15, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60, 0x6b, 0x2f,
  0xd3, 0xfa, 0x2b, 0x81, 0xfc, 0x0a, 0x00, 0xc3, 0x0d, 0xd6, 0x79, 0x89,
  0xc1, 0x74, 0x03, 0x14, 0x5a, 0xc1, 0x74, 0x03, 0x21, 0x5a, 0xc2, 0x88,
  0x81, 0x03, 0x80, 0x20, 0x18, 0x74, 0xf1, 0xa5, 0x5a, 0xa1, 0xc5, 0x0a,
  0xab, 0xc0, 0x5b, 0x42, 0x20, 0x08, 0xa9, 0x45, 0xa2, 0x05, 0x00, 0x1a,
  0x2d, 0x00, 0x60, 0x40, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x5b, 0x06, 0xd1, 0x78, 0xc8, 0x60, 0xcb, 0xe0, 0x2b, 0x0f, 0x19, 0x6c,
  0x19, 0xf4, 0xe7, 0x21, 0x83, 0x2d, 0x83, 0x4d, 0x3d, 0x64, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
