#if 0
;
; Note: shader requires additional functionality:
;       Double-precision floating point
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader debug name: 824dd64c5771fd565c96391376d63517.pdb
; shader hash: 824dd64c5771fd565c96391376d63517
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer cb
; {
;
;   struct cb
;   {
;
;       struct struct.RayGenConstantBuffer
;       {
;
;           uint2 textureDim;                         ; Offset:    0
;           int doCheckerboardRayGeneration;          ; Offset:    8
;           int checkerboardGenerateRaysForEvenPixels;; Offset:   12
;           uint seed;                                ; Offset:   16
;           uint numSamplesPerSet;                    ; Offset:   20
;           uint numSampleSets;                       ; Offset:   24
;           uint numPixelsPerDimPerSet;               ; Offset:   28
;       
;       } cb;                                         ; Offset:    0
;
;   
;   } cb;                                             ; Offset:    0 Size:    32
;
; }
;
; Resource bind info for g_sampleSets
; {
;
;   struct struct.AlignedHemisphereSample3D
;   {
;
;       float3 value;                                 ; Offset:    0
;       uint padding;                                 ; Offset:   12
;   
;   } $Element;                                       ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb                                cbuffer      NA          NA     CB0            cb0     1
; g_texRayOriginSurfaceNormalDepth   texture     u32          2d      T0             t0     1
; g_texRayOriginPosition            texture     f32          2d      T1             t1     1
; g_sampleSets                      texture  struct         r/o      T2             t3     1
; g_rtRaysDirectionOriginDepth          UAV     u32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<AlignedHemisphereSample3D>" = type { %struct.AlignedHemisphereSample3D }
%struct.AlignedHemisphereSample3D = type { <3 x float>, i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%cb = type { %struct.RayGenConstantBuffer }
%struct.RayGenConstantBuffer = type { <2 x i32>, i32, i32, i32, i32, i32, i32 }

@dx.nothing.a = internal constant [1 x i32] zeroinitializer

define void @main() {
  %g_rtRaysDirectionOriginDepth_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false), !dbg !227 ; line:60 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_sampleSets_texture_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 3, i1 false), !dbg !227 ; line:60 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_texRayOriginPosition_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false), !dbg !227 ; line:60 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %g_texRayOriginSurfaceNormalDepth_texture_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false), !dbg !227 ; line:60 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %cb_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false), !dbg !227 ; line:60 col:21  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !231, metadata !232), !dbg !233 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !231, metadata !234), !dbg !233 ; var:"DTid" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %3 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !235 ; line:38 col:11
  call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !236, metadata !232), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !236, metadata !234), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %4 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !237 ; line:40 col:12  ; CBufferLoadLegacy(handle,regIndex)
  %5 = extractvalue %dx.types.CBufRet.i32 %4, 2, !dbg !237 ; line:40 col:12
  %6 = icmp ne i32 %5, 0, !dbg !239 ; line:40 col:9
  br i1 %6, label %7, label %25, !dbg !240 ; line:40 col:9

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !241 ; line:42 col:14
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !243, metadata !244), !dbg !241 ; var:"pixelStepX" !DIExpression() func:"main"
  %9 = and i32 %2, 1, !dbg !245 ; line:43 col:37
  %10 = icmp eq i32 %9, 0, !dbg !246 ; line:43 col:42
  %11 = icmp ne i1 %10, false, !dbg !246 ; line:43 col:42
  %12 = zext i1 %11 to i32, !dbg !247 ; line:43 col:14
  %13 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !247 ; line:43 col:14
  call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !248, metadata !244), !dbg !247 ; var:"isEvenPixelY" !DIExpression() func:"main"
  %14 = icmp ne i32 %12, 0, !dbg !250 ; line:44 col:29
  %15 = zext i1 %14 to i32, !dbg !250 ; line:44 col:29
  %16 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !251 ; line:44 col:48  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.i32 %16, 3, !dbg !251 ; line:44 col:48
  %18 = icmp ne i32 %15, %17, !dbg !252 ; line:44 col:42
  %19 = icmp ne i1 %18, false, !dbg !252 ; line:44 col:42
  %20 = zext i1 %19 to i32, !dbg !250 ; line:44 col:29
  %21 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !253 ; line:44 col:14
  call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !254, metadata !244), !dbg !253 ; var:"pixelOffsetX" !DIExpression() func:"main"
  %22 = mul i32 %1, 2, !dbg !255 ; line:45 col:32
  %23 = add i32 %22, %20, !dbg !256 ; line:45 col:45
  %24 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !257 ; line:45 col:23
  call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !236, metadata !232), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !236, metadata !234), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  br label %25, !dbg !258 ; line:46 col:5

; <label>:25                                      ; preds = %7, %0
  %DTidFullRes.0.i0 = phi i32 [ %23, %7 ], [ %1, %0 ]
  %DTidFullRes.0.i1 = phi i32 [ %2, %7 ], [ %2, %0 ]
  call void @llvm.dbg.value(metadata i32 %DTidFullRes.0.i0, i64 0, metadata !236, metadata !232), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %DTidFullRes.0.i1, i64 0, metadata !236, metadata !234), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %DTidFullRes.0.i0, i64 0, metadata !236, metadata !232), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata i32 %DTidFullRes.0.i1, i64 0, metadata !236, metadata !234), !dbg !235 ; var:"DTidFullRes" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  %TextureLoad = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %g_texRayOriginSurfaceNormalDepth_texture_2d, i32 0, i32 %DTidFullRes.0.i0, i32 %DTidFullRes.0.i1, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !259 ; line:50 col:23  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  call void @llvm.dbg.value(metadata %dx.types.ResRet.i32 %TextureLoad, i64 0, metadata !260, metadata !244), !dbg !261 ; var:"r" !DIExpression() func:"Unpack_R8_FLOAT"
  %26 = extractvalue %dx.types.ResRet.i32 %TextureLoad, 0, !dbg !259 ; line:50 col:23
  %27 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !266 ; line:50 col:5
  call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !267, metadata !244), !dbg !268 ; var:"encodedNormalDepth" !DIExpression() func:"DecodeNormalDepth"
  %28 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !269 ; line:440 col:5
  call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !270, metadata !244), !dbg !271 ; var:"packedEncodedNormalAndDepth" !DIExpression() func:"DecodeNormalDepth_N16D16"
  %29 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !272 ; line:428 col:33
  call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !273, metadata !244), !dbg !274 ; var:"rgb" !DIExpression() func:"Unpack_R8G8B16_FLOAT"
  %30 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !275 ; line:395 col:15
  %31 = and i32 %26, 255, !dbg !276 ; line:366 col:15
  %32 = uitofp i32 %31 to float, !dbg !277 ; line:366 col:12
  %33 = fdiv fast float %32, 2.550000e+02, !dbg !278 ; line:366 col:23
  %34 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !279 ; line:366 col:5
  %35 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !280 ; line:395 col:11
  call void @llvm.dbg.value(metadata float %33, i64 0, metadata !281, metadata !244), !dbg !280 ; var:"r" !DIExpression() func:"Unpack_R8G8B16_FLOAT"
  %36 = lshr i32 %26, 8, !dbg !282 ; line:396 col:35
  %37 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !283 ; line:396 col:15
  call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !260, metadata !244), !dbg !284 ; var:"r" !DIExpression() func:"Unpack_R8_FLOAT"
  %38 = and i32 %36, 255, !dbg !286 ; line:366 col:15
  %39 = uitofp i32 %38 to float, !dbg !287 ; line:366 col:12
  %40 = fdiv fast float %39, 2.550000e+02, !dbg !288 ; line:366 col:23
  %41 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !289 ; line:366 col:5
  %42 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !290 ; line:396 col:11
  call void @llvm.dbg.value(metadata float %40, i64 0, metadata !291, metadata !244), !dbg !290 ; var:"g" !DIExpression() func:"Unpack_R8G8B16_FLOAT"
  %43 = lshr i32 %26, 16, !dbg !292 ; line:397 col:28
  %LegacyF16ToF32 = call float @dx.op.legacyF16ToF32(i32 131, i32 %43), !dbg !293 ; line:397 col:15  ; LegacyF16ToF32(value)
  %44 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !294 ; line:397 col:11
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !295, metadata !244), !dbg !294 ; var:"b" !DIExpression() func:"Unpack_R8G8B16_FLOAT"
  %45 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !296 ; line:398 col:5
  %46 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !297 ; line:428 col:12
  call void @llvm.dbg.value(metadata float %33, i64 0, metadata !298, metadata !232), !dbg !297 ; var:"encodedNormalDepth" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %40, i64 0, metadata !298, metadata !234), !dbg !297 ; var:"encodedNormalDepth" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !298, metadata !299), !dbg !297 ; var:"encodedNormalDepth" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormalDepth_N16D16"
  %47 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !300 ; line:429 col:14
  call void @llvm.dbg.value(metadata float %33, i64 0, metadata !301, metadata !232), !dbg !302 ; var:"f" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %40, i64 0, metadata !301, metadata !234), !dbg !302 ; var:"f" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormal"
  %.i021 = fmul fast float %33, 2.000000e+00, !dbg !304 ; line:346 col:11
  %.i122 = fmul fast float %40, 2.000000e+00, !dbg !304 ; line:346 col:11
  %.i024 = fsub fast float %.i021, 1.000000e+00, !dbg !305 ; line:346 col:17
  %.i126 = fsub fast float %.i122, 1.000000e+00, !dbg !305 ; line:346 col:17
  call void @llvm.dbg.value(metadata float %.i024, i64 0, metadata !301, metadata !232), !dbg !302 ; var:"f" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %.i126, i64 0, metadata !301, metadata !234), !dbg !302 ; var:"f" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %.i024, i64 0, metadata !301, metadata !232), !dbg !302 ; var:"f" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %.i126, i64 0, metadata !301, metadata !234), !dbg !302 ; var:"f" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormal"
  %FAbs9 = call float @dx.op.unary.f32(i32 6, float %.i024), !dbg !306 ; line:349 col:39  ; FAbs(value)
  %48 = fsub fast float 1.000000e+00, %FAbs9, !dbg !307 ; line:349 col:37
  %FAbs8 = call float @dx.op.unary.f32(i32 6, float %.i126), !dbg !308 ; line:349 col:50  ; FAbs(value)
  %49 = fsub fast float %48, %FAbs8, !dbg !309 ; line:349 col:48
  %50 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !310 ; line:349 col:12
  call void @llvm.dbg.value(metadata float %.i024, i64 0, metadata !311, metadata !232), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %.i126, i64 0, metadata !311, metadata !234), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %49, i64 0, metadata !311, metadata !299), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormal"
  %51 = fsub fast float -0.000000e+00, %49, !dbg !312 ; line:350 col:24
  %Saturate = call float @dx.op.unary.f32(i32 7, float %51), !dbg !313 ; line:350 col:15  ; Saturate(value)
  %52 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !314 ; line:350 col:11
  call void @llvm.dbg.value(metadata float %Saturate, i64 0, metadata !315, metadata !244), !dbg !314 ; var:"t" !DIExpression() func:"DecodeNormal"
  %.i028 = fcmp fast oge float %.i024, 0.000000e+00, !dbg !316 ; line:351 col:18
  %.i130 = fcmp fast oge float %.i126, 0.000000e+00, !dbg !316 ; line:351 col:18
  %53 = fsub fast float -0.000000e+00, %Saturate, !dbg !317 ; line:351 col:27
  %54 = select i1 %.i028, float %53, float %Saturate, !dbg !318 ; line:351 col:13
  %55 = select i1 %.i130, float %53, float %Saturate, !dbg !318 ; line:351 col:13
  %.i031 = fadd fast float %.i024, %54, !dbg !319 ; line:351 col:10
  %.i132 = fadd fast float %.i126, %55, !dbg !319 ; line:351 col:10
  %56 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !319 ; line:351 col:10
  call void @llvm.dbg.value(metadata float %.i031, i64 0, metadata !311, metadata !232), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %.i126, i64 0, metadata !311, metadata !234), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %49, i64 0, metadata !311, metadata !299), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormal"
  %57 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !319 ; line:351 col:10
  call void @llvm.dbg.value(metadata float %.i031, i64 0, metadata !311, metadata !232), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %.i132, i64 0, metadata !311, metadata !234), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormal"
  call void @llvm.dbg.value(metadata float %49, i64 0, metadata !311, metadata !299), !dbg !310 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormal"
  %58 = call float @dx.op.dot3.f32(i32 55, float %.i031, float %.i132, float %49, float %.i031, float %.i132, float %49), !dbg !320 ; line:352 col:12  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt14 = call float @dx.op.unary.f32(i32 25, float %58), !dbg !320 ; line:352 col:12  ; Rsqrt(value)
  %.i033 = fmul fast float %.i031, %Rsqrt14, !dbg !320 ; line:352 col:12
  %.i134 = fmul fast float %.i132, %Rsqrt14, !dbg !320 ; line:352 col:12
  %.i2 = fmul fast float %49, %Rsqrt14, !dbg !320 ; line:352 col:12
  %59 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !321 ; line:352 col:5
  %60 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !322 ; line:429 col:12
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !323, metadata !232), !dbg !324 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !323, metadata !234), !dbg !324 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !323, metadata !299), !dbg !324 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !323, metadata !232), !dbg !324 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !323, metadata !234), !dbg !324 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !323, metadata !299), !dbg !324 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !325, metadata !232), !dbg !326 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !325, metadata !234), !dbg !326 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !325, metadata !299), !dbg !326 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !325, metadata !232), !dbg !326 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !325, metadata !234), !dbg !326 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !325, metadata !299), !dbg !326 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !327, metadata !232), !dbg !328 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !327, metadata !234), !dbg !328 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !327, metadata !299), !dbg !328 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !327, metadata !232), !dbg !328 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !327, metadata !234), !dbg !328 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !327, metadata !299), !dbg !328 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"main"
  %61 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !329 ; line:430 col:11
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !330, metadata !244), !dbg !331 ; var:"depth" !DIExpression() func:"DecodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !332, metadata !244), !dbg !333 ; var:"depth" !DIExpression() func:"DecodeNormalDepth"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !334, metadata !244), !dbg !335 ; var:"rayOriginDepth" !DIExpression() func:"main"
  %62 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !336 ; line:431 col:1
  %63 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !337 ; line:441 col:1
  %64 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !338 ; line:52 col:12
  call void @llvm.dbg.value(metadata <3 x float> zeroinitializer, i64 0, metadata !339, metadata !244), !dbg !338 ; var:"rayDirection" !DIExpression() func:"main"
  %65 = fcmp fast une float %LegacyF16ToF32, 0.000000e+00, !dbg !340 ; line:53 col:24
  %66 = icmp ne i1 %65, false, !dbg !340 ; line:53 col:24
  %67 = icmp ne i1 %66, false, !dbg !340 ; line:53 col:24
  br i1 %67, label %68, label %229, !dbg !341 ; line:53 col:9

; <label>:68                                      ; preds = %25
  %69 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 0), !dbg !342 ; line:55 col:70  ; CBufferLoadLegacy(handle,regIndex)
  %70 = extractvalue %dx.types.CBufRet.i32 %69, 0, !dbg !342 ; line:55 col:70
  call void @llvm.dbg.value(metadata i32 %70, i64 0, metadata !343, metadata !232), !dbg !344 ; var:"textureDim" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  %71 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !345 ; line:55 col:24
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !346, metadata !244), !dbg !347 ; var:"raySampleIndexOffset" !DIExpression() func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %70, i64 0, metadata !343, metadata !232), !dbg !344 ; var:"textureDim" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !348, metadata !232), !dbg !349 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !348, metadata !234), !dbg !349 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !348, metadata !299), !dbg !349 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !348, metadata !232), !dbg !349 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !348, metadata !234), !dbg !349 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !348, metadata !299), !dbg !349 ; var:"surfaceNormal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !350, metadata !232), !dbg !351 ; var:"srcRayIndex" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !350, metadata !234), !dbg !351 ; var:"srcRayIndex" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  %72 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !352 ; line:20 col:7
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !353, metadata !232), !dbg !354 ; var:"w" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !353, metadata !234), !dbg !354 ; var:"w" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !353, metadata !299), !dbg !354 ; var:"w" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i033, i64 0, metadata !353, metadata !232), !dbg !354 ; var:"w" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i134, i64 0, metadata !353, metadata !234), !dbg !354 ; var:"w" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i2, i64 0, metadata !353, metadata !299), !dbg !354 ; var:"w" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %.i036 = fmul fast float 0x3FD3333340000000, %.i033, !dbg !355 ; line:23 col:25
  %.i138 = fmul fast float 0x3FD3333340000000, %.i134, !dbg !355 ; line:23 col:25
  %.i240 = fmul fast float 0x3FD3333340000000, %.i2, !dbg !355 ; line:23 col:25
  %.i042 = fadd fast float %.i036, 0xBFE70A3D80000000, !dbg !356 ; line:23 col:29
  %.i144 = fadd fast float %.i138, 0x3FE1EB8520000000, !dbg !356 ; line:23 col:29
  %.i246 = fadd fast float %.i240, 0xBFD5C28F60000000, !dbg !356 ; line:23 col:29
  %73 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !357 ; line:23 col:12
  call void @llvm.dbg.value(metadata float %.i042, i64 0, metadata !358, metadata !232), !dbg !357 ; var:"right" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i144, i64 0, metadata !358, metadata !234), !dbg !357 ; var:"right" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i246, i64 0, metadata !358, metadata !299), !dbg !357 ; var:"right" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i042, i64 0, metadata !358, metadata !232), !dbg !357 ; var:"right" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i144, i64 0, metadata !358, metadata !234), !dbg !357 ; var:"right" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i246, i64 0, metadata !358, metadata !299), !dbg !357 ; var:"right" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %74 = fmul fast float %.i134, %.i246, !dbg !359 ; line:24 col:19
  %75 = fmul fast float %.i2, %.i144, !dbg !359 ; line:24 col:19
  %76 = fsub fast float %74, %75, !dbg !359 ; line:24 col:19
  %77 = fmul fast float %.i2, %.i042, !dbg !359 ; line:24 col:19
  %78 = fmul fast float %.i033, %.i246, !dbg !359 ; line:24 col:19
  %79 = fsub fast float %77, %78, !dbg !359 ; line:24 col:19
  %80 = fmul fast float %.i033, %.i144, !dbg !359 ; line:24 col:19
  %81 = fmul fast float %.i134, %.i042, !dbg !359 ; line:24 col:19
  %82 = fsub fast float %80, %81, !dbg !359 ; line:24 col:19
  %83 = call float @dx.op.dot3.f32(i32 55, float %76, float %79, float %82, float %76, float %79, float %82), !dbg !360 ; line:24 col:9  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt13 = call float @dx.op.unary.f32(i32 25, float %83), !dbg !360 ; line:24 col:9  ; Rsqrt(value)
  %.i047 = fmul fast float %76, %Rsqrt13, !dbg !360 ; line:24 col:9
  %.i148 = fmul fast float %79, %Rsqrt13, !dbg !360 ; line:24 col:9
  %.i249 = fmul fast float %82, %Rsqrt13, !dbg !360 ; line:24 col:9
  %84 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !361 ; line:24 col:7
  call void @llvm.dbg.value(metadata float %.i047, i64 0, metadata !362, metadata !232), !dbg !363 ; var:"v" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i148, i64 0, metadata !362, metadata !234), !dbg !363 ; var:"v" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i249, i64 0, metadata !362, metadata !299), !dbg !363 ; var:"v" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i047, i64 0, metadata !362, metadata !232), !dbg !363 ; var:"v" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i148, i64 0, metadata !362, metadata !234), !dbg !363 ; var:"v" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i249, i64 0, metadata !362, metadata !299), !dbg !363 ; var:"v" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %85 = fmul fast float %.i148, %.i2, !dbg !364 ; line:25 col:9
  %86 = fmul fast float %.i249, %.i134, !dbg !364 ; line:25 col:9
  %87 = fsub fast float %85, %86, !dbg !364 ; line:25 col:9
  %88 = fmul fast float %.i249, %.i033, !dbg !364 ; line:25 col:9
  %89 = fmul fast float %.i047, %.i2, !dbg !364 ; line:25 col:9
  %90 = fsub fast float %88, %89, !dbg !364 ; line:25 col:9
  %91 = fmul fast float %.i047, %.i134, !dbg !364 ; line:25 col:9
  %92 = fmul fast float %.i148, %.i033, !dbg !364 ; line:25 col:9
  %93 = fsub fast float %91, %92, !dbg !364 ; line:25 col:9
  %94 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !365 ; line:25 col:7
  call void @llvm.dbg.value(metadata float %87, i64 0, metadata !366, metadata !232), !dbg !367 ; var:"u" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %90, i64 0, metadata !366, metadata !234), !dbg !367 ; var:"u" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %93, i64 0, metadata !366, metadata !299), !dbg !367 ; var:"u" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %95 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !368 ; line:36 col:52  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.i32 %95, 3, !dbg !368 ; line:36 col:52
  %97 = add i32 %70, %96, !dbg !370 ; line:36 col:47
  %98 = sub i32 %97, 1, !dbg !371 ; line:36 col:74
  %99 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !372 ; line:36 col:84  ; CBufferLoadLegacy(handle,regIndex)
  %100 = extractvalue %dx.types.CBufRet.i32 %99, 3, !dbg !372 ; line:36 col:84
  %101 = udiv i32 %98, %100, !dbg !373 ; line:36 col:79
  %102 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !374 ; line:36 col:14
  call void @llvm.dbg.value(metadata i32 %101, i64 0, metadata !375, metadata !244), !dbg !374 ; var:"numSampleSetsInX" !DIExpression() func:"GetRandomRayDirection"
  %103 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !376 ; line:37 col:46  ; CBufferLoadLegacy(handle,regIndex)
  %104 = extractvalue %dx.types.CBufRet.i32 %103, 3, !dbg !376 ; line:37 col:46
  %.i050 = udiv i32 %1, %104, !dbg !377 ; line:37 col:41
  %.i151 = udiv i32 %2, %104, !dbg !377 ; line:37 col:41
  %105 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !378 ; line:37 col:15
  call void @llvm.dbg.value(metadata i32 %.i050, i64 0, metadata !379, metadata !232), !dbg !378 ; var:"sampleSetId" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i151, i64 0, metadata !379, metadata !234), !dbg !378 ; var:"sampleSetId" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i050, i64 0, metadata !379, metadata !232), !dbg !378 ; var:"sampleSetId" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i151, i64 0, metadata !379, metadata !234), !dbg !378 ; var:"sampleSetId" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  %106 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !380 ; line:42 col:46  ; CBufferLoadLegacy(handle,regIndex)
  %107 = extractvalue %dx.types.CBufRet.i32 %106, 3, !dbg !380 ; line:42 col:46
  %.i052 = mul i32 %.i050, %107, !dbg !381 ; line:42 col:41
  %.i153 = mul i32 %.i151, %107, !dbg !381 ; line:42 col:41
  %108 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !382 ; line:42 col:15
  call void @llvm.dbg.value(metadata i32 %.i052, i64 0, metadata !383, metadata !232), !dbg !382 ; var:"pixelZeroId" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i153, i64 0, metadata !383, metadata !234), !dbg !382 ; var:"pixelZeroId" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i052, i64 0, metadata !383, metadata !232), !dbg !382 ; var:"pixelZeroId" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i153, i64 0, metadata !383, metadata !234), !dbg !382 ; var:"pixelZeroId" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  %TextureLoad15 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %g_texRayOriginPosition_texture_2d, i32 0, i32 %.i052, i32 %.i153, i32 undef, i32 undef, i32 undef, i32 undef), !dbg !384 ; line:43 col:39  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %109 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 0, !dbg !384 ; line:43 col:39
  %110 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 1, !dbg !384 ; line:43 col:39
  %111 = extractvalue %dx.types.ResRet.f32 %TextureLoad15, 2, !dbg !384 ; line:43 col:39
  %112 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !385 ; line:43 col:16
  call void @llvm.dbg.value(metadata float %109, i64 0, metadata !386, metadata !232), !dbg !385 ; var:"pixelZeroHitPosition" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %110, i64 0, metadata !386, metadata !234), !dbg !385 ; var:"pixelZeroHitPosition" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %111, i64 0, metadata !386, metadata !299), !dbg !385 ; var:"pixelZeroHitPosition" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %113 = mul i32 %.i151, %101, !dbg !387 ; line:44 col:45
  %114 = add i32 %113, %.i050, !dbg !388 ; line:44 col:64
  %115 = uitofp i32 %114 to float, !dbg !389 ; line:44 col:30
  %116 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !390 ; line:44 col:83
  call void @llvm.dbg.value(metadata float %109, i64 0, metadata !391, metadata !232), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 0, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %110, i64 0, metadata !391, metadata !234), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 32, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %111, i64 0, metadata !391, metadata !299), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 64, 32) func:"hash"
  %.i055 = fmul fast float %109, 0x3FD45F3080000000, !dbg !394 ; line:464 col:15
  %.i157 = fmul fast float %110, 0x3FD45F3080000000, !dbg !394 ; line:464 col:15
  %.i259 = fmul fast float %111, 0x3FD45F3080000000, !dbg !394 ; line:464 col:15
  %.i061 = fadd fast float %.i055, 0x3FB99999A0000000, !dbg !395 ; line:464 col:26
  %.i163 = fadd fast float %.i157, 0x3FB99999A0000000, !dbg !395 ; line:464 col:26
  %.i265 = fadd fast float %.i259, 0x3FB99999A0000000, !dbg !395 ; line:464 col:26
  %Frc10 = call float @dx.op.unary.f32(i32 22, float %.i061), !dbg !396 ; line:464 col:9  ; Frc(value)
  %Frc11 = call float @dx.op.unary.f32(i32 22, float %.i163), !dbg !396 ; line:464 col:9  ; Frc(value)
  %Frc12 = call float @dx.op.unary.f32(i32 22, float %.i265), !dbg !396 ; line:464 col:9  ; Frc(value)
  call void @llvm.dbg.value(metadata float %Frc10, i64 0, metadata !391, metadata !232), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 0, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %Frc11, i64 0, metadata !391, metadata !234), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 32, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %Frc12, i64 0, metadata !391, metadata !299), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 64, 32) func:"hash"
  %.i067 = fmul fast float %Frc10, 1.700000e+01, !dbg !397 ; line:465 col:7
  %.i169 = fmul fast float %Frc11, 1.700000e+01, !dbg !397 ; line:465 col:7
  %.i271 = fmul fast float %Frc12, 1.700000e+01, !dbg !397 ; line:465 col:7
  call void @llvm.dbg.value(metadata float %.i067, i64 0, metadata !391, metadata !232), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 0, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %.i169, i64 0, metadata !391, metadata !234), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 32, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %.i271, i64 0, metadata !391, metadata !299), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 64, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %.i067, i64 0, metadata !391, metadata !232), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 0, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %.i169, i64 0, metadata !391, metadata !234), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 32, 32) func:"hash"
  call void @llvm.dbg.value(metadata float %.i271, i64 0, metadata !391, metadata !299), !dbg !392 ; var:"p" !DIExpression(DW_OP_bit_piece, 64, 32) func:"hash"
  %117 = fmul fast float %.i067, %.i169, !dbg !398 ; line:466 col:20
  %118 = fmul fast float %117, %.i271, !dbg !399 ; line:466 col:24
  %119 = fadd fast float %.i067, %.i169, !dbg !400 ; line:466 col:34
  %120 = fadd fast float %119, %.i271, !dbg !401 ; line:466 col:40
  %121 = fmul fast float %118, %120, !dbg !402 ; line:466 col:28
  %Frc = call float @dx.op.unary.f32(i32 22, float %121), !dbg !403 ; line:466 col:12  ; Frc(value)
  %122 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !404 ; line:466 col:5
  %123 = fmul fast float %115, %Frc, !dbg !405 ; line:44 col:81
  %124 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !406 ; line:44 col:115  ; CBufferLoadLegacy(handle,regIndex)
  %125 = extractvalue %dx.types.CBufRet.i32 %124, 0, !dbg !406 ; line:44 col:115
  %126 = uitofp i32 %125 to float, !dbg !407 ; line:44 col:112
  %127 = fadd fast float %123, %126, !dbg !408 ; line:44 col:110
  %128 = fptoui float %127 to i32, !dbg !389 ; line:44 col:30
  %129 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !409 ; line:44 col:14
  call void @llvm.dbg.value(metadata i32 %128, i64 0, metadata !410, metadata !244), !dbg !409 ; var:"sampleSetSeed" !DIExpression() func:"GetRandomRayDirection"
  %130 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !411 ; line:45 col:25
  call void @llvm.dbg.value(metadata i32 %128, i64 0, metadata !412, metadata !244), !dbg !413 ; var:"seed" !DIExpression() func:"SeedThread"
  %131 = xor i32 %128, 61, !dbg !415 ; line:23 col:22
  %132 = lshr i32 %128, 16, !dbg !416 ; line:23 col:36
  %133 = xor i32 %131, %132, !dbg !417 ; line:23 col:28
  call void @llvm.dbg.value(metadata i32 %133, i64 0, metadata !412, metadata !244), !dbg !413 ; var:"seed" !DIExpression() func:"SeedThread"
  %134 = mul i32 %133, 9, !dbg !418 ; line:24 col:14
  call void @llvm.dbg.value(metadata i32 %134, i64 0, metadata !412, metadata !244), !dbg !413 ; var:"seed" !DIExpression() func:"SeedThread"
  %135 = lshr i32 %134, 4, !dbg !419 ; line:25 col:29
  %136 = xor i32 %134, %135, !dbg !420 ; line:25 col:21
  call void @llvm.dbg.value(metadata i32 %136, i64 0, metadata !412, metadata !244), !dbg !413 ; var:"seed" !DIExpression() func:"SeedThread"
  %137 = mul i32 %136, 668265261, !dbg !421 ; line:26 col:14
  call void @llvm.dbg.value(metadata i32 %137, i64 0, metadata !412, metadata !244), !dbg !413 ; var:"seed" !DIExpression() func:"SeedThread"
  %138 = lshr i32 %137, 15, !dbg !422 ; line:27 col:29
  %139 = xor i32 %137, %138, !dbg !423 ; line:27 col:21
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !412, metadata !244), !dbg !413 ; var:"seed" !DIExpression() func:"SeedThread"
  %140 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !424 ; line:28 col:9
  %141 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !425 ; line:45 col:14
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %142 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !442 ; line:47 col:53  ; CBufferLoadLegacy(handle,regIndex)
  %143 = extractvalue %dx.types.CBufRet.i32 %142, 2, !dbg !442 ; line:47 col:53
  %144 = sub i32 %143, 1, !dbg !443 ; line:47 col:67
  %145 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !444 ; line:47 col:25
  call void @llvm.dbg.value(metadata i32 %144, i64 0, metadata !445, metadata !244), !dbg !446 ; var:"upper" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !447, metadata !244), !dbg !448 ; var:"lower" !DIExpression() func:"Random"
  %146 = sub i32 %144, 0, !dbg !449 ; line:57 col:41
  %147 = add i32 %146, 1, !dbg !450 ; line:57 col:49
  %148 = uitofp i32 %147 to float, !dbg !451 ; line:57 col:35
  %149 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !452 ; line:57 col:56
  %150 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !453 ; line:44 col:37
  %151 = shl i32 %139, 13, !dbg !454 ; line:35 col:25
  %152 = xor i32 %139, %151, !dbg !455 ; line:35 col:15
  %153 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !455 ; line:35 col:15
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %154 = lshr i32 %152, 17, !dbg !456 ; line:36 col:25
  %155 = xor i32 %152, %154, !dbg !457 ; line:36 col:15
  %156 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !457 ; line:36 col:15
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %157 = shl i32 %155, 5, !dbg !458 ; line:37 col:25
  %158 = xor i32 %155, %157, !dbg !459 ; line:37 col:15
  %159 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !459 ; line:37 col:15
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %160 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !460 ; line:38 col:9
  %161 = lshr i32 %158, 9, !dbg !461 ; line:44 col:51
  %162 = or i32 1065353216, %161, !dbg !462 ; line:44 col:35
  %163 = bitcast i32 %162 to float, !dbg !463 ; line:44 col:16
  %164 = fsub fast float %163, 1.000000e+00, !dbg !464 ; line:44 col:57
  %165 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !465 ; line:44 col:9
  %166 = fmul fast float %148, %164, !dbg !466 ; line:57 col:54
  %167 = fptoui float %166 to i32, !dbg !467 ; line:57 col:29
  %168 = add i32 0, %167, !dbg !468 ; line:57 col:22
  %169 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !469 ; line:57 col:9
  %170 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !470 ; line:47 col:77  ; CBufferLoadLegacy(handle,regIndex)
  %171 = extractvalue %dx.types.CBufRet.i32 %170, 1, !dbg !470 ; line:47 col:77
  %172 = mul i32 %168, %171, !dbg !471 ; line:47 col:72
  %173 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !472 ; line:47 col:23
  call void @llvm.dbg.value(metadata i32 %172, i64 0, metadata !473, metadata !244), !dbg !474 ; var:"sampleSetJump" !DIExpression() func:"GetRandomRayDirection"
  %174 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !475 ; line:50 col:49  ; CBufferLoadLegacy(handle,regIndex)
  %175 = extractvalue %dx.types.CBufRet.i32 %174, 3, !dbg !475 ; line:50 col:49
  %.i072 = urem i32 %1, %175, !dbg !476 ; line:50 col:44
  %.i173 = urem i32 %2, %175, !dbg !476 ; line:50 col:44
  %176 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !477 ; line:50 col:15
  call void @llvm.dbg.value(metadata i32 %.i072, i64 0, metadata !478, metadata !232), !dbg !477 ; var:"pixeIDPerSet2D" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i173, i64 0, metadata !478, metadata !234), !dbg !477 ; var:"pixeIDPerSet2D" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i072, i64 0, metadata !478, metadata !232), !dbg !477 ; var:"pixeIDPerSet2D" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata i32 %.i173, i64 0, metadata !478, metadata !234), !dbg !477 ; var:"pixeIDPerSet2D" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  %177 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !479 ; line:51 col:51  ; CBufferLoadLegacy(handle,regIndex)
  %178 = extractvalue %dx.types.CBufRet.i32 %177, 3, !dbg !479 ; line:51 col:51
  %179 = mul i32 %.i173, %178, !dbg !480 ; line:51 col:46
  %180 = add i32 %179, %.i072, !dbg !481 ; line:51 col:73
  %181 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !482 ; line:51 col:14
  call void @llvm.dbg.value(metadata i32 %180, i64 0, metadata !483, metadata !244), !dbg !482 ; var:"pixeIDPerSet" !DIExpression() func:"GetRandomRayDirection"
  %182 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !484 ; line:55 col:35  ; CBufferLoadLegacy(handle,regIndex)
  %183 = extractvalue %dx.types.CBufRet.i32 %182, 3, !dbg !484 ; line:55 col:35
  %184 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !485 ; line:55 col:62  ; CBufferLoadLegacy(handle,regIndex)
  %185 = extractvalue %dx.types.CBufRet.i32 %184, 3, !dbg !485 ; line:55 col:62
  %186 = mul i32 %183, %185, !dbg !486 ; line:55 col:57
  %187 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !487 ; line:55 col:14
  call void @llvm.dbg.value(metadata i32 %186, i64 0, metadata !488, metadata !244), !dbg !487 ; var:"numPixelsPerSet" !DIExpression() func:"GetRandomRayDirection"
  %188 = sub i32 %186, 1, !dbg !489 ; line:56 col:78
  %189 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !490 ; line:56 col:37
  call void @llvm.dbg.value(metadata i32 %188, i64 0, metadata !445, metadata !244), !dbg !491 ; var:"upper" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !447, metadata !244), !dbg !492 ; var:"lower" !DIExpression() func:"Random"
  %190 = sub i32 %188, 0, !dbg !493 ; line:57 col:41
  %191 = add i32 %190, 1, !dbg !494 ; line:57 col:49
  %192 = uitofp i32 %191 to float, !dbg !495 ; line:57 col:35
  %193 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !496 ; line:57 col:56
  %194 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !497 ; line:44 col:37
  %195 = shl i32 %158, 13, !dbg !498 ; line:35 col:25
  %196 = xor i32 %158, %195, !dbg !499 ; line:35 col:15
  %197 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !499 ; line:35 col:15
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %198 = lshr i32 %196, 17, !dbg !500 ; line:36 col:25
  %199 = xor i32 %196, %198, !dbg !501 ; line:36 col:15
  %200 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !501 ; line:36 col:15
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %201 = shl i32 %199, 5, !dbg !502 ; line:37 col:25
  %202 = xor i32 %199, %201, !dbg !503 ; line:37 col:15
  %203 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !503 ; line:37 col:15
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !426, metadata !244), !dbg !427 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !431, metadata !244), !dbg !432 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !433, metadata !244), !dbg !434 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !426, metadata !244), !dbg !435 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !431, metadata !244), !dbg !439 ; var:"state" !DIExpression() func:"Random01"
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !433, metadata !244), !dbg !440 ; var:"state" !DIExpression() func:"Random"
  call void @llvm.dbg.value(metadata i32 %202, i64 0, metadata !441, metadata !244), !dbg !425 ; var:"RNGState" !DIExpression() func:"GetRandomRayDirection"
  %204 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !504 ; line:38 col:9
  %205 = lshr i32 %202, 9, !dbg !505 ; line:44 col:51
  %206 = or i32 1065353216, %205, !dbg !506 ; line:44 col:35
  %207 = bitcast i32 %206 to float, !dbg !507 ; line:44 col:16
  %208 = fsub fast float %207, 1.000000e+00, !dbg !508 ; line:44 col:57
  %209 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !509 ; line:44 col:9
  %210 = fmul fast float %192, %208, !dbg !510 ; line:57 col:54
  %211 = fptoui float %210 to i32, !dbg !511 ; line:57 col:29
  %212 = add i32 0, %211, !dbg !512 ; line:57 col:22
  %213 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !513 ; line:57 col:9
  %214 = add i32 %180, %212, !dbg !514 ; line:56 col:35
  %215 = add i32 %214, 0, !dbg !515 ; line:56 col:83
  %216 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !516 ; line:56 col:20
  call void @llvm.dbg.value(metadata i32 %215, i64 0, metadata !517, metadata !244), !dbg !518 ; var:"sampleJump" !DIExpression() func:"GetRandomRayDirection"
  %217 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %cb_cbuffer, i32 1), !dbg !519 ; line:60 col:67  ; CBufferLoadLegacy(handle,regIndex)
  %218 = extractvalue %dx.types.CBufRet.i32 %217, 1, !dbg !519 ; line:60 col:67
  %219 = urem i32 %215, %218, !dbg !520 ; line:60 col:62
  %220 = add i32 %172, %219, !dbg !521 ; line:60 col:48
  %RawBufferLoad = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %g_sampleSets_texture_structbuf, i32 %220, i32 0, i8 7, i32 4), !dbg !522 ; line:60 col:86  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %221 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 0, !dbg !522 ; line:60 col:86
  %222 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 1, !dbg !522 ; line:60 col:86
  %223 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 2, !dbg !522 ; line:60 col:86
  %224 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !523 ; line:60 col:12
  call void @llvm.dbg.value(metadata float %221, i64 0, metadata !524, metadata !232), !dbg !523 ; var:"sample" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %222, i64 0, metadata !524, metadata !234), !dbg !523 ; var:"sample" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %223, i64 0, metadata !524, metadata !299), !dbg !523 ; var:"sample" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %.i074 = fmul fast float %221, %87, !dbg !525 ; line:61 col:46
  %.i175 = fmul fast float %221, %90, !dbg !525 ; line:61 col:46
  %.i276 = fmul fast float %221, %93, !dbg !525 ; line:61 col:46
  %.i077 = fmul fast float %222, %.i047, !dbg !526 ; line:61 col:61
  %.i178 = fmul fast float %222, %.i148, !dbg !526 ; line:61 col:61
  %.i279 = fmul fast float %222, %.i249, !dbg !526 ; line:61 col:61
  %.i080 = fadd fast float %.i074, %.i077, !dbg !527 ; line:61 col:50
  %.i181 = fadd fast float %.i175, %.i178, !dbg !527 ; line:61 col:50
  %.i282 = fadd fast float %.i276, %.i279, !dbg !527 ; line:61 col:50
  %.i083 = fmul fast float %223, %.i033, !dbg !528 ; line:61 col:76
  %.i184 = fmul fast float %223, %.i134, !dbg !528 ; line:61 col:76
  %.i285 = fmul fast float %223, %.i2, !dbg !528 ; line:61 col:76
  %.i086 = fadd fast float %.i080, %.i083, !dbg !529 ; line:61 col:65
  %.i187 = fadd fast float %.i181, %.i184, !dbg !529 ; line:61 col:65
  %.i288 = fadd fast float %.i282, %.i285, !dbg !529 ; line:61 col:65
  %225 = call float @dx.op.dot3.f32(i32 55, float %.i086, float %.i187, float %.i288, float %.i086, float %.i187, float %.i288), !dbg !530 ; line:61 col:27  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %225), !dbg !530 ; line:61 col:27  ; Rsqrt(value)
  %.i089 = fmul fast float %.i086, %Rsqrt, !dbg !530 ; line:61 col:27
  %.i190 = fmul fast float %.i187, %Rsqrt, !dbg !530 ; line:61 col:27
  %.i291 = fmul fast float %.i288, %Rsqrt, !dbg !530 ; line:61 col:27
  %226 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !531 ; line:61 col:12
  call void @llvm.dbg.value(metadata float %.i089, i64 0, metadata !532, metadata !232), !dbg !531 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 0, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i190, i64 0, metadata !532, metadata !234), !dbg !531 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 32, 32) func:"GetRandomRayDirection"
  call void @llvm.dbg.value(metadata float %.i291, i64 0, metadata !532, metadata !299), !dbg !531 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 64, 32) func:"GetRandomRayDirection"
  %227 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !533 ; line:63 col:5
  %228 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !534 ; line:55 col:22
  call void @llvm.dbg.value(metadata float %.i089, i64 0, metadata !339, metadata !232), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i190, i64 0, metadata !339, metadata !234), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata float %.i291, i64 0, metadata !339, metadata !299), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 64, 32) func:"main"
  br label %229, !dbg !535 ; line:56 col:5

; <label>:229                                     ; preds = %68, %25
  %rayDirection.0.i0 = phi float [ %.i089, %68 ], [ 0.000000e+00, %25 ]
  %rayDirection.0.i1 = phi float [ %.i190, %68 ], [ 0.000000e+00, %25 ]
  %rayDirection.0.i2 = phi float [ %.i291, %68 ], [ 0.000000e+00, %25 ]
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !339, metadata !232), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !339, metadata !234), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !339, metadata !299), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 64, 32) func:"main"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !339, metadata !232), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 0, 32) func:"main"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !339, metadata !234), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 32, 32) func:"main"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !339, metadata !299), !dbg !338 ; var:"rayDirection" !DIExpression(DW_OP_bit_piece, 64, 32) func:"main"
  %230 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !536 ; line:58 col:42
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !537, metadata !244), !dbg !538 ; var:"depth" !DIExpression() func:"EncodeNormalDepth"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !540, metadata !232), !dbg !541 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormalDepth"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !540, metadata !234), !dbg !541 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormalDepth"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !540, metadata !299), !dbg !541 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormalDepth"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !540, metadata !232), !dbg !541 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormalDepth"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !540, metadata !234), !dbg !541 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormalDepth"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !540, metadata !299), !dbg !541 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormalDepth"
  %231 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !542 ; line:435 col:12
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !543, metadata !244), !dbg !544 ; var:"depth" !DIExpression() func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !546, metadata !232), !dbg !547 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !546, metadata !234), !dbg !547 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !546, metadata !299), !dbg !547 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !546, metadata !232), !dbg !547 ; var:"normal" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !546, metadata !234), !dbg !547 ; var:"normal" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !546, metadata !299), !dbg !547 ; var:"normal" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormalDepth_N16D16"
  %232 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !548 ; line:420 col:40
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i0, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i1, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %rayDirection.0.i2, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  %FAbs7 = call float @dx.op.unary.f32(i32 6, float %rayDirection.0.i0), !dbg !552 ; line:338 col:11  ; FAbs(value)
  %FAbs6 = call float @dx.op.unary.f32(i32 6, float %rayDirection.0.i1), !dbg !553 ; line:338 col:22  ; FAbs(value)
  %233 = fadd fast float %FAbs7, %FAbs6, !dbg !554 ; line:338 col:20
  %FAbs = call float @dx.op.unary.f32(i32 6, float %rayDirection.0.i2), !dbg !555 ; line:338 col:33  ; FAbs(value)
  %234 = fadd fast float %233, %FAbs, !dbg !556 ; line:338 col:31
  %.i092 = fdiv fast float %rayDirection.0.i0, %234, !dbg !557 ; line:338 col:7
  %.i193 = fdiv fast float %rayDirection.0.i1, %234, !dbg !557 ; line:338 col:7
  %.i294 = fdiv fast float %rayDirection.0.i2, %234, !dbg !557 ; line:338 col:7
  call void @llvm.dbg.value(metadata float %.i092, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i193, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i294, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i092, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i193, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i294, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  %235 = fcmp fast oge float %.i294, 0.000000e+00, !dbg !558 ; line:339 col:16
  %236 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !559 ; line:339 col:32
  call void @llvm.dbg.value(metadata float %.i092, i64 0, metadata !560, metadata !232), !dbg !561 ; var:"v" !DIExpression(DW_OP_bit_piece, 0, 32) func:"OctWrap"
  call void @llvm.dbg.value(metadata float %.i193, i64 0, metadata !560, metadata !234), !dbg !561 ; var:"v" !DIExpression(DW_OP_bit_piece, 32, 32) func:"OctWrap"
  %FAbs16 = call float @dx.op.unary.f32(i32 6, float %.i193), !dbg !563 ; line:332 col:19  ; FAbs(value)
  %FAbs17 = call float @dx.op.unary.f32(i32 6, float %.i092), !dbg !563 ; line:332 col:19  ; FAbs(value)
  %.i096 = fsub fast float 1.000000e+00, %FAbs16, !dbg !564 ; line:332 col:17
  %.i198 = fsub fast float 1.000000e+00, %FAbs17, !dbg !564 ; line:332 col:17
  %.i0100 = fcmp fast oge float %.i092, 0.000000e+00, !dbg !565 ; line:332 col:38
  %.i1102 = fcmp fast oge float %.i193, 0.000000e+00, !dbg !565 ; line:332 col:38
  %237 = select i1 %.i0100, double 1.000000e+00, double -1.000000e+00, !dbg !566 ; line:332 col:33
  %238 = select i1 %.i1102, double 1.000000e+00, double -1.000000e+00, !dbg !566 ; line:332 col:33
  %.i0103 = fptrunc double %237 to float, !dbg !567 ; line:332 col:32
  %.i1104 = fptrunc double %238 to float, !dbg !567 ; line:332 col:32
  %.i0105 = fmul fast float %.i096, %.i0103, !dbg !568 ; line:332 col:30
  %.i1106 = fmul fast float %.i198, %.i1104, !dbg !568 ; line:332 col:30
  %239 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !569 ; line:332 col:5
  %240 = select i1 %235, float %.i092, float %.i0105, !dbg !570 ; line:339 col:12
  %241 = select i1 %235, float %.i193, float %.i1106, !dbg !570 ; line:339 col:12
  call void @llvm.dbg.value(metadata float %240, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i193, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i294, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %240, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %241, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i294, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  %.i0108 = fmul fast float %240, 5.000000e-01, !dbg !571 ; line:340 col:17
  %.i1110 = fmul fast float %241, 5.000000e-01, !dbg !571 ; line:340 col:17
  %.i0112 = fadd fast float %.i0108, 5.000000e-01, !dbg !572 ; line:340 col:23
  %.i1114 = fadd fast float %.i1110, 5.000000e-01, !dbg !572 ; line:340 col:23
  call void @llvm.dbg.value(metadata float %.i0112, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %241, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i294, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i0112, i64 0, metadata !549, metadata !232), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i1114, i64 0, metadata !549, metadata !234), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormal"
  call void @llvm.dbg.value(metadata float %.i294, i64 0, metadata !549, metadata !299), !dbg !550 ; var:"n" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormal"
  %242 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !573 ; line:341 col:5
  %243 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !574 ; line:420 col:12
  call void @llvm.dbg.value(metadata float %.i0112, i64 0, metadata !575, metadata !232), !dbg !574 ; var:"encodedNormalDepth" !DIExpression(DW_OP_bit_piece, 0, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %.i1114, i64 0, metadata !575, metadata !234), !dbg !574 ; var:"encodedNormalDepth" !DIExpression(DW_OP_bit_piece, 32, 32) func:"EncodeNormalDepth_N16D16"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !575, metadata !299), !dbg !574 ; var:"encodedNormalDepth" !DIExpression(DW_OP_bit_piece, 64, 32) func:"EncodeNormalDepth_N16D16"
  %244 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !576 ; line:421 col:12
  call void @llvm.dbg.value(metadata float %.i0112, i64 0, metadata !577, metadata !232), !dbg !578 ; var:"rgb" !DIExpression(DW_OP_bit_piece, 0, 32) func:"Pack_R8G8B16_FLOAT"
  call void @llvm.dbg.value(metadata float %.i1114, i64 0, metadata !577, metadata !234), !dbg !578 ; var:"rgb" !DIExpression(DW_OP_bit_piece, 32, 32) func:"Pack_R8G8B16_FLOAT"
  call void @llvm.dbg.value(metadata float %LegacyF16ToF32, i64 0, metadata !577, metadata !299), !dbg !578 ; var:"rgb" !DIExpression(DW_OP_bit_piece, 64, 32) func:"Pack_R8G8B16_FLOAT"
  %245 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !580 ; line:387 col:14
  call void @llvm.dbg.value(metadata float %.i0112, i64 0, metadata !581, metadata !244), !dbg !582 ; var:"r" !DIExpression() func:"Pack_R8_FLOAT"
  %246 = fmul fast float %.i0112, 2.550000e+02, !dbg !584 ; line:361 col:26
  %Round_ne5 = call float @dx.op.unary.f32(i32 26, float %246), !dbg !585 ; line:361 col:18  ; Round_ne(value)
  %FMax18 = call float @dx.op.binary.f32(i32 35, float %Round_ne5, float 0.000000e+00), !dbg !586 ; line:361 col:12  ; FMax(a,b)
  %FMin19 = call float @dx.op.binary.f32(i32 36, float %FMax18, float 2.550000e+02), !dbg !586 ; line:361 col:12  ; FMin(a,b)
  %247 = fptoui float %FMin19 to i32, !dbg !586 ; line:361 col:12
  %248 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !587 ; line:361 col:5
  %249 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !588 ; line:387 col:10
  call void @llvm.dbg.value(metadata i32 %247, i64 0, metadata !589, metadata !244), !dbg !588 ; var:"r" !DIExpression() func:"Pack_R8G8B16_FLOAT"
  %250 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !590 ; line:388 col:14
  call void @llvm.dbg.value(metadata float %.i1114, i64 0, metadata !581, metadata !244), !dbg !591 ; var:"r" !DIExpression() func:"Pack_R8_FLOAT"
  %251 = fmul fast float %.i1114, 2.550000e+02, !dbg !593 ; line:361 col:26
  %Round_ne = call float @dx.op.unary.f32(i32 26, float %251), !dbg !594 ; line:361 col:18  ; Round_ne(value)
  %FMax = call float @dx.op.binary.f32(i32 35, float %Round_ne, float 0.000000e+00), !dbg !595 ; line:361 col:12  ; FMax(a,b)
  %FMin = call float @dx.op.binary.f32(i32 36, float %FMax, float 2.550000e+02), !dbg !595 ; line:361 col:12  ; FMin(a,b)
  %252 = fptoui float %FMin to i32, !dbg !595 ; line:361 col:12
  %253 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !596 ; line:361 col:5
  %254 = shl i32 %252, 8, !dbg !597 ; line:388 col:35
  %255 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !598 ; line:388 col:10
  call void @llvm.dbg.value(metadata i32 %254, i64 0, metadata !599, metadata !244), !dbg !598 ; var:"g" !DIExpression() func:"Pack_R8G8B16_FLOAT"
  %LegacyF32ToF16 = call i32 @dx.op.legacyF32ToF16(i32 130, float %LegacyF16ToF32), !dbg !600 ; line:389 col:14  ; LegacyF32ToF16(value)
  %256 = shl i32 %LegacyF32ToF16, 16, !dbg !601 ; line:389 col:30
  %257 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !602 ; line:389 col:10
  call void @llvm.dbg.value(metadata i32 %256, i64 0, metadata !603, metadata !244), !dbg !602 ; var:"b" !DIExpression() func:"Pack_R8G8B16_FLOAT"
  %258 = or i32 %247, %254, !dbg !604 ; line:390 col:14
  %259 = or i32 %258, %256, !dbg !605 ; line:390 col:18
  %260 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !606 ; line:390 col:5
  %261 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !607 ; line:421 col:5
  %262 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !608 ; line:435 col:5
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %g_rtRaysDirectionOriginDepth_UAV_2d, i32 %1, i32 %2, i32 undef, i32 %259, i32 %259, i32 %259, i32 %259, i8 15), !dbg !609 ; line:58 col:40  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %263 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @dx.nothing.a, i32 0, i32 0), !dbg !610 ; line:59 col:1
  ret void, !dbg !610 ; line:59 col:1
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!175, !176}
!llvm.ident = !{!177}
!dx.source.contents = !{!178, !179, !180, !181, !182, !183, !184, !185, !186, !187}
!dx.source.defines = !{!2}
!dx.source.mainFileName = !{!188}
!dx.source.args = !{!189}
!dx.version = !{!190}
!dx.valver = !{!191}
!dx.shaderModel = !{!192}
!dx.resources = !{!193}
!dx.typeAnnotations = !{!205, !221}
!dx.entryPoints = !{!224}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 3.7 (tags/RELEASE_370/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !17, globals: !92)
!1 = !DIFile(filename: "RTAO\5CShaders\5CAORayGenCS.hlsl", directory: "")
!2 = !{}
!3 = !{!4, !15, !8}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "float3", file: !1, line: 48, baseType: !5)
!5 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 3>", file: !1, line: 48, size: 96, align: 32, elements: !6, templateParams: !11)
!6 = !{!7, !9, !10}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5, file: !1, line: 48, baseType: !8, size: 32, align: 32, flags: DIFlagPublic)
!8 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5, file: !1, line: 48, baseType: !8, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !5, file: !1, line: 48, baseType: !8, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!11 = !{!12, !13}
!12 = !DITemplateTypeParameter(name: "element", type: !8)
!13 = !DITemplateValueParameter(name: "element_count", type: !14, value: i32 3)
!14 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !1, line: 42, baseType: !16)
!16 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!17 = !{!18, !29, !37, !38, !41, !44, !53, !57, !60, !65, !70, !73, !76, !79, !80, !83, !86, !89}
!18 = !DISubprogram(name: "main", scope: !1, file: !1, line: 36, type: !19, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @main)
!19 = !DISubroutineType(types: !20)
!20 = !{null, !21, !21}
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint2", file: !1, baseType: !22)
!22 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<unsigned int, 2>", file: !1, size: 64, align: 32, elements: !23, templateParams: !26)
!23 = !{!24, !25}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !22, file: !1, baseType: !16, size: 32, align: 32, flags: DIFlagPublic)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !22, file: !1, baseType: !16, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!26 = !{!27, !28}
!27 = !DITemplateTypeParameter(name: "element", type: !16)
!28 = !DITemplateValueParameter(name: "element_count", type: !14, value: i32 2)
!29 = !DISubprogram(name: "DecodeNormalDepth", linkageName: "\01?DecodeNormalDepth@@YAXIAIAV?$vector@M$02@@AIAM@Z", scope: !30, file: !30, line: 438, type: !31, isLocal: false, isDefinition: true, scopeLine: 439, flags: DIFlagPrototyped, isOptimized: false)
!30 = !DIFile(filename: "RTAO\5CShaders/RaytracingShaderHelper.hlsli", directory: "")
!31 = !DISubroutineType(types: !32)
!32 = !{null, !15, !33, !35}
!33 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !34)
!34 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4)
!35 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !36)
!36 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !8)
!37 = !DISubprogram(name: "DecodeNormalDepth_N16D16", linkageName: "\01?DecodeNormalDepth_N16D16@@YAXIAIAV?$vector@M$02@@AIAM@Z", scope: !30, file: !30, line: 426, type: !31, isLocal: false, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false)
!38 = !DISubprogram(name: "Unpack_R8G8B16_FLOAT", linkageName: "\01?Unpack_R8G8B16_FLOAT@@YA?AV?$vector@M$02@@I@Z", scope: !30, file: !30, line: 393, type: !39, isLocal: false, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false)
!39 = !DISubroutineType(types: !40)
!40 = !{!4, !15}
!41 = !DISubprogram(name: "Unpack_R8_FLOAT", linkageName: "\01?Unpack_R8_FLOAT@@YAMI@Z", scope: !30, file: !30, line: 364, type: !42, isLocal: false, isDefinition: true, scopeLine: 365, flags: DIFlagPrototyped, isOptimized: false)
!42 = !DISubroutineType(types: !43)
!43 = !{!8, !15}
!44 = !DISubprogram(name: "DecodeNormal", linkageName: "\01?DecodeNormal@@YA?AV?$vector@M$02@@V?$vector@M$01@@@Z", scope: !30, file: !30, line: 344, type: !45, isLocal: false, isDefinition: true, scopeLine: 345, flags: DIFlagPrototyped, isOptimized: false)
!45 = !DISubroutineType(types: !46)
!46 = !{!4, !47}
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "float2", file: !1, line: 367, baseType: !48)
!48 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 2>", file: !1, line: 367, size: 64, align: 32, elements: !49, templateParams: !52)
!49 = !{!50, !51}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !48, file: !1, line: 367, baseType: !8, size: 32, align: 32, flags: DIFlagPublic)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !48, file: !1, line: 367, baseType: !8, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!52 = !{!12, !28}
!53 = !DISubprogram(name: "GetRandomRayDirection", linkageName: "\01?GetRandomRayDirection@@YA?AV?$vector@M$02@@V?$vector@I$01@@V1@0I@Z", scope: !54, file: !54, line: 16, type: !55, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: false)
!54 = !DIFile(filename: "RTAO\5CShaders/RayGen.hlsli", directory: "")
!55 = !DISubroutineType(types: !56)
!56 = !{!4, !21, !4, !21, !15}
!57 = !DISubprogram(name: "hash", linkageName: "\01?hash@@YAMV?$vector@M$02@@@Z", scope: !30, file: !30, line: 462, type: !58, isLocal: false, isDefinition: true, scopeLine: 463, flags: DIFlagPrototyped, isOptimized: false)
!58 = !DISubroutineType(types: !59)
!59 = !{!8, !4}
!60 = !DISubprogram(name: "SeedThread", linkageName: "\01?SeedThread@RNG@@YAII@Z", scope: !62, file: !61, line: 19, type: !63, isLocal: false, isDefinition: true, scopeLine: 20, flags: DIFlagPrototyped, isOptimized: false)
!61 = !DIFile(filename: "RTAO\5CShaders/RandomNumberGenerator.hlsli", directory: "")
!62 = !DINamespace(name: "RNG", scope: null, file: !61, line: 16)
!63 = !DISubroutineType(types: !64)
!64 = !{!15, !15}
!65 = !DISubprogram(name: "Random", linkageName: "\01?Random@RNG@@YAIAIAIII@Z", scope: !62, file: !61, line: 55, type: !66, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false)
!66 = !DISubroutineType(types: !67)
!67 = !{!15, !68, !15, !15}
!68 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !15)
!70 = !DISubprogram(name: "Random01", linkageName: "\01?Random01@RNG@@YAMAIAI@Z", scope: !62, file: !61, line: 42, type: !71, isLocal: false, isDefinition: true, scopeLine: 43, flags: DIFlagPrototyped, isOptimized: false)
!71 = !DISubroutineType(types: !72)
!72 = !{!8, !68}
!73 = !DISubprogram(name: "Random", linkageName: "\01?Random@RNG@@YAIAIAI@Z", scope: !62, file: !61, line: 32, type: !74, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false)
!74 = !DISubroutineType(types: !75)
!75 = !{!15, !68}
!76 = !DISubprogram(name: "EncodeNormalDepth", linkageName: "\01?EncodeNormalDepth@@YAIV?$vector@M$02@@M@Z", scope: !30, file: !30, line: 433, type: !77, isLocal: false, isDefinition: true, scopeLine: 434, flags: DIFlagPrototyped, isOptimized: false)
!77 = !DISubroutineType(types: !78)
!78 = !{!15, !4, !8}
!79 = !DISubprogram(name: "EncodeNormalDepth_N16D16", linkageName: "\01?EncodeNormalDepth_N16D16@@YAIV?$vector@M$02@@M@Z", scope: !30, file: !30, line: 418, type: !77, isLocal: false, isDefinition: true, scopeLine: 419, flags: DIFlagPrototyped, isOptimized: false)
!80 = !DISubprogram(name: "EncodeNormal", linkageName: "\01?EncodeNormal@@YA?AV?$vector@M$01@@V?$vector@M$02@@@Z", scope: !30, file: !30, line: 336, type: !81, isLocal: false, isDefinition: true, scopeLine: 337, flags: DIFlagPrototyped, isOptimized: false)
!81 = !DISubroutineType(types: !82)
!82 = !{!47, !4}
!83 = !DISubprogram(name: "OctWrap", linkageName: "\01?OctWrap@@YA?AV?$vector@M$01@@V1@@Z", scope: !30, file: !30, line: 330, type: !84, isLocal: false, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false)
!84 = !DISubroutineType(types: !85)
!85 = !{!47, !47}
!86 = !DISubprogram(name: "Pack_R8G8B16_FLOAT", linkageName: "\01?Pack_R8G8B16_FLOAT@@YAIV?$vector@M$02@@@Z", scope: !30, file: !30, line: 385, type: !87, isLocal: false, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false)
!87 = !DISubroutineType(types: !88)
!88 = !{!15, !4}
!89 = !DISubprogram(name: "Pack_R8_FLOAT", linkageName: "\01?Pack_R8_FLOAT@@YAIM@Z", scope: !30, file: !30, line: 359, type: !90, isLocal: false, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: false)
!90 = !DISubroutineType(types: !91)
!91 = !{!15, !8}
!92 = !{!93, !99, !104, !105, !107, !109, !114, !115, !117, !129, !133, !134, !137, !141, !143, !158, !167, !169, !171, !173}
!93 = !DIGlobalVariable(name: "InstanceMask", linkageName: "\01?InstanceMask@TraceRayParameters@@3IB", scope: !94, file: !95, line: 506, type: !96, isLocal: true, isDefinition: true)
!94 = !DINamespace(name: "TraceRayParameters", scope: null, file: !95, line: 504)
!95 = !DIFile(filename: "C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRaytracingHlslCompat.h", directory: "")
!96 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !97)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !98, line: 20, baseType: !15)
!98 = !DIFile(filename: "./SampleCore/shaders\5CHlslCompat.hlsli", directory: "")
!99 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@HitGroup@TraceRayParameters@@3QBIB", scope: !100, file: !95, line: 508, type: !101, isLocal: true, isDefinition: true)
!100 = !DINamespace(name: "HitGroup", scope: !94, file: !95, line: 507)
!101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 64, align: 32, elements: !102)
!102 = !{!103}
!103 = !DISubrange(count: 2)
!104 = !DIGlobalVariable(name: "GeometryStride", linkageName: "\01?GeometryStride@HitGroup@TraceRayParameters@@3IB", scope: !100, file: !95, line: 513, type: !96, isLocal: true, isDefinition: true)
!105 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@MissShader@TraceRayParameters@@3QBIB", scope: !106, file: !95, line: 516, type: !101, isLocal: true, isDefinition: true)
!106 = !DINamespace(name: "MissShader", scope: !94, file: !95, line: 515)
!107 = !DIGlobalVariable(name: "InstanceMask", linkageName: "\01?InstanceMask@RTAOTraceRayParameters@@3IB", scope: !108, file: !95, line: 526, type: !96, isLocal: true, isDefinition: true)
!108 = !DINamespace(name: "RTAOTraceRayParameters", scope: null, file: !95, line: 524)
!109 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@HitGroup@RTAOTraceRayParameters@@3QBIB", scope: !110, file: !95, line: 528, type: !111, isLocal: true, isDefinition: true)
!110 = !DINamespace(name: "HitGroup", scope: !108, file: !95, line: 527)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 32, align: 32, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 1)
!114 = !DIGlobalVariable(name: "GeometryStride", linkageName: "\01?GeometryStride@HitGroup@RTAOTraceRayParameters@@3IB", scope: !110, file: !95, line: 534, type: !96, isLocal: true, isDefinition: true)
!115 = !DIGlobalVariable(name: "Offset", linkageName: "\01?Offset@MissShader@RTAOTraceRayParameters@@3QBIB", scope: !116, file: !95, line: 537, type: !111, isLocal: true, isDefinition: true)
!116 = !DINamespace(name: "MissShader", scope: !108, file: !95, line: 536)
!117 = !DIGlobalVariable(name: "BackgroundColor", scope: !0, file: !95, line: 544, type: !118, isLocal: true, isDefinition: true)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMFLOAT4", file: !98, line: 17, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "float4", file: !1, line: 544, baseType: !121)
!121 = !DICompositeType(tag: DW_TAG_class_type, name: "vector<float, 4>", file: !1, line: 544, size: 128, align: 32, elements: !122, templateParams: !127)
!122 = !{!123, !124, !125, !126}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !121, file: !1, line: 544, baseType: !8, size: 32, align: 32, flags: DIFlagPublic)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !121, file: !1, line: 544, baseType: !8, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !121, file: !1, line: 544, baseType: !8, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !121, file: !1, line: 544, baseType: !8, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!127 = !{!12, !128}
!128 = !DITemplateValueParameter(name: "element_count", type: !14, value: i32 4)
!129 = !DIGlobalVariable(name: "RayHitDistanceOnMiss", linkageName: "\01?RayHitDistanceOnMiss@RTAO@@3MB", scope: !130, file: !131, line: 15, type: !132, isLocal: true, isDefinition: true)
!130 = !DINamespace(name: "RTAO", scope: null, file: !131, line: 14)
!131 = !DIFile(filename: "C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRTAO/Shaders/RTAO.hlsli", directory: "")
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!133 = !DIGlobalVariable(name: "InvalidAOCoefficientValue", linkageName: "\01?InvalidAOCoefficientValue@RTAO@@3MB", scope: !130, file: !131, line: 16, type: !132, isLocal: true, isDefinition: true)
!134 = !DIGlobalVariable(name: "g_texRayOriginSurfaceNormalDepth", linkageName: "\01?g_texRayOriginSurfaceNormalDepth@@3V?$Texture2D@I@@A", scope: !0, file: !1, line: 24, type: !135, isLocal: false, isDefinition: true)
!135 = !DICompositeType(tag: DW_TAG_class_type, name: "Texture2D<unsigned int>", file: !1, line: 24, size: 64, align: 32, elements: !2, templateParams: !136)
!136 = !{!27}
!137 = !DIGlobalVariable(name: "g_texRayOriginPosition", linkageName: "\01?g_texRayOriginPosition@@3V?$Texture2D@V?$vector@M$03@@@@A", scope: !0, file: !1, line: 25, type: !138, isLocal: false, isDefinition: true)
!138 = !DICompositeType(tag: DW_TAG_class_type, name: "Texture2D<vector<float, 4> >", file: !1, line: 25, size: 160, align: 32, elements: !2, templateParams: !139)
!139 = !{!140}
!140 = !DITemplateTypeParameter(name: "element", type: !121)
!141 = !DIGlobalVariable(name: "g_rtRaysDirectionOriginDepth", linkageName: "\01?g_rtRaysDirectionOriginDepth@@3V?$RWTexture2D@I@@A", scope: !0, file: !1, line: 27, type: !142, isLocal: false, isDefinition: true)
!142 = !DICompositeType(tag: DW_TAG_class_type, name: "RWTexture2D<unsigned int>", file: !1, line: 27, size: 32, align: 32, elements: !2, templateParams: !136)
!143 = !DIGlobalVariable(name: "cb", linkageName: "\01?cb@@3U?$ConstantBuffer@URayGenConstantBuffer@@@@A", scope: !0, file: !1, line: 29, type: !144, isLocal: false, isDefinition: true)
!144 = !DICompositeType(tag: DW_TAG_structure_type, name: "ConstantBuffer<RayGenConstantBuffer>", file: !1, line: 29, size: 32, align: 32, elements: !2, templateParams: !145)
!145 = !{!146}
!146 = !DITemplateTypeParameter(name: "T", type: !147)
!147 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayGenConstantBuffer", file: !95, line: 162, size: 256, align: 32, elements: !148)
!148 = !{!149, !151, !153, !154, !155, !156, !157}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "textureDim", scope: !147, file: !95, line: 164, baseType: !150, size: 64, align: 32)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMUINT2", file: !98, line: 21, baseType: !21)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "doCheckerboardRayGeneration", scope: !147, file: !95, line: 165, baseType: !152, size: 32, align: 32, offset: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "BOOL", file: !98, line: 24, baseType: !14)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "checkerboardGenerateRaysForEvenPixels", scope: !147, file: !95, line: 166, baseType: !152, size: 32, align: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !147, file: !95, line: 168, baseType: !97, size: 32, align: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "numSamplesPerSet", scope: !147, file: !95, line: 169, baseType: !97, size: 32, align: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "numSampleSets", scope: !147, file: !95, line: 170, baseType: !97, size: 32, align: 32, offset: 192)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "numPixelsPerDimPerSet", scope: !147, file: !95, line: 171, baseType: !97, size: 32, align: 32, offset: 224)
!158 = !DIGlobalVariable(name: "g_sampleSets", linkageName: "\01?g_sampleSets@@3V?$StructuredBuffer@UAlignedHemisphereSample3D@@@@A", scope: !0, file: !1, line: 30, type: !159, isLocal: false, isDefinition: true)
!159 = !DICompositeType(tag: DW_TAG_class_type, name: "StructuredBuffer<AlignedHemisphereSample3D>", file: !1, line: 30, size: 128, align: 32, elements: !2, templateParams: !160)
!160 = !{!161}
!161 = !DITemplateTypeParameter(name: "element", type: !162)
!162 = !DICompositeType(tag: DW_TAG_structure_type, name: "AlignedHemisphereSample3D", file: !95, line: 467, size: 128, align: 32, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !162, file: !95, line: 469, baseType: !165, size: 96, align: 32)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMFLOAT3", file: !98, line: 16, baseType: !4)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !162, file: !95, line: 470, baseType: !97, size: 32, align: 32, offset: 96)
!167 = !DIGlobalVariable(name: "BackgroundColor.3", linkageName: "BackgroundColor.3", scope: !0, file: !95, line: 544, type: !168, isLocal: false, isDefinition: true)
!168 = !DIDerivedType(tag: DW_TAG_member, name: ".3", baseType: !118, size: 32, align: 4, offset: 96)
!169 = !DIGlobalVariable(name: "BackgroundColor.2", linkageName: "BackgroundColor.2", scope: !0, file: !95, line: 544, type: !170, isLocal: false, isDefinition: true)
!170 = !DIDerivedType(tag: DW_TAG_member, name: ".2", baseType: !118, size: 32, align: 4, offset: 64)
!171 = !DIGlobalVariable(name: "BackgroundColor.0", linkageName: "BackgroundColor.0", scope: !0, file: !95, line: 544, type: !172, isLocal: false, isDefinition: true)
!172 = !DIDerivedType(tag: DW_TAG_member, name: ".0", baseType: !118, size: 32, align: 4)
!173 = !DIGlobalVariable(name: "BackgroundColor.1", linkageName: "BackgroundColor.1", scope: !0, file: !95, line: 544, type: !174, isLocal: false, isDefinition: true)
!174 = !DIDerivedType(tag: DW_TAG_member, name: ".1", baseType: !118, size: 32, align: 4, offset: 32)
!175 = !{i32 2, !"Dwarf Version", i32 4}
!176 = !{i32 2, !"Debug Info Version", i32 3}
!177 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!178 = !{!"RTAO\5CShaders\5CAORayGenCS.hlsl", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A// Desc: Generates AO rays for each pixel and stores them in a texture.\0D\0A// Supports 1 rays per pixel (spp) and 0.5 spp (via checkerboard distribution).\0D\0A// 0.5 spp:\0D\0A//  - generates 1 spp for every other pixel in a checkerboard distribution.\0D\0A\0D\0A#define HLSL\0D\0A#include \22RaytracingHlslCompat.h\22\0D\0A#include \22RaytracingShaderHelper.hlsli\22\0D\0A#include \22RandomNumberGenerator.hlsli\22\0D\0A#include \22Ray sorting/RaySorting.hlsli\22\0D\0A#include \22RTAO.hlsli\22\0D\0A\0D\0ATexture2D<NormalDepthTexFormat> g_texRayOriginSurfaceNormalDepth : register(t0);\0D\0ATexture2D<float4> g_texRayOriginPosition : register(t1);\0D\0A\0D\0ARWTexture2D<NormalDepthTexFormat> g_rtRaysDirectionOriginDepth : register(u0);\0D\0A\0D\0AConstantBuffer<RayGenConstantBuffer> cb: register(b0);\0D\0AStructuredBuffer<AlignedHemisphereSample3D> g_sampleSets : register(t3);\0D\0A\0D\0A// Delay the include so that resource references resolve.\0D\0A#include \22RayGen.hlsli\22\0D\0A\0D\0A[numthreads(DefaultComputeShaderParams::ThreadGroup::Width, DefaultComputeShaderParams::ThreadGroup::Height, 1)]\0D\0Avoid main(uint2 DTid : SV_DispatchThreadID, uint2 GTid : SV_GroupThreadID)\0D\0A{\0D\0A    uint2 DTidFullRes = DTid;\0D\0A\0D\0A    if (cb.doCheckerboardRayGeneration)\0D\0A    {\0D\0A        UINT pixelStepX = 2;\0D\0A        bool isEvenPixelY = (DTid.y & 1) == 0;\0D\0A        UINT pixelOffsetX = isEvenPixelY != cb.checkerboardGenerateRaysForEvenPixels;\0D\0A        DTidFullRes.x = DTid.x * pixelStepX + pixelOffsetX;\0D\0A    }\0D\0A\0D\0A    float3 surfaceNormal;\0D\0A    float rayOriginDepth;\0D\0A    DecodeNormalDepth(g_texRayOriginSurfaceNormalDepth[DTidFullRes], surfaceNormal, rayOriginDepth);\0D\0A\0D\0A    float3 rayDirection = 0;\0D\0A    if (rayOriginDepth != INVALID_RAY_ORIGIN_DEPTH)\0D\0A    {\0D\0A        rayDirection = GetRandomRayDirection(DTid, surfaceNormal, cb.textureDim, 0);\0D\0A    }\0D\0A\0D\0A    g_rtRaysDirectionOriginDepth[DTid] = EncodeNormalDepth(rayDirection, rayOriginDepth);\0D\0A}\0D\0A"}
!179 = !{!".\5CSampleCore\5Cshaders\5CHlslCompat.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef HLSLCOMPAT_H\0D\0A#define HLSLCOMPAT_H\0D\0A\0D\0Atypedef float2 XMFLOAT2;\0D\0Atypedef float3 XMFLOAT3;\0D\0Atypedef float4 XMFLOAT4;\0D\0Atypedef float4 XMVECTOR;\0D\0Atypedef float4x4 XMMATRIX;\0D\0Atypedef uint UINT;\0D\0Atypedef uint2 XMUINT2;\0D\0Atypedef uint3 XMUINT3;\0D\0Atypedef int2 XMINT2;\0D\0Atypedef int BOOL;\0D\0A\0D\0A#endif // HLSLCOMPAT_H"}
!180 = !{!"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRTAO\5CShaders\5CRTAO.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A#ifndef RTAO_HLSLI\0D\0A#define RTAO_HLSLI\0D\0A\0D\0Anamespace RTAO {\0D\0A    static const float RayHitDistanceOnMiss = 0;\0D\0A    static const float InvalidAOCoefficientValue = -1;\0D\0A    bool HasAORayHitAnyGeometry(in float tHit)\0D\0A    {\0D\0A        return tHit != RayHitDistanceOnMiss;\0D\0A    }\0D\0A}\0D\0A\0D\0A#endif // RTAO_HLSLI"}
!181 = !{!"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRayTracingHlslCompat.h", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef RAYTRACINGHLSLCOMPAT_H\0D\0A#define RAYTRACINGHLSLCOMPAT_H\0D\0A\0D\0A//**********************************************************************************************\0D\0A//\0D\0A// RaytracingHLSLCompat.h\0D\0A//\0D\0A// A header with shared definitions for C++ and HLSL source files. \0D\0A//\0D\0A//**********************************************************************************************\0D\0A\0D\0A//************************** Global Overrides **************************************************\0D\0A#define RENDER_GRASS_GEOMETRY 1\0D\0A#define PRINT_OUT_CAMERA_CONFIG 0\0D\0A\0D\0A#ifdef _DEBUG\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 // Set to 1 to speed up application start on debug.\0D\0A#else\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 \0D\0A#endif\0D\0A//**********************************************************************************************\0D\0A\0D\0A#define FOVY 45.f\0D\0A#define NEAR_PLANE 0.001f\0D\0A#define FAR_PLANE 1000.0f\0D\0A#define HitDistanceOnMiss 0\0D\0A#define SAMPLER_FILTER D3D12_FILTER_ANISOTROPIC\0D\0A\0D\0A#ifdef HLSL\0D\0Atypedef uint NormalDepthTexFormat;\0D\0A#else\0D\0A#define COMPACT_NORMAL_DEPTH_DXGI_FORMAT DXGI_FORMAT_R32_UINT\0D\0A#endif\0D\0A\0D\0Anamespace ReduceSumCS {\0D\0A\09namespace ThreadGroup {\0D\0A\09\09enum Enum { Width = 8, Height = 16, Size = Width * Height, NumElementsToLoadPerThread = 10 };\09\0D\0A\09}\0D\0A}\0D\0A\0D\0Anamespace AtrousWaveletTransformFilterCS {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 16, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace DefaultComputeShaderParams {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 8, Height = 8, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0A\0D\0A#ifdef HLSL\0D\0A#include \22HlslCompat.hlsli\22\0D\0Atypedef UINT Index;\0D\0A#else\0D\0Ausing namespace DirectX;\0D\0A\0D\0Atypedef UINT Index;\0D\0A#endif\0D\0A\0D\0Astruct Ray\0D\0A{\0D\0A    XMFLOAT3 origin;\0D\0A    XMFLOAT3 direction;\0D\0A};\0D\0A\0D\0A// GBuffer data collected during pathtracing \0D\0A// for subsequent Ambient Occlusion ray trace pass and denoising.\0D\0Astruct AmbientOcclusionGBuffer\0D\0A{\0D\0A    float tHit;\0D\0A    XMFLOAT3 hitPosition;           // Position of the hit for which to calculate Ambient coefficient.\0D\0A    UINT diffuseByte3;              // Diffuse reflectivity of the hit surface.\0D\0A    // TODO: RTAO pipeline uses 16b encoded normal, therefore same bit enconding could be applied here \0D\0A    //  to lower the struct's size and potentially improve Pathtracer's perf without much/any quality loss in RTAO.\0D\0A    //  Furthermore, _encodedNormal below could use lower bit range too.\0D\0A    XMFLOAT2 encodedNormal;         // Normal of the hit surface. \0D\0A\0D\0A    // Members for Motion Vector calculation.\0D\0A    XMFLOAT3 _virtualHitPosition;   // virtual hitPosition in the previous frame.\0D\0A                                    // For non-reflected points this is a true world position of a hit.\0D\0A                                    // For reflected points, this is a world position of a hit reflected across the reflected surface \0D\0A                                    //   ultimately giving the same screen space coords when projected and the depth corresponding to the ray depth.\0D\0A    XMFLOAT2 _encodedNormal;        // surface normal in the previous frame\0D\0A};\0D\0A\0D\0A\0D\0Astruct PathtracerRayPayload\0D\0A{\0D\0A    UINT rayRecursionDepth;\0D\0A    XMFLOAT3 radiance;              // TODO encode\0D\0A    AmbientOcclusionGBuffer AOGBuffer;\0D\0A};\0D\0A\0D\0Astruct ShadowRayPayload\0D\0A{\0D\0A    float tHit;         // Hit time <0,..> on Hit. -1 on miss.\0D\0A};\0D\0A\0D\0Astruct AtrousWaveletTransformFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float depthWeightCutoff;\0D\0A    bool usingBilateralDownsampledBuffers;\0D\0A\0D\0A    BOOL useAdaptiveKernelSize;\0D\0A    float kernelRadiusLerfCoef;\0D\0A    UINT minKernelWidth;\0D\0A    UINT maxKernelWidth;\0D\0A\0D\0A    float rayHitDistanceToKernelWidthScale;\0D\0A    float rayHitDistanceToKernelSizeScaleExponent;\0D\0A    BOOL perspectiveCorrectDepthInterpolation;\0D\0A    float minVarianceToDenoise;\0D\0A\0D\0A    float valueSigma;\0D\0A    float depthSigma;\0D\0A    float normalSigma;\0D\0A    UINT DepthNumMantissaBits;\0D\0A};\0D\0A\0D\0Astruct CalculateVariance_BilateralFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float normalSigma;\0D\0A    float depthSigma;\0D\0A\0D\0A    BOOL outputMean;\0D\0A    BOOL useDepthWeights;\0D\0A    BOOL useNormalWeights;\0D\0A    UINT kernelWidth;\0D\0A\0D\0A    UINT kernelRadius;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0Astruct CalculateMeanVarianceConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT kernelWidth;\0D\0A    UINT kernelRadius;\0D\0A\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A    UINT pixelStepY;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct RayGenConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    BOOL doCheckerboardRayGeneration;\0D\0A    BOOL checkerboardGenerateRaysForEvenPixels;\0D\0A    \0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A};\0D\0A\0D\0Astruct SortRaysConstantBuffer\0D\0A{\0D\0A    XMUINT2 dim;\0D\0A    BOOL useOctahedralRayDirectionQuantization;\0D\0A    // Depth for a bin within which to sort further based on direction.\0D\0A    float binDepthSize;\0D\0A};\0D\0A\0D\0Anamespace SortRays {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 64, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A\0D\0A    namespace RayGroup {\0D\0A        enum Enum { NumElementPairsPerThread = 4, Width = ThreadGroup::Width, Height = NumElementPairsPerThread * 2 * ThreadGroup::Height, Size = Width * Height };\0D\0A    }\0D\0A#ifndef HLSL\0D\0A    static_assert( RayGroup::Width <= 64 \0D\0A                && RayGroup::Height <= 128\0D\0A                && RayGroup::Size <= 8192, \22Ray group dimensions are outside the supported limits set by the Counting Sort shader.\22);\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct PathtracerConstantBuffer\0D\0A{\0D\0A    XMMATRIX projectionToWorldWithCameraAtOrigin;\0D\0A    XMFLOAT3 cameraPosition;\0D\0A    BOOL     useBaseAlbedoFromMaterial;\0D\0A    XMFLOAT3 lightPosition;     \0D\0A    BOOL     useNormalMaps;\0D\0A    XMFLOAT3 lightColor;\0D\0A    float    defaultAmbientIntensity;\0D\0A\0D\0A    XMMATRIX prevFrameViewProj;\0D\0A    XMMATRIX prevFrameProjToViewCameraAtOrigin;\0D\0A    XMFLOAT3 prevFrameCameraPosition;\0D\0A    float    padding;\0D\0A\0D\0A\09float Znear;\0D\0A\09float Zfar;\0D\0A    UINT  maxRadianceRayRecursionDepth;\0D\0A    UINT  maxShadowRayRecursionDepth;\0D\0A\0D\0A};\0D\0A\0D\0Astruct RTAOConstantBuffer\0D\0A{\0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A\0D\0A    float maxAORayHitTime;             // Max AO ray hit time used for tMax in TraceRay.\0D\0A    BOOL approximateInterreflections;      // Approximate interreflections. \0D\0A    float diffuseReflectanceScale;         // Diffuse reflectance from occluding surfaces. \0D\0A    float minimumAmbientIllumination;      // Ambient illumination coef when a ray is occluded.\0D\0A\0D\0A    float maxTheoreticalAORayHitTime;  // Max AO ray hit time used in falloff computation accounting for\0D\0A                                       // exponentialFalloffMinOcclusionCutoff and maxAORayHitTime.    \0D\0A    BOOL useSortedRays;\0D\0A    XMUINT2 raytracingDim;\0D\0A\0D\0A    BOOL applyExponentialFalloff;     // Apply exponential falloff to AO coefficient based on ray hit distance.    \0D\0A    float exponentialFalloffDecayConstant;\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A\0D\0A    UINT spp;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0A \0D\0A// Final render output composition modes.\0D\0Aenum CompositionType {\0D\0A    PBRShading = 0,\0D\0A    AmbientOcclusionOnly_Denoised,\0D\0A    AmbientOcclusionOnly_RawOneFrame,\0D\0A    AmbientOcclusionAndDisocclusionMap,\0D\0A    AmbientOcclusionVariance,\0D\0A    AmbientOcclusionLocalVariance,\0D\0A    RTAOHitDistance,\0D\0A    NormalsOnly,\0D\0A    DepthOnly,\0D\0A    Albedo,\0D\0A    BaseMaterialAlbedo,\0D\0A    Count\0D\0A};\0D\0A\0D\0Anamespace TextureResourceFormatRGB\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32B32A32_FLOAT = 0,\0D\0A        R16G16B16A16_FLOAT,\0D\0A        R11G11B10_FLOAT,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32B32A32_FLOAT: return DXGI_FORMAT_R32G32B32A32_FLOAT;\0D\0A        case R16G16B16A16_FLOAT: return DXGI_FORMAT_R16G16B16A16_FLOAT;\0D\0A        case R11G11B10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Anamespace TextureResourceFormatR\0D\0A{\0D\0A    enum Type {\0D\0A        R32_FLOAT = 0,\0D\0A        R16_FLOAT,\0D\0A        R8_UNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32_FLOAT: return DXGI_FORMAT_R32_FLOAT;\0D\0A        case R16_FLOAT: return DXGI_FORMAT_R16_FLOAT;\0D\0A        case R8_UNORM: return DXGI_FORMAT_R8_UNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TextureResourceFormatRG\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32_FLOAT = 0,\0D\0A        R16G16_FLOAT,\0D\0A        R8G8_SNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32_FLOAT: return DXGI_FORMAT_R32G32_FLOAT;\0D\0A        case R16G16_FLOAT: return DXGI_FORMAT_R16G16_FLOAT;\0D\0A        case R8G8_SNORM: return DXGI_FORMAT_R8G8_SNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct ComposeRenderPassesConstantBuffer\0D\0A{\0D\0A    CompositionType compositionType;\0D\0A    UINT isAOEnabled;\0D\0A    float RTAO_MaxRayHitDistance;\0D\0A    float defaultAmbientIntensity;\0D\0A    \0D\0A    BOOL variance_visualizeStdDeviation;\0D\0A    float variance_scale;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct TextureDimConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A};\0D\0A\0D\0Astruct FilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT step;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_ReverseReprojectConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A\0D\0A    float depthSigma;\0D\0A    UINT DepthNumMantissaBits;      // Number of Mantissa Bits in the floating format of the input depth resources format.\0D\0A    BOOL usingBilateralDownsampledBuffers;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_BlendWithCurrentFrameConstantBuffer\0D\0A{\0D\0A    float stdDevGamma;\0D\0A    BOOL clampCachedValues;\0D\0A    float clamping_minStdDevTolerance;\0D\0A    float padding;\0D\0A\0D\0A    float clampDifferenceToTsppScale;\0D\0A    BOOL forceUseMinSmoothingFactor;\0D\0A    float minSmoothingFactor;\0D\0A    UINT minTsppToUseTemporalVariance;\0D\0A\0D\0A    UINT blurStrength_MaxTspp;\0D\0A    float blurDecayStrength;\0D\0A    BOOL checkerboard_enabled;\0D\0A    BOOL checkerboard_areEvenPixelsActive;\0D\0A};\0D\0A\0D\0Astruct CalculatePartialDerivativesConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct DownAndUpsampleFilterConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invHiResTextureDim;\0D\0A    XMFLOAT2 invLowResTextureDim;\0D\0A};\0D\0A\0D\0A// Grass Geometry\0D\0A#define N_GRASS_TRIANGLES 5\0D\0A#define N_GRASS_VERTICES 7\0D\0A#define MAX_GRASS_STRAWS_1D 100\0D\0Astruct GenerateGrassStrawsConstantBuffer_AppParams\0D\0A{\0D\0A    XMUINT2 activePatchDim; // Dimensions of active grass straws.\0D\0A    XMUINT2 maxPatchDim;    // Dimensions of the whole vertex buffer.\0D\0A\0D\0A    XMFLOAT2 timeOffset;\0D\0A    float grassHeight;\0D\0A    float grassScale;\0D\0A    \0D\0A    XMFLOAT3 patchSize;\0D\0A    float grassThickness;\0D\0A\0D\0A    XMFLOAT3 windDirection;\0D\0A    float windStrength;\0D\0A\0D\0A    float positionJitterStrength;\0D\0A    float bendStrengthAlongTangent;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct GenerateGrassStrawsConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invActivePatchDim;\0D\0A    float padding1;\0D\0A    float padding2;\0D\0A    GenerateGrassStrawsConstantBuffer_AppParams p;\0D\0A};\0D\0A\0D\0A\0D\0A// Attributes per primitive type.\0D\0Astruct PrimitiveConstantBuffer\0D\0A{\0D\0A\09UINT     materialID;          \0D\0A    UINT     isVertexAnimated; \0D\0A    UINT     padding[2];\0D\0A};\0D\0A\0D\0Anamespace MaterialType {\0D\0A    enum Type {\0D\0A        Default,\0D\0A        Matte,      // Lambertian scattering\0D\0A        Mirror,     // Specular reflector that isn't modified by the Fresnel equations.\0D\0A        AnalyticalCheckerboardTexture\0D\0A    };\0D\0A}\0D\0A\0D\0Astruct PrimitiveMaterialBuffer\0D\0A{\0D\0A\09XMFLOAT3 Kd;\0D\0A\09XMFLOAT3 Ks;\0D\0A    XMFLOAT3 Kr;\0D\0A    XMFLOAT3 Kt;\0D\0A    XMFLOAT3 opacity;\0D\0A    XMFLOAT3 eta;\0D\0A    float roughness;\0D\0A    BOOL hasDiffuseTexture;\0D\0A    BOOL hasNormalTexture;\0D\0A    BOOL hasPerVertexTangents;\0D\0A    MaterialType::Type type;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct AlignedUnitSquareSample2D\0D\0A{\0D\0A    XMFLOAT2 value;\0D\0A    XMUINT2 padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct AlignedHemisphereSample3D\0D\0A{\0D\0A    XMFLOAT3 value;\0D\0A    UINT padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct Vertex\0D\0A{\0D\0A    XMFLOAT3 position;\0D\0A    XMFLOAT3 normal;\0D\0A};\0D\0A\0D\0Astruct VertexPositionNormalTextureTangent\0D\0A{\0D\0A\09XMFLOAT3 position;\0D\0A\09XMFLOAT3 normal;\0D\0A\09XMFLOAT2 textureCoordinate;\0D\0A\09XMFLOAT3 tangent;\0D\0A};\0D\0A\0D\0A// Ray types traced in this sample.\0D\0Anamespace PathtracerRayType {\0D\0A    enum Enum {\0D\0A        Radiance = 0,\09// ~ Radiance ray generating color and GBuffer data\0D\0A        Shadow,         // ~ Shadow/visibility rays\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0Anamespace RTAORayType {\0D\0A    enum Enum {\0D\0A        AO = 0,\09\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A\09\09static const UINT GeometryStride = PathtracerRayType::Count;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace RTAOTraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A        // Since there is only one closest hit shader across shader records in RTAO, \0D\0A        // always access the first shader record of each BLAS instance shader record range.\0D\0A        static const UINT GeometryStride = 0;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Astatic const XMFLOAT4 BackgroundColor = XMFLOAT4(0.79f, 0.88f, 0.98f, 1.0f);\0D\0A\0D\0A#endif // RAYTRACINGHLSLCOMPAT_H"}
!182 = !{!"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5CRaytracingHlslCompat.h", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef RAYTRACINGHLSLCOMPAT_H\0D\0A#define RAYTRACINGHLSLCOMPAT_H\0D\0A\0D\0A//**********************************************************************************************\0D\0A//\0D\0A// RaytracingHLSLCompat.h\0D\0A//\0D\0A// A header with shared definitions for C++ and HLSL source files. \0D\0A//\0D\0A//**********************************************************************************************\0D\0A\0D\0A//************************** Global Overrides **************************************************\0D\0A#define RENDER_GRASS_GEOMETRY 1\0D\0A#define PRINT_OUT_CAMERA_CONFIG 0\0D\0A\0D\0A#ifdef _DEBUG\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 // Set to 1 to speed up application start on debug.\0D\0A#else\0D\0A#define LOAD_ONLY_ONE_PBRT_MESH 0 \0D\0A#endif\0D\0A//**********************************************************************************************\0D\0A\0D\0A#define FOVY 45.f\0D\0A#define NEAR_PLANE 0.001f\0D\0A#define FAR_PLANE 1000.0f\0D\0A#define HitDistanceOnMiss 0\0D\0A#define SAMPLER_FILTER D3D12_FILTER_ANISOTROPIC\0D\0A\0D\0A#ifdef HLSL\0D\0Atypedef uint NormalDepthTexFormat;\0D\0A#else\0D\0A#define COMPACT_NORMAL_DEPTH_DXGI_FORMAT DXGI_FORMAT_R32_UINT\0D\0A#endif\0D\0A\0D\0Anamespace ReduceSumCS {\0D\0A\09namespace ThreadGroup {\0D\0A\09\09enum Enum { Width = 8, Height = 16, Size = Width * Height, NumElementsToLoadPerThread = 10 };\09\0D\0A\09}\0D\0A}\0D\0A\0D\0Anamespace AtrousWaveletTransformFilterCS {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 16, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace DefaultComputeShaderParams {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 8, Height = 8, Size = Width * Height };\0D\0A    }\0D\0A}\0D\0A\0D\0A\0D\0A#ifdef HLSL\0D\0A#include \22HlslCompat.hlsli\22\0D\0Atypedef UINT Index;\0D\0A#else\0D\0Ausing namespace DirectX;\0D\0A\0D\0Atypedef UINT Index;\0D\0A#endif\0D\0A\0D\0Astruct Ray\0D\0A{\0D\0A    XMFLOAT3 origin;\0D\0A    XMFLOAT3 direction;\0D\0A};\0D\0A\0D\0A// GBuffer data collected during pathtracing \0D\0A// for subsequent Ambient Occlusion ray trace pass and denoising.\0D\0Astruct AmbientOcclusionGBuffer\0D\0A{\0D\0A    float tHit;\0D\0A    XMFLOAT3 hitPosition;           // Position of the hit for which to calculate Ambient coefficient.\0D\0A    UINT diffuseByte3;              // Diffuse reflectivity of the hit surface.\0D\0A    // TODO: RTAO pipeline uses 16b encoded normal, therefore same bit enconding could be applied here \0D\0A    //  to lower the struct's size and potentially improve Pathtracer's perf without much/any quality loss in RTAO.\0D\0A    //  Furthermore, _encodedNormal below could use lower bit range too.\0D\0A    XMFLOAT2 encodedNormal;         // Normal of the hit surface. \0D\0A\0D\0A    // Members for Motion Vector calculation.\0D\0A    XMFLOAT3 _virtualHitPosition;   // virtual hitPosition in the previous frame.\0D\0A                                    // For non-reflected points this is a true world position of a hit.\0D\0A                                    // For reflected points, this is a world position of a hit reflected across the reflected surface \0D\0A                                    //   ultimately giving the same screen space coords when projected and the depth corresponding to the ray depth.\0D\0A    XMFLOAT2 _encodedNormal;        // surface normal in the previous frame\0D\0A};\0D\0A\0D\0A\0D\0Astruct PathtracerRayPayload\0D\0A{\0D\0A    UINT rayRecursionDepth;\0D\0A    XMFLOAT3 radiance;              // TODO encode\0D\0A    AmbientOcclusionGBuffer AOGBuffer;\0D\0A};\0D\0A\0D\0Astruct ShadowRayPayload\0D\0A{\0D\0A    float tHit;         // Hit time <0,..> on Hit. -1 on miss.\0D\0A};\0D\0A\0D\0Astruct AtrousWaveletTransformFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float depthWeightCutoff;\0D\0A    bool usingBilateralDownsampledBuffers;\0D\0A\0D\0A    BOOL useAdaptiveKernelSize;\0D\0A    float kernelRadiusLerfCoef;\0D\0A    UINT minKernelWidth;\0D\0A    UINT maxKernelWidth;\0D\0A\0D\0A    float rayHitDistanceToKernelWidthScale;\0D\0A    float rayHitDistanceToKernelSizeScaleExponent;\0D\0A    BOOL perspectiveCorrectDepthInterpolation;\0D\0A    float minVarianceToDenoise;\0D\0A\0D\0A    float valueSigma;\0D\0A    float depthSigma;\0D\0A    float normalSigma;\0D\0A    UINT DepthNumMantissaBits;\0D\0A};\0D\0A\0D\0Astruct CalculateVariance_BilateralFilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float normalSigma;\0D\0A    float depthSigma;\0D\0A\0D\0A    BOOL outputMean;\0D\0A    BOOL useDepthWeights;\0D\0A    BOOL useNormalWeights;\0D\0A    UINT kernelWidth;\0D\0A\0D\0A    UINT kernelRadius;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0Astruct CalculateMeanVarianceConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT kernelWidth;\0D\0A    UINT kernelRadius;\0D\0A\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A    UINT pixelStepY;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct RayGenConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    BOOL doCheckerboardRayGeneration;\0D\0A    BOOL checkerboardGenerateRaysForEvenPixels;\0D\0A    \0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A};\0D\0A\0D\0Astruct SortRaysConstantBuffer\0D\0A{\0D\0A    XMUINT2 dim;\0D\0A    BOOL useOctahedralRayDirectionQuantization;\0D\0A    // Depth for a bin within which to sort further based on direction.\0D\0A    float binDepthSize;\0D\0A};\0D\0A\0D\0Anamespace SortRays {\0D\0A    namespace ThreadGroup {\0D\0A        enum Enum { Width = 64, Height = 16, Size = Width * Height };\0D\0A    }\0D\0A\0D\0A    namespace RayGroup {\0D\0A        enum Enum { NumElementPairsPerThread = 4, Width = ThreadGroup::Width, Height = NumElementPairsPerThread * 2 * ThreadGroup::Height, Size = Width * Height };\0D\0A    }\0D\0A#ifndef HLSL\0D\0A    static_assert( RayGroup::Width <= 64 \0D\0A                && RayGroup::Height <= 128\0D\0A                && RayGroup::Size <= 8192, \22Ray group dimensions are outside the supported limits set by the Counting Sort shader.\22);\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct PathtracerConstantBuffer\0D\0A{\0D\0A    XMMATRIX projectionToWorldWithCameraAtOrigin;\0D\0A    XMFLOAT3 cameraPosition;\0D\0A    BOOL     useBaseAlbedoFromMaterial;\0D\0A    XMFLOAT3 lightPosition;     \0D\0A    BOOL     useNormalMaps;\0D\0A    XMFLOAT3 lightColor;\0D\0A    float    defaultAmbientIntensity;\0D\0A\0D\0A    XMMATRIX prevFrameViewProj;\0D\0A    XMMATRIX prevFrameProjToViewCameraAtOrigin;\0D\0A    XMFLOAT3 prevFrameCameraPosition;\0D\0A    float    padding;\0D\0A\0D\0A\09float Znear;\0D\0A\09float Zfar;\0D\0A    UINT  maxRadianceRayRecursionDepth;\0D\0A    UINT  maxShadowRayRecursionDepth;\0D\0A\0D\0A};\0D\0A\0D\0Astruct RTAOConstantBuffer\0D\0A{\0D\0A    UINT seed;\0D\0A    UINT numSamplesPerSet;\0D\0A    UINT numSampleSets;\0D\0A    UINT numPixelsPerDimPerSet;\0D\0A\0D\0A    float maxAORayHitTime;             // Max AO ray hit time used for tMax in TraceRay.\0D\0A    BOOL approximateInterreflections;      // Approximate interreflections. \0D\0A    float diffuseReflectanceScale;         // Diffuse reflectance from occluding surfaces. \0D\0A    float minimumAmbientIllumination;      // Ambient illumination coef when a ray is occluded.\0D\0A\0D\0A    float maxTheoreticalAORayHitTime;  // Max AO ray hit time used in falloff computation accounting for\0D\0A                                       // exponentialFalloffMinOcclusionCutoff and maxAORayHitTime.    \0D\0A    BOOL useSortedRays;\0D\0A    XMUINT2 raytracingDim;\0D\0A\0D\0A    BOOL applyExponentialFalloff;     // Apply exponential falloff to AO coefficient based on ray hit distance.    \0D\0A    float exponentialFalloffDecayConstant;\0D\0A    BOOL doCheckerboardSampling;\0D\0A    BOOL areEvenPixelsActive;\0D\0A\0D\0A    UINT spp;\0D\0A    float padding[3];\0D\0A};\0D\0A\0D\0A \0D\0A// Final render output composition modes.\0D\0Aenum CompositionType {\0D\0A    PBRShading = 0,\0D\0A    AmbientOcclusionOnly_Denoised,\0D\0A    AmbientOcclusionOnly_RawOneFrame,\0D\0A    AmbientOcclusionAndDisocclusionMap,\0D\0A    AmbientOcclusionVariance,\0D\0A    AmbientOcclusionLocalVariance,\0D\0A    RTAOHitDistance,\0D\0A    NormalsOnly,\0D\0A    DepthOnly,\0D\0A    Albedo,\0D\0A    BaseMaterialAlbedo,\0D\0A    Count\0D\0A};\0D\0A\0D\0Anamespace TextureResourceFormatRGB\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32B32A32_FLOAT = 0,\0D\0A        R16G16B16A16_FLOAT,\0D\0A        R11G11B10_FLOAT,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32B32A32_FLOAT: return DXGI_FORMAT_R32G32B32A32_FLOAT;\0D\0A        case R16G16B16A16_FLOAT: return DXGI_FORMAT_R16G16B16A16_FLOAT;\0D\0A        case R11G11B10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Anamespace TextureResourceFormatR\0D\0A{\0D\0A    enum Type {\0D\0A        R32_FLOAT = 0,\0D\0A        R16_FLOAT,\0D\0A        R8_UNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32_FLOAT: return DXGI_FORMAT_R32_FLOAT;\0D\0A        case R16_FLOAT: return DXGI_FORMAT_R16_FLOAT;\0D\0A        case R8_UNORM: return DXGI_FORMAT_R8_UNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TextureResourceFormatRG\0D\0A{\0D\0A    enum Type {\0D\0A        R32G32_FLOAT = 0,\0D\0A        R16G16_FLOAT,\0D\0A        R8G8_SNORM,\0D\0A        Count\0D\0A    };\0D\0A#ifndef HLSL\0D\0A    inline DXGI_FORMAT ToDXGIFormat(UINT type)\0D\0A    {\0D\0A        switch (type)\0D\0A        {\0D\0A        case R32G32_FLOAT: return DXGI_FORMAT_R32G32_FLOAT;\0D\0A        case R16G16_FLOAT: return DXGI_FORMAT_R16G16_FLOAT;\0D\0A        case R8G8_SNORM: return DXGI_FORMAT_R8G8_SNORM;\0D\0A        }\0D\0A        return DXGI_FORMAT_UNKNOWN;\0D\0A    }\0D\0A#endif\0D\0A}\0D\0A\0D\0Astruct ComposeRenderPassesConstantBuffer\0D\0A{\0D\0A    CompositionType compositionType;\0D\0A    UINT isAOEnabled;\0D\0A    float RTAO_MaxRayHitDistance;\0D\0A    float defaultAmbientIntensity;\0D\0A    \0D\0A    BOOL variance_visualizeStdDeviation;\0D\0A    float variance_scale;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct TextureDimConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A};\0D\0A\0D\0Astruct FilterConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    UINT step;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_ReverseReprojectConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    XMFLOAT2 invTextureDim;\0D\0A\0D\0A    float depthSigma;\0D\0A    UINT DepthNumMantissaBits;      // Number of Mantissa Bits in the floating format of the input depth resources format.\0D\0A    BOOL usingBilateralDownsampledBuffers;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct TemporalSupersampling_BlendWithCurrentFrameConstantBuffer\0D\0A{\0D\0A    float stdDevGamma;\0D\0A    BOOL clampCachedValues;\0D\0A    float clamping_minStdDevTolerance;\0D\0A    float padding;\0D\0A\0D\0A    float clampDifferenceToTsppScale;\0D\0A    BOOL forceUseMinSmoothingFactor;\0D\0A    float minSmoothingFactor;\0D\0A    UINT minTsppToUseTemporalVariance;\0D\0A\0D\0A    UINT blurStrength_MaxTspp;\0D\0A    float blurDecayStrength;\0D\0A    BOOL checkerboard_enabled;\0D\0A    BOOL checkerboard_areEvenPixelsActive;\0D\0A};\0D\0A\0D\0Astruct CalculatePartialDerivativesConstantBuffer\0D\0A{\0D\0A    XMUINT2 textureDim;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct DownAndUpsampleFilterConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invHiResTextureDim;\0D\0A    XMFLOAT2 invLowResTextureDim;\0D\0A};\0D\0A\0D\0A// Grass Geometry\0D\0A#define N_GRASS_TRIANGLES 5\0D\0A#define N_GRASS_VERTICES 7\0D\0A#define MAX_GRASS_STRAWS_1D 100\0D\0Astruct GenerateGrassStrawsConstantBuffer_AppParams\0D\0A{\0D\0A    XMUINT2 activePatchDim; // Dimensions of active grass straws.\0D\0A    XMUINT2 maxPatchDim;    // Dimensions of the whole vertex buffer.\0D\0A\0D\0A    XMFLOAT2 timeOffset;\0D\0A    float grassHeight;\0D\0A    float grassScale;\0D\0A    \0D\0A    XMFLOAT3 patchSize;\0D\0A    float grassThickness;\0D\0A\0D\0A    XMFLOAT3 windDirection;\0D\0A    float windStrength;\0D\0A\0D\0A    float positionJitterStrength;\0D\0A    float bendStrengthAlongTangent;\0D\0A    float padding[2];\0D\0A};\0D\0A\0D\0Astruct GenerateGrassStrawsConstantBuffer\0D\0A{\0D\0A    XMFLOAT2 invActivePatchDim;\0D\0A    float padding1;\0D\0A    float padding2;\0D\0A    GenerateGrassStrawsConstantBuffer_AppParams p;\0D\0A};\0D\0A\0D\0A\0D\0A// Attributes per primitive type.\0D\0Astruct PrimitiveConstantBuffer\0D\0A{\0D\0A\09UINT     materialID;          \0D\0A    UINT     isVertexAnimated; \0D\0A    UINT     padding[2];\0D\0A};\0D\0A\0D\0Anamespace MaterialType {\0D\0A    enum Type {\0D\0A        Default,\0D\0A        Matte,      // Lambertian scattering\0D\0A        Mirror,     // Specular reflector that isn't modified by the Fresnel equations.\0D\0A        AnalyticalCheckerboardTexture\0D\0A    };\0D\0A}\0D\0A\0D\0Astruct PrimitiveMaterialBuffer\0D\0A{\0D\0A\09XMFLOAT3 Kd;\0D\0A\09XMFLOAT3 Ks;\0D\0A    XMFLOAT3 Kr;\0D\0A    XMFLOAT3 Kt;\0D\0A    XMFLOAT3 opacity;\0D\0A    XMFLOAT3 eta;\0D\0A    float roughness;\0D\0A    BOOL hasDiffuseTexture;\0D\0A    BOOL hasNormalTexture;\0D\0A    BOOL hasPerVertexTangents;\0D\0A    MaterialType::Type type;\0D\0A    float padding;\0D\0A};\0D\0A\0D\0Astruct AlignedUnitSquareSample2D\0D\0A{\0D\0A    XMFLOAT2 value;\0D\0A    XMUINT2 padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct AlignedHemisphereSample3D\0D\0A{\0D\0A    XMFLOAT3 value;\0D\0A    UINT padding;  // Padding to 16B\0D\0A};\0D\0A\0D\0Astruct Vertex\0D\0A{\0D\0A    XMFLOAT3 position;\0D\0A    XMFLOAT3 normal;\0D\0A};\0D\0A\0D\0Astruct VertexPositionNormalTextureTangent\0D\0A{\0D\0A\09XMFLOAT3 position;\0D\0A\09XMFLOAT3 normal;\0D\0A\09XMFLOAT2 textureCoordinate;\0D\0A\09XMFLOAT3 tangent;\0D\0A};\0D\0A\0D\0A// Ray types traced in this sample.\0D\0Anamespace PathtracerRayType {\0D\0A    enum Enum {\0D\0A        Radiance = 0,\09// ~ Radiance ray generating color and GBuffer data\0D\0A        Shadow,         // ~ Shadow/visibility rays\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0Anamespace RTAORayType {\0D\0A    enum Enum {\0D\0A        AO = 0,\09\0D\0A        Count\0D\0A    };\0D\0A}\0D\0A\0D\0A\0D\0Anamespace TraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A\09\09static const UINT GeometryStride = PathtracerRayType::Count;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[PathtracerRayType::Count] =\0D\0A        {\0D\0A            0, // Radiance ray\0D\0A            1, // Shadow ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Anamespace RTAOTraceRayParameters\0D\0A{\0D\0A    static const UINT InstanceMask = ~0;   // Everything is visible.\0D\0A    namespace HitGroup {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A        // Since there is only one closest hit shader across shader records in RTAO, \0D\0A        // always access the first shader record of each BLAS instance shader record range.\0D\0A        static const UINT GeometryStride = 0;\0D\0A    }\0D\0A    namespace MissShader {\0D\0A        static const UINT Offset[RTAORayType::Count] =\0D\0A        {\0D\0A            0, // AO ray\0D\0A        };\0D\0A    }\0D\0A}\0D\0A\0D\0Astatic const XMFLOAT4 BackgroundColor = XMFLOAT4(0.79f, 0.88f, 0.98f, 1.0f);\0D\0A\0D\0A#endif // RAYTRACINGHLSLCOMPAT_H"}
!183 = !{!"RTAO\5CShaders\5CRTAO.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A#ifndef RTAO_HLSLI\0D\0A#define RTAO_HLSLI\0D\0A\0D\0Anamespace RTAO {\0D\0A    static const float RayHitDistanceOnMiss = 0;\0D\0A    static const float InvalidAOCoefficientValue = -1;\0D\0A    bool HasAORayHitAnyGeometry(in float tHit)\0D\0A    {\0D\0A        return tHit != RayHitDistanceOnMiss;\0D\0A    }\0D\0A}\0D\0A\0D\0A#endif // RTAO_HLSLI"}
!184 = !{!"RTAO\5CShaders\5CRandomNumberGenerator.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#ifndef RANDOMNUMBERGENERATOR_H\0D\0A#define RANDOMNUMBERGENERATOR_H\0D\0A\0D\0A// Ref: http://www.reedbeta.com/blog/quick-and-easy-gpu-random-numbers-in-d3d11/\0D\0Anamespace RNG\0D\0A{\0D\0A    // Create an initial random number for this thread\0D\0A    uint SeedThread(uint seed)\0D\0A    {\0D\0A        // Thomas Wang hash \0D\0A        // Ref: http://www.burtleburtle.net/bob/hash/integer.html\0D\0A        seed = (seed ^ 61) ^ (seed >> 16);\0D\0A        seed *= 9;\0D\0A        seed = seed ^ (seed >> 4);\0D\0A        seed *= 0x27d4eb2d;\0D\0A        seed = seed ^ (seed >> 15);\0D\0A        return seed;\0D\0A    }\0D\0A\0D\0A    // Generate a random 32-bit integer\0D\0A    uint Random(inout uint state)\0D\0A    {\0D\0A        // Xorshift algorithm from George Marsaglia's paper.\0D\0A        state ^= (state << 13);\0D\0A        state ^= (state >> 17);\0D\0A        state ^= (state << 5);\0D\0A        return state;\0D\0A    }\0D\0A\0D\0A    // Generate a random float in the range [0.0f, 1.0f)\0D\0A    float Random01(inout uint state)\0D\0A    {\0D\0A        return asfloat(0x3f800000 | Random(state) >> 9) - 1.0;\0D\0A    }\0D\0A\0D\0A    // Generate a random float in the range [0.0f, 1.0f]\0D\0A    float Random01inclusive(inout uint state)\0D\0A    {\0D\0A        return Random(state) / float(0xffffffff);\0D\0A    }\0D\0A\0D\0A\0D\0A    // Generate a random integer in the range [lower, upper]\0D\0A    uint Random(inout uint state, uint lower, uint upper)\0D\0A    {\0D\0A        return lower + uint(float(upper - lower + 1) * Random01(state));\0D\0A    }\0D\0A}\0D\0A#endif // RANDOMNUMBERGENERATOR_H"}
!185 = !{!"RTAO\5CShaders\5CRay sorting\5CRaySorting.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A\0D\0A#define RAY_DIRECTION_HASH_KEY_BITS_1D 4   // Max 4 bits\0D\0A// TODO: Depth and Index hashing is disabled (set to 0 bits) as it didn't shown improved ray tracing times, \0D\0A//  while adding a substantial perf overhead to the ray sorting (~20% for 2 bit depth hash key).\0D\0A#define DEPTH_HASH_KEY_BITS 0 \0D\0A#define INDEX_HASH_KEY_BITS 0  // (4 - DEPTH_HASH_KEY_BITS) \0D\0A#define NUM_RAYS SortRays::RayGroup::Size\0D\0A#define NUM_THREADS SortRays::ThreadGroup::Size\0D\0A#define MIN_VALID_RAY_DEPTH FLT_10BIT_MIN\0D\0A#define MAX_RAYS 8192\0D\0A\0D\0A#define KEY_NUM_BITS (DEPTH_HASH_KEY_BITS + 2*RAY_DIRECTION_HASH_KEY_BITS_1D + INDEX_HASH_KEY_BITS)\0D\0A#define NUM_KEYS (1 << KEY_NUM_BITS)        // Largest key is reserved for an invalid key.\0D\0A\0D\0A// INACTIVE_RAY_KEY must be greater than the max valid hash key but has to fit within 16bits and valid NUM_KEYS.\0D\0A#define INACTIVE_RAY_KEY (NUM_KEYS - 1)     // Hash key for an invalid/disabled ray. These rays will get sorted to the end and are not to be raytraced.\0D\0A\0D\0A#define INACTIVE_RAY_INDEX_BIT 0x4000\0D\0A#define INACTIVE_RAY_INDEX_BIT_Y 0x80\0D\0A\0D\0A#define INVALID_16BIT_KEY_BIT 0x8000      // A value used to denote if the SMEM entry is a 16bit key value or not.\0D\0A#define INVALID_RAY_ORIGIN_DEPTH 0\0D\0A\0D\0A// If the ray is inactive, the ray index offset contains INACTIVE_RAY_INDEX_BIT\0D\0A#define IsActiveRay(RayGroupRayIndexOffset) (!(RayGroupRayIndexOffset.y & INACTIVE_RAY_INDEX_BIT_Y))\0D\0A#define GetRawRayIndexOffset(RayGroupRayIndexOffset) uint2(RayGroupRayIndexOffset.x, RayGroupRayIndexOffset.y & ~(INACTIVE_RAY_INDEX_BIT_Y))"}
!186 = !{!"RTAO\5CShaders\5CRayGen.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A#ifndef RAYGEN_HLSLI\0D\0A#define RAYGEN_HLSLI\0D\0A\0D\0A#include \22RaytracingShaderHelper.hlsli\22\0D\0A\0D\0Afloat3 GetRandomRayDirection(in uint2 srcRayIndex, in float3 surfaceNormal, in uint2 textureDim, in uint raySampleIndexOffset)\0D\0A{\0D\0A    // Calculate coordinate system for the hemisphere.\0D\0A    float3 u, v, w;\0D\0A    w = surfaceNormal;\0D\0A\0D\0A    // Get a vector that's not parallel to w.\0D\0A    float3 right = 0.3f * w + float3(-0.72f, 0.56f, -0.34f);\0D\0A    v = normalize(cross(w, right));\0D\0A    u = cross(v, w);\0D\0A\0D\0A    // Calculate offsets to the pregenerated sample set.\0D\0A    uint sampleSetJump;     // Offset to the start of the sample set\0D\0A    uint sampleJump;        // Offset to the first sample for this pixel within a sample set.\0D\0A    {\0D\0A        // Neighboring samples NxN share a sample set, but use different samples within a set.\0D\0A        // Sharing a sample set lets the pixels in the group get a better coverage of the hemisphere \0D\0A        // than if each pixel used a separate sample set with less samples pregenerated per set.\0D\0A\0D\0A        // Get a common sample set ID and seed shared across neighboring pixels.\0D\0A        uint numSampleSetsInX = (textureDim.x + cb.numPixelsPerDimPerSet - 1) / cb.numPixelsPerDimPerSet;\0D\0A        uint2 sampleSetId = srcRayIndex / cb.numPixelsPerDimPerSet;\0D\0A\0D\0A        // Get a common hitPosition to adjust the sampleSeed by. \0D\0A        // This breaks noise correlation on camera movement which otherwise results \0D\0A        // in noise pattern swimming across the screen on camera movement.\0D\0A        uint2 pixelZeroId = sampleSetId * cb.numPixelsPerDimPerSet;\0D\0A        float3 pixelZeroHitPosition = g_texRayOriginPosition[pixelZeroId].xyz; \0D\0A        uint sampleSetSeed = (sampleSetId.y * numSampleSetsInX + sampleSetId.x) * hash(pixelZeroHitPosition) + cb.seed;\0D\0A        uint RNGState = RNG::SeedThread(sampleSetSeed);\0D\0A\0D\0A        sampleSetJump = RNG::Random(RNGState, 0, cb.numSampleSets - 1) * cb.numSamplesPerSet;\0D\0A\0D\0A        // Get a pixel ID within the shared set across neighboring pixels.\0D\0A        uint2 pixeIDPerSet2D = srcRayIndex % cb.numPixelsPerDimPerSet;\0D\0A        uint pixeIDPerSet = pixeIDPerSet2D.y * cb.numPixelsPerDimPerSet + pixeIDPerSet2D.x;\0D\0A\0D\0A        // Randomize starting sample position within a sample set per neighbor group \0D\0A        // to break group to group correlation resulting in square alias.\0D\0A        uint numPixelsPerSet = cb.numPixelsPerDimPerSet * cb.numPixelsPerDimPerSet;\0D\0A        sampleJump = pixeIDPerSet + RNG::Random(RNGState, 0, numPixelsPerSet - 1) + raySampleIndexOffset;\0D\0A    }\0D\0A\0D\0A    // Load a pregenerated random sample from the sample set.\0D\0A    float3 sample = g_sampleSets[sampleSetJump + (sampleJump % cb.numSamplesPerSet)].value;\0D\0A    float3 rayDirection = normalize(sample.x * u + sample.y * v + sample.z * w);\0D\0A\0D\0A    return rayDirection;\0D\0A}\0D\0A\0D\0A#endif // RAYGEN_HLSLI"}
!187 = !{!"RTAO\5CShaders\5CRaytracingShaderHelper.hlsli", !"//*********************************************************\0D\0A//\0D\0A// Copyright (c) Microsoft. All rights reserved.\0D\0A// This code is licensed under the MIT License (MIT).\0D\0A// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF\0D\0A// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY\0D\0A// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR\0D\0A// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.\0D\0A//\0D\0A//*********************************************************\0D\0A#ifndef RAYTRACINGSHADERHELPER_H\0D\0A#define RAYTRACINGSHADERHELPER_H\0D\0A\0D\0A#include \22RayTracingHlslCompat.h\22\0D\0A#include \22RTAO/Shaders/RTAO.hlsli\22\0D\0A\0D\0A#define INFINITY (1.0/0.0)\0D\0A\0D\0A#define FLT_EPSILON     1.192092896e-07 // Smallest number such that 1.0 + FLT_EPSILON != 1.0\0D\0A#define FLT_MIN         1.175494351e-38 \0D\0A#define FLT_MAX         3.402823466e+38 \0D\0A#define FLT_10BIT_MIN   6.1e-5\0D\0A#define FLT_10BIT_MAX   6.5e4\0D\0A#define PI              3.1415926535897f\0D\0A\0D\0Afloat length_toPow2(float2 p)\0D\0A{\0D\0A    return dot(p, p);\0D\0A}\0D\0A\0D\0Afloat length_toPow2(float3 p)\0D\0A{\0D\0A    return dot(p, p);\0D\0A}\0D\0A\0D\0Auint Float2ToHalf(in float2 val)\0D\0A{\0D\0A    uint result = 0;\0D\0A    result = f32tof16(val.x);\0D\0A    result |= f32tof16(val.y) << 16;\0D\0A    return result;\0D\0A}\0D\0A\0D\0Afloat2 HalfToFloat2(in uint val)\0D\0A{\0D\0A    float2 result;\0D\0A    result.x = f16tof32(val);\0D\0A    result.y = f16tof32(val >> 16);\0D\0A    return result;\0D\0A}\0D\0A\0D\0Auint2 EncodeMaterial16b(uint materialID, float3 diffuse)\0D\0A{\0D\0A    uint2 result;\0D\0A    result.x = materialID;\0D\0A    result.x |= f32tof16(diffuse.r) << 16;\0D\0A    result.y = Float2ToHalf(diffuse.gb);\0D\0A\0D\0A    return result;\0D\0A}\0D\0A\0D\0Abool IsWithinBounds(in int2 index, in int2 dimensions)\0D\0A{\0D\0A    return index.x >= 0 && index.y >= 0 && index.x < dimensions.x && index.y < dimensions.y;\0D\0A}\0D\0A\0D\0Avoid DecodeMaterial16b(in uint2 material, out uint materialID, out float3 diffuse)\0D\0A{\0D\0A    materialID = material.x & 0xffff;\0D\0A    diffuse.r = f16tof32(material.x >> 16);\0D\0A    diffuse.gb = HalfToFloat2(material.y);\0D\0A}\0D\0A\0D\0A// Remaps a value to [0,1] for a given range.\0D\0Afloat RemapToRange(in float value, in float rangeMin, in float rangeMax)\0D\0A{\0D\0A\09return saturate((value - rangeMin) / (rangeMax - rangeMin));\0D\0A}\0D\0A\0D\0A// Returns a cycling <0 -> 1 -> 0> animation interpolant \0D\0Afloat CalculateAnimationInterpolant(in float elapsedTime, in float cycleDuration)\0D\0A{\0D\0A    float curLinearCycleTime = fmod(elapsedTime, cycleDuration) / cycleDuration;\0D\0A    curLinearCycleTime = (curLinearCycleTime <= 0.5f) ? 2 * curLinearCycleTime : 1 - 2 * (curLinearCycleTime - 0.5f);\0D\0A    return smoothstep(0, 1, curLinearCycleTime);\0D\0A}\0D\0A\0D\0Avoid swap(inout float a, inout float b)\0D\0A{\0D\0A    float temp = a;\0D\0A    a = b;\0D\0A    b = temp;\0D\0A}\0D\0A\0D\0Abool IsInRange(in uint val, in uint min, in float max)\0D\0A{\0D\0A    return (val >= min && val <= max);\0D\0A}\0D\0A\0D\0Abool IsInRange(in float val, in float min, in float max)\0D\0A{\0D\0A    return (val >= min && val <= max);\0D\0A}\0D\0A\0D\0Afloat RGBtoLuminance(in float3 color)\0D\0A{\0D\0A    return 0.2126f * color.r + 0.7152f * color.g + 0.0722f * color.b;\0D\0A}\0D\0A\0D\0A// Load three 16 bit indices from a byte addressed buffer.\0D\0Astatic\0D\0Auint3 Load3x16BitIndices(uint offsetBytes, ByteAddressBuffer Indices)\0D\0A{\0D\0A    uint3 indices;\0D\0A\0D\0A    // ByteAdressBuffer loads must be aligned at a 4 byte boundary.\0D\0A    // Since we need to read three 16 bit indices: { 0, 1, 2 } \0D\0A    // aligned at a 4 byte boundary as: { 0 1 } { 2 0 } { 1 2 } { 0 1 } ...\0D\0A    // we will load 8 bytes (~ 4 indices { a b | c d }) to handle two possible index triplet layouts,\0D\0A    // based on first index's offsetBytes being aligned at the 4 byte boundary or not:\0D\0A    //  Aligned:     { 0 1 | 2 - }\0D\0A    //  Not aligned: { - 0 | 1 2 }\0D\0A    const uint dwordAlignedOffset = offsetBytes & ~3;\0D\0A    const uint2 four16BitIndices = Indices.Load2(dwordAlignedOffset);\0D\0A\0D\0A    // Aligned: { 0 1 | 2 - } => retrieve first three 16bit indices\0D\0A    if (dwordAlignedOffset == offsetBytes)\0D\0A    {\0D\0A        indices.x = four16BitIndices.x & 0xffff;\0D\0A        indices.y = (four16BitIndices.x >> 16) & 0xffff;\0D\0A        indices.z = four16BitIndices.y & 0xffff;\0D\0A    }\0D\0A    else // Not aligned: { - 0 | 1 2 } => retrieve last three 16bit indices\0D\0A    {\0D\0A        indices.x = (four16BitIndices.x >> 16) & 0xffff;\0D\0A        indices.y = four16BitIndices.y & 0xffff;\0D\0A        indices.z = (four16BitIndices.y >> 16) & 0xffff;\0D\0A    }\0D\0A\0D\0A    return indices;\0D\0A}\0D\0A\0D\0A// Retrieve hit world position.\0D\0Afloat3 HitWorldPosition()\0D\0A{\0D\0A    return WorldRayOrigin() + RayTCurrent() * WorldRayDirection();\0D\0A}\0D\0A\0D\0A// Retrieve hit object space position.\0D\0Afloat3 HitObjectPosition()\0D\0A{\0D\0A    return ObjectRayOrigin() + RayTCurrent() * ObjectRayDirection();\0D\0A}\0D\0A\0D\0Afloat2 ClipSpaceToTexturePosition(in float4 clipSpacePosition)\0D\0A{\0D\0A    float3 NDCposition = clipSpacePosition.xyz / clipSpacePosition.w;   // Perspective divide to get Normal Device Coordinates: {[-1,1], [-1,1], (0, 1]}\0D\0A    NDCposition.y = -NDCposition.y;                                     // Invert Y for DirectX-style coordinates.\0D\0A    float2 texturePosition = (NDCposition.xy + 1) * 0.5f;               // [-1,1] -> [0, 1]\0D\0A    return texturePosition;\0D\0A}\0D\0A\0D\0A// Retrieve attribute at a hit position interpolated from vertex attributes using the hit's barycentrics.\0D\0Afloat3 HitAttribute(float3 vertexAttribute[3], BuiltInTriangleIntersectionAttributes attr)\0D\0A{\0D\0A    return vertexAttribute[0] +\0D\0A        attr.barycentrics.x * (vertexAttribute[1] - vertexAttribute[0]) +\0D\0A        attr.barycentrics.y * (vertexAttribute[2] - vertexAttribute[0]);\0D\0A}\0D\0A\0D\0A// Retrieve attribute at a hit position interpolated from vertex attributes using the hit's barycentrics.\0D\0Afloat2 HitAttribute(float2 vertexAttribute[3], BuiltInTriangleIntersectionAttributes attr)\0D\0A{\0D\0A    return vertexAttribute[0] +\0D\0A        attr.barycentrics.x * (vertexAttribute[1] - vertexAttribute[0]) +\0D\0A        attr.barycentrics.y * (vertexAttribute[2] - vertexAttribute[0]);\0D\0A}\0D\0A\0D\0A// Generate camera's forward direction ray\0D\0Ainline float3 GenerateForwardCameraRayDirection(in float4x4 projectionToWorldWithCameraAtOrigin)\0D\0A{\0D\0A\09float2 screenPos = float2(0, 0);\0D\0A\09\0D\0A\09// Unproject the pixel coordinate into a world positon.\0D\0A\09float4 world = mul(float4(screenPos, 0, 1), projectionToWorldWithCameraAtOrigin);\0D\0A\09return normalize(world.xyz);\0D\0A}\0D\0A\0D\0Ainline Ray GenerateForwardCameraRay(in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin)\0D\0A{\0D\0A    float2 screenPos = float2(0, 0);\0D\0A\0D\0A    // Unproject the pixel coordinate into a world positon.\0D\0A    float4 world = mul(float4(screenPos, 0, 1), projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    Ray ray;\0D\0A    ray.origin = cameraPosition;\0D\0A    // Since the camera's eye was at 0,0,0 in projectionToWorldWithCameraAtOrigin \0D\0A    // the world.xyz is the direction.\0D\0A    ray.direction = normalize(world.xyz);\0D\0A\0D\0A    return ray;\0D\0A}\0D\0A\0D\0A\0D\0A// Generate a ray in world space for a camera pixel corresponding to an index from the dispatched 2D grid.\0D\0Ainline Ray GenerateCameraRay(uint2 index, in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin, float2 jitter = float2(0, 0))\0D\0A{\0D\0A    float2 xy = index + 0.5f; // center in the middle of the pixel.\0D\0A\09xy += jitter;\0D\0A    float2 screenPos = xy / DispatchRaysDimensions().xy * 2.0 - 1.0;\0D\0A\0D\0A    // Invert Y for DirectX-style coordinates.\0D\0A    screenPos.y = -screenPos.y;\0D\0A\0D\0A    // Unproject the pixel coordinate into a world positon.\0D\0A    float4 world = mul(float4(screenPos, 0, 1), projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    Ray ray;\0D\0A    ray.origin = cameraPosition;\0D\0A\09// Since the camera's eye was at 0,0,0 in projectionToWorldWithCameraAtOrigin \0D\0A\09// the world.xyz is the direction.\0D\0A\09ray.direction = normalize(world.xyz);\0D\0A\0D\0A    return ray;\0D\0A}\0D\0A\0D\0A// Texture coordinates on a horizontal plane.\0D\0Afloat2 TexCoords(in float3 position)\0D\0A{\0D\0A    return position.xz;\0D\0A}\0D\0A\0D\0A// Calculate ray differentials.\0D\0Avoid CalculateRayDifferentials(out float2 ddx_uv, out float2 ddy_uv, in float2 uv, in float3 hitPosition, in float3 surfaceNormal, in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin)\0D\0A{\0D\0A    // Compute ray differentials by intersecting the tangent plane to the  surface.\0D\0A    Ray ddx = GenerateCameraRay(DispatchRaysIndex().xy + uint2(1, 0), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    Ray ddy = GenerateCameraRay(DispatchRaysIndex().xy + uint2(0, 1), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    // Compute ray differentials.\0D\0A    float3 ddx_pos = ddx.origin - ddx.direction * dot(ddx.origin - hitPosition, surfaceNormal) / dot(ddx.direction, surfaceNormal);\0D\0A    float3 ddy_pos = ddy.origin - ddy.direction * dot(ddy.origin - hitPosition, surfaceNormal) / dot(ddy.direction, surfaceNormal);\0D\0A\0D\0A    // Calculate texture sampling footprint.\0D\0A    ddx_uv = TexCoords(ddx_pos) - uv;\0D\0A    ddy_uv = TexCoords(ddy_pos) - uv;\0D\0A}\0D\0A\0D\0A// Forward declaration.\0D\0Afloat CheckersGridTextureBoxFilter(in float2 uv, in float2 dpdx, in float2 dpdy, in uint ratio);\0D\0A\0D\0A// Return analytically integrated checkerboard texture (box filter).\0D\0Afloat AnalyticalCheckersGridTexture(in float3 hitPosition, in float3 surfaceNormal, in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin )\0D\0A{\0D\0A    float2 ddx_uv;\0D\0A    float2 ddy_uv;\0D\0A    float2 uv = TexCoords(hitPosition);\0D\0A\0D\0A    CalculateRayDifferentials(ddx_uv, ddy_uv, uv, hitPosition, surfaceNormal, cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    return CheckersGridTextureBoxFilter(uv, ddx_uv, ddy_uv, 50);\0D\0A}\0D\0A\0D\0A// Fresnel reflectance - schlick approximation.\0D\0Afloat3 FresnelReflectanceSchlick(in float3 I, in float3 N, in float3 F0)\0D\0A{\0D\0A    float cosi = saturate(dot(-I, N));\0D\0A    return F0 + (1 - F0)*pow(1 - cosi, 5);\0D\0A}\0D\0A\0D\0Afloat3 RemoveSRGB(float3 x)\0D\0A{\0D\0A\09return x < 0.04045 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\0D\0A}\0D\0A\0D\0Afloat3 ApplySRGB(float3 x)\0D\0A{\0D\0A\09return x < 0.0031308 ? 12.92 * x : 1.055 * pow(abs(x), 1.0 / 2.4) - 0.055;\0D\0A}\0D\0A\0D\0Auint SmallestPowerOf2GreaterThan(in uint x)\0D\0A{\0D\0A    // Set all the bits behind the most significant non-zero bit in x to 1.\0D\0A    // Essentially giving us the largest value that is smaller than the\0D\0A    // next power of 2 we're looking for.\0D\0A    x |= x >> 1;\0D\0A    x |= x >> 2;\0D\0A    x |= x >> 4;\0D\0A    x |= x >> 8;\0D\0A    x |= x >> 16;\0D\0A\0D\0A    // Return the next power of two value.\0D\0A    return x + 1;\0D\0A}\0D\0A\0D\0A// Returns float precision for a given float value.\0D\0A// Values within (value -precision, value + precision) map to the same value. \0D\0A// Precision = exponentRange/MaxMantissaValue = (2^e+1 - 2^e) / (2^NumMantissaBits)\0D\0A// Ref: https://blog.demofox.org/2017/11/21/floating-point-precision/\0D\0Afloat FloatPrecision(in float x, in uint NumMantissaBits)\0D\0A{\0D\0A    // Find the exponent range the value is in.\0D\0A    uint nextPowerOfTwo = SmallestPowerOf2GreaterThan(x);\0D\0A    float exponentRange = nextPowerOfTwo - (nextPowerOfTwo >> 1);\0D\0A\0D\0A    float MaxMantissaValue = 1 << NumMantissaBits;\0D\0A\0D\0A    return exponentRange / MaxMantissaValue;\0D\0A}\0D\0A\0D\0Afloat FloatPrecisionR10(in float x)\0D\0A{\0D\0A    return FloatPrecision(x, 5);\0D\0A}\0D\0A\0D\0Afloat FloatPrecisionR16(in float x)\0D\0A{\0D\0A    return FloatPrecision(x, 10);\0D\0A}\0D\0A\0D\0Afloat FloatPrecisionR32(in float x)\0D\0A{\0D\0A    return FloatPrecision(x, 23);\0D\0A}\0D\0A\0D\0A\0D\0A/***************************************************************/\0D\0A// Normal encoding\0D\0A// Ref: https://knarkowicz.wordpress.com/2014/04/16/octahedron-normal-vector-encoding/\0D\0Afloat2 OctWrap(float2 v)\0D\0A{\0D\0A    return (1.0 - abs(v.yx)) * (v.xy >= 0.0 ? 1.0 : -1.0);\0D\0A}\0D\0A\0D\0A// Converts a 3D unit vector to a 2D vector with <0,1> range. \0D\0Afloat2 EncodeNormal(float3 n)\0D\0A{\0D\0A    n /= (abs(n.x) + abs(n.y) + abs(n.z));\0D\0A    n.xy = n.z >= 0.0 ? n.xy : OctWrap(n.xy);\0D\0A    n.xy = n.xy * 0.5 + 0.5;\0D\0A    return n.xy;\0D\0A}\0D\0A\0D\0Afloat3 DecodeNormal(float2 f)\0D\0A{\0D\0A    f = f * 2.0 - 1.0;\0D\0A\0D\0A    // https://twitter.com/Stubbesaurus/status/937994790553227264\0D\0A    float3 n = float3(f.x, f.y, 1.0 - abs(f.x) - abs(f.y));\0D\0A    float t = saturate(-n.z);\0D\0A    n.xy += n.xy >= 0.0 ? -t : t;\0D\0A    return normalize(n);\0D\0A}\0D\0A/***************************************************************/\0D\0A\0D\0A\0D\0A\0D\0A// Pack [0.0, 1.0] float to 8 bit uint. \0D\0Auint Pack_R8_FLOAT(float r)\0D\0A{\0D\0A    return clamp(round(r * 255), 0, 255);\0D\0A}\0D\0A\0D\0Afloat Unpack_R8_FLOAT(uint r)\0D\0A{\0D\0A    return (r & 0xFF) / 255.0;\0D\0A}\0D\0A\0D\0A// pack two 8 bit uint2 into a 16 bit uint.\0D\0Auint Pack_R8G8_to_R16_UINT(in uint r, in uint g)\0D\0A{\0D\0A    return (r & 0xff) | ((g & 0xff) << 8);\0D\0A}\0D\0A\0D\0Avoid Unpack_R16_to_R8G8_UINT(in uint v, out uint r, out uint g)\0D\0A{\0D\0A    r = v & 0xFF;\0D\0A    g = (v >> 8) & 0xFF;\0D\0A}\0D\0A\0D\0A\0D\0A// Pack unsigned floating point, where \0D\0A// - rgb.rg are in [0, 1] range stored as two 8 bit uints.\0D\0A// - rgb.b in [0, FLT_16_BIT_MAX] range stored as a 16bit float.\0D\0Auint Pack_R8G8B16_FLOAT(float3 rgb)\0D\0A{\0D\0A    uint r = Pack_R8_FLOAT(rgb.r);\0D\0A    uint g = Pack_R8_FLOAT(rgb.g) << 8;\0D\0A    uint b = f32tof16(rgb.b) << 16;\0D\0A    return r | g | b;\0D\0A}\0D\0A\0D\0Afloat3 Unpack_R8G8B16_FLOAT(uint rgb)\0D\0A{\0D\0A    float r = Unpack_R8_FLOAT(rgb);\0D\0A    float g = Unpack_R8_FLOAT(rgb >> 8);\0D\0A    float b = f16tof32(rgb >> 16);\0D\0A    return float3(r, g, b);\0D\0A}\0D\0A\0D\0Auint NormalizedFloat3ToByte3(float3 v)\0D\0A{\0D\0A    return\0D\0A        (uint(v.x * 255) << 16) +\0D\0A        (uint(v.y * 255) << 8) +\0D\0A        uint(v.z * 255);\0D\0A}\0D\0A\0D\0Afloat3 Byte3ToNormalizedFloat3(uint v)\0D\0A{\0D\0A    return float3(\0D\0A        (v >> 16) & 0xff,\0D\0A        (v >> 8) & 0xff,\0D\0A        v & 0xff) / 255;\0D\0A}\0D\0A\0D\0A// Encode normal and depth with 16 bits allocated for each.\0D\0Auint EncodeNormalDepth_N16D16(in float3 normal, in float depth)\0D\0A{\0D\0A    float3 encodedNormalDepth = float3(EncodeNormal(normal), depth);\0D\0A    return Pack_R8G8B16_FLOAT(encodedNormalDepth);\0D\0A}\0D\0A\0D\0A\0D\0A// Decoded 16 bit normal and 16bit depth.\0D\0Avoid DecodeNormalDepth_N16D16(in uint packedEncodedNormalAndDepth, out float3 normal, out float depth)\0D\0A{\0D\0A    float3 encodedNormalDepth = Unpack_R8G8B16_FLOAT(packedEncodedNormalAndDepth);\0D\0A    normal = DecodeNormal(encodedNormalDepth.xy);\0D\0A    depth = encodedNormalDepth.z;\0D\0A}\0D\0A\0D\0Auint EncodeNormalDepth(in float3 normal, in float depth)\0D\0A{\0D\0A    return EncodeNormalDepth_N16D16(normal, depth);\0D\0A}\0D\0A\0D\0Avoid DecodeNormalDepth(in uint encodedNormalDepth, out float3 normal, out float depth)\0D\0A{\0D\0A    DecodeNormalDepth_N16D16(encodedNormalDepth, normal, depth);\0D\0A}\0D\0A\0D\0Avoid DecodeNormal(in uint encodedNormalDepth, out float3 normal)\0D\0A{\0D\0A    float depthDummy;\0D\0A    DecodeNormalDepth_N16D16(encodedNormalDepth, normal, depthDummy);\0D\0A}\0D\0A\0D\0Avoid UnpackEncodedNormalDepth(in uint packedEncodedNormalDepth, out float2 encodedNormal, out float depth)\0D\0A{\0D\0A    float3 encodedNormalDepth = Unpack_R8G8B16_FLOAT(packedEncodedNormalDepth);\0D\0A    encodedNormal = encodedNormalDepth.xy;\0D\0A    depth = encodedNormalDepth.z;\0D\0A}\0D\0A\0D\0A/***************************************************************/\0D\0A// 3D value noise\0D\0A// Ref: https://www.shadertoy.com/view/XsXfRH\0D\0A// The MIT License\0D\0A// Copyright \EC\A7\A4 2017 Inigo Quilez\0D\0A// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \22Software\22), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \22AS IS\22, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\0D\0Afloat hash(float3 p)\0D\0A{\0D\0A    p = frac(p*0.3183099 + .1);\0D\0A    p *= 17.0;\0D\0A    return frac(p.x*p.y*p.z*(p.x + p.y + p.z));\0D\0A}\0D\0A/***************************************************************/\0D\0A\0D\0A\0D\0A// Sample normal map, convert to signed, apply tangent-to-world space transform.\0D\0Afloat3 BumpMapNormalToWorldSpaceNormal(float3 bumpNormal, float3 surfaceNormal, float3 tangent)\0D\0A{\0D\0A    // Compute tangent frame.\0D\0A    surfaceNormal = normalize(surfaceNormal);\0D\0A    tangent = normalize(tangent);\0D\0A\0D\0A    float3 bitangent = normalize(cross(tangent, surfaceNormal));\0D\0A    float3x3 tangentSpaceToWorldSpace = float3x3(tangent, bitangent, surfaceNormal);\0D\0A\0D\0A    return mul(bumpNormal, tangentSpaceToWorldSpace);\0D\0A}\0D\0A\0D\0A// Calculate a tangent from triangle's vertices and their uv coordinates.\0D\0A// Ref: http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/\0D\0Afloat3 CalculateTangent(in float3 v0, in float3 v1, in float3 v2, in float2 uv0, in float2 uv1, in float2 uv2)\0D\0A{\0D\0A    // Calculate edges\0D\0A    // Position delta\0D\0A    float3 deltaPos1 = v1 - v0;\0D\0A    float3 deltaPos2 = v2 - v0;\0D\0A\0D\0A    // UV delta\0D\0A    float2 deltaUV1 = uv1 - uv0;\0D\0A    float2 deltaUV2 = uv2 - uv0;\0D\0A\0D\0A    float r = 1.0f / (deltaUV1.x * deltaUV2.y - deltaUV1.y * deltaUV2.x);\0D\0A    return (deltaPos1 * deltaUV2.y - deltaPos2 * deltaUV1.y) * r;\0D\0A}\0D\0A\0D\0Afloat3 RayPlaneIntersection(float3 planeOrigin, float3 planeNormal, float3 rayOrigin, float3 rayDirection)\0D\0A{\0D\0A    float d = -dot(planeNormal, planeOrigin);\0D\0A    float t = (-dot(planeNormal, rayOrigin) - d) / dot(planeNormal, rayDirection);\0D\0A    return rayOrigin + t * rayDirection;\0D\0A}\0D\0A\0D\0Abool Inverse2x2(float2x2 mat, out float2x2 inverse)\0D\0A{\0D\0A    float determinant = mat[0][0] * mat[1][1] - mat[1][0] * mat[0][1];\0D\0A\0D\0A    float rcpDeterminant = rcp(determinant);\0D\0A    inverse[0][0] = mat[1][1];\0D\0A    inverse[1][1] = mat[0][0];\0D\0A    inverse[1][0] = -mat[1][0];\0D\0A    inverse[0][1] = -mat[0][1];\0D\0A    inverse = rcpDeterminant * inverse;\0D\0A\0D\0A    return abs(determinant) > 0.00000001;\0D\0A}\0D\0A\0D\0A\0D\0A/*\0D\0A Using implementation described in PBRT, finding the partial derivative of the (change in position)/(change in UV coordinates)\0D\0A a.k.a dp/du and dp/dv\0D\0A\0D\0A Given the 3 UV and 3 triangle points, this can be represented as a linear equation:\0D\0A\0D\0A (uv0.u - uv2.u, uv0.v - uv2.v)   (dp/du)   =     (p0 - p2)\0D\0A (uv1.u - uv2.u, uv1.v - uv2.v)   (dp/dv)   =     (p1 - p2)\0D\0A\0D\0A To solve for dp/du, we invert the 2x2 matrix on the left side to get\0D\0A\0D\0A (dp/du)   = (uv0.u - uv2.u, uv0.v - uv2.v)^-1  (p0 - p2)\0D\0A (dp/dv)   = (uv1.u - uv2.u, uv1.v - uv2.v)     (p1 - p2)\0D\0A*/\0D\0Avoid CalculateTrianglePartialDerivatives(float2 uv0, float2 uv1, float2 uv2, float3 p0, float3 p1, float3 p2, out float3 dpdu, out float3 dpdv)\0D\0A{\0D\0A    float2x2 linearEquation;\0D\0A    linearEquation[0] = uv0 - uv2;\0D\0A    linearEquation[1] = uv1 - uv2;\0D\0A\0D\0A    float2x3 pointVector;\0D\0A    pointVector[0] = p0 - p2;\0D\0A    pointVector[1] = p1 - p2;\0D\0A\0D\0A    float2x2 inverse;\0D\0A    Inverse2x2(linearEquation, inverse);\0D\0A\0D\0A    dpdu = inverse[0][0] * pointVector[0] + inverse[0][1] * pointVector[1];\0D\0A    dpdv = inverse[1][0] * pointVector[0] + inverse[1][1] * pointVector[1];\0D\0A}\0D\0A\0D\0A/*\0D\0AUsing implementation described in PBRT, finding the derivative for the UVs (dU, dV)  in both the x and y directions\0D\0A\0D\0AGiven the original point and the offset points (pX and pY) + the partial derivatives, the linear equation can be formed:\0D\0ANote described only with pX, but the same is also applied to pY\0D\0A\0D\0A( dpdu.x, dpdv.x)          =   (pX.x - p.x)\0D\0A( dpdu.y, dpdv.y)   (dU)   =   (pX.y - p.y)\0D\0A( dpdu.z, dpdv.z)   (dV)   =   (pX.z - p.z)\0D\0A\0D\0ABecause the problem is over-constrained (3 equations and only 2 unknowns), we pick 2 channels. Since one of the equations can\0D\0Abe degenerate, we pick the other 2 - namely 2 with least magnitude in their cross product, which are conveniently available in n.\0D\0ATHen we solve for dU, dV by inverting the matrix\0D\0A\0D\0AdU    =   ( dpdu.x, dpdv.x)^-1  (pX.x - p.x)\0D\0AdV    =   ( dpdu.y, dpdv.y)     (pX.y - p.y)\0D\0A*/\0D\0Avoid CalculateUVDerivatives(float3 normal, float3 dpdu, float3 dpdv, float3 p, float3 pX, float3 pY, out float2 ddx, out float2 ddy)\0D\0A{\0D\0A    int2 indices;\0D\0A    float3 absNormal = abs(normal);\0D\0A    if (absNormal.x > absNormal.y && absNormal.x > absNormal.z)\0D\0A    {\0D\0A        indices = int2(1, 2);\0D\0A    }\0D\0A    else if (absNormal.y > absNormal.z)\0D\0A    {\0D\0A        indices = int2(0, 2);\0D\0A    }\0D\0A    else\0D\0A    {\0D\0A        indices = int2(0, 1);\0D\0A    }\0D\0A\0D\0A    float2x2 linearEquation;\0D\0A    linearEquation[0] = float2(dpdu[indices.x], dpdv[indices.x]);\0D\0A    linearEquation[1] = float2(dpdu[indices.y], dpdv[indices.y]);\0D\0A\0D\0A    float2x2 inverse;\0D\0A    Inverse2x2(linearEquation, inverse);\0D\0A\0D\0A    float2 pointOffset = float2(pX[indices.x] - p[indices.x], pX[indices.y] - p[indices.y]);\0D\0A    ddx = abs(mul(inverse, pointOffset));\0D\0A\0D\0A    pointOffset = float2(pY[indices.x] - p[indices.x], pY[indices.y] - p[indices.y]);\0D\0A    ddy = abs(mul(inverse, pointOffset));\0D\0A}\0D\0A\0D\0A\0D\0Avoid CalculateUVDerivatives(\0D\0A    in float2 uv, in float3 hitPosition, in float3 triangleNormal,\0D\0A    in float3 p0, in float3 p1, in float3 p2, \0D\0A    in float2 uv0, in float2 uv1, in float2 uv2,\0D\0A    in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin,\0D\0A    out float2 ddx, out float2 ddy)\0D\0A{\0D\0A    Ray ray10 = GenerateCameraRay(DispatchRaysIndex().xy + uint2(1, 0), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    Ray ray01 = GenerateCameraRay(DispatchRaysIndex().xy + uint2(0, 1), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A\0D\0A    float3 xOffsetPoint = RayPlaneIntersection(hitPosition, triangleNormal, ray10.origin, ray10.direction);\0D\0A    float3 yOffsetPoint = RayPlaneIntersection(hitPosition, triangleNormal, ray01.origin, ray01.direction);\0D\0A\0D\0A    float3 dpdu, dpdv;\0D\0A    CalculateTrianglePartialDerivatives(uv0, uv1, uv2, p0, p1, p2, dpdu, dpdv);\0D\0A    CalculateUVDerivatives(triangleNormal, dpdu, dpdv, hitPosition, xOffsetPoint, yOffsetPoint, ddx, ddy);\0D\0A}\0D\0A\0D\0A// Calculate derivatives of texture coordinates on a given triangle.\0D\0Avoid CalculateUVDerivatives(\0D\0A    in float3 hitPosition, in float2 uv, in float3 tangent, in float3 bitangent, in float3 triangleNormal,\0D\0A    in float3 p0,                      // Current ray's intersection point with the triangle.\0D\0A    in Ray rx, in Ray ry,              // Auxilary rays\0D\0A    in float2 uv0, in float2 uv1, in float2 uv2,    // UV coordinates at the triangle's vertices.\0D\0A    in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin,\0D\0A    out float2 ddx, out float2 ddy,    // UV derivatives\0D\0A    out float3 px, out float3 py)      // Auxilary rays' intersection points with the triangle.)\0D\0A{\0D\0A    px = RayPlaneIntersection(hitPosition, triangleNormal, rx.origin, rx.direction);\0D\0A    py = RayPlaneIntersection(hitPosition, triangleNormal, ry.origin, ry.direction);\0D\0A\0D\0A    CalculateUVDerivatives(triangleNormal, tangent, bitangent, hitPosition, px, py, ddx, ddy);\0D\0A}\0D\0A\0D\0A// Retrieves auxilary camera rays offset by one pixel in x and y directions in screen space. \0D\0Avoid GetAuxilaryCameraRays(in float3 cameraPosition, in float4x4 projectionToWorldWithCameraAtOrigin, out Ray rx, out Ray ry)\0D\0A{\0D\0A    rx = GenerateCameraRay(DispatchRaysIndex().xy + uint2(1, 0), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A    ry = GenerateCameraRay(DispatchRaysIndex().xy + uint2(0, 1), cameraPosition, projectionToWorldWithCameraAtOrigin);\0D\0A}\0D\0A\0D\0Afloat min4(in float4 v)\0D\0A{\0D\0A    return min(min(v.x, v.y), min(v.z, v.w));\0D\0A}\0D\0A\0D\0Afloat max4(in float4 v)\0D\0A{\0D\0A    return max(max(v.x, v.y), max(v.z, v.w));\0D\0A}\0D\0A\0D\0Auint2 Get2DQuadIndexOffset(in uint i)\0D\0A{\0D\0A    const uint2 indexOffsets[4] = { {0, 0}, {1, 0}, {0, 1}, {1, 1} };\0D\0A    return indexOffsets[i];\0D\0A}\0D\0A\0D\0Auint GetIndexOfValueClosestToTheReference(in float refValue, in float2 vValues)\0D\0A{\0D\0A    float2 delta = abs(refValue - vValues);\0D\0A\0D\0A    uint outIndex = delta[1] < delta[0] ? 1 : 0;\0D\0A\0D\0A    return outIndex;\0D\0A}\0D\0A\0D\0Auint GetIndexOfValueClosestToTheReference(in float refValue, in float4 vValues)\0D\0A{\0D\0A    float4 delta = abs(refValue - vValues);\0D\0A\0D\0A    uint outIndex = delta[1] < delta[0] ? 1 : 0;\0D\0A    outIndex = delta[2] < delta[outIndex] ? 2 : outIndex;\0D\0A    outIndex = delta[3] < delta[outIndex] ? 3 : outIndex;\0D\0A\0D\0A    return outIndex;\0D\0A}\0D\0A\0D\0A// Remap partial depth derivatives at z0 from [1,1] pixel offset to a new pixel offset.\0D\0Afloat2 RemapDdxy(in float z0, in float2 ddxy, in float2 pixelOffset)\0D\0A{    \0D\0A    // Perspective correction for non-linear depth interpolation.\0D\0A    // Ref: https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/visibility-problem-depth-buffer-depth-interpolation\0D\0A    // Given a linear depth interpolation for finding z at offset q along z0 to z1\0D\0A    //      z =  1 / (1 / z0 * (1 - q) + 1 / z1 * q)\0D\0A    // and z1 = z0 + ddxy, where z1 is at a unit pixel offset [1, 1]\0D\0A    // z can be calculated via ddxy as\0D\0A    //\0D\0A    //      z = (z0 + ddxy) / (1 + (1-q) / z0 * ddxy) \0D\0A    float2 z = (z0 + ddxy) / (1 + ((1 - pixelOffset) / z0) * ddxy);\0D\0A    return sign(pixelOffset) * (z - z0);\0D\0A}\0D\0A\0D\0Afloat GetDepthAtPixelOffset(in float z0, in float2 ddxy, in float2 pixelOffset)\0D\0A{\0D\0A    float2 newDdxy = RemapDdxy(z0, ddxy, pixelOffset);\0D\0A    return z0 + dot(1, newDdxy);\0D\0A}\0D\0A\0D\0A// Returns an approximate surface dimensions covered in a pixel. \0D\0A// This is a simplified model assuming pixel to pixel view angles are the same.\0D\0A// z - linear depth of the surface at the pixel\0D\0A// ddxy - partial depth derivatives\0D\0A// tan_a - tangent of a per pixel view angle \0D\0Afloat2 ApproximateProjectedSurfaceDimensionsPerPixel(in float z, in float2 ddxy, in float tan_a)\0D\0A{\0D\0A    // Surface dimensions for a surface parallel at z.\0D\0A    float2 dx = tan_a * z;\0D\0A    \0D\0A    // Using Pythagorean theorem approximate the surface dimensions given the ddxy.\0D\0A    float2 w = sqrt(dx * dx + ddxy * ddxy);\0D\0A\0D\0A    return w;\0D\0A}\0D\0A\0D\0A// Ensure only valid samples are interpolated. \0D\0A// Defaults to an average or an invalid value if none are valid.\0D\0Afloat InterpolateValidValues(\0D\0A    in float4 weights,\0D\0A    in float4 SampleValues,\0D\0A    in float minWeight = 1e-6,\0D\0A    in float invalidValue = RTAO::InvalidAOCoefficientValue)\0D\0A{\0D\0A    float4 validSamples = SampleValues != invalidValue;\0D\0A    weights *= validSamples;\0D\0A    float weightSum = dot(weights, 1);\0D\0A    if (weightSum < minWeight)\0D\0A    {\0D\0A        float numValidSamples = dot(validSamples, 1);\0D\0A        if (numValidSamples > 1e-6)\0D\0A        {\0D\0A            return dot(validSamples, SampleValues) / numValidSamples;\0D\0A        }\0D\0A        else\0D\0A        {\0D\0A            return invalidValue;\0D\0A        }\0D\0A    }\0D\0A\0D\0A    return dot(weights, SampleValues) / dot(weights, 1);\0D\0A}\0D\0A\0D\0A#endif // RAYTRACINGSHADERHELPER_H\0D\0A"}
!188 = !{!"RTAO\5CShaders\5CAORayGenCS.hlsl"}
!189 = !{!"-E", !"main", !"-T", !"cs_6_3", !"/I", !"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5C", !"/I", !"C:\5CUsers\5Cuser\5CDesktop\5CDirectX-Graphics-Samples\5CSamples\5CDesktop\5CD3D12Raytracing\5Csrc\5CD3D12RaytracingRealTimeDenoisedAmbientOcclusion\5C", !"/I", !"RTAO/shaders", !"/I", !"SampleCore/shaders", !"/I", !"SampleCore/shaders/util", !"/Od", !"/Zi", !"-Qembed_debug"}
!190 = !{i32 1, i32 3}
!191 = !{i32 1, i32 6}
!192 = !{!"cs", i32 6, i32 3}
!193 = !{!194, !201, !203, null}
!194 = !{!195, !197, !199}
!195 = !{i32 0, %"class.Texture2D<unsigned int>"* undef, !"g_texRayOriginSurfaceNormalDepth", i32 0, i32 0, i32 1, i32 2, i32 0, !196}
!196 = !{i32 0, i32 5}
!197 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"g_texRayOriginPosition", i32 0, i32 1, i32 1, i32 2, i32 0, !198}
!198 = !{i32 0, i32 9}
!199 = !{i32 2, %"class.StructuredBuffer<AlignedHemisphereSample3D>"* undef, !"g_sampleSets", i32 0, i32 3, i32 1, i32 12, i32 0, !200}
!200 = !{i32 1, i32 16}
!201 = !{!202}
!202 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"g_rtRaysDirectionOriginDepth", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !196}
!203 = !{!204}
!204 = !{i32 0, %cb* undef, !"cb", i32 0, i32 0, i32 1, i32 32, null}
!205 = !{i32 0, %struct.RayGenConstantBuffer undef, !206, %"class.StructuredBuffer<AlignedHemisphereSample3D>" undef, !214, %struct.AlignedHemisphereSample3D undef, !216, %cb undef, !219}
!206 = !{i32 32, !207, !208, !209, !210, !211, !212, !213}
!207 = !{i32 6, !"textureDim", i32 3, i32 0, i32 7, i32 5}
!208 = !{i32 6, !"doCheckerboardRayGeneration", i32 3, i32 8, i32 7, i32 4}
!209 = !{i32 6, !"checkerboardGenerateRaysForEvenPixels", i32 3, i32 12, i32 7, i32 4}
!210 = !{i32 6, !"seed", i32 3, i32 16, i32 7, i32 5}
!211 = !{i32 6, !"numSamplesPerSet", i32 3, i32 20, i32 7, i32 5}
!212 = !{i32 6, !"numSampleSets", i32 3, i32 24, i32 7, i32 5}
!213 = !{i32 6, !"numPixelsPerDimPerSet", i32 3, i32 28, i32 7, i32 5}
!214 = !{i32 16, !215}
!215 = !{i32 6, !"h", i32 3, i32 0}
!216 = !{i32 16, !217, !218}
!217 = !{i32 6, !"value", i32 3, i32 0, i32 7, i32 9}
!218 = !{i32 6, !"padding", i32 3, i32 12, i32 7, i32 5}
!219 = !{i32 32, !220}
!220 = !{i32 6, !"cb", i32 3, i32 0}
!221 = !{i32 1, void ()* @main, !222}
!222 = !{!223}
!223 = !{i32 0, !2, !2}
!224 = !{void ()* @main, !"main", null, !193, !225}
!225 = !{i32 0, i64 21, i32 4, !226}
!226 = !{i32 8, i32 8, i32 1}
!227 = !DILocation(line: 60, column: 21, scope: !53, inlinedAt: !228)
!228 = distinct !DILocation(line: 55, column: 24, scope: !229)
!229 = distinct !DILexicalBlock(scope: !230, file: !1, line: 54, column: 5)
!230 = distinct !DILexicalBlock(scope: !18, file: !1, line: 53, column: 9)
!231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "DTid", arg: 1, scope: !18, file: !1, line: 36, type: !21)
!232 = !DIExpression(DW_OP_bit_piece, 0, 32)
!233 = !DILocation(line: 36, column: 17, scope: !18)
!234 = !DIExpression(DW_OP_bit_piece, 32, 32)
!235 = !DILocation(line: 38, column: 11, scope: !18)
!236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "DTidFullRes", scope: !18, file: !1, line: 38, type: !21)
!237 = !DILocation(line: 40, column: 12, scope: !238)
!238 = distinct !DILexicalBlock(scope: !18, file: !1, line: 40, column: 9)
!239 = !DILocation(line: 40, column: 9, scope: !238)
!240 = !DILocation(line: 40, column: 9, scope: !18)
!241 = !DILocation(line: 42, column: 14, scope: !242)
!242 = distinct !DILexicalBlock(scope: !238, file: !1, line: 41, column: 5)
!243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixelStepX", scope: !242, file: !1, line: 42, type: !97)
!244 = !DIExpression()
!245 = !DILocation(line: 43, column: 37, scope: !242)
!246 = !DILocation(line: 43, column: 42, scope: !242)
!247 = !DILocation(line: 43, column: 14, scope: !242)
!248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isEvenPixelY", scope: !242, file: !1, line: 43, type: !249)
!249 = !DIBasicType(name: "bool", size: 32, align: 32, encoding: DW_ATE_boolean)
!250 = !DILocation(line: 44, column: 29, scope: !242)
!251 = !DILocation(line: 44, column: 48, scope: !242)
!252 = !DILocation(line: 44, column: 42, scope: !242)
!253 = !DILocation(line: 44, column: 14, scope: !242)
!254 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixelOffsetX", scope: !242, file: !1, line: 44, type: !97)
!255 = !DILocation(line: 45, column: 32, scope: !242)
!256 = !DILocation(line: 45, column: 45, scope: !242)
!257 = !DILocation(line: 45, column: 23, scope: !242)
!258 = !DILocation(line: 46, column: 5, scope: !242)
!259 = !DILocation(line: 50, column: 23, scope: !18)
!260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 1, scope: !41, file: !30, line: 364, type: !15)
!261 = !DILocation(line: 364, column: 28, scope: !41, inlinedAt: !262)
!262 = distinct !DILocation(line: 395, column: 15, scope: !38, inlinedAt: !263)
!263 = distinct !DILocation(line: 428, column: 33, scope: !37, inlinedAt: !264)
!264 = distinct !DILocation(line: 440, column: 5, scope: !29, inlinedAt: !265)
!265 = distinct !DILocation(line: 50, column: 5, scope: !18)
!266 = !DILocation(line: 50, column: 5, scope: !18)
!267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encodedNormalDepth", arg: 1, scope: !29, file: !30, line: 438, type: !15)
!268 = !DILocation(line: 438, column: 32, scope: !29, inlinedAt: !265)
!269 = !DILocation(line: 440, column: 5, scope: !29, inlinedAt: !265)
!270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "packedEncodedNormalAndDepth", arg: 1, scope: !37, file: !30, line: 426, type: !15)
!271 = !DILocation(line: 426, column: 39, scope: !37, inlinedAt: !264)
!272 = !DILocation(line: 428, column: 33, scope: !37, inlinedAt: !264)
!273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rgb", arg: 1, scope: !38, file: !30, line: 393, type: !15)
!274 = !DILocation(line: 393, column: 34, scope: !38, inlinedAt: !263)
!275 = !DILocation(line: 395, column: 15, scope: !38, inlinedAt: !263)
!276 = !DILocation(line: 366, column: 15, scope: !41, inlinedAt: !262)
!277 = !DILocation(line: 366, column: 12, scope: !41, inlinedAt: !262)
!278 = !DILocation(line: 366, column: 23, scope: !41, inlinedAt: !262)
!279 = !DILocation(line: 366, column: 5, scope: !41, inlinedAt: !262)
!280 = !DILocation(line: 395, column: 11, scope: !38, inlinedAt: !263)
!281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !38, file: !30, line: 395, type: !8)
!282 = !DILocation(line: 396, column: 35, scope: !38, inlinedAt: !263)
!283 = !DILocation(line: 396, column: 15, scope: !38, inlinedAt: !263)
!284 = !DILocation(line: 364, column: 28, scope: !41, inlinedAt: !285)
!285 = distinct !DILocation(line: 396, column: 15, scope: !38, inlinedAt: !263)
!286 = !DILocation(line: 366, column: 15, scope: !41, inlinedAt: !285)
!287 = !DILocation(line: 366, column: 12, scope: !41, inlinedAt: !285)
!288 = !DILocation(line: 366, column: 23, scope: !41, inlinedAt: !285)
!289 = !DILocation(line: 366, column: 5, scope: !41, inlinedAt: !285)
!290 = !DILocation(line: 396, column: 11, scope: !38, inlinedAt: !263)
!291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !38, file: !30, line: 396, type: !8)
!292 = !DILocation(line: 397, column: 28, scope: !38, inlinedAt: !263)
!293 = !DILocation(line: 397, column: 15, scope: !38, inlinedAt: !263)
!294 = !DILocation(line: 397, column: 11, scope: !38, inlinedAt: !263)
!295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !38, file: !30, line: 397, type: !8)
!296 = !DILocation(line: 398, column: 5, scope: !38, inlinedAt: !263)
!297 = !DILocation(line: 428, column: 12, scope: !37, inlinedAt: !264)
!298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encodedNormalDepth", scope: !37, file: !30, line: 428, type: !4)
!299 = !DIExpression(DW_OP_bit_piece, 64, 32)
!300 = !DILocation(line: 429, column: 14, scope: !37, inlinedAt: !264)
!301 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 1, scope: !44, file: !30, line: 344, type: !47)
!302 = !DILocation(line: 344, column: 28, scope: !44, inlinedAt: !303)
!303 = distinct !DILocation(line: 429, column: 14, scope: !37, inlinedAt: !264)
!304 = !DILocation(line: 346, column: 11, scope: !44, inlinedAt: !303)
!305 = !DILocation(line: 346, column: 17, scope: !44, inlinedAt: !303)
!306 = !DILocation(line: 349, column: 39, scope: !44, inlinedAt: !303)
!307 = !DILocation(line: 349, column: 37, scope: !44, inlinedAt: !303)
!308 = !DILocation(line: 349, column: 50, scope: !44, inlinedAt: !303)
!309 = !DILocation(line: 349, column: 48, scope: !44, inlinedAt: !303)
!310 = !DILocation(line: 349, column: 12, scope: !44, inlinedAt: !303)
!311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !44, file: !30, line: 349, type: !4)
!312 = !DILocation(line: 350, column: 24, scope: !44, inlinedAt: !303)
!313 = !DILocation(line: 350, column: 15, scope: !44, inlinedAt: !303)
!314 = !DILocation(line: 350, column: 11, scope: !44, inlinedAt: !303)
!315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !44, file: !30, line: 350, type: !8)
!316 = !DILocation(line: 351, column: 18, scope: !44, inlinedAt: !303)
!317 = !DILocation(line: 351, column: 27, scope: !44, inlinedAt: !303)
!318 = !DILocation(line: 351, column: 13, scope: !44, inlinedAt: !303)
!319 = !DILocation(line: 351, column: 10, scope: !44, inlinedAt: !303)
!320 = !DILocation(line: 352, column: 12, scope: !44, inlinedAt: !303)
!321 = !DILocation(line: 352, column: 5, scope: !44, inlinedAt: !303)
!322 = !DILocation(line: 429, column: 12, scope: !37, inlinedAt: !264)
!323 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "normal", arg: 2, scope: !37, file: !30, line: 426, type: !4)
!324 = !DILocation(line: 426, column: 79, scope: !37, inlinedAt: !264)
!325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "normal", arg: 2, scope: !29, file: !30, line: 438, type: !4)
!326 = !DILocation(line: 438, column: 63, scope: !29, inlinedAt: !265)
!327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "surfaceNormal", scope: !18, file: !1, line: 48, type: !4)
!328 = !DILocation(line: 48, column: 12, scope: !18)
!329 = !DILocation(line: 430, column: 11, scope: !37, inlinedAt: !264)
!330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "depth", arg: 3, scope: !37, file: !30, line: 426, type: !8)
!331 = !DILocation(line: 426, column: 97, scope: !37, inlinedAt: !264)
!332 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "depth", arg: 3, scope: !29, file: !30, line: 438, type: !8)
!333 = !DILocation(line: 438, column: 81, scope: !29, inlinedAt: !265)
!334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rayOriginDepth", scope: !18, file: !1, line: 49, type: !8)
!335 = !DILocation(line: 49, column: 11, scope: !18)
!336 = !DILocation(line: 431, column: 1, scope: !37, inlinedAt: !264)
!337 = !DILocation(line: 441, column: 1, scope: !29, inlinedAt: !265)
!338 = !DILocation(line: 52, column: 12, scope: !18)
!339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rayDirection", scope: !18, file: !1, line: 52, type: !4)
!340 = !DILocation(line: 53, column: 24, scope: !230)
!341 = !DILocation(line: 53, column: 9, scope: !18)
!342 = !DILocation(line: 55, column: 70, scope: !229)
!343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "textureDim", arg: 3, scope: !53, file: !54, line: 16, type: !21)
!344 = !DILocation(line: 16, column: 86, scope: !53, inlinedAt: !228)
!345 = !DILocation(line: 55, column: 24, scope: !229)
!346 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "raySampleIndexOffset", arg: 4, scope: !53, file: !54, line: 16, type: !15)
!347 = !DILocation(line: 16, column: 106, scope: !53, inlinedAt: !228)
!348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "surfaceNormal", arg: 2, scope: !53, file: !54, line: 16, type: !4)
!349 = !DILocation(line: 16, column: 62, scope: !53, inlinedAt: !228)
!350 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcRayIndex", arg: 1, scope: !53, file: !54, line: 16, type: !21)
!351 = !DILocation(line: 16, column: 39, scope: !53, inlinedAt: !228)
!352 = !DILocation(line: 20, column: 7, scope: !53, inlinedAt: !228)
!353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !53, file: !54, line: 19, type: !4)
!354 = !DILocation(line: 19, column: 18, scope: !53, inlinedAt: !228)
!355 = !DILocation(line: 23, column: 25, scope: !53, inlinedAt: !228)
!356 = !DILocation(line: 23, column: 29, scope: !53, inlinedAt: !228)
!357 = !DILocation(line: 23, column: 12, scope: !53, inlinedAt: !228)
!358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "right", scope: !53, file: !54, line: 23, type: !4)
!359 = !DILocation(line: 24, column: 19, scope: !53, inlinedAt: !228)
!360 = !DILocation(line: 24, column: 9, scope: !53, inlinedAt: !228)
!361 = !DILocation(line: 24, column: 7, scope: !53, inlinedAt: !228)
!362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !53, file: !54, line: 19, type: !4)
!363 = !DILocation(line: 19, column: 15, scope: !53, inlinedAt: !228)
!364 = !DILocation(line: 25, column: 9, scope: !53, inlinedAt: !228)
!365 = !DILocation(line: 25, column: 7, scope: !53, inlinedAt: !228)
!366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !53, file: !54, line: 19, type: !4)
!367 = !DILocation(line: 19, column: 12, scope: !53, inlinedAt: !228)
!368 = !DILocation(line: 36, column: 52, scope: !369, inlinedAt: !228)
!369 = distinct !DILexicalBlock(scope: !53, file: !54, line: 30, column: 5)
!370 = !DILocation(line: 36, column: 47, scope: !369, inlinedAt: !228)
!371 = !DILocation(line: 36, column: 74, scope: !369, inlinedAt: !228)
!372 = !DILocation(line: 36, column: 84, scope: !369, inlinedAt: !228)
!373 = !DILocation(line: 36, column: 79, scope: !369, inlinedAt: !228)
!374 = !DILocation(line: 36, column: 14, scope: !369, inlinedAt: !228)
!375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numSampleSetsInX", scope: !369, file: !54, line: 36, type: !15)
!376 = !DILocation(line: 37, column: 46, scope: !369, inlinedAt: !228)
!377 = !DILocation(line: 37, column: 41, scope: !369, inlinedAt: !228)
!378 = !DILocation(line: 37, column: 15, scope: !369, inlinedAt: !228)
!379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sampleSetId", scope: !369, file: !54, line: 37, type: !21)
!380 = !DILocation(line: 42, column: 46, scope: !369, inlinedAt: !228)
!381 = !DILocation(line: 42, column: 41, scope: !369, inlinedAt: !228)
!382 = !DILocation(line: 42, column: 15, scope: !369, inlinedAt: !228)
!383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixelZeroId", scope: !369, file: !54, line: 42, type: !21)
!384 = !DILocation(line: 43, column: 39, scope: !369, inlinedAt: !228)
!385 = !DILocation(line: 43, column: 16, scope: !369, inlinedAt: !228)
!386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixelZeroHitPosition", scope: !369, file: !54, line: 43, type: !4)
!387 = !DILocation(line: 44, column: 45, scope: !369, inlinedAt: !228)
!388 = !DILocation(line: 44, column: 64, scope: !369, inlinedAt: !228)
!389 = !DILocation(line: 44, column: 30, scope: !369, inlinedAt: !228)
!390 = !DILocation(line: 44, column: 83, scope: !369, inlinedAt: !228)
!391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !57, file: !30, line: 462, type: !4)
!392 = !DILocation(line: 462, column: 19, scope: !57, inlinedAt: !393)
!393 = distinct !DILocation(line: 44, column: 83, scope: !369, inlinedAt: !228)
!394 = !DILocation(line: 464, column: 15, scope: !57, inlinedAt: !393)
!395 = !DILocation(line: 464, column: 26, scope: !57, inlinedAt: !393)
!396 = !DILocation(line: 464, column: 9, scope: !57, inlinedAt: !393)
!397 = !DILocation(line: 465, column: 7, scope: !57, inlinedAt: !393)
!398 = !DILocation(line: 466, column: 20, scope: !57, inlinedAt: !393)
!399 = !DILocation(line: 466, column: 24, scope: !57, inlinedAt: !393)
!400 = !DILocation(line: 466, column: 34, scope: !57, inlinedAt: !393)
!401 = !DILocation(line: 466, column: 40, scope: !57, inlinedAt: !393)
!402 = !DILocation(line: 466, column: 28, scope: !57, inlinedAt: !393)
!403 = !DILocation(line: 466, column: 12, scope: !57, inlinedAt: !393)
!404 = !DILocation(line: 466, column: 5, scope: !57, inlinedAt: !393)
!405 = !DILocation(line: 44, column: 81, scope: !369, inlinedAt: !228)
!406 = !DILocation(line: 44, column: 115, scope: !369, inlinedAt: !228)
!407 = !DILocation(line: 44, column: 112, scope: !369, inlinedAt: !228)
!408 = !DILocation(line: 44, column: 110, scope: !369, inlinedAt: !228)
!409 = !DILocation(line: 44, column: 14, scope: !369, inlinedAt: !228)
!410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sampleSetSeed", scope: !369, file: !54, line: 44, type: !15)
!411 = !DILocation(line: 45, column: 25, scope: !369, inlinedAt: !228)
!412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seed", arg: 1, scope: !60, file: !61, line: 19, type: !15)
!413 = !DILocation(line: 19, column: 26, scope: !60, inlinedAt: !414)
!414 = distinct !DILocation(line: 45, column: 25, scope: !369, inlinedAt: !228)
!415 = !DILocation(line: 23, column: 22, scope: !60, inlinedAt: !414)
!416 = !DILocation(line: 23, column: 36, scope: !60, inlinedAt: !414)
!417 = !DILocation(line: 23, column: 28, scope: !60, inlinedAt: !414)
!418 = !DILocation(line: 24, column: 14, scope: !60, inlinedAt: !414)
!419 = !DILocation(line: 25, column: 29, scope: !60, inlinedAt: !414)
!420 = !DILocation(line: 25, column: 21, scope: !60, inlinedAt: !414)
!421 = !DILocation(line: 26, column: 14, scope: !60, inlinedAt: !414)
!422 = !DILocation(line: 27, column: 29, scope: !60, inlinedAt: !414)
!423 = !DILocation(line: 27, column: 21, scope: !60, inlinedAt: !414)
!424 = !DILocation(line: 28, column: 9, scope: !60, inlinedAt: !414)
!425 = !DILocation(line: 45, column: 14, scope: !369, inlinedAt: !228)
!426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 1, scope: !73, file: !61, line: 32, type: !15)
!427 = !DILocation(line: 32, column: 28, scope: !73, inlinedAt: !428)
!428 = distinct !DILocation(line: 44, column: 37, scope: !70, inlinedAt: !429)
!429 = distinct !DILocation(line: 57, column: 56, scope: !65, inlinedAt: !430)
!430 = distinct !DILocation(line: 56, column: 37, scope: !369, inlinedAt: !228)
!431 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 1, scope: !70, file: !61, line: 42, type: !15)
!432 = !DILocation(line: 42, column: 31, scope: !70, inlinedAt: !429)
!433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 1, scope: !65, file: !61, line: 55, type: !15)
!434 = !DILocation(line: 55, column: 28, scope: !65, inlinedAt: !430)
!435 = !DILocation(line: 32, column: 28, scope: !73, inlinedAt: !436)
!436 = distinct !DILocation(line: 44, column: 37, scope: !70, inlinedAt: !437)
!437 = distinct !DILocation(line: 57, column: 56, scope: !65, inlinedAt: !438)
!438 = distinct !DILocation(line: 47, column: 25, scope: !369, inlinedAt: !228)
!439 = !DILocation(line: 42, column: 31, scope: !70, inlinedAt: !437)
!440 = !DILocation(line: 55, column: 28, scope: !65, inlinedAt: !438)
!441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "RNGState", scope: !369, file: !54, line: 45, type: !15)
!442 = !DILocation(line: 47, column: 53, scope: !369, inlinedAt: !228)
!443 = !DILocation(line: 47, column: 67, scope: !369, inlinedAt: !228)
!444 = !DILocation(line: 47, column: 25, scope: !369, inlinedAt: !228)
!445 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "upper", arg: 3, scope: !65, file: !61, line: 55, type: !15)
!446 = !DILocation(line: 55, column: 52, scope: !65, inlinedAt: !438)
!447 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lower", arg: 2, scope: !65, file: !61, line: 55, type: !15)
!448 = !DILocation(line: 55, column: 40, scope: !65, inlinedAt: !438)
!449 = !DILocation(line: 57, column: 41, scope: !65, inlinedAt: !438)
!450 = !DILocation(line: 57, column: 49, scope: !65, inlinedAt: !438)
!451 = !DILocation(line: 57, column: 35, scope: !65, inlinedAt: !438)
!452 = !DILocation(line: 57, column: 56, scope: !65, inlinedAt: !438)
!453 = !DILocation(line: 44, column: 37, scope: !70, inlinedAt: !437)
!454 = !DILocation(line: 35, column: 25, scope: !73, inlinedAt: !436)
!455 = !DILocation(line: 35, column: 15, scope: !73, inlinedAt: !436)
!456 = !DILocation(line: 36, column: 25, scope: !73, inlinedAt: !436)
!457 = !DILocation(line: 36, column: 15, scope: !73, inlinedAt: !436)
!458 = !DILocation(line: 37, column: 25, scope: !73, inlinedAt: !436)
!459 = !DILocation(line: 37, column: 15, scope: !73, inlinedAt: !436)
!460 = !DILocation(line: 38, column: 9, scope: !73, inlinedAt: !436)
!461 = !DILocation(line: 44, column: 51, scope: !70, inlinedAt: !437)
!462 = !DILocation(line: 44, column: 35, scope: !70, inlinedAt: !437)
!463 = !DILocation(line: 44, column: 16, scope: !70, inlinedAt: !437)
!464 = !DILocation(line: 44, column: 57, scope: !70, inlinedAt: !437)
!465 = !DILocation(line: 44, column: 9, scope: !70, inlinedAt: !437)
!466 = !DILocation(line: 57, column: 54, scope: !65, inlinedAt: !438)
!467 = !DILocation(line: 57, column: 29, scope: !65, inlinedAt: !438)
!468 = !DILocation(line: 57, column: 22, scope: !65, inlinedAt: !438)
!469 = !DILocation(line: 57, column: 9, scope: !65, inlinedAt: !438)
!470 = !DILocation(line: 47, column: 77, scope: !369, inlinedAt: !228)
!471 = !DILocation(line: 47, column: 72, scope: !369, inlinedAt: !228)
!472 = !DILocation(line: 47, column: 23, scope: !369, inlinedAt: !228)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sampleSetJump", scope: !53, file: !54, line: 28, type: !15)
!474 = !DILocation(line: 28, column: 10, scope: !53, inlinedAt: !228)
!475 = !DILocation(line: 50, column: 49, scope: !369, inlinedAt: !228)
!476 = !DILocation(line: 50, column: 44, scope: !369, inlinedAt: !228)
!477 = !DILocation(line: 50, column: 15, scope: !369, inlinedAt: !228)
!478 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixeIDPerSet2D", scope: !369, file: !54, line: 50, type: !21)
!479 = !DILocation(line: 51, column: 51, scope: !369, inlinedAt: !228)
!480 = !DILocation(line: 51, column: 46, scope: !369, inlinedAt: !228)
!481 = !DILocation(line: 51, column: 73, scope: !369, inlinedAt: !228)
!482 = !DILocation(line: 51, column: 14, scope: !369, inlinedAt: !228)
!483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pixeIDPerSet", scope: !369, file: !54, line: 51, type: !15)
!484 = !DILocation(line: 55, column: 35, scope: !369, inlinedAt: !228)
!485 = !DILocation(line: 55, column: 62, scope: !369, inlinedAt: !228)
!486 = !DILocation(line: 55, column: 57, scope: !369, inlinedAt: !228)
!487 = !DILocation(line: 55, column: 14, scope: !369, inlinedAt: !228)
!488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numPixelsPerSet", scope: !369, file: !54, line: 55, type: !15)
!489 = !DILocation(line: 56, column: 78, scope: !369, inlinedAt: !228)
!490 = !DILocation(line: 56, column: 37, scope: !369, inlinedAt: !228)
!491 = !DILocation(line: 55, column: 52, scope: !65, inlinedAt: !430)
!492 = !DILocation(line: 55, column: 40, scope: !65, inlinedAt: !430)
!493 = !DILocation(line: 57, column: 41, scope: !65, inlinedAt: !430)
!494 = !DILocation(line: 57, column: 49, scope: !65, inlinedAt: !430)
!495 = !DILocation(line: 57, column: 35, scope: !65, inlinedAt: !430)
!496 = !DILocation(line: 57, column: 56, scope: !65, inlinedAt: !430)
!497 = !DILocation(line: 44, column: 37, scope: !70, inlinedAt: !429)
!498 = !DILocation(line: 35, column: 25, scope: !73, inlinedAt: !428)
!499 = !DILocation(line: 35, column: 15, scope: !73, inlinedAt: !428)
!500 = !DILocation(line: 36, column: 25, scope: !73, inlinedAt: !428)
!501 = !DILocation(line: 36, column: 15, scope: !73, inlinedAt: !428)
!502 = !DILocation(line: 37, column: 25, scope: !73, inlinedAt: !428)
!503 = !DILocation(line: 37, column: 15, scope: !73, inlinedAt: !428)
!504 = !DILocation(line: 38, column: 9, scope: !73, inlinedAt: !428)
!505 = !DILocation(line: 44, column: 51, scope: !70, inlinedAt: !429)
!506 = !DILocation(line: 44, column: 35, scope: !70, inlinedAt: !429)
!507 = !DILocation(line: 44, column: 16, scope: !70, inlinedAt: !429)
!508 = !DILocation(line: 44, column: 57, scope: !70, inlinedAt: !429)
!509 = !DILocation(line: 44, column: 9, scope: !70, inlinedAt: !429)
!510 = !DILocation(line: 57, column: 54, scope: !65, inlinedAt: !430)
!511 = !DILocation(line: 57, column: 29, scope: !65, inlinedAt: !430)
!512 = !DILocation(line: 57, column: 22, scope: !65, inlinedAt: !430)
!513 = !DILocation(line: 57, column: 9, scope: !65, inlinedAt: !430)
!514 = !DILocation(line: 56, column: 35, scope: !369, inlinedAt: !228)
!515 = !DILocation(line: 56, column: 83, scope: !369, inlinedAt: !228)
!516 = !DILocation(line: 56, column: 20, scope: !369, inlinedAt: !228)
!517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sampleJump", scope: !53, file: !54, line: 29, type: !15)
!518 = !DILocation(line: 29, column: 10, scope: !53, inlinedAt: !228)
!519 = !DILocation(line: 60, column: 67, scope: !53, inlinedAt: !228)
!520 = !DILocation(line: 60, column: 62, scope: !53, inlinedAt: !228)
!521 = !DILocation(line: 60, column: 48, scope: !53, inlinedAt: !228)
!522 = !DILocation(line: 60, column: 86, scope: !53, inlinedAt: !228)
!523 = !DILocation(line: 60, column: 12, scope: !53, inlinedAt: !228)
!524 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sample", scope: !53, file: !54, line: 60, type: !4)
!525 = !DILocation(line: 61, column: 46, scope: !53, inlinedAt: !228)
!526 = !DILocation(line: 61, column: 61, scope: !53, inlinedAt: !228)
!527 = !DILocation(line: 61, column: 50, scope: !53, inlinedAt: !228)
!528 = !DILocation(line: 61, column: 76, scope: !53, inlinedAt: !228)
!529 = !DILocation(line: 61, column: 65, scope: !53, inlinedAt: !228)
!530 = !DILocation(line: 61, column: 27, scope: !53, inlinedAt: !228)
!531 = !DILocation(line: 61, column: 12, scope: !53, inlinedAt: !228)
!532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rayDirection", scope: !53, file: !54, line: 61, type: !4)
!533 = !DILocation(line: 63, column: 5, scope: !53, inlinedAt: !228)
!534 = !DILocation(line: 55, column: 22, scope: !229)
!535 = !DILocation(line: 56, column: 5, scope: !229)
!536 = !DILocation(line: 58, column: 42, scope: !18)
!537 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "depth", arg: 2, scope: !76, file: !30, line: 433, type: !8)
!538 = !DILocation(line: 433, column: 51, scope: !76, inlinedAt: !539)
!539 = distinct !DILocation(line: 58, column: 42, scope: !18)
!540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "normal", arg: 1, scope: !76, file: !30, line: 433, type: !4)
!541 = !DILocation(line: 433, column: 34, scope: !76, inlinedAt: !539)
!542 = !DILocation(line: 435, column: 12, scope: !76, inlinedAt: !539)
!543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "depth", arg: 2, scope: !79, file: !30, line: 418, type: !8)
!544 = !DILocation(line: 418, column: 58, scope: !79, inlinedAt: !545)
!545 = distinct !DILocation(line: 435, column: 12, scope: !76, inlinedAt: !539)
!546 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "normal", arg: 1, scope: !79, file: !30, line: 418, type: !4)
!547 = !DILocation(line: 418, column: 41, scope: !79, inlinedAt: !545)
!548 = !DILocation(line: 420, column: 40, scope: !79, inlinedAt: !545)
!549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !80, file: !30, line: 336, type: !4)
!550 = !DILocation(line: 336, column: 28, scope: !80, inlinedAt: !551)
!551 = distinct !DILocation(line: 420, column: 40, scope: !79, inlinedAt: !545)
!552 = !DILocation(line: 338, column: 11, scope: !80, inlinedAt: !551)
!553 = !DILocation(line: 338, column: 22, scope: !80, inlinedAt: !551)
!554 = !DILocation(line: 338, column: 20, scope: !80, inlinedAt: !551)
!555 = !DILocation(line: 338, column: 33, scope: !80, inlinedAt: !551)
!556 = !DILocation(line: 338, column: 31, scope: !80, inlinedAt: !551)
!557 = !DILocation(line: 338, column: 7, scope: !80, inlinedAt: !551)
!558 = !DILocation(line: 339, column: 16, scope: !80, inlinedAt: !551)
!559 = !DILocation(line: 339, column: 32, scope: !80, inlinedAt: !551)
!560 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 1, scope: !83, file: !30, line: 330, type: !47)
!561 = !DILocation(line: 330, column: 23, scope: !83, inlinedAt: !562)
!562 = distinct !DILocation(line: 339, column: 32, scope: !80, inlinedAt: !551)
!563 = !DILocation(line: 332, column: 19, scope: !83, inlinedAt: !562)
!564 = !DILocation(line: 332, column: 17, scope: !83, inlinedAt: !562)
!565 = !DILocation(line: 332, column: 38, scope: !83, inlinedAt: !562)
!566 = !DILocation(line: 332, column: 33, scope: !83, inlinedAt: !562)
!567 = !DILocation(line: 332, column: 32, scope: !83, inlinedAt: !562)
!568 = !DILocation(line: 332, column: 30, scope: !83, inlinedAt: !562)
!569 = !DILocation(line: 332, column: 5, scope: !83, inlinedAt: !562)
!570 = !DILocation(line: 339, column: 12, scope: !80, inlinedAt: !551)
!571 = !DILocation(line: 340, column: 17, scope: !80, inlinedAt: !551)
!572 = !DILocation(line: 340, column: 23, scope: !80, inlinedAt: !551)
!573 = !DILocation(line: 341, column: 5, scope: !80, inlinedAt: !551)
!574 = !DILocation(line: 420, column: 12, scope: !79, inlinedAt: !545)
!575 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encodedNormalDepth", scope: !79, file: !30, line: 420, type: !4)
!576 = !DILocation(line: 421, column: 12, scope: !79, inlinedAt: !545)
!577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rgb", arg: 1, scope: !86, file: !30, line: 385, type: !4)
!578 = !DILocation(line: 385, column: 32, scope: !86, inlinedAt: !579)
!579 = distinct !DILocation(line: 421, column: 12, scope: !79, inlinedAt: !545)
!580 = !DILocation(line: 387, column: 14, scope: !86, inlinedAt: !579)
!581 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 1, scope: !89, file: !30, line: 359, type: !8)
!582 = !DILocation(line: 359, column: 26, scope: !89, inlinedAt: !583)
!583 = distinct !DILocation(line: 387, column: 14, scope: !86, inlinedAt: !579)
!584 = !DILocation(line: 361, column: 26, scope: !89, inlinedAt: !583)
!585 = !DILocation(line: 361, column: 18, scope: !89, inlinedAt: !583)
!586 = !DILocation(line: 361, column: 12, scope: !89, inlinedAt: !583)
!587 = !DILocation(line: 361, column: 5, scope: !89, inlinedAt: !583)
!588 = !DILocation(line: 387, column: 10, scope: !86, inlinedAt: !579)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !86, file: !30, line: 387, type: !15)
!590 = !DILocation(line: 388, column: 14, scope: !86, inlinedAt: !579)
!591 = !DILocation(line: 359, column: 26, scope: !89, inlinedAt: !592)
!592 = distinct !DILocation(line: 388, column: 14, scope: !86, inlinedAt: !579)
!593 = !DILocation(line: 361, column: 26, scope: !89, inlinedAt: !592)
!594 = !DILocation(line: 361, column: 18, scope: !89, inlinedAt: !592)
!595 = !DILocation(line: 361, column: 12, scope: !89, inlinedAt: !592)
!596 = !DILocation(line: 361, column: 5, scope: !89, inlinedAt: !592)
!597 = !DILocation(line: 388, column: 35, scope: !86, inlinedAt: !579)
!598 = !DILocation(line: 388, column: 10, scope: !86, inlinedAt: !579)
!599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !86, file: !30, line: 388, type: !15)
!600 = !DILocation(line: 389, column: 14, scope: !86, inlinedAt: !579)
!601 = !DILocation(line: 389, column: 30, scope: !86, inlinedAt: !579)
!602 = !DILocation(line: 389, column: 10, scope: !86, inlinedAt: !579)
!603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !86, file: !30, line: 389, type: !15)
!604 = !DILocation(line: 390, column: 14, scope: !86, inlinedAt: !579)
!605 = !DILocation(line: 390, column: 18, scope: !86, inlinedAt: !579)
!606 = !DILocation(line: 390, column: 5, scope: !86, inlinedAt: !579)
!607 = !DILocation(line: 421, column: 5, scope: !79, inlinedAt: !545)
!608 = !DILocation(line: 435, column: 5, scope: !76, inlinedAt: !539)
!609 = !DILocation(line: 58, column: 40, scope: !18)
!610 = !DILocation(line: 59, column: 1, scope: !18)

#endif

const unsigned char g_pAORayGenCS[] = {
  0x44, 0x58, 0x42, 0x43, 0xd7, 0x61, 0x54, 0x62, 0x8a, 0x15, 0x41, 0x4f,
  0x0e, 0xe0, 0x4d, 0xb7, 0x1a, 0x5f, 0xfa, 0xa9, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x42, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x3c, 0x01, 0x00, 0x00, 0xfc, 0x26, 0x01, 0x00, 0xdc, 0x31, 0x01, 0x00,
  0x10, 0x32, 0x01, 0x00, 0x2c, 0x32, 0x01, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xc0, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x42, 0xb8, 0x25, 0x01, 0x00,
  0x63, 0x00, 0x05, 0x00, 0x6e, 0x49, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa0, 0x25, 0x01, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x65, 0x49, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf8, 0xc1, 0x1c, 0x01, 0x18, 0x64, 0x00,
  0x40, 0xc1, 0x08, 0x40, 0x09, 0x06, 0x22, 0x06, 0x02, 0xe6, 0x08, 0x40,
  0xa1, 0x14, 0x83, 0x71, 0x18, 0x06, 0x21, 0x65, 0x00, 0x00, 0x80, 0x94,
  0x39, 0x02, 0x84, 0x98, 0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc,
  0x10, 0x68, 0x86, 0x85, 0x40, 0x41, 0x53, 0x96, 0x01, 0x70, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xe8, 0xb9, 0x69, 0xb8, 0xfc, 0x09, 0x7b, 0x08,
  0xc9, 0x5f, 0x09, 0x69, 0x25, 0x26, 0x1f, 0xb9, 0x6d, 0x54, 0x00, 0x00,
  0x00, 0x00, 0x45, 0x89, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92,
  0x66, 0x00, 0xca, 0x40, 0x01, 0x00, 0x55, 0x65, 0xa0, 0x00, 0x8a, 0xae,
  0x82, 0x50, 0x00, 0x45, 0x51, 0x14, 0x45, 0x51, 0x76, 0xd3, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb,
  0xa8, 0xa0, 0x28, 0x8a, 0x02, 0x8a, 0xb2, 0x01, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc4, 0x95, 0x63, 0x03, 0x1c, 0x00, 0x60, 0x00, 0xf2, 0xca,
  0x00, 0x00, 0x14, 0x81, 0x85, 0xa0, 0x00, 0x8a, 0x22, 0xf1, 0xa8, 0xe1,
  0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26, 0x1f,
  0xb9, 0x6d, 0x44, 0x00, 0x00, 0x00, 0x14, 0x82, 0x04, 0x1c, 0x80, 0xca,
  0x39, 0x82, 0xa0, 0x18, 0x0e, 0xc0, 0x00, 0xc0, 0x49, 0xe8, 0x4c, 0x68,
  0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5,
  0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c,
  0x50, 0x0f, 0xee, 0x30, 0x0f, 0xe9, 0x70, 0x0e, 0xee, 0x50, 0x0e, 0xe4,
  0x00, 0x06, 0xe9, 0xe0, 0x0e, 0xf4, 0xe0, 0x07, 0x7a, 0xa0, 0x07, 0xed,
  0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f, 0xe5,
  0x80, 0x02, 0x60, 0xa6, 0x6e, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c,
  0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f,
  0x90, 0x00, 0xa8, 0xb4, 0x0e, 0x23, 0x10, 0xd4, 0x4c, 0x6d, 0x30, 0x0e,
  0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f,
  0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f,
  0xe5, 0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e,
  0xef, 0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x40, 0x07, 0x7e, 0x00, 0x06,
  0x7e, 0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00, 0x0f, 0xf3, 0xf0, 0x0b,
  0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x00, 0x66, 0x12, 0x83, 0x71,
  0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c,
  0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b,
  0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76,
  0x78, 0x87, 0x70, 0xa0, 0x07, 0x36, 0x00, 0x03, 0x3a, 0xf0, 0x03, 0x30,
  0xf0, 0x03, 0x24, 0xb4, 0x2e, 0xbd, 0xc3, 0x08, 0x03, 0x75, 0x60, 0x20,
  0x4d, 0x11, 0x25, 0x4c, 0xbe, 0xb6, 0x20, 0x46, 0x43, 0x0c, 0x21, 0xc1,
  0x20, 0xd2, 0x73, 0x10, 0x11, 0xc1, 0x02, 0xcc, 0xb3, 0x10, 0x77, 0x87,
  0x84, 0x18, 0x98, 0x29, 0x0e, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6,
  0xc1, 0x0d, 0x66, 0x81, 0x1e, 0xe4, 0xa1, 0x1e, 0xc6, 0x81, 0x1e, 0xea,
  0x41, 0x1e, 0xca, 0x81, 0x1c, 0x44, 0xa1, 0x1e, 0xcc, 0xc1, 0x1c, 0xca,
  0x41, 0x1e, 0xf8, 0x20, 0x14, 0xd8, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xca,
  0x81, 0x1c, 0x50, 0xa1, 0x1c, 0xda, 0x21, 0x1d, 0xe6, 0x01, 0x1e, 0xd0,
  0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0x66, 0x21, 0x1c, 0xda, 0x01, 0x1e, 0xd8,
  0xa1, 0x1c, 0xe6, 0x80, 0x14, 0xfc, 0x00, 0x05, 0x32, 0xcd, 0x33, 0x7d,
  0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70, 0x0b,
  0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07,
  0xa4, 0xc0, 0x07, 0xf5, 0xe0, 0x0e, 0xf3, 0x90, 0x0e, 0xe7, 0xe0, 0x0e,
  0xe5, 0x40, 0x0e, 0x60, 0x90, 0x0e, 0xee, 0x40, 0x0f, 0x7e, 0x80, 0x02,
  0x80, 0xea, 0x61, 0x04, 0x01, 0xb8, 0x4d, 0x9a, 0x22, 0x4a, 0x98, 0xfc,
  0x15, 0xc0, 0x40, 0xa2, 0xe1, 0x9c, 0x46, 0x9a, 0x80, 0x66, 0xda, 0xa8,
  0xa2, 0x20, 0x22, 0x74, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x70, 0x82, 0x10,
  0xa0, 0x00, 0xa7, 0x9c, 0x80, 0x29, 0x80, 0x21, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23,
  0x25, 0x40, 0x00, 0x1e, 0xc4, 0x60, 0x0c, 0x79, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x20, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x51, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xf3,
  0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x47, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x4f, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x9e, 0x0b, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x38, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x78, 0x40, 0x00, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x01, 0x03, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x88, 0x01, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xca,
  0x00, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x68, 0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x59, 0x20, 0x00, 0x15, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0xca, 0xa0, 0x08, 0x0a, 0xa1, 0x04, 0x8a, 0x61, 0x04, 0xa0, 0x14, 0x4a,
  0xa2, 0x30, 0x0a, 0xa4, 0x80, 0xca, 0xa1, 0x20, 0x0a, 0xa5, 0x60, 0x0a,
  0x87, 0xce, 0x11, 0x00, 0x3a, 0x4a, 0x85, 0x82, 0x11, 0x00, 0x62, 0x67,
  0x00, 0x08, 0x9e, 0x01, 0xa0, 0x78, 0x04, 0x80, 0xe4, 0x19, 0x00, 0x9a,
  0x67, 0x00, 0x88, 0x9e, 0x01, 0x20, 0x7b, 0x06, 0x80, 0xf0, 0x19, 0x00,
  0xca, 0x67, 0x00, 0x48, 0x9f, 0x01, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x8c, 0x3a, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0xcc, 0x03, 0x09, 0x64,
  0x08, 0x91, 0x21, 0xa3, 0x91, 0xc0, 0x04, 0x91, 0x93, 0xa2, 0x0a, 0x7a,
  0xe2, 0x9a, 0x42, 0x0b, 0x23, 0x2b, 0x93, 0x9b, 0xe3, 0x0a, 0x7a, 0x92,
  0x0a, 0xcb, 0x3b, 0x2a, 0x73, 0x1b, 0x9a, 0x72, 0x41, 0x63, 0x9b, 0x63,
  0x1b, 0x34, 0x00, 0x01, 0x40, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03,
  0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01,
  0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a,
  0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b,
  0xd9, 0x00, 0xd0, 0x30, 0x63, 0x7b, 0x0b, 0xa3, 0x9b, 0x21, 0x64, 0x57,
  0x36, 0x46, 0xf7, 0x26, 0xc7, 0x63, 0xc6, 0xf6, 0x16, 0x46, 0xc7, 0x02,
  0x32, 0xe3, 0xc3, 0x00, 0x8f, 0x85, 0x19, 0xdb, 0x5b, 0x18, 0xdd, 0x1e,
  0x03, 0x20, 0x03, 0x04, 0x0c, 0xc0, 0x80, 0x58, 0xc4, 0x00, 0xcd, 0x21,
  0xc0, 0x01, 0x96, 0x80, 0x01, 0x18, 0x00, 0x03, 0xc0, 0x20, 0x6f, 0x11,
  0x03, 0x34, 0x8b, 0x00, 0x07, 0x58, 0x02, 0x06, 0x60, 0x00, 0x06, 0x03,
  0xc0, 0x40, 0x6f, 0x11, 0x03, 0x34, 0x8d, 0x00, 0x07, 0x58, 0x02, 0x06,
  0x60, 0x00, 0x0a, 0x03, 0xb0, 0x61, 0x50, 0x18, 0x87, 0x47, 0x19, 0x5b,
  0x59, 0x5b, 0x99, 0x1b, 0xdd, 0xb2, 0x01, 0x80, 0x12, 0x36, 0x65, 0x6c,
  0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1c,
  0xd2, 0xdc, 0xe8, 0xf6, 0x18, 0x00, 0x19, 0x4c, 0x60, 0x00, 0x06, 0xc5,
  0x04, 0x01, 0x78, 0xa6, 0x15, 0x00, 0x1c, 0x48, 0x54, 0xb5, 0x41, 0x88,
  0xac, 0x49, 0x10, 0x20, 0x18, 0x02, 0x1c, 0x00, 0x00, 0x38, 0x80, 0x01,
  0x00, 0x3c, 0x00, 0x70, 0x01, 0x8b, 0x18, 0xc0, 0x2a, 0x04, 0x38, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x80, 0x44, 0x5d, 0x9a, 0x1b, 0x1d, 0x99, 0x3a,
  0xb7, 0xb9, 0xb4, 0x33, 0xb7, 0x32, 0x32, 0x90, 0x34, 0x37, 0xba, 0x3d,
  0x06, 0x40, 0x06, 0x1b, 0x18, 0x80, 0xc1, 0xb1, 0x88, 0x01, 0x2c, 0x4d,
  0x50, 0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x36, 0x0c, 0x59, 0x97, 0x90,
  0x68, 0x0b, 0x4b, 0x73, 0x63, 0x51, 0x97, 0xe6, 0x46, 0x27, 0xc3, 0xcb,
  0xae, 0x6c, 0x8c, 0xee, 0x4d, 0x8e, 0xa7, 0xce, 0x6d, 0x2e, 0xed, 0xcc,
  0xad, 0x8c, 0x0c, 0x24, 0xcd, 0x8d, 0x8e, 0x05, 0x44, 0xc6, 0x67, 0x11,
  0x03, 0x34, 0x87, 0x00, 0xa4, 0x01, 0x07, 0x06, 0x60, 0x00, 0x0c, 0xc0,
  0x22, 0x06, 0x68, 0x16, 0x01, 0x48, 0x03, 0x0e, 0x0c, 0xc0, 0x00, 0x0c,
  0x06, 0x60, 0x83, 0x20, 0x06, 0x63, 0xb0, 0x6c, 0x00, 0x20, 0x6e, 0x82,
  0x00, 0x40, 0xd3, 0x0a, 0x00, 0x0e, 0x24, 0xca, 0x0c, 0x36, 0x08, 0x65,
  0x70, 0x06, 0x93, 0x20, 0x40, 0x08, 0x03, 0x01, 0x00, 0x00, 0x50, 0x00,
  0x03, 0x00, 0x20, 0x03, 0x00, 0x40, 0x03, 0x60, 0x11, 0x03, 0x58, 0x60,
  0x20, 0x00, 0x40, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x06, 0x40, 0x0d,
  0xd4, 0x60, 0xd3, 0x00, 0x00, 0x6b, 0x30, 0x41, 0x28, 0x82, 0x55, 0x13,
  0x20, 0x7c, 0x80, 0x40, 0x06, 0x6c, 0x00, 0x04, 0x65, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x6d, 0x00, 0x00, 0x00, 0xd3, 0x40, 0x8a, 0x2a, 0xe8, 0x89,
  0x6b, 0x0a, 0x2d, 0x8c, 0xac, 0x4c, 0x6e, 0xee, 0x45, 0x2a, 0x2c, 0x8f,
  0x4e, 0x2e, 0x6c, 0x2c, 0xcd, 0xed, 0x6c, 0x0a, 0x2d, 0x8c, 0xac, 0x4c,
  0x0e, 0xa9, 0x8c, 0x0d, 0xae, 0x4c, 0xce, 0x05, 0x8d, 0x6d, 0x8e, 0x2d,
  0x6d, 0xd0, 0x00, 0xbc, 0x01, 0xc0, 0x88, 0xa8, 0x6c, 0xec, 0x8d, 0xac,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x8d,
  0x72, 0x10, 0xf0, 0x43, 0x54, 0x36, 0xf6, 0x46, 0x56, 0xe6, 0xf4, 0x26,
  0xd7, 0x16, 0xc6, 0x46, 0x54, 0x06, 0x47, 0x87, 0x06, 0x04, 0x94, 0x15,
  0x84, 0x95, 0x14, 0x94, 0x14, 0x64, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46,
  0xf7, 0x26, 0x07, 0xd4, 0x44, 0x02, 0x23, 0x03, 0x04, 0x14, 0x94, 0x14,
  0xd4, 0x04, 0xa4, 0xb5, 0x88, 0x01, 0x20, 0x00, 0x00, 0x80, 0x0c, 0x00,
  0x00, 0x00, 0x58, 0xc4, 0x00, 0x77, 0x00, 0x00, 0x00, 0x30, 0x07, 0x00,
  0x00, 0x00, 0xc0, 0x22, 0x06, 0x80, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
  0x00, 0x60, 0x11, 0x03, 0xdc, 0x01, 0x00, 0x00, 0x40, 0x1d, 0x00, 0x00,
  0x00, 0x00, 0x1b, 0x08, 0xa0, 0xa3, 0x03, 0x3b, 0xd8, 0x34, 0x00, 0xc0,
  0x1d, 0xac, 0x9a, 0x00, 0x38, 0x88, 0x03, 0x39, 0x80, 0x03, 0xbb, 0xc1,
  0x03, 0x20, 0xb8, 0x1b, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x20,
  0x46, 0x54, 0x36, 0xf6, 0x46, 0x56, 0xe6, 0xf4, 0x26, 0xd7, 0x16, 0xc6,
  0x46, 0x54, 0x06, 0x47, 0x87, 0xf6, 0xe5, 0x14, 0x63, 0x43, 0x14, 0x63,
  0xc3, 0x3c, 0x08, 0xf8, 0x21, 0x2a, 0x1b, 0x7b, 0x23, 0x2b, 0x73, 0x7a,
  0x93, 0x6b, 0x0b, 0x63, 0x23, 0x2a, 0x83, 0xa3, 0x43, 0xfb, 0x72, 0x8a,
  0xb1, 0x21, 0x8a, 0xb1, 0x01, 0x02, 0xca, 0x0a, 0xc2, 0x4a, 0x0a, 0x4a,
  0x0a, 0xb2, 0xfa, 0x21, 0xb1, 0x2b, 0x1b, 0xa3, 0x7b, 0x93, 0x03, 0x6a,
  0x22, 0x81, 0x91, 0x01, 0x02, 0x0a, 0x4a, 0x0a, 0x6a, 0x02, 0xd2, 0x5a,
  0x35, 0x01, 0x70, 0xa0, 0x07, 0x7b, 0x00, 0x07, 0x6a, 0x83, 0x07, 0x40,
  0xb0, 0x36, 0x00, 0x00, 0x80, 0x08, 0x00, 0x00, 0x00, 0x40, 0xaa, 0xca,
  0x0d, 0x2e, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0x08, 0x47, 0x28, 0xc6,
  0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x8a, 0x6f, 0x10, 0xf0, 0x53, 0xe5,
  0x06, 0x17, 0x36, 0xb6, 0xf6, 0x25, 0x85, 0x73, 0x84, 0x23, 0x14, 0x63,
  0xf3, 0x65, 0xc4, 0xf4, 0x14, 0x44, 0x05, 0x04, 0x94, 0x15, 0xf4, 0x13,
  0x64, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46, 0xf7, 0x26, 0x07, 0xd4, 0x44,
  0x02, 0x23, 0x03, 0x04, 0x94, 0x04, 0xa4, 0xb5, 0x41, 0xc8, 0xba, 0x4d,
  0x03, 0x00, 0xfc, 0xc1, 0xaa, 0x09, 0x80, 0x83, 0x3e, 0xf0, 0x03, 0x38,
  0x48, 0x19, 0x50, 0x00, 0x02, 0x95, 0x01, 0x00, 0x00, 0x44, 0x00, 0x00,
  0x00, 0x00, 0x3e, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x38,
  0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0xcc, 0x02, 0x7e, 0xaa, 0xdc, 0xe0,
  0xc2, 0xc6, 0xd6, 0xbe, 0xa4, 0x70, 0xbe, 0x8c, 0x98, 0x9e, 0x82, 0xa8,
  0x80, 0x80, 0xb2, 0x82, 0x9a, 0x92, 0x80, 0xb4, 0x36, 0x08, 0x49, 0xb7,
  0x69, 0x00, 0x00, 0x52, 0x58, 0x35, 0x01, 0x70, 0x20, 0x0a, 0xa3, 0x00,
  0x07, 0xec, 0x52, 0x0a, 0x40, 0xd0, 0x2e, 0x00, 0x00, 0x80, 0x08, 0x00,
  0x00, 0x00, 0x40, 0x86, 0xa8, 0x6c, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x8d, 0x76, 0x10, 0xf0, 0x43, 0x54, 0x36, 0xf6, 0x46,
  0x56, 0xe6, 0xf4, 0x26, 0xd7, 0x16, 0xc6, 0x06, 0x04, 0x94, 0x15, 0xf4,
  0x13, 0x64, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46, 0xf7, 0x26, 0x07, 0xd4,
  0x44, 0x02, 0x23, 0x03, 0x04, 0x64, 0xf5, 0x43, 0x62, 0x57, 0x36, 0x46,
  0xf7, 0x26, 0x07, 0xd4, 0x44, 0x02, 0x13, 0x03, 0x04, 0x04, 0xa4, 0x45,
  0xc3, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x86, 0x90, 0x5d, 0xd9, 0x18, 0xdd,
  0x9b, 0x1c, 0x8f, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0b, 0x88, 0x8c, 0xcf,
  0x22, 0x06, 0x68, 0x0e, 0xe1, 0x5d, 0x5e, 0x21, 0x01, 0x03, 0x30, 0x00,
  0x06, 0x60, 0x11, 0x03, 0x34, 0x8b, 0xf0, 0x2e, 0xaf, 0x90, 0x80, 0x01,
  0x18, 0x80, 0xc1, 0x00, 0x6c, 0x10, 0x56, 0x81, 0x15, 0x36, 0x08, 0xd1,
  0x19, 0x4c, 0x82, 0x00, 0x41, 0x15, 0x84, 0x77, 0x01, 0x00, 0x50, 0x00,
  0x03, 0x00, 0x68, 0x05, 0x00, 0x70, 0x05, 0x60, 0x11, 0x03, 0x58, 0xa9,
  0x20, 0xbc, 0x0b, 0xf0, 0x0a, 0x00, 0x00, 0x00, 0xc0, 0x06, 0x21, 0x83,
  0x85, 0x4d, 0x03, 0x00, 0xc4, 0xc2, 0xaa, 0x09, 0x80, 0x83, 0x53, 0x40,
  0x05, 0x38, 0xc0, 0x15, 0x59, 0x00, 0x82, 0x5c, 0x01, 0x00, 0x00, 0x44,
  0x00, 0x00, 0x00, 0x00, 0x66, 0x52, 0x54, 0x41, 0x4f, 0x5c, 0x53, 0x68,
  0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e,
  0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x69, 0x83, 0x06, 0x80, 0x16, 0x00, 0x56,
  0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x61, 0x79,
  0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x24, 0x85, 0x80,
  0x9f, 0xa3, 0x32, 0x3a, 0xa9, 0x30, 0x37, 0xb2, 0xb7, 0x36, 0xa9, 0xb0,
  0x3c, 0xa2, 0x34, 0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0x37, 0x20, 0xa0,
  0xac, 0xa0, 0x9f, 0x20, 0xab, 0x1f, 0x12, 0xbb, 0xb2, 0x31, 0xba, 0x37,
  0x39, 0xa0, 0x26, 0x12, 0x18, 0x19, 0x20, 0x20, 0xab, 0x1f, 0x12, 0xbb,
  0xb2, 0x31, 0xba, 0x37, 0x39, 0xa0, 0x24, 0x12, 0x98, 0x18, 0x20, 0x20,
  0xab, 0x18, 0x20, 0x98, 0x24, 0x20, 0xad, 0x0d, 0x45, 0xa6, 0x06, 0x99,
  0x1a, 0x74, 0x9b, 0x06, 0x00, 0xc0, 0x85, 0x55, 0x13, 0x50, 0x0b, 0xb6,
  0x70, 0x0b, 0xb5, 0x00, 0xe5, 0x02, 0x10, 0x44, 0x00, 0x00, 0x80, 0x08,
  0x00, 0x00, 0x00, 0x40, 0x02, 0x2d, 0x6c, 0x0e, 0x8d, 0x5d, 0xc0, 0x0f,
  0x5a, 0xd8, 0x1c, 0x1a, 0x10, 0x50, 0x56, 0x50, 0x93, 0xd5, 0x0f, 0x89,
  0x5d, 0xd9, 0x18, 0xdd, 0x9b, 0x1c, 0x50, 0x13, 0x09, 0x8c, 0x0c, 0x10,
  0x10, 0x90, 0xd6, 0x06, 0x21, 0xc9, 0x36, 0x0d, 0x00, 0xd0, 0x0b, 0xab,
  0x26, 0x00, 0x0e, 0x76, 0x81, 0x17, 0xe0, 0xc0, 0x75, 0x7c, 0x01, 0x08,
  0x5e, 0x07, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x00, 0x88, 0x06, 0x52,
  0x54, 0x41, 0x4f, 0x5c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f,
  0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
  0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x68, 0x6c,
  0x73, 0x6c, 0x69, 0x83, 0x06, 0x00, 0x1c, 0x00, 0x0e, 0x52, 0x4e, 0x47,
  0xc3, 0x0a, 0x00, 0x08, 0x07, 0x71, 0x80, 0xa8, 0x4c, 0x95, 0x95, 0x91,
  0x51, 0xa1, 0xc9, 0x95, 0x85, 0x91, 0x11, 0x0b, 0xf8, 0x99, 0x2a, 0x2b,
  0x23, 0xa3, 0x42, 0x93, 0x2b, 0x0b, 0x23, 0x03, 0x92, 0x72, 0x3a, 0x02,
  0x02, 0xca, 0x0a, 0x4a, 0x4a, 0x02, 0xd2, 0xda, 0x20, 0x74, 0xdd, 0xa6,
  0x01, 0x00, 0xcc, 0x61, 0xd5, 0x04, 0x8c, 0x03, 0x39, 0x94, 0x43, 0x38,
  0x4c, 0xe7, 0x00, 0x04, 0x14, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x00,
  0xd0, 0x90, 0x0a, 0x73, 0x23, 0x7b, 0x6b, 0x63, 0x16, 0xf0, 0x23, 0x15,
  0xe6, 0x46, 0xf6, 0xd6, 0x06, 0x24, 0xe5, 0x74, 0x04, 0x04, 0x94, 0x15,
  0x94, 0x14, 0x94, 0x14, 0x94, 0x94, 0x94, 0x04, 0xa4, 0xb5, 0x88, 0x01,
  0x20, 0x00, 0x00, 0x80, 0x0e, 0x00, 0x00, 0x00, 0x58, 0xc4, 0x00, 0x77,
  0x00, 0x00, 0x00, 0xb0, 0x0e, 0x00, 0x00, 0x00, 0xc0, 0x06, 0xa2, 0x63,
  0x87, 0xae, 0xdb, 0x34, 0x00, 0x40, 0x3b, 0xac, 0x9a, 0x80, 0x71, 0x48,
  0x07, 0x75, 0x08, 0x87, 0x3b, 0x70, 0x07, 0x20, 0xc0, 0x03, 0x00, 0x00,
  0x40, 0x04, 0x00, 0x00, 0x00, 0x20, 0x22, 0x15, 0xe6, 0x46, 0xf6, 0xd6,
  0x06, 0x13, 0xc3, 0x2c, 0xe0, 0x47, 0x2a, 0xcc, 0x8d, 0xec, 0xad, 0x0d,
  0x26, 0x06, 0x48, 0xca, 0xe9, 0x08, 0x08, 0x28, 0x2b, 0xa8, 0x29, 0x28,
  0x29, 0x28, 0x09, 0x48, 0x6b, 0x83, 0x90, 0xb0, 0xc3, 0xa6, 0x01, 0x00,
  0xe4, 0x61, 0xd5, 0x04, 0x8c, 0x03, 0x3c, 0xc4, 0x43, 0x38, 0xa8, 0xc1,
  0x3c, 0x00, 0xc1, 0x1a, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00,
  0xaf, 0x80, 0x1f, 0xa9, 0x30, 0x37, 0xb2, 0xb7, 0x36, 0x20, 0x29, 0xa7,
  0x23, 0x20, 0xa0, 0xac, 0xa0, 0xa4, 0xa0, 0xa4, 0xa0, 0x24, 0x20, 0xad,
  0x0d, 0x42, 0xc7, 0x0e, 0x9b, 0x06, 0x00, 0xb0, 0x87, 0x55, 0x13, 0x30,
  0x0e, 0xe9, 0x50, 0x0f, 0xe1, 0x00, 0x06, 0xf7, 0x00, 0x04, 0x61, 0x00,
  0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x8a, 0xdc, 0xc6, 0xde,
  0xc8, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0, 0xe8,
  0xd0, 0xb8, 0x06, 0x01, 0x3f, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e,
  0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x40, 0x40,
  0x59, 0x41, 0x49, 0x56, 0x3f, 0x24, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
  0x40, 0x4d, 0x24, 0x30, 0x32, 0x40, 0x40, 0x4d, 0x40, 0x5a, 0x1b, 0x86,
  0x2e, 0x4b, 0x36, 0x0d, 0x00, 0xb0, 0x0f, 0xab, 0x26, 0x00, 0x0e, 0xf2,
  0x41, 0x1f, 0xe0, 0x20, 0x6e, 0xf8, 0x01, 0x08, 0xe4, 0x06, 0x00, 0x00,
  0x10, 0x01, 0x00, 0x00, 0x00, 0x88, 0x15, 0xb9, 0x8d, 0xbd, 0x91, 0x95,
  0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0x11, 0x95, 0xc1, 0xd1, 0xa1, 0x7d,
  0x39, 0xc5, 0xd8, 0x10, 0xc5, 0xd8, 0x50, 0x0e, 0x02, 0x7e, 0x8a, 0xdc,
  0xc6, 0xde, 0xc8, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca,
  0xe0, 0xe8, 0xd0, 0xbe, 0x9c, 0x62, 0x6c, 0x88, 0x62, 0x6c, 0x80, 0x80,
  0xb2, 0x82, 0x92, 0xac, 0x7e, 0x48, 0xec, 0xca, 0xc6, 0xe8, 0xde, 0xe4,
  0x80, 0x9a, 0x48, 0x60, 0x64, 0x80, 0x80, 0x9a, 0x80, 0xb4, 0x56, 0x4d,
  0x00, 0x1c, 0xf8, 0xc3, 0x3f, 0xc0, 0x81, 0xd8, 0xf0, 0x03, 0x10, 0x8c,
  0x0d, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x00, 0x90, 0x29, 0x72, 0x1b,
  0x7b, 0x23, 0x2b, 0x73, 0x7a, 0x93, 0x6b, 0x0b, 0x63, 0xa3, 0x1d, 0x04,
  0xfc, 0x14, 0xb9, 0x8d, 0xbd, 0x91, 0x95, 0x39, 0xbd, 0xc9, 0xb5, 0x85,
  0xb1, 0x01, 0x01, 0x65, 0x05, 0xfd, 0x04, 0x59, 0xfd, 0x90, 0xd8, 0x95,
  0x8d, 0xd1, 0xbd, 0xc9, 0x01, 0x35, 0x91, 0xc0, 0xc4, 0x00, 0x01, 0x59,
  0xfd, 0x90, 0xd8, 0x95, 0x8d, 0xd1, 0xbd, 0xc9, 0x01, 0x35, 0x91, 0xc0,
  0xc8, 0x00, 0x01, 0x01, 0x69, 0x6d, 0x10, 0x60, 0x21, 0xdb, 0x34, 0x00,
  0xc0, 0x48, 0xac, 0x9a, 0x00, 0x38, 0x08, 0x09, 0x91, 0x80, 0x03, 0x58,
  0x21, 0x09, 0x20, 0x88, 0x15, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00,
  0xe0, 0xf1, 0x34, 0x46, 0x77, 0x25, 0x17, 0x06, 0x47, 0x32, 0x08, 0xf8,
  0x79, 0x1a, 0xa3, 0xbb, 0x92, 0x0b, 0x83, 0x03, 0x02, 0xca, 0x0a, 0xfa,
  0x09, 0xb2, 0xfa, 0x21, 0xb1, 0x2b, 0x1b, 0xa3, 0x7b, 0x93, 0x03, 0x6a,
  0x22, 0x81, 0x89, 0x01, 0x02, 0xb2, 0x8a, 0x01, 0x02, 0xd2, 0xda, 0x20,
  0xc0, 0x02, 0x2c, 0x6c, 0x1a, 0x00, 0x00, 0x25, 0x56, 0x4d, 0x00, 0x1c,
  0x98, 0xc4, 0x49, 0xc0, 0x81, 0xaa, 0xa4, 0x04, 0x10, 0xac, 0x0a, 0x00,
  0x00, 0x20, 0x02, 0x00, 0x00, 0x00, 0x50, 0x82, 0x0a, 0x1b, 0x5b, 0xfb,
  0x92, 0xc2, 0x39, 0xc2, 0x11, 0x8a, 0xb1, 0xf9, 0x32, 0x62, 0x7a, 0x0a,
  0xa2, 0xe2, 0x1a, 0x04, 0xfc, 0x40, 0x85, 0x8d, 0xad, 0x7d, 0x49, 0xe1,
  0x1c, 0xe1, 0x08, 0xc5, 0xd8, 0x7c, 0x19, 0x31, 0x3d, 0x05, 0x51, 0x01,
  0x01, 0x65, 0x05, 0x25, 0x59, 0xfd, 0x90, 0xd8, 0x95, 0x8d, 0xd1, 0xbd,
  0xc9, 0x01, 0x35, 0x91, 0xc0, 0xc8, 0x00, 0x01, 0x01, 0x69, 0x6d, 0x10,
  0xba, 0x6c, 0xd3, 0x00, 0x00, 0x2d, 0xb1, 0x6a, 0x02, 0xe0, 0x60, 0x25,
  0x58, 0x02, 0x0e, 0x42, 0xc6, 0x25, 0x80, 0x40, 0x64, 0x00, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x80, 0x0d, 0x54, 0xd8, 0xd8, 0xda, 0x97, 0x14,
  0xce, 0x97, 0x11, 0xd3, 0x53, 0x10, 0x15, 0xaf, 0x80, 0x1f, 0xa8, 0xb0,
  0xb1, 0xb5, 0x2f, 0x29, 0x9c, 0x2f, 0x23, 0xa6, 0xa7, 0x20, 0x2a, 0x20,
  0xa0, 0xac, 0xa0, 0xa4, 0x26, 0x20, 0xad, 0x0d, 0x42, 0x97, 0x6c, 0x1a,
  0x00, 0x40, 0x26, 0x56, 0x4d, 0x00, 0x1c, 0xc0, 0x44, 0x4c, 0xc0, 0xc1,
  0xb9, 0xcc, 0x04, 0x10, 0xa0, 0x0b, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00,
  0x00, 0x6c, 0x90, 0xdc, 0x20, 0x0f, 0xf8, 0x20, 0x14, 0x4c, 0x61, 0x16,
  0x74, 0xe1, 0x17, 0xd0, 0xe1, 0x1d, 0xe8, 0x01, 0x1f, 0xfa, 0x01, 0x24,
  0x4a, 0x42, 0x25, 0x5e, 0x82, 0x26, 0x98, 0x13, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x75, 0x73, 0x65, 0x72, 0x5c, 0x44, 0x65,
  0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x2d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x2d, 0x53,
  0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5c, 0x53, 0x61, 0x6d, 0x70, 0x6c,
  0x65, 0x73, 0x5c, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5c, 0x44,
  0x33, 0x44, 0x31, 0x32, 0x52, 0x61, 0x79, 0x74, 0x72, 0x61, 0x63, 0x69,
  0x6e, 0x67, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x44, 0x33, 0x44, 0x31, 0x32,
  0x52, 0x61, 0x79, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65,
  0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x69, 0x73,
  0x65, 0x64, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63,
  0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5c, 0x52, 0x61, 0x79, 0x74, 0x72,
  0x61, 0x63, 0x69, 0x6e, 0x67, 0x48, 0x6c, 0x73, 0x6c, 0x43, 0x6f, 0x6d,
  0x70, 0x61, 0x74, 0x2e, 0x68, 0x83, 0x06, 0xc0, 0x26, 0x00, 0x4a, 0x54,
  0x72, 0x61, 0x63, 0x65, 0x52, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
  0x65, 0x74, 0x65, 0x72, 0x73, 0xc3, 0x0a, 0x00, 0xb8, 0x09, 0x9c, 0xc0,
  0x1f, 0x32, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61,
  0x73, 0x6b, 0x2c, 0x03, 0x97, 0x97, 0xa9, 0xb0, 0x36, 0x38, 0xb6, 0xb2,
  0xa1, 0x37, 0xb9, 0xb2, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0x39,
  0x2e, 0x24, 0xb6, 0x39, 0xb6, 0xa1, 0xb7, 0x36, 0xb8, 0x30, 0x3a, 0x17,
  0x34, 0xb6, 0x39, 0xb6, 0xb4, 0x41, 0x03, 0xb0, 0x13, 0x00, 0x89, 0xaa,
  0x24, 0x27, 0xaa, 0x45, 0x0c, 0x60, 0xf5, 0x04, 0x4f, 0x50, 0x40, 0x07,
  0x00, 0x00, 0x00, 0x2c, 0x62, 0x00, 0x33, 0x00, 0x00, 0x00, 0xf0, 0x09,
  0x00, 0x00, 0x00, 0x80, 0x66, 0x10, 0xf0, 0x93, 0xe4, 0x36, 0x47, 0x17,
  0xe6, 0x36, 0x56, 0xd6, 0x14, 0x36, 0xb7, 0x06, 0x44, 0x25, 0x17, 0x36,
  0x56, 0x26, 0x15, 0x96, 0x07, 0x15, 0x26, 0x17, 0xd6, 0x56, 0x46, 0x57,
  0x26, 0x37, 0x07, 0x04, 0x34, 0x93, 0x24, 0xb4, 0x6d, 0x01, 0x72, 0x42,
  0x27, 0xc0, 0xe2, 0x26, 0xf4, 0xe7, 0x27, 0x82, 0x00, 0x00, 0x88, 0x20,
  0xa5, 0xd1, 0x1d, 0xc9, 0xbd, 0xd5, 0xc1, 0x0d, 0x2b, 0x80, 0x9c, 0xb8,
  0x09, 0xb1, 0xd8, 0x1f, 0x1a, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x6b,
  0x06, 0x40, 0x00, 0x36, 0x04, 0x65, 0x31, 0x09, 0x02, 0x02, 0x00, 0x00,
  0x80, 0x9f, 0x00, 0x05, 0x30, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0xe0,
  0x1a, 0x04, 0xfc, 0x3c, 0x99, 0x99, 0xcd, 0x95, 0xd1, 0x01, 0x21, 0xa5,
  0xd1, 0x1d, 0xc9, 0xbd, 0xd5, 0xc1, 0x01, 0x51, 0xc9, 0x85, 0x8d, 0x95,
  0x49, 0x85, 0xe5, 0x41, 0x85, 0xc9, 0x85, 0xb5, 0x95, 0xd1, 0x95, 0xc9,
  0xcd, 0x01, 0x01, 0xcd, 0x44, 0x09, 0x25, 0x09, 0x6d, 0x5b, 0x80, 0xb1,
  0x20, 0x0b, 0xb4, 0xb8, 0x09, 0xfe, 0x39, 0x8b, 0x20, 0x00, 0x00, 0x3a,
  0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69,
  0x64, 0x65, 0x8c, 0x83, 0x80, 0x9f, 0xa3, 0xb2, 0xb7, 0xb6, 0x32, 0x3a,
  0xb9, 0xbc, 0x29, 0x3a, 0xb9, 0x34, 0xb2, 0x32, 0x20, 0xa4, 0x34, 0xba,
  0x23, 0xb9, 0xb7, 0x3a, 0x38, 0x20, 0x2a, 0xb9, 0xb0, 0xb1, 0x32, 0xa9,
  0xb0, 0x3c, 0xa8, 0x30, 0xb9, 0xb0, 0xb6, 0x32, 0xba, 0x32, 0xb9, 0x39,
  0x20, 0xa0, 0x99, 0x24, 0xa1, 0x6d, 0x0b, 0x30, 0x16, 0x6a, 0xb1, 0x16,
  0x37, 0x11, 0x42, 0x3f, 0x11, 0x04, 0x00, 0x40, 0xa5, 0x29, 0x6d, 0x6e,
  0x6e, 0x0a, 0x2d, 0x8c, 0xac, 0x4c, 0x6e, 0x58, 0x01, 0xe4, 0xc4, 0x4d,
  0xb4, 0xc5, 0x08, 0xb1, 0x0d, 0x02, 0x7e, 0x9e, 0xcc, 0xcc, 0xe6, 0xca,
  0xe8, 0x80, 0x9a, 0xd2, 0xe6, 0xe6, 0xa6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4,
  0x80, 0xa8, 0xe4, 0xc2, 0xc6, 0xca, 0xa4, 0xc2, 0xf2, 0xa0, 0xc2, 0xe4,
  0xc2, 0xda, 0xca, 0xe8, 0xca, 0xe4, 0xe6, 0x80, 0x80, 0x66, 0xa2, 0x84,
  0x92, 0x84, 0xb6, 0x2d, 0x80, 0x5b, 0x90, 0xc5, 0x5b, 0xdc, 0x04, 0x09,
  0x9d, 0x45, 0x10, 0x00, 0x00, 0x2d, 0x29, 0xaa, 0xa0, 0x27, 0x2a, 0xb9,
  0xb0, 0xb1, 0x32, 0xa9, 0xb0, 0x3c, 0xa8, 0x30, 0xb9, 0xb0, 0xb6, 0x32,
  0xba, 0x32, 0xb9, 0xb9, 0x61, 0x05, 0x00, 0xdc, 0x44, 0x5c, 0xb0, 0x10,
  0xd5, 0x20, 0xe0, 0x27, 0xc9, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0xac,
  0x29, 0x6c, 0x6e, 0x0d, 0x48, 0x8a, 0x2a, 0xe8, 0x89, 0x4a, 0x2e, 0x6c,
  0xac, 0x4c, 0x2a, 0x2c, 0x0f, 0x2a, 0x4c, 0x2e, 0xac, 0xad, 0x8c, 0xae,
  0x4c, 0x6e, 0x0e, 0x08, 0x68, 0x26, 0x49, 0x68, 0xdb, 0x02, 0xc8, 0x85,
  0x4e, 0xcc, 0xc5, 0x4d, 0xb8, 0xd0, 0x4f, 0x04, 0x01, 0x00, 0x0c, 0x2b,
  0x00, 0xb9, 0xb8, 0x09, 0xb1, 0x78, 0xa1, 0x35, 0x03, 0x10, 0x00, 0x1b,
  0x02, 0xbb, 0x98, 0x04, 0x01, 0x01, 0x00, 0x00, 0xc0, 0x4f, 0x80, 0x01,
  0x18, 0x00, 0xc0, 0x5d, 0x00, 0x00, 0x00, 0xf0, 0x0d, 0x02, 0x7e, 0x9e,
  0xcc, 0xcc, 0xe6, 0xca, 0xe8, 0x80, 0x90, 0xd2, 0xe8, 0x8e, 0xe4, 0xde,
  0xea, 0xe0, 0x80, 0xa4, 0xa8, 0x82, 0x9e, 0xa8, 0xe4, 0xc2, 0xc6, 0xca,
  0xa4, 0xc2, 0xf2, 0xa0, 0xc2, 0xe4, 0xc2, 0xda, 0xca, 0xe8, 0xca, 0xe4,
  0xe6, 0x80, 0x80, 0x66, 0xa2, 0x84, 0x92, 0x84, 0xb6, 0x2d, 0x40, 0x5d,
  0x90, 0x45, 0x5e, 0xdc, 0x04, 0x0c, 0xe1, 0x45, 0x10, 0x00, 0x00, 0xeb,
  0x20, 0xe0, 0xe7, 0xa8, 0xec, 0xad, 0xad, 0x8c, 0x4e, 0x2e, 0x6f, 0x8a,
  0x4e, 0x2e, 0x8d, 0xac, 0x0c, 0x08, 0x29, 0x8d, 0xee, 0x48, 0xee, 0xad,
  0x0e, 0x0e, 0x48, 0x8a, 0x2a, 0xe8, 0x89, 0x4a, 0x2e, 0x6c, 0xac, 0x4c,
  0x2a, 0x2c, 0x0f, 0x2a, 0x4c, 0x2e, 0xac, 0xad, 0x8c, 0xae, 0x4c, 0x6e,
  0x0e, 0x08, 0x68, 0x26, 0x49, 0x68, 0xdb, 0x02, 0xd4, 0x85, 0x5a, 0xec,
  0xc5, 0x4d, 0xd8, 0xd0, 0x4f, 0x04, 0x01, 0x00, 0x0c, 0x2b, 0x00, 0xb9,
  0xb8, 0x89, 0xb6, 0xc0, 0x21, 0xc6, 0x41, 0xc0, 0xcf, 0x93, 0x99, 0xd9,
  0x5c, 0x19, 0x1d, 0x50, 0x53, 0xda, 0xdc, 0xdc, 0x14, 0x5a, 0x18, 0x59,
  0x99, 0x1c, 0x90, 0x14, 0x55, 0xd0, 0x13, 0x95, 0x5c, 0xd8, 0x58, 0x99,
  0x54, 0x58, 0x1e, 0x54, 0x98, 0x5c, 0x58, 0x5b, 0x19, 0x5d, 0x99, 0xdc,
  0x1c, 0x10, 0xd0, 0x4c, 0x94, 0x50, 0x92, 0xd0, 0xb6, 0x05, 0xe8, 0x0b,
  0xb2, 0xf0, 0x8b, 0x9b, 0xc8, 0x21, 0xbc, 0x08, 0x02, 0x00, 0xe0, 0x23,
  0x14, 0x36, 0xb6, 0x76, 0x26, 0xf7, 0x56, 0xe7, 0x46, 0x36, 0xf4, 0xc6,
  0xf6, 0x26, 0x47, 0x04, 0xab, 0xc9, 0x88, 0xe9, 0x29, 0x88, 0x8a, 0x86,
  0x86, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0d, 0x21, 0xbb, 0xb2, 0x31, 0xba,
  0x37, 0x39, 0x1e, 0x33, 0xb6, 0xb7, 0x30, 0x3a, 0x16, 0x10, 0x1a, 0x9f,
  0x45, 0x0c, 0xd0, 0x1c, 0x02, 0x18, 0xb5, 0x46, 0x02, 0x06, 0x60, 0x00,
  0x0c, 0xc0, 0x22, 0x06, 0x68, 0x16, 0x01, 0x8c, 0x5a, 0x23, 0x01, 0x03,
  0x30, 0x00, 0x83, 0x01, 0x58, 0xc4, 0x00, 0x4d, 0x23, 0x80, 0x51, 0x6b,
  0x24, 0x60, 0x00, 0x06, 0xa0, 0x30, 0x00, 0x0c, 0xee, 0x16, 0x31, 0x40,
  0x73, 0x1a, 0x02, 0x18, 0xb5, 0x46, 0x02, 0x06, 0x60, 0x00, 0x0e, 0x03,
  0xb0, 0x81, 0x20, 0x8d, 0xd2, 0x30, 0x0d, 0xd4, 0x98, 0x20, 0x00, 0xd1,
  0xb4, 0x02, 0x80, 0x03, 0x89, 0x52, 0x8d, 0x0d, 0x42, 0xb4, 0x1a, 0x93,
  0x20, 0x40, 0x18, 0x0d, 0x01, 0x8c, 0x00, 0x00, 0x24, 0xc0, 0x00, 0x00,
  0x52, 0x03, 0x00, 0x58, 0x03, 0x58, 0xc4, 0x00, 0x96, 0x68, 0x08, 0x60,
  0x04, 0xb4, 0x06, 0x00, 0x00, 0x00, 0xb0, 0x88, 0x01, 0xac, 0xd0, 0xe0,
  0x89, 0x08, 0x70, 0x0d, 0x00, 0x00, 0x00, 0x60, 0x11, 0x03, 0x98, 0x01,
  0x00, 0x00, 0xc0, 0x6b, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x16, 0xa0, 0x4d,
  0x40, 0x03, 0xb8, 0x09, 0x30, 0x82, 0x8d, 0x20, 0x00, 0x00, 0xea, 0xc4,
  0x90, 0x0e, 0x57, 0xd5, 0x5c, 0x99, 0xdc, 0x1c, 0x57, 0xdd, 0x5c, 0x99,
  0x1c, 0x17, 0x51, 0xd9, 0xdc, 0x1a, 0xdd, 0x1b, 0x1c, 0x17, 0x51, 0x9a,
  0x5c, 0xd9, 0x18, 0x1d, 0x56, 0xcb, 0x91, 0x5c, 0x18, 0x1c, 0x5a, 0xda,
  0xd8, 0x5c, 0xcb, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x1c, 0xd7, 0x54,
  0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x1c, 0x17, 0x51, 0xd9, 0xdc, 0x1a, 0xdd,
  0x1b, 0x1c, 0x17, 0xd1, 0x0c, 0x51, 0x8c, 0x8c, 0x54, 0x58, 0x1e, 0x9d,
  0x5c, 0xd8, 0x58, 0x9a, 0xdb, 0x19, 0xd7, 0x9c, 0xdc, 0x18, 0x17, 0xd1,
  0x0c, 0x51, 0x8c, 0x8c, 0x54, 0x58, 0x1e, 0x9d, 0x5c, 0xd8, 0x58, 0x9a,
  0xdb, 0x99, 0x54, 0x59, 0x18, 0x1b, 0x55, 0x5a, 0x5b, 0x19, 0x51, 0x99,
  0xdb, 0x5b, 0xda, 0x5c, 0x19, 0x59, 0x50, 0x9b, 0x58, 0x5a, 0x99, 0x1b,
  0xdd, 0xd3, 0xd8, 0x18, 0x5b, 0xdd, 0x5c, 0xda, 0x9b, 0x1b, 0x97, 0x14,
  0x55, 0xd0, 0xd3, 0xcb, 0x14, 0x5a, 0x18, 0x59, 0x99, 0xdc, 0xdc, 0x8b,
  0x14, 0x55, 0xd0, 0x93, 0x0b, 0x1a, 0xdb, 0x1c, 0x5b, 0xda, 0xa0, 0x01,
  0x90, 0x0d, 0x80, 0x84, 0x14, 0x55, 0xd0, 0xd3, 0xb0, 0x02, 0x00, 0x66,
  0x83, 0x36, 0x1c, 0x52, 0x52, 0x61, 0x79, 0x48, 0x69, 0x74, 0x44, 0x69,
  0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x6e, 0x4d, 0x69, 0x73, 0x73,
  0x8b, 0x18, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x80,
  0x60, 0x10, 0xf0, 0x23, 0x15, 0x96, 0x87, 0x94, 0x46, 0x47, 0x94, 0x36,
  0x47, 0x17, 0xe6, 0x36, 0x56, 0xf6, 0xe4, 0xd6, 0x94, 0x36, 0x37, 0x07,
  0x24, 0x45, 0x15, 0xf4, 0x04, 0x04, 0x34, 0xd3, 0x24, 0xb4, 0x6d, 0x01,
  0x6a, 0xc3, 0x36, 0x70, 0x63, 0x36, 0x9e, 0xdb, 0x08, 0x02, 0x00, 0x60,
  0x96, 0xe4, 0x66, 0x17, 0xc6, 0x96, 0x46, 0x16, 0xf4, 0x34, 0xf4, 0x56,
  0x66, 0x66, 0x96, 0x36, 0x96, 0x56, 0xe6, 0x46, 0x67, 0x15, 0xc6, 0x56,
  0x57, 0xc6, 0x32, 0x08, 0xf8, 0x49, 0x72, 0xb3, 0x0b, 0x63, 0x4b, 0x23,
  0x0b, 0x7a, 0x1a, 0x7a, 0x2b, 0x33, 0x33, 0x4b, 0x1b, 0x4b, 0x2b, 0x73,
  0xa3, 0xb3, 0x0a, 0x63, 0xab, 0x2b, 0x03, 0x92, 0xa2, 0x0a, 0x7a, 0x02,
  0x02, 0x9a, 0x69, 0x12, 0xda, 0xb6, 0x00, 0xb5, 0xa1, 0x1b, 0xbb, 0x31,
  0x1b, 0xd0, 0x6d, 0x04, 0x01, 0x00, 0x10, 0x0c, 0xce, 0xbe, 0xe8, 0xca,
  0xf0, 0xa4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0xa6, 0xea,
  0xe4, 0xcc, 0xc2, 0xc6, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88,
  0xca, 0xe0, 0xe8, 0xd0, 0x78, 0x51, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95,
  0xc9, 0x10, 0xf1, 0xd4, 0xb9, 0xcd, 0xa5, 0x9d, 0xb9, 0x95, 0x91, 0x81,
  0xa4, 0xb9, 0xd1, 0xf9, 0x6c, 0x08, 0xca, 0x60, 0x12, 0x04, 0x08, 0xbe,
  0x21, 0x60, 0x00, 0x00, 0x0a, 0x60, 0x00, 0x00, 0x04, 0x00, 0xfc, 0x06,
  0x40, 0x3b, 0x08, 0xf8, 0x39, 0xfb, 0xa2, 0x2b, 0xc3, 0x93, 0x0a, 0xcb,
  0x7b, 0x92, 0x4b, 0x3b, 0x4b, 0x73, 0x9b, 0xaa, 0x93, 0x33, 0x0b, 0x1b,
  0x2b, 0x73, 0x7a, 0x93, 0x6b, 0x0b, 0x63, 0x23, 0x2a, 0x83, 0xa3, 0x43,
  0x03, 0x02, 0x9a, 0xb1, 0xfa, 0x21, 0xa1, 0x2a, 0xc3, 0xa3, 0xab, 0x93,
  0x2b, 0x93, 0x21, 0x02, 0x4a, 0x02, 0x02, 0x0a, 0xda, 0xb6, 0x00, 0x6d,
  0xd2, 0x1b, 0xe1, 0x21, 0x60, 0xe0, 0x01, 0x04, 0x00, 0x40, 0xeb, 0xec,
  0x8b, 0xae, 0x0c, 0x4f, 0x2a, 0x2c, 0xef, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x0d, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x1c, 0x55, 0x19,
  0x1e, 0x5d, 0x9d, 0x5c, 0x99, 0x0c, 0x11, 0x8f, 0x5d, 0xd9, 0x18, 0xdd,
  0x9b, 0x1c, 0x8f, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0b, 0x08, 0x8d, 0x0f,
  0x88, 0xcf, 0xb2, 0x01, 0x80, 0x5a, 0x63, 0x43, 0x50, 0x1e, 0x93, 0x20,
  0x40, 0x20, 0x0f, 0x21, 0x03, 0x00, 0xb0, 0x00, 0x03, 0x00, 0x20, 0x00,
  0xc0, 0x3c, 0x00, 0xee, 0x41, 0xc0, 0xcf, 0xd9, 0x17, 0x5d, 0x19, 0x9e,
  0x54, 0x58, 0xde, 0x93, 0x5c, 0xda, 0x59, 0x9a, 0x1b, 0xd4, 0xdb, 0x5c,
  0x1a, 0x5d, 0xda, 0x9b, 0x1b, 0x10, 0xd0, 0x8c, 0xd5, 0x0f, 0x09, 0x55,
  0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x99, 0x0c, 0x11, 0x90, 0xd5, 0x0f, 0x89,
  0x5d, 0xd9, 0x18, 0xdd, 0x9b, 0x1c, 0x50, 0x13, 0x09, 0xcc, 0x0c, 0x10,
  0x10, 0x10, 0x50, 0xd0, 0xb6, 0x05, 0x68, 0x93, 0xf1, 0x40, 0x0f, 0x21,
  0x3b, 0x0f, 0x20, 0x00, 0x00, 0x72, 0x67, 0x5f, 0x72, 0x74, 0x52, 0x61,
  0x79, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
  0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0xcc, 0xa4,
  0xae, 0xa8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0x64, 0x88, 0x78, 0xea,
  0xdc, 0xe6, 0xd2, 0xce, 0xdc, 0xca, 0xc8, 0x40, 0xd2, 0xdc, 0xe8, 0x7c,
  0x26, 0x41, 0x80, 0xb0, 0x1e, 0xc2, 0x06, 0x00, 0x60, 0x00, 0x06, 0x00,
  0x40, 0x00, 0xc0, 0x6f, 0x00, 0xa4, 0x83, 0x80, 0x9f, 0xb3, 0x2f, 0x39,
  0x3a, 0xa9, 0xb0, 0xbc, 0x39, 0xa2, 0x34, 0xb9, 0xb2, 0x31, 0xba, 0xb4,
  0x37, 0xb7, 0x27, 0xb9, 0xb4, 0xb3, 0x34, 0x37, 0xa2, 0x32, 0x38, 0x3a,
  0x34, 0x20, 0xa0, 0x19, 0xab, 0x1f, 0x12, 0xa9, 0x2b, 0xaa, 0x32, 0x3c,
  0xba, 0x3a, 0xb9, 0x32, 0x19, 0x22, 0xa0, 0x24, 0x20, 0xa0, 0xa0, 0x6d,
  0x0b, 0xd0, 0x26, 0xea, 0xd1, 0x1e, 0xc2, 0xc6, 0x1e, 0x40, 0x00, 0x00,
  0x14, 0xc6, 0xc4, 0x48, 0x06, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x3c, 0x52, 0x61, 0x79, 0x47,
  0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75,
  0x66, 0x66, 0x65, 0x72, 0x3e, 0x0c, 0xa8, 0x48, 0x49, 0x85, 0xe5, 0x1d,
  0x95, 0xb9, 0x0d, 0xbd, 0xb9, 0xcd, 0xd1, 0x85, 0xb9, 0xd1, 0x09, 0xd5,
  0x99, 0x99, 0x95, 0xc9, 0x51, 0xa1, 0x2b, 0xc3, 0xa3, 0xab, 0x93, 0x2b,
  0x23, 0x4a, 0x6b, 0xe3, 0x81, 0xd5, 0x54, 0x95, 0xe4, 0x44, 0x25, 0xb3,
  0x88, 0x01, 0x2c, 0xfa, 0xe0, 0x89, 0x0a, 0x50, 0x03, 0x00, 0x00, 0x00,
  0x60, 0x11, 0x03, 0x34, 0xf3, 0x71, 0x13, 0x64, 0x61, 0x22, 0xf5, 0x01,
  0x0a, 0x60, 0x00, 0x00, 0x00, 0x37, 0xb2, 0xb7, 0x21, 0xb4, 0xb2, 0xb1,
  0xb5, 0x32, 0x39, 0xb1, 0xb7, 0x30, 0x39, 0x32, 0xa9, 0xb0, 0xbc, 0xa3,
  0x32, 0xb7, 0x32, 0xb9, 0x30, 0xba, 0xb4, 0x37, 0x37, 0x12, 0x42, 0x4f,
  0x4f, 0x4c, 0x8b, 0x18, 0xc0, 0xc2, 0x0f, 0x9e, 0xc0, 0x00, 0x0a, 0x00,
  0x00, 0x00, 0x58, 0xc4, 0x00, 0xcd, 0x7d, 0xdc, 0x44, 0x59, 0x98, 0x48,
  0x7e, 0x80, 0x01, 0x18, 0x80, 0x02, 0x00, 0xb0, 0x0c, 0xc6, 0xd0, 0xca,
  0xc6, 0xd6, 0xca, 0xe4, 0xc4, 0xde, 0xc2, 0xe4, 0xc8, 0x8e, 0xca, 0xdc,
  0xca, 0xe4, 0xc2, 0xe8, 0xca, 0xa4, 0xc2, 0xf2, 0xe6, 0x8c, 0xde, 0xe4,
  0x8a, 0xec, 0xca, 0xdc, 0xa0, 0xd2, 0xf0, 0xca, 0xd8, 0xe6, 0x16, 0x31,
  0x40, 0xb3, 0x1f, 0x37, 0x61, 0x16, 0x26, 0x92, 0x1f, 0x60, 0x00, 0x06,
  0xe0, 0x00, 0x00, 0x24, 0xe6, 0xca, 0xca, 0xc8, 0x16, 0x31, 0x40, 0xd3,
  0x1f, 0x37, 0x81, 0x16, 0x26, 0xe2, 0x13, 0x60, 0x00, 0x06, 0x20, 0x01,
  0x00, 0x84, 0xdc, 0xea, 0xda, 0xa6, 0xc2, 0xda, 0xe0, 0xd8, 0xca, 0xe6,
  0xa0, 0xca, 0xe4, 0xa6, 0xca, 0xe8, 0x16, 0x31, 0x40, 0xf3, 0x1f, 0x37,
  0x91, 0x16, 0x26, 0xe2, 0x13, 0x60, 0x00, 0x06, 0x60, 0x01, 0x00, 0x6c,
  0xdc, 0xea, 0xda, 0xa6, 0xc2, 0xda, 0xe0, 0xd8, 0xca, 0xa6, 0xca, 0xe8,
  0xe6, 0x16, 0x31, 0x40, 0x13, 0x22, 0x37, 0xa1, 0x16, 0x26, 0xe2, 0x13,
  0x60, 0x00, 0x06, 0xa0, 0x01, 0x00, 0xac, 0xdc, 0xea, 0xda, 0xa0, 0xd2,
  0xf0, 0xca, 0xd8, 0xe6, 0xa0, 0xca, 0xe4, 0x88, 0xd2, 0xda, 0xa0, 0xca,
  0xe4, 0xa6, 0xca, 0xe8, 0x16, 0x31, 0x40, 0x33, 0x22, 0x37, 0xb1, 0x16,
  0x26, 0xe2, 0x13, 0x60, 0x00, 0x06, 0xe0, 0x01, 0x00, 0x1b, 0x0e, 0xfb,
  0xd0, 0x0f, 0xfe, 0xf0, 0x0f, 0x10, 0x11, 0x11, 0x12, 0x99, 0x04, 0x01,
  0x93, 0x7c, 0xdc, 0x84, 0x58, 0x00, 0x00, 0x88, 0x80, 0x01, 0x00, 0x94,
  0x08, 0x00, 0x00, 0xc0, 0xb2, 0x01, 0x88, 0x0f, 0x13, 0xd9, 0x10, 0x9c,
  0xc8, 0x24, 0x08, 0x98, 0xe0, 0x43, 0xe8, 0x00, 0x00, 0x0c, 0xc0, 0x00,
  0x00, 0x08, 0x00, 0x40, 0x11, 0x80, 0x73, 0x10, 0xf0, 0x33, 0x26, 0x06,
  0x04, 0x34, 0x53, 0xf5, 0x43, 0x32, 0xf4, 0xe6, 0x36, 0x47, 0x17, 0xe6,
  0x46, 0x27, 0x54, 0x67, 0x66, 0x56, 0x26, 0x07, 0x54, 0x25, 0x15, 0x96,
  0x77, 0x54, 0xe6, 0x36, 0xf4, 0xe6, 0x36, 0x47, 0x17, 0xe6, 0x46, 0x27,
  0x54, 0x67, 0x66, 0x56, 0x26, 0x07, 0x04, 0x04, 0x04, 0x14, 0xb4, 0x6d,
  0x01, 0xda, 0xe4, 0x3d, 0x54, 0x44, 0xe8, 0x52, 0x04, 0x08, 0x00, 0x80,
  0xcc, 0xd9, 0xd7, 0x5c, 0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x54, 0x19, 0xdd,
  0x1c, 0xd7, 0x60, 0x8a, 0x4e, 0xae, 0x6e, 0x8c, 0xae, 0x4e, 0xae, 0x8c,
  0x4c, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x8e, 0x27, 0x88, 0x2d, 0xed, 0xcc,
  0xad, 0x8c, 0x0c, 0xa9, 0xac, 0x2d, 0x6d, 0x0e, 0x0e, 0xad, 0x4c, 0xae,
  0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x86, 0xc8, 0x87, 0x59, 0x10,
  0x5b, 0xda, 0x99, 0x5b, 0x19, 0x19, 0x52, 0x59, 0x5b, 0xda, 0x1c, 0x1c,
  0x5a, 0x99, 0x5c, 0xd9, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x0c, 0x11,
  0x0b, 0xbb, 0x30, 0xb6, 0xba, 0x32, 0x22, 0x58, 0x4d, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x33, 0x8b, 0x18, 0xc0, 0x82, 0x11, 0x9e, 0x80, 0x80, 0x0c,
  0x00, 0x00, 0x00, 0x58, 0xc4, 0x00, 0xcd, 0x8b, 0xdc, 0x44, 0xed, 0xd8,
  0x48, 0x8c, 0x80, 0x03, 0x18, 0x00, 0x00, 0xc0, 0x03, 0x2e, 0x8c, 0x8c,
  0x2c, 0xcd, 0xed, 0x6c, 0x11, 0x03, 0x34, 0x33, 0x72, 0x13, 0xb6, 0x63,
  0x23, 0x3e, 0x01, 0x06, 0x60, 0x00, 0x0e, 0x00, 0xb0, 0x41, 0x90, 0x11,
  0x1a, 0x99, 0x04, 0x01, 0x93, 0x8b, 0xdc, 0xc4, 0xec, 0x00, 0x00, 0x48,
  0x80, 0x01, 0x00, 0xd4, 0x08, 0x00, 0x00, 0xc0, 0xb2, 0x01, 0x80, 0x6c,
  0x64, 0x43, 0x70, 0x23, 0x93, 0x20, 0x40, 0x68, 0x11, 0xc1, 0x03, 0x00,
  0x90, 0x00, 0x03, 0x00, 0x20, 0x00, 0x00, 0x47, 0x00, 0x92, 0x42, 0xc0,
  0xcf, 0xd9, 0xd7, 0x5c, 0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x54, 0x19, 0xdd,
  0x1c, 0x10, 0xd0, 0x8c, 0xd5, 0x0f, 0xc9, 0x14, 0x9d, 0x5c, 0xdd, 0x18,
  0x5d, 0x9d, 0x5c, 0x19, 0x99, 0x50, 0x9d, 0x99, 0x59, 0x99, 0x1c, 0x50,
  0x55, 0x10, 0x5b, 0xda, 0x99, 0x5b, 0x19, 0x19, 0x52, 0x59, 0x5b, 0xda,
  0x1c, 0x1c, 0x5a, 0x99, 0x5c, 0xd9, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0xd9,
  0x0c, 0x11, 0x10, 0x10, 0x10, 0x50, 0xd0, 0xb6, 0x05, 0x68, 0x13, 0x16,
  0xd1, 0x11, 0xc1, 0xcb, 0x11, 0x20, 0x00, 0x00, 0x46, 0x42, 0x61, 0x63,
  0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
  0x2e, 0x33, 0x14, 0x5c, 0x66, 0x16, 0x31, 0x40, 0xd3, 0x23, 0x00, 0x00,
  0xc0, 0x06, 0x18, 0x10, 0xe0, 0x00, 0x00, 0xdb, 0x16, 0xa0, 0x4d, 0x78,
  0x84, 0x47, 0x6e, 0x02, 0x8c, 0x7c, 0x04, 0x08, 0x00, 0x80, 0x91, 0x50,
  0xd8, 0xd8, 0xda, 0x99, 0xdc, 0x5b, 0x9d, 0x1b, 0xd9, 0xd0, 0x1b, 0xdb,
  0x9b, 0x9c, 0x8b, 0x0c, 0x05, 0x17, 0x99, 0x45, 0x0c, 0xd0, 0x84, 0x09,
  0x00, 0x00, 0xb0, 0x01, 0x06, 0x04, 0x28, 0x00, 0xc0, 0xb6, 0x05, 0x68,
  0x13, 0x30, 0x01, 0x93, 0x9b, 0x00, 0x23, 0x31, 0x01, 0x02, 0x00, 0x60,
  0x24, 0x14, 0x36, 0xb6, 0x76, 0x26, 0xf7, 0x56, 0xe7, 0x46, 0x36, 0xf4,
  0xc6, 0xf6, 0x26, 0xe7, 0x02, 0x43, 0xc1, 0x05, 0x66, 0x11, 0x03, 0x34,
  0x65, 0x02, 0x00, 0x00, 0x6c, 0x80, 0x01, 0x01, 0x00, 0xc0, 0xb6, 0x05,
  0x68, 0x13, 0x32, 0x21, 0x93, 0x9b, 0x00, 0x23, 0x33, 0x01, 0x02, 0x00,
  0x60, 0x24, 0x14, 0x36, 0xb6, 0x76, 0x26, 0xf7, 0x56, 0xe7, 0x46, 0x36,
  0xf4, 0xc6, 0xf6, 0x26, 0xe7, 0x12, 0x43, 0xc1, 0x25, 0x66, 0x11, 0x03,
  0x34, 0x69, 0x02, 0x00, 0x00, 0x6c, 0x80, 0x01, 0x01, 0x06, 0x00, 0xb0,
  0x6d, 0x01, 0xda, 0x04, 0x4d, 0xd0, 0xe4, 0x26, 0xc0, 0x48, 0x4d, 0x80,
  0x00, 0x00, 0x36, 0x50, 0x61, 0x91, 0x16, 0x6c, 0x01, 0x17, 0x74, 0xa1,
  0x17, 0x7c, 0xf1, 0x17, 0xb1, 0x91, 0x1b, 0xbc, 0x21, 0x1e, 0xe9, 0xe1,
  0x1e, 0x2b, 0xb2, 0x23, 0x3f, 0x32, 0x26, 0x67, 0xb2, 0x26, 0xa3, 0x9e,
  0x80, 0x10, 0x06, 0x00, 0x00, 0x80, 0x80, 0xf0, 0x6a, 0x82, 0x4d, 0x00,
  0x80, 0x0d, 0xd1, 0x5d, 0x98, 0x9c, 0x19, 0x88, 0x55, 0x99, 0xdc, 0x5c,
  0xda, 0x9b, 0xdb, 0x86, 0xc1, 0x0c, 0xdc, 0x44, 0x35, 0x28, 0x11, 0x95,
  0x89, 0xd5, 0x9d, 0x81, 0x24, 0xb9, 0x99, 0xbd, 0x81, 0x58, 0x95, 0xc9,
  0xcd, 0xa5, 0xbd, 0xb9, 0x6d, 0x18, 0xcc, 0x00, 0x4e, 0xaa, 0x0d, 0xc1,
  0x40, 0xf3, 0x14, 0x5e, 0x5e, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x1a, 0x14, 0x5e, 0x5e, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x86,
  0xde, 0xe0, 0xf2, 0xe4, 0xd2, 0xce, 0xd0, 0xe8, 0x40, 0x50, 0xc6, 0x52,
  0x40, 0x9a, 0xd2, 0xc6, 0xe4, 0xde, 0xe6, 0xde, 0xcc, 0xe8, 0x5c, 0x40,
  0x82, 0xd8, 0xd8, 0x40, 0xe4, 0xd2, 0xce, 0xd0, 0xe8, 0xe6, 0x40, 0xe4,
  0xca, 0xe6, 0xca, 0xe4, 0xec, 0xca, 0xc8, 0x5c, 0x1a, 0x14, 0x5e, 0x5e,
  0x40, 0xa8, 0xd0, 0xd2, 0xe6, 0x40, 0xc6, 0xde, 0xc8, 0xca, 0x40, 0xd2,
  0xe6, 0x40, 0xd8, 0xd2, 0xc6, 0xca, 0xdc, 0xe6, 0xca, 0xc8, 0x40, 0xea,
  0xdc, 0xc8, 0xca, 0xe4, 0x40, 0xe8, 0xd0, 0xca, 0x40, 0x9a, 0x92, 0xa8,
  0x40, 0x98, 0xd2, 0xc6, 0xca, 0xdc, 0xe6, 0xca, 0x40, 0x50, 0x9a, 0x92,
  0xa8, 0x52, 0x5c, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0xa8, 0x90, 0x92, 0xa6,
  0x40, 0x86, 0x9e, 0x88, 0x8a, 0x40, 0x92, 0xa6, 0x40, 0xa0, 0xa4, 0x9e,
  0xac, 0x92, 0x88, 0x8a, 0x88, 0x40, 0x54, 0x82, 0xa6, 0x40, 0x92, 0xa6,
  0x54, 0x40, 0xae, 0x92, 0xa8, 0x90, 0x9e, 0xaa, 0xa8, 0x40, 0xae, 0x82,
  0xa4, 0xa4, 0x82, 0x9c, 0xa8, 0xb2, 0x40, 0x9e, 0x8c, 0x1a, 0x14, 0x5e,
  0x5e, 0x40, 0x82, 0x9c, 0xb2, 0x40, 0x96, 0x92, 0x9c, 0x88, 0x58, 0x40,
  0x8a, 0x92, 0xa8, 0x90, 0x8a, 0xa4, 0x40, 0x8a, 0xb0, 0xa0, 0xa4, 0x8a,
  0xa6, 0xa6, 0x40, 0x9e, 0xa4, 0x40, 0x92, 0x9a, 0xa0, 0x98, 0x92, 0x8a,
  0x88, 0x58, 0x40, 0x92, 0x9c, 0x86, 0x98, 0xaa, 0x88, 0x92, 0x9c, 0x8e,
  0x40, 0x82, 0x9c, 0xb2, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x92, 0x9a, 0xa0,
  0x98, 0x92, 0x8a, 0x88, 0x40, 0xae, 0x82, 0xa4, 0xa4, 0x82, 0x9c, 0xa8,
  0x92, 0x8a, 0xa6, 0x40, 0x9e, 0x8c, 0x40, 0x8c, 0x92, 0xa8, 0x9c, 0x8a,
  0xa6, 0xa6, 0x40, 0x8c, 0x9e, 0xa4, 0x40, 0x82, 0x40, 0xa0, 0x82, 0xa4,
  0xa8, 0x92, 0x86, 0xaa, 0x98, 0x82, 0xa4, 0x1a, 0x14, 0x5e, 0x5e, 0x40,
  0xa0, 0xaa, 0xa4, 0xa0, 0x9e, 0xa6, 0x8a, 0x58, 0x40, 0x9a, 0x8a, 0xa4,
  0x86, 0x90, 0x82, 0x9c, 0xa8, 0x82, 0x84, 0x92, 0x98, 0x92, 0xa8, 0xb2,
  0x58, 0x40, 0x9e, 0xa4, 0x40, 0x9c, 0x9e, 0x9c, 0x5a, 0x92, 0x9c, 0x8c,
  0xa4, 0x92, 0x9c, 0x8e, 0x8a, 0x9a, 0x8a, 0x9c, 0xa8, 0x5c, 0x1a, 0x14,
  0x5e, 0x5e, 0x1a, 0x14, 0x5e, 0x5e, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54,
  0x54, 0x54, 0x54, 0x1a, 0x14, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x88, 0xca,
  0xe6, 0xc6, 0x74, 0x40, 0x8e, 0xca, 0xdc, 0xca, 0xe4, 0xc2, 0xe8, 0xca,
  0xe6, 0x40, 0x82, 0x9e, 0x40, 0xe4, 0xc2, 0xf2, 0xe6, 0x40, 0xcc, 0xde,
  0xe4, 0x40, 0xca, 0xc2, 0xc6, 0xd0, 0x40, 0xe0, 0xd2, 0xf0, 0xca, 0xd8,
  0x40, 0xc2, 0xdc, 0xc8, 0x40, 0xe6, 0xe8, 0xde, 0xe4, 0xca, 0xe6, 0x40,
  0xe8, 0xd0, 0xca, 0xda, 0x40, 0xd2, 0xdc, 0x40, 0xc2, 0x40, 0xe8, 0xca,
  0xf0, 0xe8, 0xea, 0xe4, 0xca, 0x5c, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0xa6,
  0xea, 0xe0, 0xe0, 0xde, 0xe4, 0xe8, 0xe6, 0x40, 0x62, 0x40, 0xe4, 0xc2,
  0xf2, 0xe6, 0x40, 0xe0, 0xca, 0xe4, 0x40, 0xe0, 0xd2, 0xf0, 0xca, 0xd8,
  0x40, 0x50, 0xe6, 0xe0, 0xe0, 0x52, 0x40, 0xc2, 0xdc, 0xc8, 0x40, 0x60,
  0x5c, 0x6a, 0x40, 0xe6, 0xe0, 0xe0, 0x40, 0x50, 0xec, 0xd2, 0xc2, 0x40,
  0xc6, 0xd0, 0xca, 0xc6, 0xd6, 0xca, 0xe4, 0xc4, 0xde, 0xc2, 0xe4, 0xc8,
  0x40, 0xc8, 0xd2, 0xe6, 0xe8, 0xe4, 0xd2, 0xc4, 0xea, 0xe8, 0xd2, 0xde,
  0xdc, 0x52, 0x5c, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x60, 0x5c, 0x6a, 0x40,
  0xe6, 0xe0, 0xe0, 0x74, 0x1a, 0x14, 0x5e, 0x5e, 0x40, 0x40, 0x5a, 0x40,
  0xce, 0xca, 0xdc, 0xca, 0xe4, 0xc2, 0xe8, 0xca, 0xe6, 0x40, 0x62, 0x40,
  0xe6, 0xe0, 0xe0, 0x40, 0xcc, 0xde, 0xe4, 0x40, 0xca, 0xec, 0xca, 0xe4,
  0xf2, 0x40, 0xde, 0xe8, 0xd0, 0xca, 0xe4, 0x40, 0xe0, 0xd2, 0xf0, 0xca,
  0xd8, 0x40, 0xd2, 0xdc, 0x40, 0xc2, 0x40, 0xc6, 0xd0, 0xca, 0xc6, 0xd6,
  0xca, 0xe4, 0xc4, 0xde, 0xc2, 0xe4, 0xc8, 0x40, 0xc8, 0xd2, 0xe6, 0xe8,
  0xe4, 0xd2, 0xc4, 0xea, 0xe8, 0xd2, 0xde, 0xdc, 0x5c, 0x1a, 0x14, 0x1a,
  0x14, 0x46, 0xc8, 0xca, 0xcc, 0xd2, 0xdc, 0xca, 0x40, 0x90, 0x98, 0xa6,
  0x98, 0x1a, 0x14, 0x46, 0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca, 0x40,
  0x44, 0xa4, 0xc2, 0xf2, 0xe8, 0xe4, 0xc2, 0xc6, 0xd2, 0xdc, 0xce, 0x90,
  0xd8, 0xe6, 0xd8, 0x86, 0xde, 0xda, 0xe0, 0xc2, 0xe8, 0x5c, 0xd0, 0x44,
  0x1a, 0x14, 0x46, 0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca, 0x40, 0x44,
  0xa4, 0xc2, 0xf2, 0xe8, 0xe4, 0xc2, 0xc6, 0xd2, 0xdc, 0xce, 0xa6, 0xd0,
  0xc2, 0xc8, 0xca, 0xe4, 0x90, 0xca, 0xd8, 0xe0, 0xca, 0xe4, 0x5c, 0xd0,
  0xd8, 0xe6, 0xd8, 0xd2, 0x44, 0x1a, 0x14, 0x46, 0xd2, 0xdc, 0xc6, 0xd8,
  0xea, 0xc8, 0xca, 0x40, 0x44, 0xa4, 0xc2, 0xdc, 0xc8, 0xde, 0xda, 0x9c,
  0xea, 0xda, 0xc4, 0xca, 0xe4, 0x8e, 0xca, 0xdc, 0xca, 0xe4, 0xc2, 0xe8,
  0xde, 0xe4, 0x5c, 0xd0, 0xd8, 0xe6, 0xd8, 0xd2, 0x44, 0x1a, 0x14, 0x46,
  0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca, 0x40, 0x44, 0xa4, 0xc2, 0xf2,
  0x40, 0xe6, 0xde, 0xe4, 0xe8, 0xd2, 0xdc, 0xce, 0x5e, 0xa4, 0xc2, 0xf2,
  0xa6, 0xde, 0xe4, 0xe8, 0xd2, 0xdc, 0xce, 0x5c, 0xd0, 0xd8, 0xe6, 0xd8,
  0xd2, 0x44, 0x1a, 0x14, 0x46, 0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca,
  0x40, 0x44, 0xa4, 0xa8, 0x82, 0x9e, 0x5c, 0xd0, 0xd8, 0xe6, 0xd8, 0xd2,
  0x44, 0x1a, 0x14, 0x1a, 0x14, 0xa8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca,
  0x64, 0x88, 0x78, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0,
  0xe8, 0xd0, 0xa8, 0xca, 0xf0, 0x8c, 0xde, 0xe4, 0xda, 0xc2, 0xe8, 0x7c,
  0x40, 0xce, 0xbe, 0xe8, 0xca, 0xf0, 0xa4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2,
  0xce, 0xd2, 0xdc, 0xa6, 0xea, 0xe4, 0xcc, 0xc2, 0xc6, 0xca, 0x9c, 0xde,
  0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0, 0xe8, 0xd0, 0x40, 0x74, 0x40,
  0xe4, 0xca, 0xce, 0xd2, 0xe6, 0xe8, 0xca, 0xe4, 0x50, 0xe8, 0x60, 0x52,
  0x76, 0x1a, 0x14, 0xa8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0x64, 0x88,
  0x78, 0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0x68, 0x7c, 0x40, 0xce, 0xbe, 0xe8,
  0xca, 0xf0, 0xa4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0xa0,
  0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde, 0xdc, 0x40, 0x74, 0x40, 0xe4, 0xca,
  0xce, 0xd2, 0xe6, 0xe8, 0xca, 0xe4, 0x50, 0xe8, 0x62, 0x52, 0x76, 0x1a,
  0x14, 0x1a, 0x14, 0xa4, 0xae, 0xa8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca,
  0x64, 0x88, 0x78, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0,
  0xe8, 0xd0, 0xa8, 0xca, 0xf0, 0x8c, 0xde, 0xe4, 0xda, 0xc2, 0xe8, 0x7c,
  0x40, 0xce, 0xbe, 0xe4, 0xe8, 0xa4, 0xc2, 0xf2, 0xe6, 0x88, 0xd2, 0xe4,
  0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc, 0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc,
  0x88, 0xca, 0xe0, 0xe8, 0xd0, 0x40, 0x74, 0x40, 0xe4, 0xca, 0xce, 0xd2,
  0xe6, 0xe8, 0xca, 0xe4, 0x50, 0xea, 0x60, 0x52, 0x76, 0x1a, 0x14, 0x1a,
  0x14, 0x86, 0xde, 0xdc, 0xe6, 0xe8, 0xc2, 0xdc, 0xe8, 0x84, 0xea, 0xcc,
  0xcc, 0xca, 0xe4, 0x78, 0xa4, 0xc2, 0xf2, 0x8e, 0xca, 0xdc, 0x86, 0xde,
  0xdc, 0xe6, 0xe8, 0xc2, 0xdc, 0xe8, 0x84, 0xea, 0xcc, 0xcc, 0xca, 0xe4,
  0x7c, 0x40, 0xc6, 0xc4, 0x74, 0x40, 0xe4, 0xca, 0xce, 0xd2, 0xe6, 0xe8,
  0xca, 0xe4, 0x50, 0xc4, 0x60, 0x52, 0x76, 0x1a, 0x14, 0xa6, 0xe8, 0xe4,
  0xea, 0xc6, 0xe8, 0xea, 0xe4, 0xca, 0xc8, 0x84, 0xea, 0xcc, 0xcc, 0xca,
  0xe4, 0x78, 0x82, 0xd8, 0xd2, 0xce, 0xdc, 0xca, 0xc8, 0x90, 0xca, 0xda,
  0xd2, 0xe6, 0xe0, 0xd0, 0xca, 0xe4, 0xca, 0xa6, 0xc2, 0xda, 0xe0, 0xd8,
  0xca, 0x66, 0x88, 0x7c, 0x40, 0xce, 0xbe, 0xe6, 0xc2, 0xda, 0xe0, 0xd8,
  0xca, 0xa6, 0xca, 0xe8, 0xe6, 0x40, 0x74, 0x40, 0xe4, 0xca, 0xce, 0xd2,
  0xe6, 0xe8, 0xca, 0xe4, 0x50, 0xe8, 0x66, 0x52, 0x76, 0x1a, 0x14, 0x1a,
  0x14, 0x5e, 0x5e, 0x40, 0x88, 0xca, 0xd8, 0xc2, 0xf2, 0x40, 0xe8, 0xd0,
  0xca, 0x40, 0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca, 0x40, 0xe6, 0xde,
  0x40, 0xe8, 0xd0, 0xc2, 0xe8, 0x40, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4,
  0xc6, 0xca, 0x40, 0xe4, 0xca, 0xcc, 0xca, 0xe4, 0xca, 0xdc, 0xc6, 0xca,
  0xe6, 0x40, 0xe4, 0xca, 0xe6, 0xde, 0xd8, 0xec, 0xca, 0x5c, 0x1a, 0x14,
  0x46, 0xd2, 0xdc, 0xc6, 0xd8, 0xea, 0xc8, 0xca, 0x40, 0x44, 0xa4, 0xc2,
  0xf2, 0x8e, 0xca, 0xdc, 0x5c, 0xd0, 0xd8, 0xe6, 0xd8, 0xd2, 0x44, 0x1a,
  0x14, 0x1a, 0x14, 0xb6, 0xdc, 0xea, 0xda, 0xe8, 0xd0, 0xe4, 0xca, 0xc2,
  0xc8, 0xe6, 0x50, 0x88, 0xca, 0xcc, 0xc2, 0xea, 0xd8, 0xe8, 0x86, 0xde,
  0xda, 0xe0, 0xea, 0xe8, 0xca, 0xa6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0xa0,
  0xc2, 0xe4, 0xc2, 0xda, 0xe6, 0x74, 0x74, 0xa8, 0xd0, 0xe4, 0xca, 0xc2,
  0xc8, 0x8e, 0xe4, 0xde, 0xea, 0xe0, 0x74, 0x74, 0xae, 0xd2, 0xc8, 0xe8,
  0xd0, 0x58, 0x40, 0x88, 0xca, 0xcc, 0xc2, 0xea, 0xd8, 0xe8, 0x86, 0xde,
  0xda, 0xe0, 0xea, 0xe8, 0xca, 0xa6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0xa0,
  0xc2, 0xe4, 0xc2, 0xda, 0xe6, 0x74, 0x74, 0xa8, 0xd0, 0xe4, 0xca, 0xc2,
  0xc8, 0x8e, 0xe4, 0xde, 0xea, 0xe0, 0x74, 0x74, 0x90, 0xca, 0xd2, 0xce,
  0xd0, 0xe8, 0x58, 0x40, 0x62, 0x52, 0xba, 0x1a, 0x14, 0xec, 0xde, 0xd2,
  0xc8, 0x40, 0xda, 0xc2, 0xd2, 0xdc, 0x50, 0xea, 0xd2, 0xdc, 0xe8, 0x64,
  0x40, 0x88, 0xa8, 0xd2, 0xc8, 0x40, 0x74, 0x40, 0xa6, 0xac, 0xbe, 0x88,
  0xd2, 0xe6, 0xe0, 0xc2, 0xe8, 0xc6, 0xd0, 0xa8, 0xd0, 0xe4, 0xca, 0xc2,
  0xc8, 0x92, 0x88, 0x58, 0x40, 0xea, 0xd2, 0xdc, 0xe8, 0x64, 0x40, 0x8e,
  0xa8, 0xd2, 0xc8, 0x40, 0x74, 0x40, 0xa6, 0xac, 0xbe, 0x8e, 0xe4, 0xde,
  0xea, 0xe0, 0xa8, 0xd0, 0xe4, 0xca, 0xc2, 0xc8, 0x92, 0x88, 0x52, 0x1a,
  0x14, 0xf6, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0xea, 0xd2, 0xdc, 0xe8,
  0x64, 0x40, 0x88, 0xa8, 0xd2, 0xc8, 0x8c, 0xea, 0xd8, 0xd8, 0xa4, 0xca,
  0xe6, 0x40, 0x7a, 0x40, 0x88, 0xa8, 0xd2, 0xc8, 0x76, 0x1a, 0x14, 0x1a,
  0x14, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xcc, 0x40, 0x50, 0xc6, 0xc4, 0x5c,
  0xc8, 0xde, 0x86, 0xd0, 0xca, 0xc6, 0xd6, 0xca, 0xe4, 0xc4, 0xde, 0xc2,
  0xe4, 0xc8, 0xa4, 0xc2, 0xf2, 0x8e, 0xca, 0xdc, 0xca, 0xe4, 0xc2, 0xe8,
  0xd2, 0xde, 0xdc, 0x52, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0xf6, 0x1a,
  0x14, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xaa, 0x92, 0x9c,
  0xa8, 0x40, 0xe0, 0xd2, 0xf0, 0xca, 0xd8, 0xa6, 0xe8, 0xca, 0xe0, 0xb0,
  0x40, 0x7a, 0x40, 0x64, 0x76, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0x40,
  0x40, 0x40, 0x40, 0xc4, 0xde, 0xde, 0xd8, 0x40, 0xd2, 0xe6, 0x8a, 0xec,
  0xca, 0xdc, 0xa0, 0xd2, 0xf0, 0xca, 0xd8, 0xb2, 0x40, 0x7a, 0x40, 0x50,
  0x88, 0xa8, 0xd2, 0xc8, 0x5c, 0xf2, 0x40, 0x4c, 0x40, 0x62, 0x52, 0x40,
  0x7a, 0x7a, 0x40, 0x60, 0x76, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0x40,
  0x40, 0x40, 0x40, 0xaa, 0x92, 0x9c, 0xa8, 0x40, 0xe0, 0xd2, 0xf0, 0xca,
  0xd8, 0x9e, 0xcc, 0xcc, 0xe6, 0xca, 0xe8, 0xb0, 0x40, 0x7a, 0x40, 0xd2,
  0xe6, 0x8a, 0xec, 0xca, 0xdc, 0xa0, 0xd2, 0xf0, 0xca, 0xd8, 0xb2, 0x40,
  0x42, 0x7a, 0x40, 0xc6, 0xc4, 0x5c, 0xc6, 0xd0, 0xca, 0xc6, 0xd6, 0xca,
  0xe4, 0xc4, 0xde, 0xc2, 0xe4, 0xc8, 0x8e, 0xca, 0xdc, 0xca, 0xe4, 0xc2,
  0xe8, 0xca, 0xa4, 0xc2, 0xf2, 0xe6, 0x8c, 0xde, 0xe4, 0x8a, 0xec, 0xca,
  0xdc, 0xa0, 0xd2, 0xf0, 0xca, 0xd8, 0xe6, 0x76, 0x1a, 0x14, 0x40, 0x40,
  0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x88, 0xa8, 0xd2, 0xc8, 0x8c, 0xea,
  0xd8, 0xd8, 0xa4, 0xca, 0xe6, 0x5c, 0xf0, 0x40, 0x7a, 0x40, 0x88, 0xa8,
  0xd2, 0xc8, 0x5c, 0xf0, 0x40, 0x54, 0x40, 0xe0, 0xd2, 0xf0, 0xca, 0xd8,
  0xa6, 0xe8, 0xca, 0xe0, 0xb0, 0x40, 0x56, 0x40, 0xe0, 0xd2, 0xf0, 0xca,
  0xd8, 0x9e, 0xcc, 0xcc, 0xe6, 0xca, 0xe8, 0xb0, 0x76, 0x1a, 0x14, 0x40,
  0x40, 0x40, 0x40, 0xfa, 0x1a, 0x14, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40,
  0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0x66, 0x40, 0xe6, 0xea, 0xe4, 0xcc, 0xc2,
  0xc6, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x76, 0x1a, 0x14, 0x40,
  0x40, 0x40, 0x40, 0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0x40, 0xe4, 0xc2, 0xf2,
  0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0x88, 0xca, 0xe0, 0xe8, 0xd0, 0x76,
  0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0x88, 0xca, 0xc6, 0xde, 0xc8, 0xca,
  0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0, 0xe8, 0xd0, 0x50,
  0xce, 0xbe, 0xe8, 0xca, 0xf0, 0xa4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce,
  0xd2, 0xdc, 0xa6, 0xea, 0xe4, 0xcc, 0xc2, 0xc6, 0xca, 0x9c, 0xde, 0xe4,
  0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0, 0xe8, 0xd0, 0xb6, 0x88, 0xa8, 0xd2,
  0xc8, 0x8c, 0xea, 0xd8, 0xd8, 0xa4, 0xca, 0xe6, 0xba, 0x58, 0x40, 0xe6,
  0xea, 0xe4, 0xcc, 0xc2, 0xc6, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8,
  0x58, 0x40, 0xe4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0x88,
  0xca, 0xe0, 0xe8, 0xd0, 0x52, 0x76, 0x1a, 0x14, 0x1a, 0x14, 0x40, 0x40,
  0x40, 0x40, 0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0x66, 0x40, 0xe4, 0xc2, 0xf2,
  0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc, 0x40, 0x7a, 0x40,
  0x60, 0x76, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xcc, 0x40, 0x50,
  0xe4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0x88, 0xca, 0xe0,
  0xe8, 0xd0, 0x40, 0x42, 0x7a, 0x40, 0x92, 0x9c, 0xac, 0x82, 0x98, 0x92,
  0x88, 0xbe, 0xa4, 0x82, 0xb2, 0xbe, 0x9e, 0xa4, 0x92, 0x8e, 0x92, 0x9c,
  0xbe, 0x88, 0x8a, 0xa0, 0xa8, 0x90, 0x52, 0x1a, 0x14, 0x40, 0x40, 0x40,
  0x40, 0xf6, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
  0xe4, 0xc2, 0xf2, 0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc,
  0x40, 0x7a, 0x40, 0x8e, 0xca, 0xe8, 0xa4, 0xc2, 0xdc, 0xc8, 0xde, 0xda,
  0xa4, 0xc2, 0xf2, 0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc,
  0x50, 0x88, 0xa8, 0xd2, 0xc8, 0x58, 0x40, 0xe6, 0xea, 0xe4, 0xcc, 0xc2,
  0xc6, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x58, 0x40, 0xc6, 0xc4,
  0x5c, 0xe8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0x88, 0xd2, 0xda, 0x58,
  0x40, 0x60, 0x52, 0x76, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0xfa, 0x1a,
  0x14, 0x1a, 0x14, 0x40, 0x40, 0x40, 0x40, 0xce, 0xbe, 0xe4, 0xe8, 0xa4,
  0xc2, 0xf2, 0xe6, 0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc,
  0x9e, 0xe4, 0xd2, 0xce, 0xd2, 0xdc, 0x88, 0xca, 0xe0, 0xe8, 0xd0, 0xb6,
  0x88, 0xa8, 0xd2, 0xc8, 0xba, 0x40, 0x7a, 0x40, 0x8a, 0xdc, 0xc6, 0xde,
  0xc8, 0xca, 0x9c, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0x88, 0xca, 0xe0, 0xe8,
  0xd0, 0x50, 0xe4, 0xc2, 0xf2, 0x88, 0xd2, 0xe4, 0xca, 0xc6, 0xe8, 0xd2,
  0xde, 0xdc, 0x58, 0x40, 0xe4, 0xc2, 0xf2, 0x9e, 0xe4, 0xd2, 0xce, 0xd2,
  0xdc, 0x88, 0xca, 0xe0, 0xe8, 0xd0, 0x52, 0x76, 0x1a, 0x14, 0xfa, 0x1a,
  0x14, 0x36, 0x08, 0xc1, 0x9c, 0xb0, 0x0c, 0x5c, 0xb8, 0xa6, 0xc2, 0xda,
  0xe0, 0xd8, 0xca, 0x86, 0xde, 0xe4, 0xca, 0xb8, 0xe6, 0xd0, 0xc2, 0xc8,
  0xca, 0xe4, 0xe6, 0xb8, 0x90, 0xd8, 0xe6, 0xd8, 0x86, 0xde, 0xda, 0xe0,
  0xc2, 0xe8, 0x5c, 0xd0, 0xd8, 0xe6, 0xd8, 0xd2, 0x78, 0x5f, 0x2f, 0x2f,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x2f,
  0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69,
  0x67, 0x68, 0x74, 0x20, 0x28, 0x63, 0x29, 0x20, 0x4d, 0x69, 0x63, 0x72,
  0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x72,
  0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
  0x65, 0x64, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x68, 0x69, 0x73,
  0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x73, 0x20, 0x6c, 0x69, 0x63,
  0x65, 0x6e, 0x73, 0x65, 0x64, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x4d, 0x49, 0x54, 0x20, 0x4c, 0x69, 0x63, 0x65,
  0x6e, 0x73, 0x65, 0x20, 0x28, 0x4d, 0x49, 0x54, 0x29, 0x2e, 0x0d, 0x0a,
  0x2f, 0x2f, 0x20, 0x54, 0x48, 0x49, 0x53, 0x20, 0x43, 0x4f, 0x44, 0x45,
  0x20, 0x49, 0x53, 0x20, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44,
  0x20, 0x2a, 0x41, 0x53, 0x20, 0x49, 0x53, 0x2a, 0x20, 0x57, 0x49, 0x54,
  0x48, 0x4f, 0x55, 0x54, 0x20, 0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54,
  0x59, 0x20, 0x4f, 0x46, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x41, 0x4e, 0x59,
  0x20, 0x4b, 0x49, 0x4e, 0x44, 0x2c, 0x20, 0x45, 0x49, 0x54, 0x48, 0x45,
  0x52, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x20, 0x4f, 0x52,
  0x20, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x2c, 0x20, 0x49, 0x4e,
  0x43, 0x4c, 0x55, 0x44, 0x49, 0x4e, 0x47, 0x20, 0x41, 0x4e, 0x59, 0x0d,
  0x0a, 0x2f, 0x2f, 0x20, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x20,
  0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54, 0x49, 0x45, 0x53, 0x20, 0x4f,
  0x46, 0x20, 0x46, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x20, 0x46, 0x4f,
  0x52, 0x20, 0x41, 0x20, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x55, 0x4c,
  0x41, 0x52, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x50, 0x55, 0x52, 0x50, 0x4f,
  0x53, 0x45, 0x2c, 0x20, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54,
  0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x2c, 0x20, 0x4f, 0x52, 0x20,
  0x4e, 0x4f, 0x4e, 0x2d, 0x49, 0x4e, 0x46, 0x52, 0x49, 0x4e, 0x47, 0x45,
  0x4d, 0x45, 0x4e, 0x54, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x0d, 0x0a, 0x2f,
  0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x0a,
  0x0d, 0x0a, 0x23, 0x69, 0x66, 0x6e, 0x64, 0x65, 0x66, 0x20, 0x48, 0x4c,
  0x53, 0x4c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x5f, 0x48, 0x0d, 0x0a,
  0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x48, 0x4c, 0x53, 0x4c,
  0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x5f, 0x48, 0x0d, 0x0a, 0x0d, 0x0a,
  0x74, 0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x32, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32, 0x3b,
  0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x33, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54,
  0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65,
  0x66, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x58, 0x4d, 0x56,
  0x45, 0x43, 0x54, 0x4f, 0x52, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65,
  0x64, 0x65, 0x66, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34,
  0x20, 0x58, 0x4d, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x3b, 0x0d, 0x0a,
  0x74, 0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20, 0x75, 0x69, 0x6e, 0x74,
  0x20, 0x55, 0x49, 0x4e, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65,
  0x64, 0x65, 0x66, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x58, 0x4d,
  0x55, 0x49, 0x4e, 0x54, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65,
  0x64, 0x65, 0x66, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x58, 0x4d,
  0x55, 0x49, 0x4e, 0x54, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65,
  0x64, 0x65, 0x66, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x58, 0x4d, 0x49,
  0x4e, 0x54, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65,
  0x66, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x20, 0x2f, 0x2f,
  0x20, 0x48, 0x4c, 0x53, 0x4c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x5f,
  0x48, 0x1b, 0x84, 0x3a, 0xb1, 0x13, 0xea, 0xc4, 0x90, 0x0e, 0x57, 0xd5,
  0x5c, 0x99, 0xdc, 0x1c, 0x57, 0xdd, 0x5c, 0x99, 0x1c, 0x17, 0x51, 0xd9,
  0xdc, 0x1a, 0xdd, 0x1b, 0x1c, 0x17, 0x51, 0x9a, 0x5c, 0xd9, 0x18, 0x1d,
  0x56, 0xcb, 0x91, 0x5c, 0x18, 0x1c, 0x5a, 0xda, 0xd8, 0x5c, 0xcb, 0x54,
  0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0x1c, 0xd7, 0x54, 0x58, 0x1b, 0x1c, 0x5b,
  0xd9, 0x1c, 0x17, 0x51, 0xd9, 0xdc, 0x1a, 0xdd, 0x1b, 0x1c, 0x17, 0xd1,
  0x0c, 0x51, 0x8c, 0x8c, 0x54, 0x58, 0x1e, 0x9d, 0x5c, 0xd8, 0x58, 0x9a,
  0xdb, 0x19, 0xd7, 0x9c, 0xdc, 0x18, 0x17, 0xd1, 0x0c, 0x51, 0x8c, 0x8c,
  0x54, 0x58, 0x1e, 0x9d, 0x5c, 0xd8, 0x58, 0x9a, 0xdb, 0x99, 0x54, 0x59,
  0x18, 0x1b, 0x55, 0x5a, 0x5b, 0x19, 0x51, 0x99, 0xdb, 0x5b, 0xda, 0x5c,
  0x19, 0x59, 0x50, 0x9b, 0x58, 0x5a, 0x99, 0x1b, 0xdd, 0xd3, 0xd8, 0x18,
  0x5b, 0xdd, 0x5c, 0xda, 0x9b, 0x1b, 0x97, 0x14, 0x55, 0xd0, 0x13, 0xd7,
  0x14, 0x5a, 0x18, 0x59, 0x99, 0xdc, 0x1c, 0x97, 0x14, 0x55, 0xd0, 0x93,
  0x0b, 0x1a, 0xdb, 0x1c, 0x5b, 0x1a, 0xd3, 0xeb, 0xe5, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41,
  0xe1, 0xe5, 0x05, 0x64, 0xe8, 0x0d, 0x2e, 0x4f, 0x2e, 0xed, 0x0c, 0x8d,
  0x0e, 0x04, 0x65, 0x2c, 0x05, 0xa4, 0x29, 0x6d, 0x4c, 0xee, 0x6d, 0xee,
  0xcd, 0x8c, 0xce, 0x05, 0x24, 0x88, 0x8d, 0x0d, 0x44, 0x2e, 0xed, 0x0c,
  0x8d, 0x6e, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x4c, 0xce, 0xae, 0x8c, 0xcc,
  0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x2d, 0x6d, 0x0e, 0x64, 0xec,
  0x8d, 0xac, 0x0c, 0x24, 0x6d, 0x0e, 0x84, 0x2d, 0x6d, 0xac, 0xcc, 0x6d,
  0xae, 0x8c, 0x0c, 0xa4, 0xce, 0x8d, 0xac, 0x4c, 0x0e, 0x84, 0x0e, 0xad,
  0x0c, 0xa4, 0x29, 0x89, 0x0a, 0x84, 0x29, 0x6d, 0xac, 0xcc, 0x6d, 0xae,
  0x0c, 0x04, 0xa5, 0x29, 0x89, 0x2a, 0xc5, 0xa5, 0x41, 0xe1, 0xe5, 0x05,
  0x84, 0x0a, 0x29, 0x69, 0x0a, 0x64, 0xe8, 0x89, 0xa8, 0x08, 0x24, 0x69,
  0x0a, 0x04, 0x4a, 0xea, 0xc9, 0x2a, 0x89, 0xa8, 0x88, 0x08, 0x44, 0x25,
  0x68, 0x0a, 0x24, 0x69, 0x4a, 0x05, 0xe4, 0x2a, 0x89, 0x0a, 0xe9, 0xa9,
  0x8a, 0x0a, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0x0b, 0xe4,
  0xc9, 0xa8, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xc8, 0x29, 0x0b, 0x64, 0x29,
  0xc9, 0x89, 0x88, 0x05, 0xa4, 0x28, 0x89, 0x0a, 0xa9, 0x48, 0x0a, 0xa4,
  0x08, 0x0b, 0x4a, 0xaa, 0x68, 0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x24, 0xa9,
  0x09, 0x8a, 0x29, 0xa9, 0x88, 0x88, 0x05, 0x24, 0xc9, 0x69, 0x88, 0xa9,
  0x8a, 0x28, 0xc9, 0xe9, 0x08, 0x24, 0xc8, 0x29, 0xab, 0x41, 0xe1, 0xe5,
  0x05, 0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88, 0x08, 0xe4, 0x2a, 0x48,
  0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0xa9, 0x68, 0x0a, 0xe4, 0xc9, 0x08, 0xc4,
  0x28, 0x89, 0xca, 0xa9, 0x68, 0x6a, 0x0a, 0xc4, 0xe8, 0x49, 0x0a, 0x24,
  0x08, 0x04, 0x2a, 0x48, 0x8a, 0x2a, 0x69, 0xa8, 0x8a, 0x29, 0x48, 0xaa,
  0x41, 0xe1, 0xe5, 0x05, 0x04, 0xaa, 0x4a, 0x0a, 0xea, 0x69, 0xaa, 0x88,
  0x05, 0xa4, 0xa9, 0x48, 0x6a, 0x08, 0x29, 0xc8, 0x89, 0x2a, 0x48, 0x28,
  0x89, 0x29, 0x89, 0x2a, 0x8b, 0x05, 0xe4, 0x49, 0x0a, 0xc4, 0xe9, 0xc9,
  0xa9, 0x25, 0xc9, 0xc9, 0x48, 0x2a, 0xc9, 0xe9, 0xa8, 0xa8, 0xa9, 0xc8,
  0x89, 0xca, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0x61, 0x24, 0xcd,
  0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x44, 0x8a, 0x2a, 0xe8, 0xe9, 0x0b, 0x89,
  0x69, 0x8a, 0x29, 0xa9, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad,
  0x0c, 0x44, 0x8a, 0x2a, 0xe8, 0xe9, 0x0b, 0x89, 0x69, 0x8a, 0x29, 0xa9,
  0x41, 0xa1, 0x41, 0xc1, 0x2d, 0xac, 0xad, 0x6c, 0x0e, 0x2e, 0x6c, 0xac,
  0x0c, 0x44, 0x8a, 0x2a, 0xe8, 0x09, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec, 0xcd, 0x6d,
  0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x2a, 0x2c, 0x0f,
  0x29, 0x8d, 0x8e, 0x28, 0x6d, 0x8e, 0x2e, 0xcc, 0x6d, 0xac, 0xec, 0xc9,
  0xad, 0x29, 0x6d, 0x6e, 0x0e, 0xa4, 0x07, 0x04, 0x66, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x64, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0x0c, 0x64, 0xec,
  0xcd, 0x6d, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x24, 0xc9,
  0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0x2c, 0xe8, 0x69, 0xe8, 0xad, 0xcc, 0xcc,
  0x2c, 0x6d, 0x2c, 0xad, 0xcc, 0x8d, 0xce, 0x2a, 0x8c, 0xad, 0xae, 0x0c,
  0xa4, 0x07, 0xa4, 0x25, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xec, 0xed, 0x8d, 0x0d, 0x04, 0x29, 0x6c, 0x2e, 0xe8, 0x49, 0x2a, 0x2c,
  0x0f, 0x29, 0x8d, 0x2e, 0xc8, 0x2d, 0xef, 0xa8, 0xec, 0xad, 0xad, 0x8c,
  0x4e, 0x2e, 0x0f, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x84, 0x0e, 0x29, 0x8d, 0x2e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x0e, 0x29, 0x8d, 0x0e, 0x24, 0xa4,
  0x07, 0x44, 0x2a, 0x2c, 0x0f, 0x29, 0x8d, 0x8e, 0x28, 0x6d, 0x8e, 0x2e,
  0xcc, 0x6d, 0xac, 0xec, 0xc9, 0xad, 0x29, 0x6d, 0x6e, 0x6e, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0x61, 0xa4, 0xcc, 0x8d, 0x2c, 0xcd, 0x0c, 0xe4, 0xe5, 0x05, 0x44, 0x8a,
  0x2a, 0xe8, 0xe9, 0x0b, 0x89, 0x69, 0x8a, 0x29, 0x69, 0x83, 0x80, 0x27,
  0x79, 0xc2, 0x9c, 0x18, 0xd2, 0xe1, 0xaa, 0x9a, 0x2b, 0x93, 0x9b, 0xe3,
  0xaa, 0x9b, 0x2b, 0x93, 0xe3, 0x22, 0x2a, 0x9b, 0x5b, 0xa3, 0x7b, 0x83,
  0xe3, 0x22, 0x4a, 0x93, 0x2b, 0x1b, 0xa3, 0xc3, 0x6a, 0x39, 0x92, 0x0b,
  0x83, 0x43, 0x4b, 0x1b, 0x9b, 0x6b, 0x99, 0x0a, 0x6b, 0x83, 0x63, 0x2b,
  0x9b, 0xe3, 0x9a, 0x0a, 0x6b, 0x83, 0x63, 0x2b, 0x9b, 0xe3, 0x22, 0x2a,
  0x9b, 0x5b, 0xa3, 0x7b, 0x83, 0xe3, 0x22, 0x9a, 0x21, 0x8a, 0x91, 0x91,
  0x0a, 0xcb, 0xa3, 0x93, 0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0xe3, 0x9a, 0x93,
  0x1b, 0xe3, 0x22, 0x9a, 0x21, 0x8a, 0x91, 0x91, 0x0a, 0xcb, 0xa3, 0x93,
  0x0b, 0x1b, 0x4b, 0x73, 0x3b, 0x93, 0x2a, 0x0b, 0x63, 0xa3, 0x4a, 0x6b,
  0x2b, 0x23, 0x2a, 0x73, 0x7b, 0x4b, 0x9b, 0x2b, 0x23, 0x0b, 0x6a, 0x13,
  0x4b, 0x2b, 0x73, 0xa3, 0x7b, 0x1a, 0x1b, 0x63, 0xab, 0x9b, 0x4b, 0x7b,
  0x73, 0xe3, 0x92, 0x0a, 0xcb, 0xa3, 0x92, 0x0b, 0x1b, 0x4b, 0x73, 0x3b,
  0x43, 0x62, 0x9b, 0x63, 0x1b, 0x7a, 0x6b, 0x83, 0x0b, 0xa3, 0x73, 0x41,
  0x23, 0x2d, 0x3a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x0d, 0x0a, 0x2f, 0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x43,
  0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x28, 0x63, 0x29,
  0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x20,
  0x41, 0x6c, 0x6c, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x72,
  0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f,
  0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69,
  0x73, 0x20, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x64, 0x20, 0x75,
  0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x49, 0x54,
  0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x28, 0x4d, 0x49,
  0x54, 0x29, 0x2e, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x54, 0x48, 0x49, 0x53,
  0x20, 0x43, 0x4f, 0x44, 0x45, 0x20, 0x49, 0x53, 0x20, 0x50, 0x52, 0x4f,
  0x56, 0x49, 0x44, 0x45, 0x44, 0x20, 0x2a, 0x41, 0x53, 0x20, 0x49, 0x53,
  0x2a, 0x20, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x20, 0x57, 0x41,
  0x52, 0x52, 0x41, 0x4e, 0x54, 0x59, 0x20, 0x4f, 0x46, 0x0d, 0x0a, 0x2f,
  0x2f, 0x20, 0x41, 0x4e, 0x59, 0x20, 0x4b, 0x49, 0x4e, 0x44, 0x2c, 0x20,
  0x45, 0x49, 0x54, 0x48, 0x45, 0x52, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45,
  0x53, 0x53, 0x20, 0x4f, 0x52, 0x20, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x45,
  0x44, 0x2c, 0x20, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49, 0x4e, 0x47,
  0x20, 0x41, 0x4e, 0x59, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x49, 0x4d, 0x50,
  0x4c, 0x49, 0x45, 0x44, 0x20, 0x57, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x54,
  0x49, 0x45, 0x53, 0x20, 0x4f, 0x46, 0x20, 0x46, 0x49, 0x54, 0x4e, 0x45,
  0x53, 0x53, 0x20, 0x46, 0x4f, 0x52, 0x20, 0x41, 0x20, 0x50, 0x41, 0x52,
  0x54, 0x49, 0x43, 0x55, 0x4c, 0x41, 0x52, 0x0d, 0x0a, 0x2f, 0x2f, 0x20,
  0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x2c, 0x20, 0x4d, 0x45, 0x52,
  0x43, 0x48, 0x41, 0x4e, 0x54, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59,
  0x2c, 0x20, 0x4f, 0x52, 0x20, 0x4e, 0x4f, 0x4e, 0x2d, 0x49, 0x4e, 0x46,
  0x52, 0x49, 0x4e, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x2e, 0x0d, 0x0a,
  0x2f, 0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x6e, 0x64,
  0x65, 0x66, 0x20, 0x52, 0x41, 0x59, 0x54, 0x52, 0x41, 0x43, 0x49, 0x4e,
  0x47, 0x48, 0x4c, 0x53, 0x4c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x5f,
  0x48, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x52,
  0x41, 0x59, 0x54, 0x52, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x48, 0x4c, 0x53,
  0x4c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x5f, 0x48, 0x0d, 0x0a, 0x0d,
  0x0a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x0d, 0x0a, 0x2f, 0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x61,
  0x79, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x48, 0x4c, 0x53, 0x4c,
  0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x2e, 0x68, 0x0d, 0x0a, 0x2f, 0x2f,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x41, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65,
  0x72, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65,
  0x64, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x43, 0x2b, 0x2b, 0x20, 0x61, 0x6e,
  0x64, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63,
  0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x20, 0x0d, 0x0a, 0x2f,
  0x2f, 0x0d, 0x0a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x20,
  0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x72,
  0x69, 0x64, 0x65, 0x73, 0x20, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x23, 0x64, 0x65,
  0x66, 0x69, 0x6e, 0x65, 0x20, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f,
  0x47, 0x52, 0x41, 0x53, 0x53, 0x5f, 0x47, 0x45, 0x4f, 0x4d, 0x45, 0x54,
  0x52, 0x59, 0x20, 0x31, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e,
  0x65, 0x20, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x5f,
  0x43, 0x41, 0x4d, 0x45, 0x52, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
  0x47, 0x20, 0x30, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x64, 0x65,
  0x66, 0x20, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x0d, 0x0a, 0x23, 0x64,
  0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4f,
  0x4e, 0x4c, 0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x42, 0x52, 0x54,
  0x5f, 0x4d, 0x45, 0x53, 0x48, 0x20, 0x30, 0x20, 0x2f, 0x2f, 0x20, 0x53,
  0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 0x73,
  0x70, 0x65, 0x65, 0x64, 0x20, 0x75, 0x70, 0x20, 0x61, 0x70, 0x70, 0x6c,
  0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x74, 0x61, 0x72,
  0x74, 0x20, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x0d,
  0x0a, 0x23, 0x65, 0x6c, 0x73, 0x65, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66,
  0x69, 0x6e, 0x65, 0x20, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c,
  0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x42, 0x52, 0x54, 0x5f, 0x4d,
  0x45, 0x53, 0x48, 0x20, 0x30, 0x20, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64,
  0x69, 0x66, 0x0d, 0x0a, 0x2f, 0x2f, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,
  0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66,
  0x69, 0x6e, 0x65, 0x20, 0x46, 0x4f, 0x56, 0x59, 0x20, 0x34, 0x35, 0x2e,
  0x66, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x4e,
  0x45, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x45, 0x20, 0x30, 0x2e,
  0x30, 0x30, 0x31, 0x66, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e,
  0x65, 0x20, 0x46, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x45, 0x20,
  0x31, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x66, 0x0d, 0x0a, 0x23, 0x64, 0x65,
  0x66, 0x69, 0x6e, 0x65, 0x20, 0x48, 0x69, 0x74, 0x44, 0x69, 0x73, 0x74,
  0x61, 0x6e, 0x63, 0x65, 0x4f, 0x6e, 0x4d, 0x69, 0x73, 0x73, 0x20, 0x30,
  0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x41,
  0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
  0x20, 0x44, 0x33, 0x44, 0x31, 0x32, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45,
  0x52, 0x5f, 0x41, 0x4e, 0x49, 0x53, 0x4f, 0x54, 0x52, 0x4f, 0x50, 0x49,
  0x43, 0x0d, 0x0a, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x64, 0x65, 0x66, 0x20,
  0x48, 0x4c, 0x53, 0x4c, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65,
  0x66, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
  0x6c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x46, 0x6f, 0x72,
  0x6d, 0x61, 0x74, 0x3b, 0x0d, 0x0a, 0x23, 0x65, 0x6c, 0x73, 0x65, 0x0d,
  0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x43, 0x4f, 0x4d,
  0x50, 0x41, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f,
  0x44, 0x45, 0x50, 0x54, 0x48, 0x5f, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46,
  0x4f, 0x52, 0x4d, 0x41, 0x54, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46,
  0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x52, 0x33, 0x32, 0x5f, 0x55, 0x49,
  0x4e, 0x54, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x0d, 0x0a,
  0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
  0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x43, 0x53, 0x20,
  0x7b, 0x0d, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75,
  0x70, 0x20, 0x7b, 0x0d, 0x0a, 0x09, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x20,
  0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b, 0x20, 0x57, 0x69, 0x64, 0x74, 0x68,
  0x20, 0x3d, 0x20, 0x38, 0x2c, 0x20, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
  0x20, 0x3d, 0x20, 0x31, 0x36, 0x2c, 0x20, 0x53, 0x69, 0x7a, 0x65, 0x20,
  0x3d, 0x20, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x2a, 0x20, 0x48, 0x65,
  0x69, 0x67, 0x68, 0x74, 0x2c, 0x20, 0x4e, 0x75, 0x6d, 0x45, 0x6c, 0x65,
  0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x4c, 0x6f, 0x61, 0x64, 0x50,
  0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x3d, 0x20, 0x31,
  0x30, 0x20, 0x7d, 0x3b, 0x09, 0x0d, 0x0a, 0x09, 0x7d, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x41, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x57, 0x61, 0x76, 0x65,
  0x6c, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
  0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x53, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75,
  0x70, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x65, 0x6e, 0x75, 0x6d, 0x20, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b,
  0x20, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x36, 0x2c,
  0x20, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x3d, 0x20, 0x31, 0x36,
  0x2c, 0x20, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x3d, 0x20, 0x57, 0x69, 0x64,
  0x74, 0x68, 0x20, 0x2a, 0x20, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20,
  0x7d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d,
  0x70, 0x75, 0x74, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61,
  0x72, 0x61, 0x6d, 0x73, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x54, 0x68,
  0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x75,
  0x6d, 0x20, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b, 0x20, 0x57, 0x69, 0x64,
  0x74, 0x68, 0x20, 0x3d, 0x20, 0x38, 0x2c, 0x20, 0x48, 0x65, 0x69, 0x67,
  0x68, 0x74, 0x20, 0x3d, 0x20, 0x38, 0x2c, 0x20, 0x53, 0x69, 0x7a, 0x65,
  0x20, 0x3d, 0x20, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x2a, 0x20, 0x48,
  0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a,
  0x23, 0x69, 0x66, 0x64, 0x65, 0x66, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x0d,
  0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x22, 0x48,
  0x6c, 0x73, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x2e, 0x68, 0x6c,
  0x73, 0x6c, 0x69, 0x22, 0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65,
  0x66, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x49, 0x6e, 0x64, 0x65, 0x78,
  0x3b, 0x0d, 0x0a, 0x23, 0x65, 0x6c, 0x73, 0x65, 0x0d, 0x0a, 0x75, 0x73,
  0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20, 0x55, 0x49,
  0x4e, 0x54, 0x20, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x0d, 0x0a, 0x23,
  0x65, 0x6e, 0x64, 0x69, 0x66, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72,
  0x75, 0x63, 0x74, 0x20, 0x52, 0x61, 0x79, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33,
  0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x64,
  0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x7d,
  0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x47, 0x42, 0x75, 0x66,
  0x66, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x63, 0x6f, 0x6c,
  0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x64, 0x75, 0x72, 0x69, 0x6e,
  0x67, 0x20, 0x70, 0x61, 0x74, 0x68, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e,
  0x67, 0x20, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73,
  0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x20, 0x41, 0x6d,
  0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73,
  0x69, 0x6f, 0x6e, 0x20, 0x72, 0x61, 0x79, 0x20, 0x74, 0x72, 0x61, 0x63,
  0x65, 0x20, 0x70, 0x61, 0x73, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64,
  0x65, 0x6e, 0x6f, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x0d, 0x0a, 0x73,
  0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e,
  0x74, 0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x42,
  0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x48, 0x69, 0x74,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x33, 0x20, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x68, 0x69,
  0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20,
  0x74, 0x6f, 0x20, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
  0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x6f, 0x65,
  0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x64, 0x69, 0x66, 0x66,
  0x75, 0x73, 0x65, 0x42, 0x79, 0x74, 0x65, 0x33, 0x3b, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x72, 0x65,
  0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x20, 0x6f,
  0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x68, 0x69, 0x74, 0x20, 0x73, 0x75,
  0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x2f, 0x2f, 0x20, 0x54, 0x4f, 0x44, 0x4f, 0x3a, 0x20, 0x52, 0x54, 0x41,
  0x4f, 0x20, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x75,
  0x73, 0x65, 0x73, 0x20, 0x31, 0x36, 0x62, 0x20, 0x65, 0x6e, 0x63, 0x6f,
  0x64, 0x65, 0x64, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20,
  0x74, 0x68, 0x65, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x73, 0x61,
  0x6d, 0x65, 0x20, 0x62, 0x69, 0x74, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
  0x64, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62,
  0x65, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x20, 0x68, 0x65,
  0x72, 0x65, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x20, 0x74, 0x6f, 0x20, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x74, 0x68,
  0x65, 0x20, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x27, 0x73, 0x20, 0x73,
  0x69, 0x7a, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x6f, 0x74, 0x65,
  0x6e, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x6d, 0x70, 0x72,
  0x6f, 0x76, 0x65, 0x20, 0x50, 0x61, 0x74, 0x68, 0x74, 0x72, 0x61, 0x63,
  0x65, 0x72, 0x27, 0x73, 0x20, 0x70, 0x65, 0x72, 0x66, 0x20, 0x77, 0x69,
  0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x75, 0x63, 0x68, 0x2f, 0x61,
  0x6e, 0x79, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x6c,
  0x6f, 0x73, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x52, 0x54, 0x41, 0x4f, 0x2e,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x20, 0x46, 0x75,
  0x72, 0x74, 0x68, 0x65, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x2c, 0x20, 0x5f,
  0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
  0x6c, 0x20, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x75, 0x6c,
  0x64, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x20,
  0x62, 0x69, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x6f,
  0x6f, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c,
  0x4f, 0x41, 0x54, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
  0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
  0x6c, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x68, 0x69, 0x74,
  0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x20, 0x0d, 0x0a,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4d, 0x65, 0x6d,
  0x62, 0x65, 0x72, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 0x6f, 0x74,
  0x69, 0x6f, 0x6e, 0x20, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63,
  0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54,
  0x33, 0x20, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x69,
  0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x20,
  0x68, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20,
  0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x76, 0x69,
  0x6f, 0x75, 0x73, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x2f, 0x2f, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x72,
  0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x70, 0x6f, 0x69,
  0x6e, 0x74, 0x73, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20,
  0x61, 0x20, 0x74, 0x72, 0x75, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64,
  0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66,
  0x20, 0x61, 0x20, 0x68, 0x69, 0x74, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x46, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x65,
  0x64, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2c, 0x20, 0x74, 0x68,
  0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6c,
  0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f,
  0x66, 0x20, 0x61, 0x20, 0x68, 0x69, 0x74, 0x20, 0x72, 0x65, 0x66, 0x6c,
  0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x73,
  0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
  0x65, 0x64, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x20, 0x20, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61,
  0x74, 0x65, 0x6c, 0x79, 0x20, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x63, 0x72,
  0x65, 0x65, 0x6e, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x63, 0x6f,
  0x6f, 0x72, 0x64, 0x73, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x70, 0x72,
  0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x63, 0x6f,
  0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20,
  0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x61, 0x79, 0x20, 0x64,
  0x65, 0x70, 0x74, 0x68, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58,
  0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63,
  0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x73, 0x75,
  0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x76,
  0x69, 0x6f, 0x75, 0x73, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x0d, 0x0a,
  0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75,
  0x63, 0x74, 0x20, 0x50, 0x61, 0x74, 0x68, 0x74, 0x72, 0x61, 0x63, 0x65,
  0x72, 0x52, 0x61, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54,
  0x20, 0x72, 0x61, 0x79, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f,
  0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x72, 0x61,
  0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x54, 0x4f, 0x44, 0x4f, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
  0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x42, 0x75,
  0x66, 0x66, 0x65, 0x72, 0x20, 0x41, 0x4f, 0x47, 0x42, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73,
  0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
  0x52, 0x61, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x74, 0x48, 0x69, 0x74, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x74, 0x69,
  0x6d, 0x65, 0x20, 0x3c, 0x30, 0x2c, 0x2e, 0x2e, 0x3e, 0x20, 0x6f, 0x6e,
  0x20, 0x48, 0x69, 0x74, 0x2e, 0x20, 0x2d, 0x31, 0x20, 0x6f, 0x6e, 0x20,
  0x6d, 0x69, 0x73, 0x73, 0x2e, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x41, 0x74, 0x72, 0x6f,
  0x75, 0x73, 0x57, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x74, 0x54, 0x72, 0x61,
  0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
  0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58,
  0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x57,
  0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x75,
  0x73, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
  0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x75, 0x73, 0x65,
  0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x72, 0x6e,
  0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6b, 0x65, 0x72, 0x6e, 0x65,
  0x6c, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4c, 0x65, 0x72, 0x66, 0x43,
  0x6f, 0x65, 0x66, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49,
  0x4e, 0x54, 0x20, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
  0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x55, 0x49, 0x4e, 0x54, 0x20, 0x6d, 0x61, 0x78, 0x4b, 0x65, 0x72, 0x6e,
  0x65, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61,
  0x79, 0x48, 0x69, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
  0x54, 0x6f, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x64, 0x74,
  0x68, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x79, 0x48, 0x69,
  0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4b,
  0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x63, 0x61,
  0x6c, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x70, 0x65,
  0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x72,
  0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x49, 0x6e, 0x74,
  0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d,
  0x69, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f,
  0x44, 0x65, 0x6e, 0x6f, 0x69, 0x73, 0x65, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x61,
  0x6c, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x70,
  0x74, 0x68, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x44, 0x65, 0x70, 0x74, 0x68,
  0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x73, 0x61, 0x42,
  0x69, 0x74, 0x73, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75,
  0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65,
  0x5f, 0x42, 0x69, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x69,
  0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74,
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65,
  0x70, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x6f, 0x75,
  0x74, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x75, 0x73, 0x65, 0x44,
  0x65, 0x70, 0x74, 0x68, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x75,
  0x73, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
  0x68, 0x74, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49,
  0x4e, 0x54, 0x20, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x64,
  0x74, 0x68, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55,
  0x49, 0x4e, 0x54, 0x20, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x61,
  0x64, 0x69, 0x75, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
  0x5b, 0x33, 0x5d, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x43, 0x61, 0x6c, 0x63, 0x75,
  0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6e, 0x56, 0x61, 0x72, 0x69,
  0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74,
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x6b, 0x65, 0x72,
  0x6e, 0x65, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x6b, 0x65, 0x72, 0x6e,
  0x65, 0x6c, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x64, 0x6f,
  0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x61, 0x72, 0x65, 0x45,
  0x76, 0x65, 0x6e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x41, 0x63, 0x74,
  0x69, 0x76, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49,
  0x4e, 0x54, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x74, 0x65, 0x70,
  0x59, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x3b, 0x0d, 0x0a,
  0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
  0x20, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
  0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54,
  0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20,
  0x64, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x6f, 0x61,
  0x72, 0x64, 0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f,
  0x4f, 0x4c, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x6f,
  0x61, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
  0x61, 0x79, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x50, 0x69,
  0x78, 0x65, 0x6c, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x73, 0x65,
  0x65, 0x64, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e,
  0x54, 0x20, 0x6e, 0x75, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
  0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x6e, 0x75, 0x6d, 0x53, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x6e, 0x75, 0x6d, 0x50, 0x69,
  0x78, 0x65, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x50, 0x65,
  0x72, 0x53, 0x65, 0x74, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x53, 0x6f, 0x72, 0x74,
  0x52, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x64,
  0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f,
  0x4c, 0x20, 0x75, 0x73, 0x65, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64,
  0x72, 0x61, 0x6c, 0x52, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f,
  0x20, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61,
  0x20, 0x62, 0x69, 0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x20,
  0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x6f, 0x72,
  0x74, 0x20, 0x66, 0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x20, 0x62, 0x61,
  0x73, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63,
  0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
  0x53, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x79, 0x73, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75,
  0x70, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x65, 0x6e, 0x75, 0x6d, 0x20, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b,
  0x20, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x36, 0x34, 0x2c,
  0x20, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x3d, 0x20, 0x31, 0x36,
  0x2c, 0x20, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x3d, 0x20, 0x57, 0x69, 0x64,
  0x74, 0x68, 0x20, 0x2a, 0x20, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20,
  0x7d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
  0x63, 0x65, 0x20, 0x52, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x20,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65,
  0x6e, 0x75, 0x6d, 0x20, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b, 0x20, 0x4e,
  0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69,
  0x72, 0x73, 0x50, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20,
  0x3d, 0x20, 0x34, 0x2c, 0x20, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x3d,
  0x20, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
  0x3a, 0x3a, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2c, 0x20, 0x48, 0x65, 0x69,
  0x67, 0x68, 0x74, 0x20, 0x3d, 0x20, 0x4e, 0x75, 0x6d, 0x45, 0x6c, 0x65,
  0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72, 0x73, 0x50, 0x65, 0x72,
  0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x2a, 0x20, 0x32, 0x20, 0x2a,
  0x20, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
  0x3a, 0x3a, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2c, 0x20, 0x53, 0x69,
  0x7a, 0x65, 0x20, 0x3d, 0x20, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x2a,
  0x20, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x7d, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x6e, 0x64,
  0x65, 0x66, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x61, 0x73, 0x73, 0x65,
  0x72, 0x74, 0x28, 0x20, 0x52, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
  0x3a, 0x3a, 0x57, 0x69, 0x64, 0x74, 0x68, 0x20, 0x3c, 0x3d, 0x20, 0x36,
  0x34, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x26, 0x26, 0x20, 0x52,
  0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x3a, 0x3a, 0x48, 0x65, 0x69,
  0x67, 0x68, 0x74, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x32, 0x38, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x26, 0x26, 0x20, 0x52, 0x61, 0x79, 0x47, 0x72,
  0x6f, 0x75, 0x70, 0x3a, 0x3a, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x3c, 0x3d,
  0x20, 0x38, 0x31, 0x39, 0x32, 0x2c, 0x20, 0x22, 0x52, 0x61, 0x79, 0x20,
  0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
  0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x75, 0x74,
  0x73, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x70,
  0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74,
  0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x6f,
  0x72, 0x74, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x22, 0x29,
  0x3b, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x50,
  0x61, 0x74, 0x68, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e,
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x4d, 0x41,
  0x54, 0x52, 0x49, 0x58, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69,
  0x74, 0x68, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72,
  0x69, 0x67, 0x69, 0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58,
  0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x63, 0x61, 0x6d, 0x65,
  0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x75, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x41, 0x6c, 0x62,
  0x65, 0x64, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x65, 0x72,
  0x69, 0x61, 0x6c, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d,
  0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x4d, 0x61, 0x70, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x6c, 0x69,
  0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x20, 0x20, 0x20,
  0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65,
  0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x3b,
  0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x4d, 0x41,
  0x54, 0x52, 0x49, 0x58, 0x20, 0x70, 0x72, 0x65, 0x76, 0x46, 0x72, 0x61,
  0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x4d, 0x41, 0x54, 0x52, 0x49,
  0x58, 0x20, 0x70, 0x72, 0x65, 0x76, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50,
  0x72, 0x6f, 0x6a, 0x54, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6d,
  0x65, 0x72, 0x61, 0x41, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41,
  0x54, 0x33, 0x20, 0x70, 0x72, 0x65, 0x76, 0x46, 0x72, 0x61, 0x6d, 0x65,
  0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x20, 0x20, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
  0x67, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x5a, 0x6e, 0x65, 0x61, 0x72, 0x3b, 0x0d, 0x0a, 0x09, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x5a, 0x66, 0x61, 0x72, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x20, 0x6d, 0x61, 0x78,
  0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x61, 0x79, 0x52,
  0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54,
  0x20, 0x20, 0x6d, 0x61, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x52,
  0x61, 0x79, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44,
  0x65, 0x70, 0x74, 0x68, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x52, 0x54,
  0x41, 0x4f, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75,
  0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x73, 0x65, 0x65, 0x64, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x6e, 0x75,
  0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53,
  0x65, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e,
  0x54, 0x20, 0x6e, 0x75, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53,
  0x65, 0x74, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49,
  0x4e, 0x54, 0x20, 0x6e, 0x75, 0x6d, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73,
  0x50, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74,
  0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x48,
  0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4d,
  0x61, 0x78, 0x20, 0x41, 0x4f, 0x20, 0x72, 0x61, 0x79, 0x20, 0x68, 0x69,
  0x74, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20,
  0x66, 0x6f, 0x72, 0x20, 0x74, 0x4d, 0x61, 0x78, 0x20, 0x69, 0x6e, 0x20,
  0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x61, 0x79, 0x2e, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x61, 0x70, 0x70, 0x72,
  0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
  0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x41, 0x70, 0x70,
  0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x74,
  0x65, 0x72, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
  0x73, 0x2e, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65,
  0x66, 0x6c, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61,
  0x6c, 0x65, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x2f, 0x2f, 0x20, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x20, 0x72,
  0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x66,
  0x72, 0x6f, 0x6d, 0x20, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
  0x67, 0x20, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x20,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x41, 0x6d, 0x62, 0x69, 0x65,
  0x6e, 0x74, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69,
  0x6f, 0x6e, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6c, 0x6c, 0x75,
  0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x65,
  0x66, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x61, 0x20, 0x72, 0x61, 0x79,
  0x20, 0x69, 0x73, 0x20, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64,
  0x2e, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x54, 0x68, 0x65, 0x6f, 0x72, 0x65,
  0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x48, 0x69,
  0x74, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4d,
  0x61, 0x78, 0x20, 0x41, 0x4f, 0x20, 0x72, 0x61, 0x79, 0x20, 0x68, 0x69,
  0x74, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20,
  0x69, 0x6e, 0x20, 0x66, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x20, 0x63,
  0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61,
  0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f,
  0x72, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x65, 0x78, 0x70,
  0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x61, 0x6c, 0x6c,
  0x6f, 0x66, 0x66, 0x4d, 0x69, 0x6e, 0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73,
  0x69, 0x6f, 0x6e, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x20, 0x61, 0x6e,
  0x64, 0x20, 0x6d, 0x61, 0x78, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x48, 0x69,
  0x74, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x20, 0x20, 0x20, 0x20, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x75, 0x73, 0x65,
  0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x61, 0x79, 0x73, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32,
  0x20, 0x72, 0x61, 0x79, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x44,
  0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42,
  0x4f, 0x4f, 0x4c, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x78, 0x70,
  0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x61, 0x6c, 0x6c,
  0x6f, 0x66, 0x66, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x41, 0x70, 0x70, 0x6c, 0x79, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65,
  0x6e, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x66, 0x61, 0x6c, 0x6c, 0x6f, 0x66,
  0x66, 0x20, 0x74, 0x6f, 0x20, 0x41, 0x4f, 0x20, 0x63, 0x6f, 0x65, 0x66,
  0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x61, 0x73, 0x65,
  0x64, 0x20, 0x6f, 0x6e, 0x20, 0x72, 0x61, 0x79, 0x20, 0x68, 0x69, 0x74,
  0x20, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x20, 0x20,
  0x20, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61,
  0x6c, 0x46, 0x61, 0x6c, 0x6c, 0x6f, 0x66, 0x66, 0x44, 0x65, 0x63, 0x61,
  0x79, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x64, 0x6f, 0x43,
  0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53,
  0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x61, 0x72, 0x65, 0x45, 0x76,
  0x65, 0x6e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x41, 0x63, 0x74, 0x69,
  0x76, 0x65, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55,
  0x49, 0x4e, 0x54, 0x20, 0x73, 0x70, 0x70, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61, 0x64, 0x64,
  0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x20, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x69, 0x6e,
  0x61, 0x6c, 0x20, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x6f, 0x75,
  0x74, 0x70, 0x75, 0x74, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x0d,
  0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
  0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x20, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x50, 0x42, 0x52, 0x53, 0x68, 0x61, 0x64,
  0x69, 0x6e, 0x67, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63,
  0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x5f, 0x44,
  0x65, 0x6e, 0x6f, 0x69, 0x73, 0x65, 0x64, 0x2c, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63,
  0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x5f, 0x52,
  0x61, 0x77, 0x4f, 0x6e, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2c, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
  0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64,
  0x44, 0x69, 0x73, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
  0x4d, 0x61, 0x70, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x41, 0x6d,
  0x62, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69,
  0x6f, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2c, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
  0x4f, 0x63, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63,
  0x61, 0x6c, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2c, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x52, 0x54, 0x41, 0x4f, 0x48, 0x69, 0x74,
  0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2c, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x73, 0x4f, 0x6e,
  0x6c, 0x79, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x44, 0x65, 0x70,
  0x74, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x2c, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
  0x61, 0x6c, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x2c, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x0d, 0x0a, 0x7d, 0x3b,
  0x0d, 0x0a, 0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
  0x65, 0x20, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
  0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
  0x47, 0x42, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65,
  0x6e, 0x75, 0x6d, 0x20, 0x54, 0x79, 0x70, 0x65, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x33, 0x32, 0x47,
  0x33, 0x32, 0x42, 0x33, 0x32, 0x41, 0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x31, 0x36, 0x47, 0x31, 0x36, 0x42,
  0x31, 0x36, 0x41, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x2c,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x31,
  0x31, 0x47, 0x31, 0x31, 0x42, 0x31, 0x30, 0x5f, 0x46, 0x4c, 0x4f, 0x41,
  0x54, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x43, 0x6f, 0x75, 0x6e, 0x74, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d,
  0x3b, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x6e, 0x64, 0x65, 0x66, 0x20, 0x48,
  0x4c, 0x53, 0x4c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x6c,
  0x69, 0x6e, 0x65, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52,
  0x4d, 0x41, 0x54, 0x20, 0x54, 0x6f, 0x44, 0x58, 0x47, 0x49, 0x46, 0x6f,
  0x72, 0x6d, 0x61, 0x74, 0x28, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x74, 0x79,
  0x70, 0x65, 0x29, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x77, 0x69, 0x74,
  0x63, 0x68, 0x20, 0x28, 0x74, 0x79, 0x70, 0x65, 0x29, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x52,
  0x33, 0x32, 0x47, 0x33, 0x32, 0x42, 0x33, 0x32, 0x41, 0x33, 0x32, 0x5f,
  0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
  0x54, 0x5f, 0x52, 0x33, 0x32, 0x47, 0x33, 0x32, 0x42, 0x33, 0x32, 0x41,
  0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20,
  0x52, 0x31, 0x36, 0x47, 0x31, 0x36, 0x42, 0x31, 0x36, 0x41, 0x31, 0x36,
  0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3a, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
  0x41, 0x54, 0x5f, 0x52, 0x31, 0x36, 0x47, 0x31, 0x36, 0x42, 0x31, 0x36,
  0x41, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65,
  0x20, 0x52, 0x31, 0x31, 0x47, 0x31, 0x31, 0x42, 0x31, 0x30, 0x5f, 0x46,
  0x4c, 0x4f, 0x41, 0x54, 0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
  0x5f, 0x52, 0x31, 0x31, 0x47, 0x31, 0x31, 0x42, 0x31, 0x30, 0x5f, 0x46,
  0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x44, 0x58, 0x47,
  0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x4b,
  0x4e, 0x4f, 0x57, 0x4e, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d,
  0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x0d, 0x0a, 0x7d, 0x0d,
  0x0a, 0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
  0x20, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f,
  0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0d,
  0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x75, 0x6d,
  0x20, 0x54, 0x79, 0x70, 0x65, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x52, 0x38, 0x5f, 0x55, 0x4e, 0x4f, 0x52, 0x4d, 0x2c, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f, 0x75, 0x6e,
  0x74, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x23,
  0x69, 0x66, 0x6e, 0x64, 0x65, 0x66, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x20,
  0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x20,
  0x54, 0x6f, 0x44, 0x58, 0x47, 0x49, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
  0x28, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x74, 0x79, 0x70, 0x65, 0x29, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x28,
  0x74, 0x79, 0x70, 0x65, 0x29, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x52, 0x33, 0x32, 0x5f, 0x46,
  0x4c, 0x4f, 0x41, 0x54, 0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
  0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
  0x5f, 0x52, 0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73,
  0x65, 0x20, 0x52, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3a,
  0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x44, 0x58, 0x47, 0x49,
  0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x52, 0x31, 0x36, 0x5f,
  0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x52, 0x38, 0x5f,
  0x55, 0x4e, 0x4f, 0x52, 0x4d, 0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
  0x6e, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
  0x54, 0x5f, 0x52, 0x38, 0x5f, 0x55, 0x4e, 0x4f, 0x52, 0x4d, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
  0x72, 0x6e, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
  0x41, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64,
  0x69, 0x66, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x6e,
  0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
  0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x47, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x79,
  0x70, 0x65, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x52, 0x33, 0x32, 0x47, 0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x31, 0x36, 0x47, 0x31, 0x36, 0x5f,
  0x46, 0x4c, 0x4f, 0x41, 0x54, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x52, 0x38, 0x47, 0x38, 0x5f, 0x53, 0x4e, 0x4f,
  0x52, 0x4d, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x7d, 0x3b, 0x0d, 0x0a, 0x23, 0x69, 0x66, 0x6e, 0x64, 0x65, 0x66, 0x20,
  0x48, 0x4c, 0x53, 0x4c, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e,
  0x6c, 0x69, 0x6e, 0x65, 0x20, 0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f,
  0x52, 0x4d, 0x41, 0x54, 0x20, 0x54, 0x6f, 0x44, 0x58, 0x47, 0x49, 0x46,
  0x6f, 0x72, 0x6d, 0x61, 0x74, 0x28, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x74,
  0x79, 0x70, 0x65, 0x29, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x77, 0x69,
  0x74, 0x63, 0x68, 0x20, 0x28, 0x74, 0x79, 0x70, 0x65, 0x29, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20,
  0x52, 0x33, 0x32, 0x47, 0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54,
  0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x44, 0x58, 0x47,
  0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x52, 0x33, 0x32,
  0x47, 0x33, 0x32, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65,
  0x20, 0x52, 0x31, 0x36, 0x47, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41,
  0x54, 0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x44, 0x58,
  0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x52, 0x31,
  0x36, 0x47, 0x31, 0x36, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73,
  0x65, 0x20, 0x52, 0x38, 0x47, 0x38, 0x5f, 0x53, 0x4e, 0x4f, 0x52, 0x4d,
  0x3a, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x44, 0x58, 0x47,
  0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x52, 0x38, 0x47,
  0x38, 0x5f, 0x53, 0x4e, 0x4f, 0x52, 0x4d, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20,
  0x44, 0x58, 0x47, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
  0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x0d,
  0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
  0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x6e, 0x64,
  0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x73,
  0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x20, 0x63,
  0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
  0x70, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e,
  0x54, 0x20, 0x69, 0x73, 0x41, 0x4f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
  0x64, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61,
  0x74, 0x20, 0x52, 0x54, 0x41, 0x4f, 0x5f, 0x4d, 0x61, 0x78, 0x52, 0x61,
  0x79, 0x48, 0x69, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6d, 0x62, 0x69,
  0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
  0x63, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65,
  0x53, 0x74, 0x64, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63,
  0x61, 0x6c, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
  0x6f, 0x61, 0x74, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5b,
  0x32, 0x5d, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73,
  0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
  0x65, 0x44, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74,
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32,
  0x20, 0x69, 0x6e, 0x76, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44,
  0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73,
  0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
  0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66,
  0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58,
  0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x55, 0x49, 0x4e, 0x54, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61,
  0x64, 0x64, 0x69, 0x6e, 0x67, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x54, 0x65, 0x6d,
  0x70, 0x6f, 0x72, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x61,
  0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x76, 0x65, 0x72,
  0x73, 0x65, 0x52, 0x65, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
  0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d,
  0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
  0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58,
  0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32, 0x20, 0x69, 0x6e, 0x76, 0x54,
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x44, 0x65,
  0x70, 0x74, 0x68, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x6e, 0x74, 0x69, 0x73,
  0x73, 0x61, 0x42, 0x69, 0x74, 0x73, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f,
  0x66, 0x20, 0x4d, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x73, 0x61, 0x20, 0x42,
  0x69, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x6d,
  0x61, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e,
  0x70, 0x75, 0x74, 0x20, 0x64, 0x65, 0x70, 0x74, 0x68, 0x20, 0x72, 0x65,
  0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x6d,
  0x61, 0x74, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f,
  0x4c, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6c, 0x61, 0x74,
  0x65, 0x72, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x61, 0x6d, 0x70,
  0x6c, 0x65, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70,
  0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x54, 0x65,
  0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73,
  0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x42, 0x6c, 0x65, 0x6e,
  0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
  0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x74,
  0x64, 0x44, 0x65, 0x76, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x63, 0x6c, 0x61,
  0x6d, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
  0x65, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
  0x61, 0x74, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x5f,
  0x6d, 0x69, 0x6e, 0x53, 0x74, 0x64, 0x44, 0x65, 0x76, 0x54, 0x6f, 0x6c,
  0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69,
  0x6e, 0x67, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x44, 0x69,
  0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x54, 0x73,
  0x70, 0x70, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65,
  0x55, 0x73, 0x65, 0x4d, 0x69, 0x6e, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68,
  0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69,
  0x6e, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x46, 0x61,
  0x63, 0x74, 0x6f, 0x72, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55,
  0x49, 0x4e, 0x54, 0x20, 0x6d, 0x69, 0x6e, 0x54, 0x73, 0x70, 0x70, 0x54,
  0x6f, 0x55, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
  0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x62, 0x6c,
  0x75, 0x72, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x4d,
  0x61, 0x78, 0x54, 0x73, 0x70, 0x70, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x6c, 0x75, 0x72, 0x44,
  0x65, 0x63, 0x61, 0x79, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20,
  0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
  0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x63, 0x68, 0x65, 0x63,
  0x6b, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x72, 0x65,
  0x45, 0x76, 0x65, 0x6e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x41, 0x63,
  0x74, 0x69, 0x76, 0x65, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x43, 0x61, 0x6c, 0x63,
  0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
  0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x43,
  0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d,
  0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
  0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
  0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
  0x5b, 0x32, 0x5d, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a,
  0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x44, 0x6f, 0x77, 0x6e, 0x41,
  0x6e, 0x64, 0x55, 0x70, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x69,
  0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
  0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32, 0x20,
  0x69, 0x6e, 0x76, 0x48, 0x69, 0x52, 0x65, 0x73, 0x54, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32, 0x20, 0x69, 0x6e,
  0x76, 0x4c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x44, 0x69, 0x6d, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x47, 0x72, 0x61, 0x73, 0x73, 0x20, 0x47,
  0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x0d, 0x0a, 0x23, 0x64, 0x65,
  0x66, 0x69, 0x6e, 0x65, 0x20, 0x4e, 0x5f, 0x47, 0x52, 0x41, 0x53, 0x53,
  0x5f, 0x54, 0x52, 0x49, 0x41, 0x4e, 0x47, 0x4c, 0x45, 0x53, 0x20, 0x35,
  0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x4e, 0x5f,
  0x47, 0x52, 0x41, 0x53, 0x53, 0x5f, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43,
  0x45, 0x53, 0x20, 0x37, 0x0d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e,
  0x65, 0x20, 0x4d, 0x41, 0x58, 0x5f, 0x47, 0x52, 0x41, 0x53, 0x53, 0x5f,
  0x53, 0x54, 0x52, 0x41, 0x57, 0x53, 0x5f, 0x31, 0x44, 0x20, 0x31, 0x30,
  0x30, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x47, 0x65,
  0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x73, 0x73, 0x53,
  0x74, 0x72, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x41, 0x70, 0x70, 0x50,
  0x61, 0x72, 0x61, 0x6d, 0x73, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20, 0x61, 0x63,
  0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x6d,
  0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
  0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76,
  0x65, 0x20, 0x67, 0x72, 0x61, 0x73, 0x73, 0x20, 0x73, 0x74, 0x72, 0x61,
  0x77, 0x73, 0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x55,
  0x49, 0x4e, 0x54, 0x32, 0x20, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x74, 0x63,
  0x68, 0x44, 0x69, 0x6d, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f,
  0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x20,
  0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x2e, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d,
  0x46, 0x4c, 0x4f, 0x41, 0x54, 0x32, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x4f,
  0x66, 0x66, 0x73, 0x65, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x72, 0x61, 0x73, 0x73, 0x48,
  0x65, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x72, 0x61, 0x73, 0x73, 0x53,
  0x63, 0x61, 0x6c, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54,
  0x33, 0x20, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x67, 0x72, 0x61, 0x73, 0x73, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65,
  0x73, 0x73, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58,
  0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x77, 0x69, 0x6e, 0x64,
  0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x69,
  0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x69, 0x74,
  0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x62, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
  0x41, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x3b,
  0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75,
  0x63, 0x74, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47,
  0x72, 0x61, 0x73, 0x73, 0x53, 0x74, 0x72, 0x61, 0x77, 0x73, 0x43, 0x6f,
  0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
  0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46,
  0x4c, 0x4f, 0x41, 0x54, 0x32, 0x20, 0x69, 0x6e, 0x76, 0x41, 0x63, 0x74,
  0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x6d, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,
  0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x31, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61, 0x64,
  0x64, 0x69, 0x6e, 0x67, 0x32, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x73,
  0x73, 0x53, 0x74, 0x72, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74,
  0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x41, 0x70,
  0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x20, 0x70, 0x3b, 0x0d, 0x0a,
  0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x2f, 0x2f, 0x20, 0x41,
  0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x20, 0x70, 0x65,
  0x72, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20,
  0x74, 0x79, 0x70, 0x65, 0x2e, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63,
  0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43,
  0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x09, 0x55, 0x49, 0x4e, 0x54, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
  0x49, 0x44, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
  0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x3b, 0x20, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x3b,
  0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65,
  0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
  0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x65, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x79, 0x70, 0x65, 0x20,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x44,
  0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x2c, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x4c, 0x61, 0x6d, 0x62,
  0x65, 0x72, 0x74, 0x69, 0x61, 0x6e, 0x20, 0x73, 0x63, 0x61, 0x74, 0x74,
  0x65, 0x72, 0x69, 0x6e, 0x67, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2c, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x53, 0x70, 0x65, 0x63, 0x75, 0x6c,
  0x61, 0x72, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
  0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20,
  0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20,
  0x74, 0x68, 0x65, 0x20, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x20,
  0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x41, 0x6e, 0x61, 0x6c,
  0x79, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
  0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
  0x65, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x7d,
  0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x50,
  0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x65,
  0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x09, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33,
  0x20, 0x4b, 0x64, 0x3b, 0x0d, 0x0a, 0x09, 0x58, 0x4d, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x33, 0x20, 0x4b, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x4b, 0x72,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x33, 0x20, 0x4b, 0x74, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x6f, 0x70,
  0x61, 0x63, 0x69, 0x74, 0x79, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x65, 0x74, 0x61,
  0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
  0x20, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x68, 0x61,
  0x73, 0x44, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x42, 0x4f,
  0x4f, 0x4c, 0x20, 0x68, 0x61, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
  0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x20, 0x68, 0x61, 0x73, 0x50, 0x65,
  0x72, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x54, 0x61, 0x6e, 0x67, 0x65,
  0x6e, 0x74, 0x73, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x4d, 0x61,
  0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x3a,
  0x54, 0x79, 0x70, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x70, 0x61,
  0x64, 0x64, 0x69, 0x6e, 0x67, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a,
  0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x41, 0x6c, 0x69,
  0x67, 0x6e, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x71, 0x75, 0x61,
  0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x44, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f,
  0x41, 0x54, 0x32, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x20,
  0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x3b, 0x20, 0x20, 0x2f, 0x2f,
  0x20, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20,
  0x31, 0x36, 0x42, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73,
  0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65,
  0x64, 0x48, 0x65, 0x6d, 0x69, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x53,
  0x61, 0x6d, 0x70, 0x6c, 0x65, 0x33, 0x44, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33,
  0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
  0x67, 0x3b, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x50, 0x61, 0x64, 0x64, 0x69,
  0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x36, 0x42, 0x0d, 0x0a, 0x7d,
  0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20,
  0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20,
  0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20,
  0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x56, 0x65,
  0x72, 0x74, 0x65, 0x78, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
  0x65, 0x54, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x0d, 0x0a, 0x7b, 0x0d,
  0x0a, 0x09, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x70,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0d, 0x0a, 0x09, 0x58,
  0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x3b, 0x0d, 0x0a, 0x09, 0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41,
  0x54, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f,
  0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x3b, 0x0d, 0x0a, 0x09,
  0x58, 0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x20, 0x74, 0x61, 0x6e,
  0x67, 0x65, 0x6e, 0x74, 0x3b, 0x0d, 0x0a, 0x7d, 0x3b, 0x0d, 0x0a, 0x0d,
  0x0a, 0x2f, 0x2f, 0x20, 0x52, 0x61, 0x79, 0x20, 0x74, 0x79, 0x70, 0x65,
  0x73, 0x20, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20,
  0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
  0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
  0x50, 0x61, 0x74, 0x68, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x52, 0x61,
  0x79, 0x54, 0x79, 0x70, 0x65, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x65, 0x6e, 0x75, 0x6d, 0x20, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x61,
  0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x09,
  0x2f, 0x2f, 0x20, 0x7e, 0x20, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63,
  0x65, 0x20, 0x72, 0x61, 0x79, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
  0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x61,
  0x6e, 0x64, 0x20, 0x47, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x64,
  0x61, 0x74, 0x61, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2c, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x7e, 0x20, 0x53, 0x68,
  0x61, 0x64, 0x6f, 0x77, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
  0x69, 0x74, 0x79, 0x20, 0x72, 0x61, 0x79, 0x73, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
  0x52, 0x54, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x20,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x75, 0x6d, 0x20,
  0x45, 0x6e, 0x75, 0x6d, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x41, 0x4f, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x09,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f,
  0x75, 0x6e, 0x74, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d,
  0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65,
  0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52,
  0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
  0x0d, 0x0a, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73, 0x74, 0x61,
  0x74, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x55, 0x49,
  0x4e, 0x54, 0x20, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d,
  0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x7e, 0x30, 0x3b, 0x20, 0x20, 0x20,
  0x2f, 0x2f, 0x20, 0x45, 0x76, 0x65, 0x72, 0x79, 0x74, 0x68, 0x69, 0x6e,
  0x67, 0x20, 0x69, 0x73, 0x20, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
  0x2e, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73,
  0x70, 0x61, 0x63, 0x65, 0x20, 0x48, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75,
  0x70, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73,
  0x74, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20, 0x4f, 0x66, 0x66, 0x73, 0x65,
  0x74, 0x5b, 0x50, 0x61, 0x74, 0x68, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72,
  0x52, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x75,
  0x6e, 0x74, 0x5d, 0x20, 0x3d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x2c, 0x20, 0x2f, 0x2f, 0x20,
  0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x72, 0x61, 0x79,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x31, 0x2c, 0x20, 0x2f, 0x2f, 0x20, 0x53, 0x68, 0x61, 0x64,
  0x6f, 0x77, 0x20, 0x72, 0x61, 0x79, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x09, 0x09, 0x73, 0x74,
  0x61, 0x74, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x55,
  0x49, 0x4e, 0x54, 0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79,
  0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x50, 0x61, 0x74,
  0x68, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x52, 0x61, 0x79, 0x54, 0x79,
  0x70, 0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e,
  0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x69, 0x73,
  0x73, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x7b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69,
  0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x55, 0x49, 0x4e, 0x54,
  0x20, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5b, 0x50, 0x61, 0x74, 0x68,
  0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x52, 0x61, 0x79, 0x54, 0x79, 0x70,
  0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5d, 0x20, 0x3d, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x30, 0x2c, 0x20, 0x2f, 0x2f, 0x20, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e,
  0x63, 0x65, 0x20, 0x72, 0x61, 0x79, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x31, 0x2c, 0x20, 0x2f,
  0x2f, 0x20, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x72, 0x61, 0x79,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b,
  0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x7d, 0x0d, 0x0a,
  0x0d, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
  0x52, 0x54, 0x41, 0x4f, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x61, 0x79,
  0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x0d, 0x0a,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69,
  0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x55, 0x49, 0x4e, 0x54,
  0x20, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x73,
  0x6b, 0x20, 0x3d, 0x20, 0x7e, 0x30, 0x3b, 0x20, 0x20, 0x20, 0x2f, 0x2f,
  0x20, 0x45, 0x76, 0x65, 0x72, 0x79, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x20,
  0x69, 0x73, 0x20, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x0d,
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
  0x63, 0x65, 0x20, 0x48, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x20,
  0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
  0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20,
  0x55, 0x49, 0x4e, 0x54, 0x20, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5b,
  0x52, 0x54, 0x41, 0x4f, 0x52, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x3a,
  0x3a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5d, 0x20, 0x3d, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x2c,
  0x20, 0x2f, 0x2f, 0x20, 0x41, 0x4f, 0x20, 0x72, 0x61, 0x79, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x53,
  0x69, 0x6e, 0x63, 0x65, 0x20, 0x74, 0x68, 0x65, 0x72, 0x65, 0x20, 0x69,
  0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x63,
  0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x20, 0x68, 0x69, 0x74, 0x20, 0x73,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x73,
  0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x72, 0x65, 0x63, 0x6f,
  0x72, 0x64, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x52, 0x54, 0x41, 0x4f, 0x2c,
  0x20, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x20, 0x61, 0x63, 0x63,
  0x65, 0x73, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x72, 0x73,
  0x74, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x72, 0x65, 0x63,
  0x6f, 0x72, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20,
  0x42, 0x4c, 0x41, 0x53, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
  0x65, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x72, 0x65, 0x63,
  0x6f, 0x72, 0x64, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x0d, 0x0a,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x74, 0x61, 0x74,
  0x69, 0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x55, 0x49, 0x4e,
  0x54, 0x20, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74,
  0x72, 0x69, 0x64, 0x65, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x0d, 0x0a, 0x20,
  0x20, 0x20, 0x20, 0x7d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6e, 0x61,
  0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x69, 0x73, 0x73,
  0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
  0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x55, 0x49, 0x4e, 0x54, 0x20,
  0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5b, 0x52, 0x54, 0x41, 0x4f, 0x52,
  0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x75, 0x6e,
  0x74, 0x5d, 0x20, 0x3d, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x7b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x2c, 0x20, 0x2f, 0x2f, 0x20, 0x41,
  0x4f, 0x20, 0x72, 0x61, 0x79, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d,
  0x0d, 0x0a, 0x7d, 0x0d, 0x0a, 0x0d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
  0x63, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x58, 0x4d, 0x46, 0x4c,
  0x4f, 0x41, 0x54, 0x34, 0x20, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
  0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x58,
  0x4d, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x34, 0x28, 0x30, 0x2e, 0x37, 0x39,
  0x66, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x38, 0x66, 0x2c, 0x20, 0x30, 0x2e,
  0x39, 0x38, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x66, 0x29, 0x3b, 0x0d,
  0x0a, 0x0d, 0x0a, 0x23, 0x65, 0x6e, 0x64, 0x69, 0x66, 0x20, 0x2f, 0x2f,
  0x20, 0x52, 0x41, 0x59, 0x54, 0x52, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x48,
  0x4c, 0x53, 0x4c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x5f, 0x48, 0x1b,
  0x84, 0x3d, 0xe1, 0x93, 0x0d, 0x82, 0x4d, 0xf0, 0x09, 0x2f, 0x29, 0xaa,
  0xa0, 0x27, 0xae, 0x29, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0x39, 0x2e, 0x29,
  0xaa, 0xa0, 0x27, 0x17, 0x34, 0xb6, 0x39, 0xb6, 0xb4, 0x0d, 0xc2, 0x9f,
  0xe4, 0x09, 0xd1, 0x40, 0x8a, 0x2a, 0xe8, 0x89, 0x6b, 0x0a, 0x2d, 0x8c,
  0xac, 0x4c, 0x6e, 0x8e, 0x4b, 0x2a, 0xcc, 0x8d, 0xec, 0xad, 0xcd, 0xa9,
  0xae, 0x4d, 0xac, 0x4c, 0xee, 0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xee,
  0x4d, 0xce, 0x05, 0x8d, 0x6d, 0x8e, 0x2d, 0x8d, 0xb3, 0x1e, 0xbc, 0xbc,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0x34, 0x28, 0xbc,
  0xbc, 0x34, 0x28, 0xbc, 0xbc, 0x80, 0x0c, 0xbd, 0xc1, 0xe5, 0xc9, 0xa5,
  0x9d, 0xa1, 0xd1, 0x81, 0xa0, 0x8c, 0xa5, 0x80, 0x34, 0xa5, 0x8d, 0xc9,
  0xbd, 0xcd, 0xbd, 0x99, 0xd1, 0xb9, 0x80, 0x04, 0xb1, 0xb1, 0x81, 0xc8,
  0xa5, 0x9d, 0xa1, 0xd1, 0xcd, 0x81, 0xc8, 0x95, 0xcd, 0x95, 0xc9, 0xd9,
  0x95, 0x91, 0xb9, 0x34, 0x28, 0xbc, 0xbc, 0x80, 0x50, 0xa1, 0xa5, 0xcd,
  0x81, 0x8c, 0xbd, 0x91, 0x95, 0x81, 0xa4, 0xcd, 0x81, 0xb0, 0xa5, 0x8d,
  0x95, 0xb9, 0xcd, 0x95, 0x91, 0x81, 0xd4, 0xb9, 0x91, 0x95, 0xc9, 0x81,
  0xd0, 0xa1, 0x95, 0x81, 0x34, 0x25, 0x51, 0x81, 0x30, 0xa5, 0x8d, 0x95,
  0xb9, 0xcd, 0x95, 0x81, 0xa0, 0x34, 0x25, 0x51, 0xa5, 0xb8, 0x34, 0x28,
  0xbc, 0xbc, 0x80, 0x50, 0x21, 0x25, 0x4d, 0x81, 0x0c, 0x3d, 0x11, 0x15,
  0x81, 0x24, 0x4d, 0x81, 0x40, 0x49, 0x3d, 0x59, 0x25, 0x11, 0x15, 0x11,
  0x81, 0xa8, 0x04, 0x4d, 0x81, 0x24, 0x4d, 0xa9, 0x80, 0x5c, 0x25, 0x51,
  0x21, 0x3d, 0x55, 0x51, 0x81, 0x5c, 0x05, 0x49, 0x49, 0x05, 0x39, 0x51,
  0x65, 0x81, 0x3c, 0x19, 0x35, 0x28, 0xbc, 0xbc, 0x80, 0x04, 0x39, 0x65,
  0x81, 0x2c, 0x25, 0x39, 0x11, 0xb1, 0x80, 0x14, 0x25, 0x51, 0x21, 0x15,
  0x49, 0x81, 0x14, 0x61, 0x41, 0x49, 0x15, 0x4d, 0x4d, 0x81, 0x3c, 0x49,
  0x81, 0x24, 0x35, 0x41, 0x31, 0x25, 0x15, 0x11, 0xb1, 0x80, 0x24, 0x39,
  0x0d, 0x31, 0x55, 0x11, 0x25, 0x39, 0x1d, 0x81, 0x04, 0x39, 0x65, 0x35,
  0x28, 0xbc, 0xbc, 0x80, 0x24, 0x35, 0x41, 0x31, 0x25, 0x15, 0x11, 0x81,
  0x5c, 0x05, 0x49, 0x49, 0x05, 0x39, 0x51, 0x25, 0x15, 0x4d, 0x81, 0x3c,
  0x19, 0x81, 0x18, 0x25, 0x51, 0x39, 0x15, 0x4d, 0x4d, 0x81, 0x18, 0x3d,
  0x49, 0x81, 0x04, 0x81, 0x40, 0x05, 0x49, 0x51, 0x25, 0x0d, 0x55, 0x31,
  0x05, 0x49, 0x35, 0x28, 0xbc, 0xbc, 0x80, 0x40, 0x55, 0x49, 0x41, 0x3d,
  0x4d, 0x15, 0xb1, 0x80, 0x34, 0x15, 0x49, 0x0d, 0x21, 0x05, 0x39, 0x51,
  0x05, 0x09, 0x25, 0x31, 0x25, 0x51, 0x65, 0xb1, 0x80, 0x3c, 0x49, 0x81,
  0x38, 0x3d, 0x39, 0xb5, 0x24, 0x39, 0x19, 0x49, 0x25, 0x39, 0x1d, 0x15,
  0x35, 0x15, 0x39, 0x51, 0xb9, 0x34, 0x28, 0xbc, 0xbc, 0x34, 0x28, 0xbc,
  0xbc, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0x34, 0x28,
  0x34, 0x28, 0x8c, 0xa4, 0x99, 0xb9, 0x91, 0x95, 0x99, 0x81, 0x48, 0x05,
  0x39, 0x11, 0x3d, 0x35, 0x39, 0x55, 0x35, 0x09, 0x15, 0x49, 0x1d, 0x15,
  0x39, 0x15, 0x49, 0x05, 0x51, 0x3d, 0x49, 0x7d, 0x21, 0x35, 0x28, 0x8c,
  0x90, 0x95, 0x99, 0xa5, 0xb9, 0x95, 0x81, 0x48, 0x05, 0x39, 0x11, 0x3d,
  0x35, 0x39, 0x55, 0x35, 0x09, 0x15, 0x49, 0x1d, 0x15, 0x39, 0x15, 0x49,
  0x05, 0x51, 0x3d, 0x49, 0x7d, 0x21, 0x35, 0x28, 0x34, 0x28, 0xbc, 0xbc,
  0x80, 0x48, 0x95, 0x99, 0xe9, 0x80, 0xa0, 0xd1, 0xd1, 0xc1, 0xe9, 0xbc,
  0xbc, 0xdc, 0xdd, 0xdd, 0xb9, 0xc8, 0x95, 0x95, 0x91, 0x89, 0x95, 0xd1,
  0x85, 0xb9, 0x8c, 0xbd, 0xb5, 0xbd, 0x88, 0xb1, 0xbd, 0x9d, 0xbd, 0xc4,
  0xd5, 0xa5, 0x8d, 0xad, 0xb5, 0x84, 0xb9, 0x91, 0xb5, 0x94, 0x85, 0xcd,
  0xe5, 0xb5, 0x9c, 0xc1, 0xd5, 0xb5, 0xc8, 0x85, 0xb9, 0x91, 0xbd, 0xb5,
  0xb5, 0xb8, 0xd5, 0xb5, 0x89, 0x95, 0xc9, 0xcd, 0xb5, 0xa4, 0xb9, 0xb5,
  0x90, 0xcd, 0x90, 0xc5, 0xc4, 0xbc, 0x34, 0x28, 0xb8, 0x85, 0xb5, 0x95,
  0xcd, 0xc1, 0x85, 0x8d, 0x95, 0x81, 0x48, 0x39, 0x1d, 0x35, 0x28, 0xec,
  0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x0c, 0xc9, 0x95,
  0x85, 0xd1, 0x95, 0x81, 0x84, 0xb9, 0x81, 0xa4, 0xb9, 0xa5, 0xd1, 0xa5,
  0x85, 0xb1, 0x81, 0xc8, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0x81, 0xb8, 0xd5,
  0xb5, 0x89, 0x95, 0xc9, 0x81, 0x98, 0xbd, 0xc9, 0x81, 0xd0, 0xa1, 0xa5,
  0xcd, 0x81, 0xd0, 0xa1, 0xc9, 0x95, 0x85, 0x91, 0x35, 0x28, 0x80, 0x80,
  0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0x4c, 0x95, 0x95, 0x91, 0x51,
  0xa1, 0xc9, 0x95, 0x85, 0x91, 0xa1, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0xcc,
  0x95, 0x95, 0x91, 0xa5, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xec, 0x35,
  0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80,
  0x50, 0xa1, 0xbd, 0xb5, 0x85, 0xcd, 0x81, 0x5c, 0x85, 0xb9, 0x9d, 0x81,
  0xa0, 0x85, 0xcd, 0xa1, 0x81, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x48, 0x95, 0x99, 0xe9, 0x80, 0xa0,
  0xd1, 0xd1, 0xc1, 0xe9, 0xbc, 0xbc, 0xdc, 0xdd, 0xdd, 0xb9, 0x88, 0xd5,
  0xc9, 0xd1, 0xb1, 0x95, 0x89, 0xd5, 0xc9, 0xd1, 0xb1, 0x95, 0xb9, 0xb8,
  0x95, 0xd1, 0xbd, 0x88, 0xbd, 0x89, 0xbd, 0xa0, 0x85, 0xcd, 0xa1, 0xbd,
  0xa4, 0xb9, 0xd1, 0x95, 0x9d, 0x95, 0xc9, 0xb9, 0xa0, 0xd1, 0xb5, 0xb1,
  0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xcc, 0x95,
  0x95, 0x91, 0x81, 0xf4, 0x80, 0xa0, 0xcc, 0x95, 0x95, 0x91, 0x81, 0x78,
  0x81, 0xd8, 0xc4, 0xa4, 0x80, 0x78, 0x81, 0xa0, 0xcc, 0x95, 0x95, 0x91,
  0x81, 0xf8, 0xf8, 0x80, 0xc4, 0xd8, 0xa4, 0xec, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xcc, 0x95, 0x95, 0x91, 0x81, 0xa8,
  0xf4, 0x80, 0xe4, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xcc, 0x95, 0x95, 0x91, 0x81, 0xf4, 0x80, 0xcc, 0x95, 0x95,
  0x91, 0x81, 0x78, 0x81, 0xa0, 0xcc, 0x95, 0x95, 0x91, 0x81, 0xf8, 0xf8,
  0x80, 0xd0, 0xa4, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xcc, 0x95, 0x95, 0x91, 0x81, 0xa8, 0xf4, 0x80, 0xc0, 0xe0,
  0xc9, 0xdc, 0x90, 0xd1, 0x94, 0x89, 0xc9, 0x90, 0xed, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xcc, 0x95, 0x95, 0x91, 0x81,
  0xf4, 0x80, 0xcc, 0x95, 0x95, 0x91, 0x81, 0x78, 0x81, 0xa0, 0xcc, 0x95,
  0x95, 0x91, 0x81, 0xf8, 0xf8, 0x80, 0xc4, 0xd4, 0xa4, 0xec, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc8, 0x95, 0xd1, 0xd5,
  0xc9, 0xb9, 0x81, 0xcc, 0x95, 0x95, 0x91, 0xed, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0xf4, 0x35, 0x28, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xbc,
  0xbc, 0x80, 0x1c, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1, 0x95, 0x81, 0x84,
  0x81, 0xc8, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0x81, 0xcc, 0xc8, 0xb4, 0x88,
  0xa5, 0xd1, 0x81, 0xa4, 0xb9, 0xd1, 0x95, 0x9d, 0x95, 0xc9, 0x35, 0x28,
  0x80, 0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0x48, 0x85, 0xb9,
  0x91, 0xbd, 0xb5, 0xa1, 0xa4, 0xb9, 0xbd, 0xd5, 0xd1, 0x81, 0xd4, 0xa5,
  0xb9, 0xd1, 0x81, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0xa5, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0xec, 0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xbc, 0xbc, 0x80, 0x60, 0xbd, 0xc9, 0xcd, 0xa1, 0xa5, 0x99,
  0xd1, 0x81, 0x84, 0xb1, 0x9d, 0xbd, 0xc9, 0xa5, 0xd1, 0xa1, 0xb5, 0x81,
  0x98, 0xc9, 0xbd, 0xb5, 0x81, 0x1c, 0x95, 0xbd, 0xc9, 0x9d, 0x95, 0x81,
  0x34, 0x85, 0xc9, 0xcd, 0x85, 0x9d, 0xb1, 0xa5, 0x85, 0x9d, 0xcc, 0x81,
  0xc0, 0x85, 0xc1, 0x95, 0xc9, 0xb9, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0x81, 0x78, 0xf5,
  0x80, 0xa0, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0x81, 0xf0, 0xf0, 0x80, 0xc4,
  0xcc, 0xa4, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0x81, 0x78, 0xf5, 0x80, 0xa0, 0xcc,
  0xd1, 0x85, 0xd1, 0x95, 0x81, 0xf8, 0xf8, 0x80, 0xc4, 0xdc, 0xa4, 0xec,
  0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xcc, 0xd1,
  0x85, 0xd1, 0x95, 0x81, 0x78, 0xf5, 0x80, 0xa0, 0xcc, 0xd1, 0x85, 0xd1,
  0x95, 0x81, 0xf0, 0xf0, 0x80, 0xd4, 0xa4, 0xec, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc8, 0x95, 0xd1, 0xd5, 0xc9, 0xb9,
  0x81, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0xed, 0x34, 0x28, 0x80, 0x80, 0x80,
  0x80, 0xf4, 0x35, 0x28, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc,
  0x80, 0x1c, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1, 0x95, 0x81, 0x84, 0x81,
  0xc8, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0x81, 0x98, 0xb1, 0xbd, 0x85, 0xd1,
  0x81, 0xa4, 0xb9, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xc8, 0x85, 0xb9, 0x9d,
  0x95, 0x81, 0x6c, 0xc1, 0xb8, 0xc0, 0x98, 0xb1, 0x80, 0xc4, 0xb8, 0xc0,
  0x98, 0xa5, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85,
  0xd1, 0x81, 0x48, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0xc1, 0xc4, 0xa0, 0xa4,
  0xb9, 0xbd, 0xd5, 0xd1, 0x81, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0xcc, 0xd1,
  0x85, 0xd1, 0x95, 0xa5, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xec, 0x35,
  0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc8, 0x95, 0xd1,
  0xd5, 0xc9, 0xb9, 0x81, 0x84, 0xcd, 0x99, 0xb1, 0xbd, 0x85, 0xd1, 0xa1,
  0xc0, 0xe0, 0xcd, 0x98, 0xe1, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0xf0,
  0x81, 0x48, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0xa1, 0xcc, 0xd1, 0x85, 0xd1,
  0x95, 0xa5, 0x80, 0xf8, 0xf8, 0x80, 0xe4, 0xa4, 0x80, 0xb4, 0x80, 0xc4,
  0xb8, 0xc0, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xf4, 0x35, 0x28,
  0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x1c, 0x95, 0xb9,
  0x95, 0xc9, 0x85, 0xd1, 0x95, 0x81, 0x84, 0x81, 0xc8, 0x85, 0xb9, 0x91,
  0xbd, 0xb5, 0x81, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0x81, 0xa4, 0xb9, 0x81,
  0xd0, 0xa1, 0x95, 0x81, 0xc8, 0x85, 0xb9, 0x9d, 0x95, 0x81, 0x6c, 0xc1,
  0xb8, 0xc0, 0x98, 0xb1, 0x80, 0xc4, 0xb8, 0xc0, 0x98, 0x75, 0x35, 0x28,
  0x80, 0x80, 0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0x81, 0x48, 0x85,
  0xb9, 0x91, 0xbd, 0xb5, 0xc1, 0xc4, 0xa4, 0xb9, 0x8d, 0xb1, 0xd5, 0xcd,
  0xa5, 0xd9, 0x95, 0xa1, 0xa4, 0xb9, 0xbd, 0xd5, 0xd1, 0x81, 0xd4, 0xa5,
  0xb9, 0xd1, 0x81, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0xa5, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0xec, 0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xc8, 0x95, 0xd1, 0xd5, 0xc9, 0xb9, 0x81, 0x48, 0x85, 0xb9,
  0x91, 0xbd, 0xb5, 0xa1, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0xa5, 0x80, 0xbc,
  0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xa1, 0xc0, 0xe0, 0x99, 0x99, 0x99,
  0x99, 0x99, 0x99, 0x99, 0x99, 0xa5, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80,
  0x80, 0xf4, 0x35, 0x28, 0x34, 0x28, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80,
  0xbc, 0xbc, 0x80, 0x1c, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1, 0x95, 0x81,
  0x84, 0x81, 0xc8, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0x81, 0xa4, 0xb9, 0xd1,
  0x95, 0x9d, 0x95, 0xc9, 0x81, 0xa4, 0xb9, 0x81, 0xd0, 0xa1, 0x95, 0x81,
  0xc8, 0x85, 0xb9, 0x9d, 0x95, 0x81, 0x6c, 0xb1, 0xbd, 0xdd, 0x95, 0xc9,
  0xb1, 0x80, 0xd4, 0xc1, 0xc1, 0x95, 0xc9, 0x75, 0x35, 0x28, 0x80, 0x80,
  0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0x48, 0x85, 0xb9, 0x91, 0xbd,
  0xb5, 0xa1, 0xa4, 0xb9, 0xbd, 0xd5, 0xd1, 0x81, 0xd4, 0xa5, 0xb9, 0xd1,
  0x81, 0xcc, 0xd1, 0x85, 0xd1, 0x95, 0xb1, 0x80, 0xd4, 0xa5, 0xb9, 0xd1,
  0x81, 0xb0, 0xbd, 0xdd, 0x95, 0xc9, 0xb1, 0x80, 0xd4, 0xa5, 0xb9, 0xd1,
  0x81, 0xd4, 0xc1, 0xc1, 0x95, 0xc9, 0xa5, 0x34, 0x28, 0x80, 0x80, 0x80,
  0x80, 0xec, 0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0xc8, 0x95, 0xd1, 0xd5, 0xc9, 0xb9, 0x81, 0xb0, 0xbd, 0xdd, 0x95, 0xc9,
  0x81, 0xac, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0xa1, 0x98, 0xb1, 0xbd, 0x85,
  0xd1, 0xa1, 0xd4, 0xc1, 0xc1, 0x95, 0xc9, 0x81, 0xb4, 0x80, 0xb0, 0xbd,
  0xdd, 0x95, 0xc9, 0x81, 0xac, 0x80, 0xc4, 0xa4, 0x80, 0xa8, 0x80, 0x48,
  0x85, 0xb9, 0x91, 0xbd, 0xb5, 0xc1, 0xc4, 0xa0, 0xcc, 0xd1, 0x85, 0xd1,
  0x95, 0xa5, 0xa4, 0xec, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xf4, 0x35,
  0x28, 0xf4, 0x35, 0x28, 0x8c, 0x94, 0xb9, 0x91, 0xa5, 0x99, 0x81, 0xbc,
  0xbc, 0x80, 0x48, 0x05, 0x39, 0x11, 0x3d, 0x35, 0x39, 0x55, 0x35, 0x09,
  0x15, 0x49, 0x1d, 0x15, 0x39, 0x15, 0x49, 0x05, 0x51, 0x3d, 0x49, 0x7d,
  0x21, 0x6d, 0x10, 0x42, 0x45, 0x54, 0x98, 0x06, 0x52, 0x54, 0x41, 0x4f,
  0x5c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x52, 0x61, 0x79,
  0x20, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x52, 0x61, 0x79,
  0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x68, 0x6c, 0x73, 0x6c,
  0x69, 0x2c, 0xfd, 0xe0, 0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x64,
  0xe8, 0x0d, 0x2e, 0x4f, 0x2e, 0xed, 0x0c, 0x8d, 0x0e, 0x04, 0x65, 0x2c,
  0x05, 0xa4, 0x29, 0x6d, 0x4c, 0xee, 0x6d, 0xee, 0xcd, 0x8c, 0xce, 0x05,
  0x24, 0x88, 0x8d, 0x0d, 0x44, 0x2e, 0xed, 0x0c, 0x8d, 0x6e, 0x0e, 0x44,
  0xae, 0x6c, 0xae, 0x4c, 0xce, 0xae, 0x8c, 0xcc, 0xa5, 0x41, 0xe1, 0xe5,
  0x05, 0x84, 0x0a, 0x2d, 0x6d, 0x0e, 0x64, 0xec, 0x8d, 0xac, 0x0c, 0x24,
  0x6d, 0x0e, 0x84, 0x2d, 0x6d, 0xac, 0xcc, 0x6d, 0xae, 0x8c, 0x0c, 0xa4,
  0xce, 0x8d, 0xac, 0x4c, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0x29, 0x89,
  0x0a, 0x84, 0x29, 0x6d, 0xac, 0xcc, 0x6d, 0xae, 0x0c, 0x04, 0xa5, 0x29,
  0x89, 0x2a, 0xc5, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x29, 0x69,
  0x0a, 0x64, 0xe8, 0x89, 0xa8, 0x08, 0x24, 0x69, 0x0a, 0x04, 0x4a, 0xea,
  0xc9, 0x2a, 0x89, 0xa8, 0x88, 0x08, 0x44, 0x25, 0x68, 0x0a, 0x24, 0x69,
  0x4a, 0x05, 0xe4, 0x2a, 0x89, 0x0a, 0xe9, 0xa9, 0x8a, 0x0a, 0xe4, 0x2a,
  0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0x0b, 0xe4, 0xc9, 0xa8, 0x41, 0xe1,
  0xe5, 0x05, 0x24, 0xc8, 0x29, 0x0b, 0x64, 0x29, 0xc9, 0x89, 0x88, 0x05,
  0xa4, 0x28, 0x89, 0x0a, 0xa9, 0x48, 0x0a, 0xa4, 0x08, 0x0b, 0x4a, 0xaa,
  0x68, 0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9,
  0x88, 0x88, 0x05, 0x24, 0xc9, 0x69, 0x88, 0xa9, 0x8a, 0x28, 0xc9, 0xe9,
  0x08, 0x24, 0xc8, 0x29, 0xab, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xa9, 0x09,
  0x8a, 0x29, 0xa9, 0x88, 0x08, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89,
  0x2a, 0xa9, 0x68, 0x0a, 0xe4, 0xc9, 0x08, 0xc4, 0x28, 0x89, 0xca, 0xa9,
  0x68, 0x6a, 0x0a, 0xc4, 0xe8, 0x49, 0x0a, 0x24, 0x08, 0x04, 0x2a, 0x48,
  0x8a, 0x2a, 0x69, 0xa8, 0x8a, 0x29, 0x48, 0xaa, 0x41, 0xe1, 0xe5, 0x05,
  0x04, 0xaa, 0x4a, 0x0a, 0xea, 0x69, 0xaa, 0x88, 0x05, 0xa4, 0xa9, 0x48,
  0x6a, 0x08, 0x29, 0xc8, 0x89, 0x2a, 0x48, 0x28, 0x89, 0x29, 0x89, 0x2a,
  0x8b, 0x05, 0xe4, 0x49, 0x0a, 0xc4, 0xe9, 0xc9, 0xa9, 0x25, 0xc9, 0xc9,
  0x48, 0x2a, 0xc9, 0xe9, 0xa8, 0xa8, 0xa9, 0xc8, 0x89, 0xca, 0xa5, 0x41,
  0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0xa5, 0x41, 0xa1, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c,
  0xcd, 0xad, 0x0c, 0x44, 0x2a, 0x28, 0xeb, 0x8b, 0x28, 0x49, 0xaa, 0x68,
  0x88, 0x2a, 0xe9, 0xc9, 0xe9, 0x0b, 0x29, 0x68, 0x0a, 0xe9, 0x6b, 0xa9,
  0x28, 0xeb, 0x4b, 0x28, 0x89, 0x6a, 0xea, 0x2b, 0x86, 0x08, 0x84, 0x06,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0x29, 0x0c, 0x0f, 0x84, 0x06, 0x44,
  0x2c, 0x8d, 0x6e, 0xae, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0xea, 0x89, 0xe8,
  0x49, 0x07, 0x84, 0xa8, 0x0c, 0x8e, 0x0e, 0x0d, 0x24, 0xcc, 0x8d, 0x0c,
  0x24, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0x04, 0x2d, 0x6c, 0x0e, 0x2d, 0xcd,
  0xed, 0x0c, 0x24, 0x6d, 0x0e, 0x84, 0x2c, 0x6d, 0x2e, 0x4c, 0x8c, 0xad,
  0x8c, 0x0c, 0x04, 0x65, 0xae, 0x8c, 0x0e, 0x84, 0xee, 0x0d, 0x04, 0x06,
  0x44, 0x2c, 0x8d, 0x6e, 0x2e, 0x05, 0x24, 0x6c, 0x0e, 0x24, 0x8d, 0x0e,
  0x84, 0x2c, 0x8d, 0xcc, 0xed, 0x84, 0x0e, 0x64, 0x0e, 0xed, 0xed, 0xce,
  0x0d, 0x24, 0xad, 0x0d, 0x4e, 0xee, 0xcd, 0xae, 0x8c, 0x0c, 0x44, 0x2e,
  0x2c, 0x0f, 0x84, 0x4e, 0x2e, 0x6c, 0x2c, 0xcd, 0xed, 0x0c, 0x84, 0x2e,
  0xad, 0xad, 0x6c, 0x8e, 0x05, 0xa4, 0x41, 0xe1, 0xe5, 0x05, 0x04, 0xe4,
  0x0e, 0x2d, 0x8d, 0xad, 0x0c, 0x24, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x0c,
  0x24, 0x0c, 0x64, 0xae, 0x4e, 0x6c, 0x8e, 0x2e, 0xcc, 0x8d, 0x2e, 0x2d,
  0x8c, 0x0d, 0x04, 0xae, 0x4c, 0xce, 0x0c, 0xe4, 0xcd, 0xae, 0x4c, 0x0e,
  0xad, 0x2c, 0x8c, 0x0c, 0x84, 0xee, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x44,
  0x2e, 0x2c, 0x0f, 0x64, 0xee, 0x4d, 0x8e, 0x2e, 0xcd, 0xed, 0x0c, 0x04,
  0xc5, 0x4f, 0x06, 0xa6, 0x04, 0xc4, 0xec, 0x4d, 0x0e, 0x44, 0x06, 0x44,
  0x2c, 0x8d, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x04, 0x2d, 0x6c,
  0x0e, 0x0d, 0x64, 0xad, 0x2c, 0x2f, 0xc5, 0xa5, 0x41, 0x61, 0x84, 0xac,
  0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x84, 0xa8, 0x08, 0x8a, 0x0a, 0xe9, 0x0b,
  0x29, 0x68, 0x0a, 0xe9, 0x6b, 0xa9, 0x28, 0xeb, 0x4b, 0x28, 0x89, 0x6a,
  0x0a, 0x04, 0x06, 0xa4, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad,
  0x0c, 0x24, 0xc9, 0x89, 0xa8, 0x08, 0xeb, 0x0b, 0x29, 0x68, 0x0a, 0xe9,
  0x6b, 0xa9, 0x28, 0xeb, 0x4b, 0x28, 0x89, 0x6a, 0x0a, 0x04, 0x06, 0x04,
  0xe4, 0xe5, 0x05, 0x04, 0x85, 0x06, 0xa4, 0x05, 0x84, 0xa8, 0x08, 0x8a,
  0x0a, 0xe9, 0x0b, 0x29, 0x68, 0x0a, 0xe9, 0x6b, 0xa9, 0x28, 0xeb, 0x4b,
  0x28, 0x89, 0x6a, 0x2a, 0x05, 0xa4, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c,
  0xcd, 0xad, 0x0c, 0xc4, 0xa9, 0xaa, 0xe9, 0x4b, 0x2a, 0x28, 0x6b, 0x0a,
  0x64, 0xea, 0x4d, 0x8e, 0x4e, 0x2a, 0x2c, 0x6f, 0x4e, 0x47, 0x47, 0x2a,
  0x2c, 0xef, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x47, 0x67, 0x2a, 0x4d, 0xaf,
  0xac, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0xa9,
  0xaa, 0xe9, 0x8b, 0x0a, 0x49, 0xaa, 0x28, 0x88, 0x68, 0x0a, 0x64, 0xea,
  0x4d, 0x8e, 0x4e, 0x2a, 0x2c, 0x6f, 0x4e, 0x47, 0x87, 0x0a, 0x4d, 0xae,
  0x2c, 0x8c, 0xec, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x47, 0x67, 0x2a, 0x4d,
  0xaf, 0xac, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xa4,
  0x29, 0xc9, 0xe9, 0xcb, 0x2a, 0x88, 0x29, 0x89, 0xe8, 0x4b, 0x2a, 0x28,
  0xeb, 0x8b, 0xa8, 0x08, 0x8a, 0x0a, 0x09, 0xc4, 0x88, 0x89, 0xea, 0x2b,
  0x06, 0x46, 0x28, 0x89, 0xea, 0xab, 0x29, 0xc9, 0xa9, 0x41, 0x61, 0x84,
  0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xa4, 0x29, 0x08, 0xeb, 0x4b, 0x2a,
  0x28, 0x6b, 0x0a, 0x04, 0x27, 0x26, 0x47, 0xa6, 0x41, 0xa1, 0x41, 0x61,
  0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x64, 0xa9, 0x28, 0xeb, 0xcb,
  0xa9, 0xaa, 0xe9, 0x4b, 0x28, 0x89, 0x6a, 0x0a, 0x04, 0x85, 0xa8, 0x08,
  0x8a, 0x0a, 0xe9, 0x0b, 0x29, 0x68, 0x0a, 0xe9, 0x6b, 0xa9, 0x28, 0xeb,
  0x4b, 0x28, 0x89, 0x6a, 0x0a, 0x64, 0x05, 0x44, 0x46, 0x45, 0x2a, 0x28,
  0xeb, 0x8b, 0x28, 0x49, 0xaa, 0x68, 0x88, 0x2a, 0xe9, 0xc9, 0xe9, 0x0b,
  0x29, 0x68, 0x0a, 0xe9, 0x6b, 0xa9, 0x28, 0xeb, 0x4b, 0x28, 0x89, 0x6a,
  0xea, 0x2b, 0x86, 0x08, 0x64, 0x05, 0x24, 0xc9, 0x89, 0xa8, 0x08, 0xeb,
  0x0b, 0x29, 0x68, 0x0a, 0xe9, 0x6b, 0xa9, 0x28, 0xeb, 0x4b, 0x28, 0x89,
  0x6a, 0x2a, 0xa5, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c,
  0xc4, 0xa9, 0xaa, 0xe9, 0x6b, 0xa9, 0x28, 0x6b, 0x0a, 0x04, 0x25, 0x06,
  0x84, 0x87, 0x07, 0x64, 0xa9, 0x28, 0xeb, 0xcb, 0xa9, 0xaa, 0xe9, 0x4b,
  0x28, 0x89, 0x6a, 0x2a, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0xe4, 0xe5, 0x05, 0x84, 0x29, 0x4c, 0xee, 0xac, 0x6c, 0x8e, 0x0e, 0x64,
  0xad, 0x2c, 0x0f, 0x24, 0x6d, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x4c, 0xce,
  0xae, 0x8c, 0x0c, 0xc4, 0xec, 0x4d, 0x0e, 0x24, 0xcc, 0x0d, 0x24, 0xcd,
  0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0x0c, 0x64, 0xad, 0x2c, 0xcf, 0xa5, 0x41,
  0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xc9, 0x29, 0x68, 0x88, 0x2a, 0xc9,
  0xaa, 0xe8, 0x4b, 0x2a, 0x28, 0xeb, 0x6b, 0xa9, 0x28, 0x0b, 0xa4, 0xad,
  0x6e, 0x8e, 0x0e, 0x44, 0xac, 0x0c, 0xe4, 0x4c, 0xae, 0x2c, 0x8c, 0xae,
  0x4c, 0x0e, 0x84, 0x0e, 0x2d, 0xcc, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0xa4,
  0x2d, 0x0c, 0x0f, 0xc4, 0x2e, 0x8c, 0x2d, 0x8d, 0x0c, 0x04, 0x2d, 0x6c,
  0x0e, 0x0d, 0x64, 0xad, 0x2c, 0x0f, 0x44, 0xac, 0x8e, 0x0e, 0x04, 0x2d,
  0x6c, 0x0e, 0x84, 0xee, 0x0d, 0xc4, 0x2c, 0x8d, 0x0e, 0xe4, 0x2e, 0x8d,
  0x0e, 0x2d, 0xcd, 0x0d, 0x24, 0xc6, 0x46, 0x2c, 0x8d, 0x6e, 0x0e, 0x24,
  0xcc, 0x8d, 0x0c, 0xc4, 0x2e, 0x8c, 0x2d, 0x8d, 0x0c, 0xc4, 0xa9, 0xaa,
  0xe9, 0x6b, 0xa9, 0x28, 0x6b, 0xca, 0xa5, 0x41, 0x61, 0x84, 0xac, 0xcc,
  0x2c, 0xcd, 0xad, 0x0c, 0x24, 0xc9, 0x29, 0x68, 0x88, 0x2a, 0xc9, 0xaa,
  0xe8, 0x4b, 0x2a, 0x28, 0xeb, 0x6b, 0xa9, 0x28, 0x0b, 0x04, 0xc5, 0xa9,
  0xaa, 0xe9, 0x6b, 0xa9, 0x28, 0x6b, 0x0a, 0xa4, 0x05, 0x24, 0x26, 0x05,
  0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x04, 0x29, 0x6c, 0x0e, 0x0d,
  0x64, 0xad, 0x2c, 0x0f, 0xc4, 0xec, 0x4d, 0x0e, 0x24, 0xcc, 0x0d, 0x24,
  0xcd, 0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0xec, 0x85, 0x2c, 0x6d, 0x2e, 0x4c,
  0x8c, 0xad, 0x8c, 0x0c, 0x44, 0x2e, 0x2c, 0xcf, 0x05, 0x84, 0x0a, 0xad,
  0x6c, 0xae, 0x0c, 0x44, 0x2e, 0x2c, 0x6f, 0x0e, 0xe4, 0x2e, 0x8d, 0x8d,
  0x0d, 0xe4, 0xac, 0x8c, 0x0e, 0x64, 0xee, 0x4d, 0x8e, 0xae, 0x8c, 0x0c,
  0x84, 0xee, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0xcc, 0x8d, 0x0c, 0x24,
  0xcc, 0x8d, 0x0c, 0x24, 0x4c, 0xae, 0x0c, 0xc4, 0xed, 0x8d, 0x0e, 0x84,
  0xee, 0x0d, 0x44, 0xac, 0x0c, 0x44, 0x2e, 0x2c, 0x8f, 0x4e, 0x2e, 0x6c,
  0xac, 0x8c, 0xcc, 0xa5, 0x41, 0xa1, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c,
  0xcd, 0xad, 0x0c, 0x24, 0xc9, 0x29, 0x68, 0x88, 0x2a, 0xc9, 0xaa, 0xe8,
  0x4b, 0x2a, 0x28, 0xeb, 0x2b, 0xc9, 0x89, 0xa8, 0x08, 0xeb, 0x4b, 0x28,
  0x89, 0x0a, 0x04, 0x06, 0x8f, 0x06, 0x06, 0x06, 0xa6, 0x41, 0x61, 0x84,
  0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x24, 0xc9, 0x29, 0x68, 0x88, 0x2a,
  0xc9, 0xaa, 0xe8, 0x4b, 0x2a, 0x28, 0xeb, 0x2b, 0xc9, 0x89, 0xa8, 0x08,
  0xeb, 0x4b, 0x28, 0x89, 0xea, 0x2b, 0x0b, 0x04, 0x06, 0x0f, 0x07, 0xa6,
  0x41, 0xa1, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x24,
  0xc9, 0xc9, 0x2a, 0x88, 0x29, 0x89, 0xe8, 0x2b, 0xc6, 0x46, 0x28, 0x89,
  0xea, 0x6b, 0xa9, 0x28, 0xeb, 0x4b, 0x28, 0x89, 0x0a, 0x04, 0x06, 0x0f,
  0x07, 0x06, 0x06, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0x24, 0x08, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x0c, 0xa4, 0x6e, 0xae, 0x8c,
  0x0c, 0x84, 0xee, 0x0d, 0x84, 0xac, 0xcc, 0xed, 0x8d, 0xae, 0x0c, 0x24,
  0xcd, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0xaa, 0xa9, 0xa8, 0x09, 0xa4,
  0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0x24, 0x6d, 0x0e, 0x24, 0x0c, 0x24, 0xc6,
  0x46, 0x2c, 0x8d, 0x0e, 0x64, 0xad, 0x2c, 0x0f, 0xc4, 0x2e, 0x8c, 0xad,
  0xae, 0x0c, 0xe4, 0x4d, 0x0e, 0xc4, 0xed, 0x8d, 0xce, 0xa5, 0x41, 0x61,
  0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x24, 0xc9, 0xc9, 0x2a, 0x88,
  0x29, 0x89, 0xe8, 0x4b, 0x2a, 0x28, 0xeb, 0xeb, 0x49, 0x2a, 0xe9, 0x28,
  0xc9, 0xe9, 0x8b, 0xa8, 0x08, 0x8a, 0x0a, 0x09, 0x04, 0xa6, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0x24, 0xc9, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x44,
  0x2e, 0x2c, 0x0f, 0x24, 0x6d, 0x0e, 0x24, 0xcd, 0x2d, 0x6c, 0x8c, 0x2e,
  0xcd, 0xae, 0x8c, 0x05, 0x84, 0x0e, 0xad, 0x0c, 0x44, 0x2e, 0x2c, 0x0f,
  0x24, 0xcd, 0x8d, 0xac, 0x0c, 0x0f, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c,
  0x0e, 0x64, 0xec, 0xcd, 0x8d, 0x2e, 0x2c, 0xcd, 0x6d, 0x0e, 0x24, 0xc9,
  0x29, 0x68, 0x88, 0x2a, 0xc9, 0xaa, 0xe8, 0x4b, 0x2a, 0x28, 0xeb, 0x2b,
  0xc9, 0x89, 0xa8, 0x08, 0xeb, 0x4b, 0x28, 0x89, 0xaa, 0x41, 0x61, 0x84,
  0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0x24, 0x69, 0x2e, 0x68, 0x8c, 0x2e,
  0xcd, 0xae, 0x4c, 0x2a, 0x2c, 0x0f, 0x45, 0x2a, 0x2c, 0xef, 0x48, 0xee,
  0xad, 0x0e, 0x4e, 0x2a, 0x2c, 0x2f, 0xc9, 0x8d, 0xac, 0x0c, 0xef, 0xc9,
  0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x05, 0x04, 0x25, 0x04, 0x45, 0x2a, 0x2c,
  0xef, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x2a, 0x2c, 0x2f, 0xc9, 0x8d, 0xac,
  0x0c, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0xce, 0x25, 0x0f, 0xc4, 0x04,
  0x24, 0xc9, 0x29, 0x68, 0x88, 0x2a, 0xc9, 0xaa, 0xe8, 0x4b, 0x2a, 0x28,
  0xeb, 0x2b, 0xc9, 0x89, 0xa8, 0x08, 0xeb, 0x4b, 0x28, 0x89, 0xea, 0x2b,
  0x2b, 0x25, 0xa5, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c,
  0xe4, 0xa8, 0x8c, 0x4e, 0x2a, 0xec, 0x4e, 0x2a, 0x2c, 0x2f, 0xc9, 0x8d,
  0xac, 0x0c, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0x45, 0x2a, 0x2c,
  0xef, 0x48, 0xee, 0xad, 0x0e, 0x4e, 0x2a, 0x2c, 0x2f, 0xc9, 0x8d, 0xac,
  0x0c, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x05, 0xa4, 0x2e, 0xcd,
  0x8d, 0x4e, 0x06, 0x45, 0x2a, 0x2c, 0xef, 0x48, 0xee, 0xad, 0x0e, 0x4e,
  0x2a, 0x2c, 0x2f, 0xc9, 0x8d, 0xac, 0x0c, 0xef, 0xc9, 0xcc, 0x6c, 0xae,
  0x8c, 0xce, 0x05, 0x8f, 0x05, 0x44, 0x2a, 0x2c, 0xef, 0x48, 0xee, 0xad,
  0x0e, 0x4e, 0x2a, 0x2c, 0x2f, 0xc9, 0x8d, 0xac, 0x0c, 0xef, 0xc9, 0xcc,
  0x6c, 0xae, 0x8c, 0xce, 0x25, 0x0f, 0xc4, 0x04, 0xc4, 0x0f, 0x25, 0xc9,
  0x29, 0x68, 0x88, 0x2a, 0xc9, 0xaa, 0xe8, 0x4b, 0x2a, 0x28, 0xeb, 0x2b,
  0xc9, 0x89, 0xa8, 0x08, 0xeb, 0x4b, 0x28, 0x89, 0xea, 0x2b, 0x2b, 0x25,
  0x65, 0x83, 0x40, 0x2a, 0xa5, 0xc2, 0x4c, 0x8a, 0x2a, 0xe8, 0x89, 0x6b,
  0x0a, 0x2d, 0x8c, 0xac, 0x4c, 0x6e, 0x8e, 0x4b, 0x2a, 0x2c, 0xef, 0xa8,
  0xcc, 0xcd, 0x05, 0x8d, 0x6d, 0x8e, 0x2d, 0x8d, 0xb3, 0x39, 0xbc, 0xbc,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0x34, 0x28, 0xbc,
  0xbc, 0x34, 0x28, 0xbc, 0xbc, 0x80, 0x0c, 0xbd, 0xc1, 0xe5, 0xc9, 0xa5,
  0x9d, 0xa1, 0xd1, 0x81, 0xa0, 0x8c, 0xa5, 0x80, 0x34, 0xa5, 0x8d, 0xc9,
  0xbd, 0xcd, 0xbd, 0x99, 0xd1, 0xb9, 0x80, 0x04, 0xb1, 0xb1, 0x81, 0xc8,
  0xa5, 0x9d, 0xa1, 0xd1, 0xcd, 0x81, 0xc8, 0x95, 0xcd, 0x95, 0xc9, 0xd9,
  0x95, 0x91, 0xb9, 0x34, 0x28, 0xbc, 0xbc, 0x80, 0x50, 0xa1, 0xa5, 0xcd,
  0x81, 0x8c, 0xbd, 0x91, 0x95, 0x81, 0xa4, 0xcd, 0x81, 0xb0, 0xa5, 0x8d,
  0x95, 0xb9, 0xcd, 0x95, 0x91, 0x81, 0xd4, 0xb9, 0x91, 0x95, 0xc9, 0x81,
  0xd0, 0xa1, 0x95, 0x81, 0x34, 0x25, 0x51, 0x81, 0x30, 0xa5, 0x8d, 0x95,
  0xb9, 0xcd, 0x95, 0x81, 0xa0, 0x34, 0x25, 0x51, 0xa5, 0xb8, 0x34, 0x28,
  0xbc, 0xbc, 0x80, 0x50, 0x21, 0x25, 0x4d, 0x81, 0x0c, 0x3d, 0x11, 0x15,
  0x81, 0x24, 0x4d, 0x81, 0x40, 0x49, 0x3d, 0x59, 0x25, 0x11, 0x15, 0x11,
  0x81, 0xa8, 0x04, 0x4d, 0x81, 0x24, 0x4d, 0xa9, 0x80, 0x5c, 0x25, 0x51,
  0x21, 0x3d, 0x55, 0x51, 0x81, 0x5c, 0x05, 0x49, 0x49, 0x05, 0x39, 0x51,
  0x65, 0x81, 0x3c, 0x19, 0x35, 0x28, 0xbc, 0xbc, 0x80, 0x04, 0x39, 0x65,
  0x81, 0x2c, 0x25, 0x39, 0x11, 0xb1, 0x80, 0x14, 0x25, 0x51, 0x21, 0x15,
  0x49, 0x81, 0x14, 0x61, 0x41, 0x49, 0x15, 0x4d, 0x4d, 0x81, 0x3c, 0x49,
  0x81, 0x24, 0x35, 0x41, 0x31, 0x25, 0x15, 0x11, 0xb1, 0x80, 0x24, 0x39,
  0x0d, 0x31, 0x55, 0x11, 0x25, 0x39, 0x1d, 0x81, 0x04, 0x39, 0x65, 0x35,
  0x28, 0xbc, 0xbc, 0x80, 0x24, 0x35, 0x41, 0x31, 0x25, 0x15, 0x11, 0x81,
  0x5c, 0x05, 0x49, 0x49, 0x05, 0x39, 0x51, 0x25, 0x15, 0x4d, 0x81, 0x3c,
  0x19, 0x81, 0x18, 0x25, 0x51, 0x39, 0x15, 0x4d, 0x4d, 0x81, 0x18, 0x3d,
  0x49, 0x81, 0x04, 0x81, 0x40, 0x05, 0x49, 0x51, 0x25, 0x0d, 0x55, 0x31,
  0x05, 0x49, 0x35, 0x28, 0xbc, 0xbc, 0x80, 0x40, 0x55, 0x49, 0x41, 0x3d,
  0x4d, 0x15, 0xb1, 0x80, 0x34, 0x15, 0x49, 0x0d, 0x21, 0x05, 0x39, 0x51,
  0x05, 0x09, 0x25, 0x31, 0x25, 0x51, 0x65, 0xb1, 0x80, 0x3c, 0x49, 0x81,
  0x38, 0x3d, 0x39, 0xb5, 0x24, 0x39, 0x19, 0x49, 0x25, 0x39, 0x1d, 0x15,
  0x35, 0x15, 0x39, 0x51, 0xb9, 0x34, 0x28, 0xbc, 0xbc, 0x34, 0x28, 0xbc,
  0xbc, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8,
  0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8, 0x34, 0x28,
  0x8c, 0xa4, 0x99, 0xb9, 0x91, 0x95, 0x99, 0x81, 0x48, 0x05, 0x65, 0x1d,
  0x15, 0x39, 0x7d, 0x21, 0x31, 0x4d, 0x31, 0x25, 0x35, 0x28, 0x8c, 0x90,
  0x95, 0x99, 0xa5, 0xb9, 0x95, 0x81, 0x48, 0x05, 0x65, 0x1d, 0x15, 0x39,
  0x7d, 0x21, 0x31, 0x4d, 0x31, 0x25, 0x35, 0x28, 0x34, 0x28, 0x8c, 0xa4,
  0xb9, 0x8d, 0xb1, 0xd5, 0x91, 0x95, 0x81, 0x88, 0x48, 0x85, 0xe5, 0xd1,
  0xc9, 0x85, 0x8d, 0xa5, 0xb9, 0x9d, 0x4d, 0xa1, 0x85, 0x91, 0x95, 0xc9,
  0x21, 0x95, 0xb1, 0xc1, 0x95, 0xc9, 0xb9, 0xa0, 0xb1, 0xcd, 0xb1, 0xa5,
  0x89, 0x34, 0x28, 0x34, 0x28, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x80,
  0x1c, 0x95, 0xd1, 0x49, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0x49, 0x85, 0xe5,
  0x11, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9, 0xa1, 0xa4, 0xb9,
  0x81, 0xd4, 0xa5, 0xb9, 0xd1, 0xc9, 0x80, 0xcc, 0xc9, 0x8d, 0x49, 0x85,
  0xe5, 0x25, 0xb9, 0x91, 0x95, 0xe1, 0xb1, 0x80, 0xa4, 0xb9, 0x81, 0x98,
  0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x80, 0xcc, 0xd5, 0xc9, 0x99, 0x85, 0x8d,
  0x95, 0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0xb1, 0x80, 0xa4, 0xb9, 0x81,
  0xd4, 0xa5, 0xb9, 0xd1, 0xc9, 0x80, 0xd0, 0x95, 0xe1, 0xd1, 0xd5, 0xc9,
  0x95, 0x11, 0xa5, 0xb5, 0xb1, 0x80, 0xa4, 0xb9, 0x81, 0xd4, 0xa5, 0xb9,
  0xd1, 0x81, 0xc8, 0x85, 0xe5, 0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x25,
  0xb9, 0x91, 0x95, 0xe1, 0x3d, 0x99, 0x99, 0xcd, 0x95, 0xd1, 0xa5, 0x34,
  0x28, 0xec, 0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x0c,
  0x85, 0xb1, 0x8d, 0xd5, 0xb1, 0x85, 0xd1, 0x95, 0x81, 0x8c, 0xbd, 0xbd,
  0xc9, 0x91, 0xa5, 0xb9, 0x85, 0xd1, 0x95, 0x81, 0xcc, 0xe5, 0xcd, 0xd1,
  0x95, 0xb5, 0x81, 0x98, 0xbd, 0xc9, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xa0,
  0x95, 0xb5, 0xa5, 0xcd, 0xc1, 0xa1, 0x95, 0xc9, 0x95, 0xb9, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x80, 0xd4,
  0xb1, 0x80, 0xd8, 0xb1, 0x80, 0xdc, 0xed, 0x34, 0x28, 0x80, 0x80, 0x80,
  0x80, 0xdc, 0x81, 0xf4, 0x80, 0xcc, 0xd5, 0xc9, 0x99, 0x85, 0x8d, 0x95,
  0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0xed, 0x34, 0x28, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x1c, 0x95, 0xd1, 0x81, 0x84, 0x81,
  0xd8, 0x95, 0x8d, 0xd1, 0xbd, 0xc9, 0x81, 0xd0, 0xa1, 0x85, 0xd1, 0x9d,
  0xcc, 0x81, 0xb8, 0xbd, 0xd1, 0x81, 0xc0, 0x85, 0xc9, 0x85, 0xb1, 0xb1,
  0x95, 0xb1, 0x81, 0xd0, 0xbd, 0x81, 0xdc, 0xb9, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x80, 0xc8, 0xa5, 0x9d,
  0xa1, 0xd1, 0x81, 0xf4, 0x80, 0xc0, 0xb8, 0xcc, 0x98, 0x81, 0xa8, 0x80,
  0xdc, 0x81, 0xac, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0xa0, 0xb4,
  0xc0, 0xb8, 0xdc, 0xc8, 0x98, 0xb1, 0x80, 0xc0, 0xb8, 0xd4, 0xd8, 0x98,
  0xb1, 0x80, 0xb4, 0xc0, 0xb8, 0xcc, 0xd0, 0x98, 0xa5, 0xec, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0xd8, 0x81, 0xf4, 0x80, 0xb8, 0xbd, 0xc9, 0xb5,
  0x85, 0xb1, 0xa5, 0xe9, 0x95, 0xa1, 0x8c, 0xc9, 0xbd, 0xcd, 0xcd, 0xa1,
  0xdc, 0xb1, 0x80, 0xc8, 0xa5, 0x9d, 0xa1, 0xd1, 0xa5, 0xa4, 0xec, 0x34,
  0x28, 0x80, 0x80, 0x80, 0x80, 0xd4, 0x81, 0xf4, 0x80, 0x8c, 0xc9, 0xbd,
  0xcd, 0xcd, 0xa1, 0xd8, 0xb1, 0x80, 0xdc, 0xa5, 0xec, 0x34, 0x28, 0x34,
  0x28, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x0c, 0x85, 0xb1, 0x8d,
  0xd5, 0xb1, 0x85, 0xd1, 0x95, 0x81, 0xbc, 0x99, 0x99, 0xcd, 0x95, 0xd1,
  0xcd, 0x81, 0xd0, 0xbd, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xc0, 0xc9, 0x95,
  0x9d, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1, 0x95, 0x91, 0x81, 0xcc, 0x85,
  0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1, 0xb9, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0xcc, 0x85, 0xb5, 0xc1,
  0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x29, 0xd5, 0xb5, 0xc1, 0xed, 0x80, 0x80,
  0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x3c, 0x99, 0x99, 0xcd, 0x95, 0xd1,
  0x81, 0xd0, 0xbd, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xcc, 0xd1, 0x85, 0xc9,
  0xd1, 0x81, 0xbc, 0x99, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xcc, 0x85, 0xb5,
  0xc1, 0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1, 0x35, 0x28, 0x80, 0x80, 0x80,
  0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95,
  0x29, 0xd5, 0xb5, 0xc1, 0xed, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0xbc, 0xbc, 0x80, 0x3c, 0x99, 0x99, 0xcd, 0x95, 0xd1, 0x81, 0xd0,
  0xbd, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0x98, 0xa5, 0xc9, 0xcd, 0xd1, 0x81,
  0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0x98, 0xbd, 0xc9, 0x81, 0xd0,
  0xa1, 0xa5, 0xcd, 0x81, 0xc0, 0xa5, 0xe1, 0x95, 0xb1, 0x81, 0xdc, 0xa5,
  0xd1, 0xa1, 0xa5, 0xb9, 0x81, 0x84, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1,
  0x95, 0x81, 0xcc, 0x95, 0xd1, 0xb9, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80,
  0xec, 0x35, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc,
  0xbc, 0x80, 0x38, 0x95, 0xa5, 0x9d, 0xa1, 0x89, 0xbd, 0xc9, 0xa5, 0xb9,
  0x9d, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xcd, 0x81, 0x38, 0xe1,
  0x39, 0x81, 0xcc, 0xa1, 0x85, 0xc9, 0x95, 0x81, 0x84, 0x81, 0xcc, 0x85,
  0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1, 0xb1, 0x80, 0x88, 0xd5,
  0xd1, 0x81, 0xd4, 0xcd, 0x95, 0x81, 0x90, 0xa5, 0x99, 0x99, 0x95, 0xc9,
  0x95, 0xb9, 0xd1, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xcd, 0x81,
  0xdc, 0xa5, 0xd1, 0xa1, 0xa5, 0xb9, 0x81, 0x84, 0x81, 0xcc, 0x95, 0xd1,
  0xb9, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc,
  0xbc, 0x80, 0x4c, 0xa1, 0x85, 0xc9, 0xa5, 0xb9, 0x9d, 0x81, 0x84, 0x81,
  0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1, 0x81, 0xb0,
  0x95, 0xd1, 0xcd, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xc0, 0xa5, 0xe1, 0x95,
  0xb1, 0xcd, 0x81, 0xa4, 0xb9, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0x9c, 0xc9,
  0xbd, 0xd5, 0xc1, 0x81, 0x9c, 0x95, 0xd1, 0x81, 0x84, 0x81, 0x88, 0x95,
  0xd1, 0xd1, 0x95, 0xc9, 0x81, 0x8c, 0xbd, 0xd9, 0x95, 0xc9, 0x85, 0x9d,
  0x95, 0x81, 0xbc, 0x99, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xa0, 0x95, 0xb5,
  0xa5, 0xcd, 0xc1, 0xa1, 0x95, 0xc9, 0x95, 0x81, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0xd0, 0xa1, 0x85,
  0xb9, 0x81, 0xa4, 0x99, 0x81, 0x94, 0x85, 0x8d, 0xa1, 0x81, 0xc0, 0xa5,
  0xe1, 0x95, 0xb1, 0x81, 0xd4, 0xcd, 0x95, 0x91, 0x81, 0x84, 0x81, 0xcc,
  0x95, 0xc1, 0x85, 0xc9, 0x85, 0xd1, 0x95, 0x81, 0xcc, 0x85, 0xb5, 0xc1,
  0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1, 0x81, 0xdc, 0xa5, 0xd1, 0xa1, 0x81,
  0xb0, 0x95, 0xcd, 0xcd, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xcd,
  0x81, 0xc0, 0xc9, 0x95, 0x9d, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1, 0x95,
  0x91, 0x81, 0xc0, 0x95, 0xc9, 0x81, 0xcc, 0x95, 0xd1, 0xb9, 0x34, 0x28,
  0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc,
  0x80, 0x1c, 0x95, 0xd1, 0x81, 0x84, 0x81, 0x8c, 0xbd, 0xb5, 0xb5, 0xbd,
  0xb9, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1,
  0x81, 0x24, 0x11, 0x81, 0x84, 0xb9, 0x91, 0x81, 0xcc, 0x95, 0x95, 0x91,
  0x81, 0xcc, 0xa1, 0x85, 0xc9, 0x95, 0x91, 0x81, 0x84, 0x8d, 0xc9, 0xbd,
  0xcd, 0xcd, 0x81, 0xb8, 0x95, 0xa5, 0x9d, 0xa1, 0x89, 0xbd, 0xc9, 0xa5,
  0xb9, 0x9d, 0x81, 0xc0, 0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0xb9, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1,
  0x81, 0xb8, 0xd5, 0xb5, 0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95,
  0xd1, 0xcd, 0x25, 0xb9, 0x61, 0x81, 0xf4, 0x80, 0xa0, 0xd0, 0x95, 0xe1,
  0xd1, 0xd5, 0xc9, 0x95, 0x11, 0xa5, 0xb5, 0xb9, 0xe0, 0x81, 0xac, 0x80,
  0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1, 0xcd,
  0x41, 0x95, 0xc9, 0x11, 0xa5, 0xb5, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1,
  0x81, 0xb4, 0x80, 0xc4, 0xa4, 0x80, 0xbc, 0x80, 0x8c, 0x89, 0xb9, 0xb8,
  0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95, 0xc9, 0x11,
  0xa5, 0xb5, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0xed, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0xc9,
  0x80, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x25, 0x91,
  0x81, 0xf4, 0x80, 0xcc, 0xc9, 0x8d, 0x49, 0x85, 0xe5, 0x25, 0xb9, 0x91,
  0x95, 0xe1, 0x81, 0xbc, 0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5, 0x41,
  0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95, 0xc9, 0x11, 0xa5, 0xb5, 0x41,
  0x95, 0xc9, 0x4d, 0x95, 0xd1, 0xed, 0x34, 0x28, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x1c, 0x95, 0xd1,
  0x81, 0x84, 0x81, 0x8c, 0xbd, 0xb5, 0xb5, 0xbd, 0xb9, 0x81, 0xa0, 0xa5,
  0xd1, 0x41, 0xbd, 0xcd, 0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x81, 0xd0, 0xbd,
  0x81, 0x84, 0x91, 0xa9, 0xd5, 0xcd, 0xd1, 0x81, 0xd0, 0xa1, 0x95, 0x81,
  0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0x95, 0x91, 0x81, 0x88,
  0xe5, 0xb9, 0x80, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0xbc, 0xbc, 0x80, 0x50, 0xa1, 0xa5, 0xcd, 0x81, 0x88, 0xc9, 0x95,
  0x85, 0xad, 0xcd, 0x81, 0xb8, 0xbd, 0xa5, 0xcd, 0x95, 0x81, 0x8c, 0xbd,
  0xc9, 0xc9, 0x95, 0xb1, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0x81, 0xbc, 0xb9,
  0x81, 0x8c, 0x85, 0xb5, 0x95, 0xc9, 0x85, 0x81, 0xb4, 0xbd, 0xd9, 0x95,
  0xb5, 0x95, 0xb9, 0xd1, 0x81, 0xdc, 0xa1, 0xa5, 0x8d, 0xa1, 0x81, 0xbc,
  0xd1, 0xa1, 0x95, 0xc9, 0xdd, 0xa5, 0xcd, 0x95, 0x81, 0xc8, 0x95, 0xcd,
  0xd5, 0xb1, 0xd1, 0xcd, 0x81, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0xa4, 0xb9, 0x81, 0xb8, 0xbd, 0xa5,
  0xcd, 0x95, 0x81, 0xc0, 0x85, 0xd1, 0xd1, 0x95, 0xc9, 0xb9, 0x81, 0xcc,
  0xdd, 0xa5, 0xb5, 0xb5, 0xa5, 0xb9, 0x9d, 0x81, 0x84, 0x8d, 0xc9, 0xbd,
  0xcd, 0xcd, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xcc, 0x8d, 0xc9, 0x95, 0x95,
  0xb9, 0x81, 0xbc, 0xb9, 0x81, 0x8c, 0x85, 0xb5, 0x95, 0xc9, 0x85, 0x81,
  0xb4, 0xbd, 0xd9, 0x95, 0xb5, 0x95, 0xb9, 0xd1, 0xb9, 0x34, 0x28, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0xc9,
  0x80, 0xc0, 0xa5, 0xe1, 0x95, 0xb1, 0x69, 0x95, 0xc9, 0xbd, 0x25, 0x91,
  0x81, 0xf4, 0x80, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1,
  0x25, 0x91, 0x81, 0xa8, 0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5, 0x41,
  0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95, 0xc9, 0x11, 0xa5, 0xb5, 0x41,
  0x95, 0xc9, 0x4d, 0x95, 0xd1, 0xed, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x80, 0xc0,
  0xa5, 0xe1, 0x95, 0xb1, 0x69, 0x95, 0xc9, 0xbd, 0x21, 0xa5, 0xd1, 0x41,
  0xbd, 0xcd, 0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x81, 0xf4, 0x80, 0x9c, 0x7d,
  0xd1, 0x95, 0xe1, 0x49, 0x85, 0xe5, 0x3d, 0xc9, 0xa5, 0x9d, 0xa5, 0xb9,
  0x41, 0xbd, 0xcd, 0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x6d, 0xc1, 0xa5, 0xe1,
  0x95, 0xb1, 0x69, 0x95, 0xc9, 0xbd, 0x25, 0x91, 0x75, 0xb9, 0xe0, 0xe5,
  0xe9, 0xed, 0x80, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95,
  0x4d, 0x95, 0xd1, 0x4d, 0x95, 0x95, 0x91, 0x81, 0xf4, 0x80, 0xa0, 0xcc,
  0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x25, 0x91, 0xb9, 0xe4,
  0x81, 0xa8, 0x80, 0xb8, 0xd5, 0xb5, 0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95,
  0x4d, 0x95, 0xd1, 0xcd, 0x25, 0xb9, 0x61, 0x81, 0xac, 0x80, 0xcc, 0x85,
  0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x25, 0x91, 0xb9, 0xe0, 0xa5,
  0x80, 0xa8, 0x80, 0xa0, 0x85, 0xcd, 0xa1, 0xa1, 0xc0, 0xa5, 0xe1, 0x95,
  0xb1, 0x69, 0x95, 0xc9, 0xbd, 0x21, 0xa5, 0xd1, 0x41, 0xbd, 0xcd, 0xa5,
  0xd1, 0xa5, 0xbd, 0xb9, 0xa5, 0x80, 0xac, 0x80, 0x8c, 0x89, 0xb9, 0xcc,
  0x95, 0x95, 0x91, 0xed, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0x48, 0x39, 0x1d, 0x4d, 0xd1,
  0x85, 0xd1, 0x95, 0x81, 0xf4, 0x80, 0x48, 0x39, 0x1d, 0xe9, 0xe8, 0x4c,
  0x95, 0x95, 0x91, 0x51, 0xa1, 0xc9, 0x95, 0x85, 0x91, 0xa1, 0xcc, 0x85,
  0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x4d, 0x95, 0x95, 0x91, 0xa5,
  0xec, 0x34, 0x28, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x29, 0xd5,
  0xb5, 0xc1, 0x81, 0xf4, 0x80, 0x48, 0x39, 0x1d, 0xe9, 0xe8, 0x48, 0x85,
  0xb9, 0x91, 0xbd, 0xb5, 0xa1, 0x48, 0x39, 0x1d, 0x4d, 0xd1, 0x85, 0xd1,
  0x95, 0xb1, 0x80, 0xc0, 0xb0, 0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5,
  0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0xcd, 0x81, 0xb4,
  0x80, 0xc4, 0xa4, 0x80, 0xa8, 0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5,
  0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xcd, 0x41, 0x95, 0xc9, 0x4d, 0x95,
  0xd1, 0xed, 0x34, 0x28, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xbc, 0xbc, 0x80, 0x1c, 0x95, 0xd1, 0x81, 0x84, 0x81, 0xc0,
  0xa5, 0xe1, 0x95, 0xb1, 0x81, 0x24, 0x11, 0x81, 0xdc, 0xa5, 0xd1, 0xa1,
  0xa5, 0xb9, 0x81, 0xd0, 0xa1, 0x95, 0x81, 0xcc, 0xa1, 0x85, 0xc9, 0x95,
  0x91, 0x81, 0xcc, 0x95, 0xd1, 0x81, 0x84, 0x8d, 0xc9, 0xbd, 0xcd, 0xcd,
  0x81, 0xb8, 0x95, 0xa5, 0x9d, 0xa1, 0x89, 0xbd, 0xc9, 0xa5, 0xb9, 0x9d,
  0x81, 0xc0, 0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0xb9, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0xc9, 0x80,
  0xc0, 0xa5, 0xe1, 0x95, 0x25, 0x11, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1,
  0xc9, 0x10, 0x81, 0xf4, 0x80, 0xcc, 0xc9, 0x8d, 0x49, 0x85, 0xe5, 0x25,
  0xb9, 0x91, 0x95, 0xe1, 0x81, 0x94, 0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5,
  0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95, 0xc9, 0x11, 0xa5,
  0xb5, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0xed, 0x34, 0x28, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xd4, 0xa5, 0xb9, 0xd1, 0x81, 0xc0,
  0xa5, 0xe1, 0x95, 0x25, 0x11, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0x81,
  0xf4, 0x80, 0xc0, 0xa5, 0xe1, 0x95, 0x25, 0x11, 0x41, 0x95, 0xc9, 0x4d,
  0x95, 0xd1, 0xc9, 0x10, 0xb9, 0xe4, 0x81, 0xa8, 0x80, 0x8c, 0x89, 0xb9,
  0xb8, 0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95, 0xc9,
  0x11, 0xa5, 0xb5, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0x81, 0xac, 0x80,
  0xc0, 0xa5, 0xe1, 0x95, 0x25, 0x11, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1,
  0xc9, 0x10, 0xb9, 0xe0, 0xed, 0x34, 0x28, 0x34, 0x28, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x48, 0x85, 0xb9, 0x91,
  0xbd, 0xb5, 0xa5, 0xe9, 0x95, 0x81, 0xcc, 0xd1, 0x85, 0xc9, 0xd1, 0xa5,
  0xb9, 0x9d, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xc0, 0xbd,
  0xcd, 0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x81, 0xdc, 0xa5, 0xd1, 0xa1, 0xa5,
  0xb9, 0x81, 0x84, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xcc,
  0x95, 0xd1, 0x81, 0xc0, 0x95, 0xc9, 0x81, 0xb8, 0x95, 0xa5, 0x9d, 0xa1,
  0x89, 0xbd, 0xc9, 0x81, 0x9c, 0xc9, 0xbd, 0xd5, 0xc1, 0x81, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0xd0,
  0xbd, 0x81, 0x88, 0xc9, 0x95, 0x85, 0xad, 0x81, 0x9c, 0xc9, 0xbd, 0xd5,
  0xc1, 0x81, 0xd0, 0xbd, 0x81, 0x9c, 0xc9, 0xbd, 0xd5, 0xc1, 0x81, 0x8c,
  0xbd, 0xc9, 0xc9, 0x95, 0xb1, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0x81, 0xc8,
  0x95, 0xcd, 0xd5, 0xb1, 0xd1, 0xa5, 0xb9, 0x9d, 0x81, 0xa4, 0xb9, 0x81,
  0xcc, 0xc5, 0xd5, 0x85, 0xc9, 0x95, 0x81, 0x84, 0xb1, 0xa5, 0x85, 0xcd,
  0xb9, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xd4,
  0xa5, 0xb9, 0xd1, 0x81, 0xb8, 0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1,
  0xcd, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0x81, 0xf4, 0x80, 0x8c, 0x89,
  0xb9, 0xb8, 0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95,
  0xc9, 0x11, 0xa5, 0xb5, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0x81, 0xa8,
  0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95, 0xb1,
  0xcd, 0x41, 0x95, 0xc9, 0x11, 0xa5, 0xb5, 0x41, 0x95, 0xc9, 0x4d, 0x95,
  0xd1, 0xed, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x29, 0xd5, 0xb5, 0xc1, 0x81, 0xf4,
  0x80, 0xc0, 0xa5, 0xe1, 0x95, 0x25, 0x11, 0x41, 0x95, 0xc9, 0x4d, 0x95,
  0xd1, 0x81, 0xac, 0x80, 0x48, 0x39, 0x1d, 0xe9, 0xe8, 0x48, 0x85, 0xb9,
  0x91, 0xbd, 0xb5, 0xa1, 0x48, 0x39, 0x1d, 0x4d, 0xd1, 0x85, 0xd1, 0x95,
  0xb1, 0x80, 0xc0, 0xb0, 0x80, 0xb8, 0xd5, 0xb5, 0x41, 0xa5, 0xe1, 0x95,
  0xb1, 0xcd, 0x41, 0x95, 0xc9, 0x4d, 0x95, 0xd1, 0x81, 0xb4, 0x80, 0xc4,
  0xa4, 0x80, 0xac, 0x80, 0xc8, 0x85, 0xe5, 0x4d, 0x85, 0xb5, 0xc1, 0xb1,
  0x95, 0x25, 0xb9, 0x91, 0x95, 0xe1, 0x3d, 0x99, 0x99, 0xcd, 0x95, 0xd1,
  0xed, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0xf4, 0x35, 0x28, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0xbc, 0xbc, 0x80, 0x30, 0xbd, 0x85, 0x91, 0x81,
  0x84, 0x81, 0xc0, 0xc9, 0x95, 0x9d, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1,
  0x95, 0x91, 0x81, 0xc8, 0x85, 0xb9, 0x91, 0xbd, 0xb5, 0x81, 0xcc, 0x85,
  0xb5, 0xc1, 0xb1, 0x95, 0x81, 0x98, 0xc9, 0xbd, 0xb5, 0x81, 0xd0, 0xa1,
  0x95, 0x81, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xcc, 0x95, 0xd1,
  0xb9, 0x34, 0x28, 0x80, 0x80, 0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1,
  0xcd, 0x80, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x81, 0xf4, 0x80, 0x9c,
  0x7d, 0xcd, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0xcd, 0x6d,
  0xcd, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x4d, 0x95, 0xd1, 0x29, 0xd5, 0xb5,
  0xc1, 0x81, 0xac, 0x80, 0xa0, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0x29,
  0xd5, 0xb5, 0xc1, 0x81, 0x94, 0x80, 0x8c, 0x89, 0xb9, 0xb8, 0xd5, 0xb5,
  0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xcd, 0x41, 0x95, 0xc9, 0x4d, 0x95,
  0xd1, 0xa5, 0x74, 0xb9, 0xd8, 0x85, 0xb1, 0xd5, 0x95, 0xed, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x80, 0xc8,
  0x85, 0xe5, 0x11, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9, 0x81,
  0xf4, 0x80, 0xb8, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0xa5, 0xe9, 0x95, 0xa1,
  0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xb9, 0xe0, 0x81, 0xa8, 0x80, 0xd4,
  0x81, 0xac, 0x80, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xb9, 0xe4, 0x81,
  0xa8, 0x80, 0xd8, 0x81, 0xac, 0x80, 0xcc, 0x85, 0xb5, 0xc1, 0xb1, 0x95,
  0xb9, 0xe8, 0x81, 0xa8, 0x80, 0xdc, 0xa5, 0xec, 0x34, 0x28, 0x34, 0x28,
  0x80, 0x80, 0x80, 0x80, 0xc8, 0x95, 0xd1, 0xd5, 0xc9, 0xb9, 0x81, 0xc8,
  0x85, 0xe5, 0x11, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9, 0xed,
  0x34, 0x28, 0xf4, 0x35, 0x28, 0x34, 0x28, 0x8c, 0x94, 0xb9, 0x91, 0xa5,
  0x99, 0x81, 0xbc, 0xbc, 0x80, 0x48, 0x05, 0x65, 0x1d, 0x15, 0x39, 0x7d,
  0x21, 0x31, 0x4d, 0x31, 0x25, 0x6d, 0x10, 0x4e, 0x05, 0x55, 0x98, 0x06,
  0x52, 0x54, 0x41, 0x4f, 0x5c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73,
  0x5c, 0x52, 0x61, 0x79, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e,
  0x68, 0x6c, 0x73, 0x6c, 0x69, 0xbc, 0xf7, 0xec, 0xe5, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41,
  0xe1, 0xe5, 0x05, 0x64, 0xe8, 0x0d, 0x2e, 0x4f, 0x2e, 0xed, 0x0c, 0x8d,
  0x0e, 0x04, 0x65, 0x2c, 0x05, 0xa4, 0x29, 0x6d, 0x4c, 0xee, 0x6d, 0xee,
  0xcd, 0x8c, 0xce, 0x05, 0x24, 0x88, 0x8d, 0x0d, 0x44, 0x2e, 0xed, 0x0c,
  0x8d, 0x6e, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x4c, 0xce, 0xae, 0x8c, 0xcc,
  0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a, 0x2d, 0x6d, 0x0e, 0x64, 0xec,
  0x8d, 0xac, 0x0c, 0x24, 0x6d, 0x0e, 0x84, 0x2d, 0x6d, 0xac, 0xcc, 0x6d,
  0xae, 0x8c, 0x0c, 0xa4, 0xce, 0x8d, 0xac, 0x4c, 0x0e, 0x84, 0x0e, 0xad,
  0x0c, 0xa4, 0x29, 0x89, 0x0a, 0x84, 0x29, 0x6d, 0xac, 0xcc, 0x6d, 0xae,
  0x0c, 0x04, 0xa5, 0x29, 0x89, 0x2a, 0xc5, 0xa5, 0x41, 0xe1, 0xe5, 0x05,
  0x84, 0x0a, 0x29, 0x69, 0x0a, 0x64, 0xe8, 0x89, 0xa8, 0x08, 0x24, 0x69,
  0x0a, 0x04, 0x4a, 0xea, 0xc9, 0x2a, 0x89, 0xa8, 0x88, 0x08, 0x44, 0x25,
  0x68, 0x0a, 0x24, 0x69, 0x4a, 0x05, 0xe4, 0x2a, 0x89, 0x0a, 0xe9, 0xa9,
  0x8a, 0x0a, 0xe4, 0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0x0b, 0xe4,
  0xc9, 0xa8, 0x41, 0xe1, 0xe5, 0x05, 0x24, 0xc8, 0x29, 0x0b, 0x64, 0x29,
  0xc9, 0x89, 0x88, 0x05, 0xa4, 0x28, 0x89, 0x0a, 0xa9, 0x48, 0x0a, 0xa4,
  0x08, 0x0b, 0x4a, 0xaa, 0x68, 0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x24, 0xa9,
  0x09, 0x8a, 0x29, 0xa9, 0x88, 0x88, 0x05, 0x24, 0xc9, 0x69, 0x88, 0xa9,
  0x8a, 0x28, 0xc9, 0xe9, 0x08, 0x24, 0xc8, 0x29, 0xab, 0x41, 0xe1, 0xe5,
  0x05, 0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88, 0x08, 0xe4, 0x2a, 0x48,
  0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0xa9, 0x68, 0x0a, 0xe4, 0xc9, 0x08, 0xc4,
  0x28, 0x89, 0xca, 0xa9, 0x68, 0x6a, 0x0a, 0xc4, 0xe8, 0x49, 0x0a, 0x24,
  0x08, 0x04, 0x2a, 0x48, 0x8a, 0x2a, 0x69, 0xa8, 0x8a, 0x29, 0x48, 0xaa,
  0x41, 0xe1, 0xe5, 0x05, 0x04, 0xaa, 0x4a, 0x0a, 0xea, 0x69, 0xaa, 0x88,
  0x05, 0xa4, 0xa9, 0x48, 0x6a, 0x08, 0x29, 0xc8, 0x89, 0x2a, 0x48, 0x28,
  0x89, 0x29, 0x89, 0x2a, 0x8b, 0x05, 0xe4, 0x49, 0x0a, 0xc4, 0xe9, 0xc9,
  0xa9, 0x25, 0xc9, 0xc9, 0x48, 0x2a, 0xc9, 0xe9, 0xa8, 0xa8, 0xa9, 0xc8,
  0x89, 0xca, 0xa5, 0x41, 0xe1, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xa5, 0x41, 0x61, 0x24, 0xcd,
  0xcc, 0x8d, 0xac, 0xcc, 0x0c, 0x44, 0x2a, 0x28, 0x8b, 0x4a, 0x2a, 0x68,
  0x28, 0xc9, 0xe9, 0x68, 0x0a, 0x29, 0x88, 0xa8, 0x48, 0x0a, 0xa9, 0x88,
  0x09, 0xaa, 0x48, 0xea, 0x0b, 0xa9, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c,
  0xcd, 0xad, 0x0c, 0x44, 0x2a, 0x28, 0x8b, 0x4a, 0x2a, 0x68, 0x28, 0xc9,
  0xe9, 0x68, 0x0a, 0x29, 0x88, 0xa8, 0x48, 0x0a, 0xa9, 0x88, 0x09, 0xaa,
  0x48, 0xea, 0x0b, 0xa9, 0x41, 0xa1, 0x41, 0x61, 0x24, 0xcd, 0x6d, 0x8c,
  0xad, 0x8e, 0xac, 0x0c, 0x44, 0x44, 0x2a, 0x2c, 0x8f, 0x4a, 0x2e, 0x6c,
  0x2c, 0xcd, 0xed, 0x0c, 0x89, 0x6d, 0x8e, 0x6d, 0xe8, 0xad, 0x0d, 0x2e,
  0x8c, 0xce, 0x05, 0x4d, 0xa4, 0x41, 0x61, 0x24, 0xcd, 0x6d, 0x8c, 0xad,
  0x8e, 0xac, 0x0c, 0x44, 0x44, 0x8a, 0x2a, 0xe8, 0xe9, 0x65, 0x0a, 0x2d,
  0x8c, 0xac, 0x4c, 0x6e, 0xee, 0x45, 0x8a, 0x2a, 0xe8, 0xc9, 0x05, 0x8d,
  0x6d, 0x8e, 0x2d, 0x4d, 0xa4, 0x41, 0xa1, 0x41, 0x61, 0x84, 0xac, 0xcc,
  0x2c, 0xcd, 0xad, 0x0c, 0x24, 0xc9, 0xc9, 0x28, 0xc9, 0x29, 0x89, 0x2a,
  0x0b, 0x04, 0x25, 0xc6, 0x05, 0xe6, 0x05, 0xc6, 0x05, 0x26, 0xa5, 0x41,
  0xa1, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0x88,
  0x89, 0xea, 0xab, 0x08, 0x6a, 0x2a, 0x89, 0xe9, 0xc9, 0x09, 0x04, 0x04,
  0x04, 0x04, 0x24, 0xc6, 0x25, 0x26, 0x47, 0x06, 0x26, 0x47, 0x06, 0x27,
  0xc7, 0xa6, 0xac, 0x05, 0xe6, 0x06, 0xe4, 0xe5, 0x05, 0x64, 0xaa, 0x2d,
  0x8c, 0x8d, 0xad, 0x6c, 0x8e, 0x0e, 0xc4, 0xad, 0xae, 0x4d, 0xac, 0x4c,
  0x0e, 0x64, 0xae, 0x6e, 0x0c, 0x0d, 0x84, 0x0e, 0x2d, 0x8c, 0x0e, 0x24,
  0xc6, 0x05, 0x06, 0x64, 0x05, 0xc4, 0x88, 0x89, 0xea, 0xab, 0x08, 0x6a,
  0x2a, 0x89, 0xe9, 0xc9, 0x09, 0x24, 0xa4, 0x07, 0x24, 0xc6, 0x05, 0xa6,
  0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0x88, 0x89,
  0xea, 0xab, 0x29, 0xc9, 0x09, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x24, 0xc6, 0x25, 0xe6, 0xa6, 0x86, 0x26, 0x87, 0x66, 0xa6, 0x26,
  0xa6, 0xac, 0x65, 0x06, 0x07, 0xa4, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c,
  0xcd, 0xad, 0x0c, 0xc4, 0x88, 0x89, 0xea, 0xab, 0x29, 0x08, 0x0b, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xc6, 0x85, 0x06, 0x46,
  0x06, 0x47, 0x66, 0x86, 0xc6, 0xc6, 0xa6, 0x6c, 0x65, 0x06, 0x07, 0xa4,
  0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0x88, 0x89,
  0xea, 0x2b, 0x06, 0x46, 0x28, 0x89, 0xea, 0xab, 0x29, 0xc9, 0x09, 0x04,
  0x04, 0xc4, 0xc6, 0x25, 0xa6, 0xac, 0xa5, 0xa6, 0x41, 0x61, 0x84, 0xac,
  0xcc, 0x2c, 0xcd, 0xad, 0x0c, 0xc4, 0x88, 0x89, 0xea, 0x2b, 0x06, 0x46,
  0x28, 0x89, 0xea, 0xab, 0x29, 0x08, 0x0b, 0x04, 0x04, 0xc4, 0xc6, 0xa5,
  0xa6, 0x8c, 0xa6, 0x41, 0x61, 0x84, 0xac, 0xcc, 0x2c, 0xcd, 0xad, 0x0c,
  0x04, 0x2a, 0x09, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x64, 0xc6, 0x25, 0x86, 0x26, 0xa6, 0x26, 0x47,
  0xc6, 0xa6, 0x66, 0xa6, 0x06, 0x27, 0xe7, 0xc6, 0xac, 0x41, 0xa1, 0x41,
  0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xad, 0xcc, 0xed, 0x8c, 0x0e,
  0xed, 0x8b, 0xee, 0x0d, 0xea, 0xed, 0x4e, 0x06, 0xc5, 0x8c, 0xed, 0x2d,
  0x8c, 0x4e, 0x06, 0x04, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0xec, 0x8d,
  0x0e, 0x05, 0x8e, 0x05, 0x04, 0x2e, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xad, 0xcc, 0xed,
  0x8c, 0x0e, 0xed, 0x8b, 0xee, 0x0d, 0xea, 0xed, 0x4e, 0x06, 0xc5, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84,
  0xec, 0x8d, 0x0e, 0x05, 0x8e, 0x05, 0x04, 0x2e, 0x65, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0xc4, 0x88, 0xed,
  0x2d, 0x8c, 0x4e, 0x86, 0xea, 0x0d, 0x29, 0x8c, 0xcd, 0x0c, 0x25, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xc4, 0x2e, 0x8c, 0x2d,
  0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd,
  0x8d, 0x0e, 0x44, 0xae, 0x6c, 0xae, 0x8e, 0x8d, 0x0e, 0xa4, 0x07, 0x04,
  0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x6c, 0xae, 0x8e,
  0x8d, 0x0e, 0xa4, 0x07, 0xc4, 0x6c, 0x46, 0x86, 0xee, 0xcd, 0x2c, 0xc6,
  0x06, 0xc5, 0x2e, 0x8c, 0xcd, 0x05, 0x2f, 0x65, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x6c, 0xae, 0x8e, 0x8d, 0x0e, 0x84, 0xaf, 0x07,
  0xc4, 0x6c, 0x46, 0x86, 0xee, 0xcd, 0x2c, 0xc6, 0x06, 0xc5, 0x2e, 0x8c,
  0xcd, 0x25, 0x2f, 0x05, 0x84, 0x87, 0x07, 0x24, 0xc6, 0x66, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x44,
  0xae, 0x6c, 0xae, 0x8e, 0x8d, 0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04, 0x29, 0x8c, 0xcd,
  0x8c, 0xea, 0xcd, 0x88, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x25, 0xcd, 0x0d,
  0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xc4, 0x2e, 0x8c, 0x2d, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0x44, 0xae, 0x6c, 0xae, 0x8e, 0x8d, 0x6e, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x6c, 0xae, 0x8e, 0x8d, 0xce, 0x05, 0x0f, 0xa4,
  0x07, 0xc4, 0x2c, 0xc6, 0x86, 0xee, 0xcd, 0x6c, 0x46, 0x06, 0xc5, 0x2e,
  0x8c, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x6c,
  0xae, 0x8e, 0x8d, 0xce, 0x25, 0x0f, 0xa4, 0x07, 0xc4, 0x2c, 0xc6, 0x86,
  0xee, 0xcd, 0x6c, 0x46, 0x06, 0xc5, 0x2e, 0x8c, 0x0d, 0xc4, 0xc7, 0x07,
  0x24, 0xc6, 0x26, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x44, 0xae, 0x6c, 0xae, 0x8e, 0x8d, 0x6e,
  0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x4e,
  0x06, 0xa4, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0xac, 0x29, 0x8c, 0xae, 0x4c,
  0x2e, 0x2d, 0x8c, 0x2d, 0xc6, 0x46, 0x0c, 0xa5, 0x2e, 0xcd, 0x8d, 0x0e,
  0xa4, 0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x2d, 0x89, 0x88, 0x05,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x2c, 0xcd, 0xcc, 0xac,
  0x6e, 0xae, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x44, 0xae, 0x6c, 0xae, 0x8e, 0x8d,
  0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x6c, 0xae, 0x8e,
  0x8d, 0xce, 0x05, 0x0f, 0xa4, 0x07, 0xa4, 0x2d, 0x8c, 0xae, 0x4c, 0x2e,
  0x2d, 0x8c, 0x2d, 0x89, 0x68, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xae, 0x6c, 0xae, 0x8e, 0x8d, 0xce, 0x05, 0x0f, 0x84, 0xaf, 0x07, 0xc4,
  0x6c, 0x46, 0x86, 0xee, 0xcd, 0x2c, 0xc6, 0x06, 0x85, 0x2c, 0xcd, 0xcc,
  0xac, 0x6e, 0xae, 0xcc, 0x45, 0x2e, 0x05, 0x84, 0x87, 0x07, 0x24, 0xc6,
  0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x6c, 0xae, 0x8e,
  0x8d, 0xce, 0x25, 0x0f, 0xa4, 0x07, 0xc4, 0x88, 0xed, 0x2d, 0x8c, 0x4e,
  0x86, 0xea, 0x0d, 0x29, 0x8c, 0xcd, 0x0c, 0x85, 0x2c, 0xcd, 0xcc, 0xac,
  0x6e, 0xae, 0xcc, 0xe5, 0x4c, 0x2c, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x44, 0xae,
  0x6c, 0xae, 0x8e, 0x8d, 0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0x41, 0xec, 0xed, 0x8d, 0x0d, 0x24, 0x69, 0xee, 0x2a, 0x8d, 0x0e, 0x2d,
  0xcd, 0x4d, 0xe8, 0xad, 0xce, 0x8d, 0x6c, 0x0e, 0x25, 0xcd, 0x0d, 0x24,
  0xcd, 0x8d, 0x4e, 0x06, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0x8f, 0x05, 0x24,
  0xcd, 0x0d, 0x24, 0xcd, 0x8d, 0x4e, 0x06, 0x84, 0x2c, 0xad, 0xad, 0xcc,
  0x6d, 0x2e, 0xed, 0xcd, 0x6d, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x24, 0xcd,
  0x8d, 0xac, 0x0c, 0xcf, 0x05, 0x0f, 0xc4, 0xa7, 0x07, 0x04, 0x06, 0xc4,
  0xc4, 0x04, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0xcf, 0x25, 0x0f, 0xc4, 0xa7,
  0x07, 0x04, 0x06, 0xc4, 0xc4, 0x04, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0xcf,
  0x05, 0x0f, 0x84, 0x07, 0x84, 0x2c, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed,
  0xcd, 0x6d, 0xce, 0x05, 0x0f, 0xc4, 0xc4, 0x04, 0x24, 0xcd, 0x8d, 0xac,
  0x0c, 0xcf, 0x25, 0x0f, 0x84, 0x07, 0x84, 0x2c, 0xad, 0xad, 0xcc, 0x6d,
  0x2e, 0xed, 0xcd, 0x6d, 0xce, 0x25, 0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0x84, 0xa8, 0x6c, 0xec, 0x8d,
  0xac, 0xac, 0x29, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x2d, 0xc6, 0x46,
  0x0c, 0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0xa4, 0x2d,
  0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x8d, 0x05, 0xe4, 0xad, 0x8e, 0x0e,
  0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xa4, 0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x2d,
  0x8c, 0x2d, 0x89, 0x88, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x2c, 0xcd, 0xcc, 0xac, 0x6e, 0xae, 0x2c,
  0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2d, 0x8c,
  0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x2d, 0x89, 0x08, 0xa4, 0x07, 0xa4, 0x2d,
  0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0xcd, 0x05, 0x0f, 0xc4, 0x04, 0x04,
  0x06, 0xcf, 0xcc, 0xcc, 0xcc, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x84, 0x2c, 0xcd, 0xcc, 0xac, 0x6e, 0xae, 0xcc, 0x45, 0x0e, 0xa4, 0x07,
  0xc4, 0x2c, 0xc6, 0x86, 0xee, 0xcd, 0x6c, 0x46, 0x06, 0xa5, 0x2d, 0x8c,
  0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0xcd, 0x05, 0x0f, 0xc4, 0xc7, 0x07, 0x24,
  0xc6, 0x26, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0x2c, 0xcd,
  0xcc, 0xac, 0x6e, 0xae, 0xcc, 0xe5, 0x4c, 0x0c, 0xa4, 0x07, 0x04, 0x29,
  0x8c, 0xcd, 0x8c, 0xea, 0xcd, 0x88, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa5,
  0x2d, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0xcd, 0x25, 0x2f, 0x65, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0xac,
  0x2d, 0x0c, 0x6e, 0x0e, 0x24, 0x0c, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x0c,
  0x84, 0xee, 0x0d, 0x64, 0x0b, 0x86, 0x25, 0xa6, 0x0b, 0xc4, 0xec, 0x4d,
  0x0e, 0x24, 0x0c, 0xe4, 0x2c, 0xcd, 0xae, 0xcc, 0x0d, 0x44, 0x2e, 0xcc,
  0xed, 0xac, 0xcc, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44,
  0xaa, 0xac, 0x2d, 0x0c, 0x8e, 0xea, 0x4d, 0x2a, 0xcc, 0xed, 0xac, 0x0c,
  0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x2e, 0x8c,
  0xad, 0xae, 0x8c, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x44, 0x2e, 0xcc, 0xed, 0xac, 0xac, 0x29, 0xcd, 0x8d, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x2e, 0xcc, 0xed,
  0xac, 0xac, 0x29, 0x0c, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x21, 0x41,
  0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x64, 0x2e, 0x8c, 0xae, 0x4e, 0x2e,
  0x8c, 0xae, 0x0c, 0x05, 0xc5, 0x2e, 0x8c, 0xad, 0xae, 0x0c, 0xa4, 0x05,
  0x44, 0x2e, 0xcc, 0xed, 0xac, 0xac, 0x29, 0xcd, 0x2d, 0x05, 0xe4, 0x05,
  0x04, 0x45, 0x2e, 0xcc, 0xed, 0xac, 0xac, 0x29, 0x0c, 0x0f, 0xa4, 0x05,
  0x44, 0x2e, 0xcc, 0xed, 0xac, 0xac, 0x29, 0xcd, 0x2d, 0x25, 0x65, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0x8c,
  0xae, 0x4e, 0xce, 0x6d, 0x0e, 0x24, 0x0c, 0x64, 0x2c, 0x6f, 0x8c, 0x2d,
  0xcd, 0xed, 0x0c, 0x84, 0x07, 0x06, 0xa4, 0xc5, 0x07, 0x24, 0x06, 0xa4,
  0xc5, 0x07, 0x04, 0xc6, 0x07, 0x24, 0xcc, 0x2d, 0xad, 0x2d, 0x8c, 0x2e,
  0xed, 0xcd, 0x0d, 0x24, 0xcd, 0x8d, 0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d,
  0xcc, 0x8d, 0x0e, 0xa4, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x64,
  0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x2c, 0xc8, 0x2d, 0xad,
  0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0x2d, 0xc9, 0x8d, 0xae, 0x4c, 0x0e, 0xee,
  0x8d, 0x2d, 0xcc, 0x8d, 0x0e, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0xa4, 0x8c, 0x2d, 0x0c, 0x6e, 0xae, 0x8c, 0x8c, 0x2a, 0xad,
  0xad, 0x8c, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x64, 0x2c, 0x6f, 0x8c, 0xad, 0x8c, 0xa8, 0x4e, 0x2e, 0x8c, 0x2e, 0xed,
  0xcd, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x64, 0xac, 0x4e, 0x8e, 0x29, 0xcd, 0xad,
  0x2c, 0x4c, 0x6e, 0x28, 0x6f, 0x8c, 0xad, 0x8c, 0x2a, 0xad, 0xad, 0x0c,
  0xa4, 0x07, 0xc4, 0xac, 0xed, 0x8d, 0x0c, 0xa5, 0x8c, 0x2d, 0x0c, 0x6e,
  0xae, 0x8c, 0x8c, 0x2a, 0xad, 0xad, 0x8c, 0x05, 0x64, 0x2c, 0x6f, 0x8c,
  0xad, 0x8c, 0xa8, 0x4e, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x2d, 0x05, 0xe4,
  0x05, 0x64, 0x2c, 0x6f, 0x8c, 0xad, 0x8c, 0xa8, 0x4e, 0x2e, 0x8c, 0x2e,
  0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xac, 0x4e,
  0x8e, 0x29, 0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x28, 0x6f, 0x8c, 0xad, 0x8c,
  0x2a, 0xad, 0xad, 0x0c, 0xa4, 0x07, 0x04, 0x65, 0xac, 0x4e, 0x8e, 0x29,
  0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x28, 0x6f, 0x8c, 0xad, 0x8c, 0x2a, 0xad,
  0xad, 0x0c, 0x84, 0xa7, 0x07, 0x04, 0xc6, 0xa5, 0xc6, 0x2c, 0x05, 0xe4,
  0x07, 0x44, 0x06, 0x44, 0x05, 0x64, 0xac, 0x4e, 0x8e, 0x29, 0xcd, 0xad,
  0x2c, 0x4c, 0x6e, 0x28, 0x6f, 0x8c, 0xad, 0x8c, 0x2a, 0xad, 0xad, 0x0c,
  0x44, 0x07, 0x24, 0x06, 0xa4, 0x05, 0x44, 0x06, 0x44, 0x05, 0x04, 0x65,
  0xac, 0x4e, 0x8e, 0x29, 0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x28, 0x6f, 0x8c,
  0xad, 0x8c, 0x2a, 0xad, 0xad, 0x0c, 0xa4, 0x05, 0x04, 0xc6, 0xa5, 0xc6,
  0x2c, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae,
  0x4e, 0xce, 0x0d, 0x64, 0xae, 0xed, 0xed, 0x8d, 0x0e, 0x6d, 0x8e, 0xae,
  0x0c, 0x0e, 0x05, 0x86, 0x05, 0x24, 0x86, 0x05, 0x64, 0xac, 0x4e, 0x8e,
  0x29, 0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x28, 0x6f, 0x8c, 0xad, 0x8c, 0x2a,
  0xad, 0xad, 0x2c, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1,
  0xee, 0x2d, 0x8d, 0x0c, 0x64, 0xee, 0x2e, 0x0c, 0x0e, 0x25, 0xcd, 0xed,
  0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x24, 0x8c, 0x05,
  0x24, 0xcd, 0xed, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x44, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xae, 0xac, 0x0d, 0x0e, 0xa4, 0x07,
  0x24, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0x0c, 0xa4, 0x07,
  0x44, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x0c, 0xa4, 0x07,
  0x84, 0xae, 0xac, 0x0d, 0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0x41, 0xec, 0xed, 0x8d, 0x0d, 0x24, 0x69, 0x2e, 0xc9, 0x4d, 0x2a, 0xcc,
  0xed, 0xac, 0x0c, 0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xc4,
  0x2e, 0x8c, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e,
  0xa4, 0x2d, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0xa4, 0x2d, 0x0c, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04, 0xc5,
  0x2e, 0x8c, 0x0d, 0xc4, 0xa7, 0x07, 0xa4, 0x2d, 0xcd, 0x0d, 0xc4, 0xc4,
  0x04, 0xc4, 0x2e, 0x8c, 0x0d, 0x84, 0xa7, 0x07, 0xa4, 0x2d, 0x0c, 0x2f,
  0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0x41, 0xec, 0xed, 0x8d,
  0x0d, 0x24, 0x69, 0x2e, 0xc9, 0x4d, 0x2a, 0xcc, 0xed, 0xac, 0x0c, 0x25,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x2e, 0x8c, 0x8d,
  0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d,
  0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0xa4, 0x2d, 0x0c, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04, 0xc5, 0x2e, 0x8c,
  0x0d, 0xc4, 0xa7, 0x07, 0xa4, 0x2d, 0xcd, 0x0d, 0xc4, 0xc4, 0x04, 0xc4,
  0x2e, 0x8c, 0x0d, 0x84, 0xa7, 0x07, 0xa4, 0x2d, 0x0c, 0x2f, 0x65, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x44, 0xea, 0x48, 0x88, 0xee, 0x8d, 0xa9, 0xae, 0x2d, 0xcd, 0x2d, 0xcc,
  0x6d, 0xac, 0x0c, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0x64, 0xec, 0x8d, 0xed, 0x4d, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04,
  0xc6, 0x45, 0x26, 0x46, 0xc6, 0xc6, 0x0c, 0x44, 0x05, 0x64, 0xec, 0x8d,
  0xed, 0x4d, 0xce, 0x45, 0x0e, 0x64, 0x05, 0x04, 0xc6, 0xe5, 0x26, 0xa6,
  0x46, 0xc6, 0x0c, 0x44, 0x05, 0x64, 0xec, 0x8d, 0xed, 0x4d, 0xce, 0xe5,
  0x0c, 0x64, 0x05, 0x04, 0xc6, 0x05, 0xe6, 0x46, 0x46, 0xc6, 0x0c, 0x44,
  0x05, 0x64, 0xec, 0x8d, 0xed, 0x4d, 0xce, 0x45, 0x6c, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0xe9, 0x2d, 0x8c, 0x0c,
  0x84, 0x0e, 0x4d, 0xae, 0xac, 0x0c, 0x24, 0xc6, 0x06, 0x44, 0x2c, 0x8d,
  0x0e, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x0e, 0xc4, 0x4c, 0xee,
  0xad, 0x0d, 0x24, 0x0c, 0x44, 0x2c, 0x8f, 0xae, 0x0c, 0x24, 0x8c, 0x8c,
  0x4c, 0xae, 0x6c, 0x6e, 0xae, 0x8c, 0x0c, 0x44, 0xac, 0xce, 0xcc, 0xac,
  0x4c, 0xce, 0xa5, 0x41, 0x61, 0x8e, 0x2e, 0x8c, 0x2e, 0x6d, 0xac, 0x41,
  0xa1, 0x2e, 0xcd, 0x8d, 0x6e, 0x06, 0x84, 0xe9, 0x2d, 0x8c, 0x6c, 0x06,
  0x2f, 0xc6, 0x46, 0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c,
  0x0e, 0xa5, 0x2e, 0xcd, 0x8d, 0x0e, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c,
  0x4e, 0x28, 0x8f, 0xae, 0x6c, 0x8e, 0x05, 0x44, 0x28, 0x8f, 0xae, 0x2c,
  0x88, 0x8c, 0x4c, 0xae, 0x6c, 0x6e, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c,
  0x0e, 0x24, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x2e, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd, 0x8d, 0x6e, 0x06,
  0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x6e, 0xa7, 0x41, 0xa1, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x44, 0x28, 0x8f, 0xae, 0x2c,
  0x88, 0x4c, 0xae, 0x6c, 0x6e, 0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x0e,
  0x84, 0xed, 0x2d, 0x8c, 0x6c, 0x0e, 0xa4, 0xad, 0x6e, 0x8e, 0x0e, 0x44,
  0xac, 0x0c, 0x24, 0x8c, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0x0c, 0x24, 0x8c,
  0x0e, 0x24, 0x0c, 0x84, 0x06, 0x44, 0x2c, 0x8f, 0xae, 0x0c, 0x44, 0xec,
  0xad, 0xce, 0x8d, 0x2c, 0x4c, 0x2e, 0xcf, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xe4, 0xe5, 0x05, 0x64, 0x2a, 0xcd, 0x6d, 0xac, 0x0c, 0xe4, 0xae,
  0x0c, 0xc4, 0xad, 0xac, 0x8c, 0x0c, 0x84, 0xee, 0x0d, 0x44, 0xae, 0x2c,
  0x8c, 0x0c, 0x84, 0x0e, 0x4d, 0xae, 0xac, 0x0c, 0x24, 0xc6, 0x06, 0x44,
  0x2c, 0x8d, 0x0e, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x4e, 0x07,
  0x64, 0x0f, 0x04, 0x86, 0x05, 0x24, 0x86, 0x05, 0x44, 0x06, 0xa4, 0x0f,
  0xa4, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0x8c, 0x2d,
  0xed, 0xcc, 0xad, 0x8c, 0x0c, 0x24, 0x8c, 0x0e, 0x24, 0x0c, 0x84, 0x06,
  0x44, 0x2c, 0x8f, 0xae, 0x0c, 0x44, 0xec, 0xad, 0xce, 0x8d, 0x2c, 0x4c,
  0x2e, 0x0f, 0x24, 0x6c, 0x4e, 0x07, 0x64, 0x0f, 0x04, 0x06, 0x24, 0x06,
  0xa4, 0x0f, 0x64, 0x0f, 0x44, 0x06, 0x04, 0x06, 0xa4, 0x0f, 0x64, 0x0f,
  0x24, 0x06, 0x44, 0x06, 0xa4, 0x0f, 0x64, 0x0f, 0x04, 0x06, 0x24, 0x06,
  0xa4, 0x0f, 0xc4, 0xc5, 0xc5, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4,
  0xe5, 0x05, 0xe4, 0xae, 0x0c, 0xe4, 0x2e, 0x8d, 0x8d, 0x0d, 0x84, 0xed,
  0x2d, 0x8c, 0x0c, 0x04, 0x07, 0x44, 0x2c, 0x8f, 0xae, 0x6c, 0x0e, 0x04,
  0xc5, 0x0f, 0x84, 0x06, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x0e,
  0x64, 0x0f, 0x24, 0x0c, 0x44, 0x0c, 0x84, 0x0f, 0x64, 0x0c, 0x84, 0x0c,
  0xa4, 0x2f, 0x05, 0x84, 0xee, 0x0d, 0x04, 0x2d, 0xcc, 0x8d, 0x8c, 0xad,
  0x0c, 0x84, 0xee, 0xee, 0x0d, 0x04, 0xee, 0x6d, 0x6e, 0x2e, 0x4d, 0x8c,
  0xad, 0x0c, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0x0f, 0x84, 0x4e, 0x2e, 0x0d,
  0x8e, 0xad, 0x8c, 0x0e, 0x84, 0x2d, 0x2c, 0xef, 0xad, 0x8e, 0x6e, 0x8e,
  0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x44, 0x2c, 0x6c,
  0xae, 0x8c, 0x0c, 0xe4, 0xcd, 0x0d, 0xc4, 0x2c, 0x4d, 0x6e, 0x8e, 0x0e,
  0x24, 0xcd, 0x8d, 0xac, 0x0c, 0xef, 0x64, 0x0e, 0xe4, 0xcd, 0xcc, 0x6c,
  0xae, 0x8c, 0x4e, 0x28, 0x8f, 0xae, 0x6c, 0x0e, 0x44, 0xac, 0x2c, 0xcd,
  0xed, 0x0c, 0x24, 0x8c, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0x0c, 0x24, 0x8c,
  0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0x06, 0x44, 0x2c, 0x8f, 0xae, 0x0c,
  0x44, 0xec, 0xad, 0xce, 0x8d, 0x2c, 0x4c, 0x2e, 0x0f, 0xe4, 0x4d, 0x0e,
  0xc4, 0xed, 0x8d, 0x4e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5,
  0x05, 0x04, 0x24, 0x88, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0x4c, 0x07, 0x04,
  0x04, 0x04, 0x04, 0x64, 0x0f, 0x04, 0x06, 0x24, 0x06, 0x84, 0x0f, 0x44,
  0x06, 0xa4, 0x05, 0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5,
  0x05, 0x04, 0xc4, 0xe9, 0x8d, 0x0e, 0x24, 0x8c, 0x2d, 0xed, 0xcc, 0xad,
  0x8c, 0x4c, 0x07, 0x64, 0x0f, 0xa4, 0x05, 0x04, 0x06, 0x84, 0x0f, 0x24,
  0x06, 0x44, 0x06, 0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xec,
  0xcd, 0x6d, 0x8e, 0x0e, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x84, 0xec, 0xee,
  0x4d, 0x8e, 0x2c, 0x88, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0xec, 0xc9, 0xcc,
  0x6c, 0xae, 0x8c, 0x0e, 0xa4, 0x07, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c,
  0x4e, 0x28, 0x8f, 0xae, 0x6c, 0x0e, 0xc4, 0x04, 0xc4, 0x6f, 0x66, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4,
  0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0xc4, 0xec, 0xad, 0x4e, 0x2e, 0xc6, 0x46,
  0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x0e, 0xa4, 0x07,
  0x24, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x85, 0xe9, 0x2d, 0x8c,
  0x4c, 0x06, 0x85, 0xec, 0xee, 0x4d, 0x8e, 0x2c, 0x88, 0x2d, 0xed, 0xcc,
  0xad, 0x8c, 0xec, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x65, 0xa7, 0x41,
  0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0x88, 0x2d,
  0xed, 0xcc, 0xad, 0x8c, 0x4c, 0x07, 0x64, 0x0f, 0x04, 0x06, 0x24, 0x06,
  0x84, 0x0f, 0x44, 0x06, 0xa4, 0x05, 0xa4, 0x0f, 0xa4, 0xc7, 0x07, 0x44,
  0xae, 0x8c, 0x4e, 0x2e, 0xad, 0xcc, 0xae, 0x0c, 0xc4, 0x2c, 0x4d, 0x6e,
  0x8e, 0x0e, 0x84, 0x0e, 0x4d, 0xae, 0xac, 0x0c, 0x24, 0xc6, 0x46, 0x2c,
  0x8d, 0x0e, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xae, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x24, 0xcd, 0x0c, 0x04, 0x85, 0xec, 0xee, 0x4d, 0x8e,
  0x2c, 0x88, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0xec, 0xc9, 0xcc, 0x6c, 0xae,
  0x8c, 0x0e, 0xa4, 0xa7, 0x07, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c, 0x4e,
  0x28, 0x8f, 0xae, 0x6c, 0x2e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd,
  0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0x0f, 0xa4, 0x07, 0xc4, 0xec,
  0xad, 0x4e, 0x2e, 0xc6, 0x46, 0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d,
  0xac, 0x6c, 0xce, 0x05, 0x0f, 0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0xcc,
  0xcc, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x25, 0x0f, 0xa4, 0x07,
  0x04, 0xc5, 0xec, 0xad, 0x4e, 0x2e, 0xc6, 0x46, 0x28, 0x8d, 0x2e, 0xc9,
  0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0x0f, 0xc4, 0xc7, 0x07, 0x24,
  0xc6, 0x26, 0x05, 0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0xcc, 0xcc, 0x6c,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd,
  0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x45, 0x0f, 0xa4, 0x07, 0xc4, 0xec,
  0xad, 0x4e, 0x2e, 0xc6, 0x46, 0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d,
  0xac, 0x6c, 0xce, 0x25, 0x0f, 0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0xcc,
  0xcc, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0x8c, 0x6d, 0xae, 0x0c, 0xe4, 0xe5, 0x05, 0xc4,
  0xe9, 0x8d, 0x0e, 0x24, 0x8c, 0x2d, 0xed, 0xcc, 0xad, 0x8c, 0x4c, 0x07,
  0x64, 0x0f, 0xa4, 0x05, 0x04, 0x06, 0x84, 0x0f, 0x24, 0x06, 0x44, 0x06,
  0xa4, 0x0f, 0xa4, 0xc7, 0x07, 0x44, 0xae, 0x8c, 0x4e, 0x2e, 0xad, 0xcc,
  0xae, 0x0c, 0x84, 0x2d, 0x6c, 0x8e, 0x0e, 0x84, 0x0e, 0x4d, 0xae, 0xac,
  0x0c, 0x24, 0xc6, 0x46, 0x2c, 0x8d, 0x0e, 0x24, 0xcd, 0x8d, 0x2c, 0x6d,
  0xac, 0x6c, 0xae, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x8d, 0x2c, 0x6d,
  0xac, 0x6c, 0xce, 0x05, 0x0f, 0xa4, 0x07, 0x04, 0xc5, 0xec, 0xad, 0x4e,
  0x2e, 0xc6, 0x46, 0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c,
  0xce, 0x05, 0x0f, 0xc4, 0xc7, 0x07, 0x24, 0xc6, 0x26, 0x05, 0xc4, 0x04,
  0x04, 0x06, 0xcf, 0xcc, 0xcc, 0xcc, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c,
  0xce, 0x25, 0x0f, 0xa4, 0x07, 0xc4, 0xec, 0xad, 0x4e, 0x2e, 0xc6, 0x46,
  0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x25, 0x0f,
  0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0xcc, 0xcc, 0x6c, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x8d, 0x2c, 0x6d,
  0xac, 0x6c, 0xce, 0x45, 0x0f, 0xa4, 0x07, 0x04, 0xc5, 0xec, 0xad, 0x4e,
  0x2e, 0xc6, 0x46, 0x28, 0x8d, 0x2e, 0xc9, 0x8d, 0x2c, 0x6d, 0xac, 0x6c,
  0xce, 0x25, 0x0f, 0xc4, 0xc7, 0x07, 0x24, 0xc6, 0x26, 0x05, 0xc4, 0x04,
  0x04, 0x06, 0xcf, 0xcc, 0xcc, 0xcc, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0xaf, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c,
  0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x44,
  0xaa, 0x8c, 0x4e, 0x2e, 0xad, 0xcc, 0xae, 0x0c, 0x04, 0x2d, 0x8d, 0x0e,
  0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x04, 0xee, 0x6d, 0x2e, 0x8d, 0x2e,
  0xed, 0xcd, 0xcd, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0x04, 0x29, 0x8d, 0xee, 0xea, 0x4d, 0x8e, 0x8d, 0x0c, 0xea, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0x25, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xe4, 0xea,
  0x4d, 0x8e, 0x8d, 0x4c, 0x2a, 0x2c, 0xef, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x0d, 0x25, 0x05, 0x64, 0x05, 0x44, 0x2a, 0x2c, 0x8f, 0x6a, 0xa8, 0x4e,
  0x4e, 0xae, 0xcc, 0x8d, 0x0e, 0x25, 0x05, 0x44, 0x05, 0xe4, 0xea, 0x4d,
  0x8e, 0x8d, 0x4c, 0x2a, 0x2c, 0x8f, 0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x2e,
  0xed, 0xcd, 0x0d, 0x25, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xe1, 0xe5, 0x05, 0x44, 0xaa, 0x8c, 0x4e, 0x2e, 0xad, 0xcc, 0xae, 0x0c,
  0x04, 0x2d, 0x8d, 0x0e, 0xe4, 0x4d, 0x4c, 0xad, 0x6c, 0x8c, 0x0e, 0x64,
  0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x04, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0xcd, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04,
  0x29, 0x8d, 0xee, 0x49, 0x4c, 0xad, 0x6c, 0x8c, 0x0e, 0xea, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0x25, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xe4, 0x49,
  0x4c, 0xad, 0x6c, 0x8c, 0x4e, 0x2a, 0x2c, 0xef, 0x49, 0x2e, 0xed, 0x2c,
  0xcd, 0x0d, 0x25, 0x05, 0x64, 0x05, 0x44, 0x2a, 0x2c, 0x8f, 0x6a, 0xa8,
  0x4e, 0x4e, 0xae, 0xcc, 0x8d, 0x0e, 0x25, 0x05, 0x44, 0x05, 0xe4, 0x49,
  0x4c, 0xad, 0x6c, 0x8c, 0x4e, 0x2a, 0x2c, 0x8f, 0x28, 0x4d, 0xae, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x25, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x64, 0x88, 0x2d,
  0x0d, 0x6e, 0x0a, 0x2e, 0x6c, 0xac, 0x8c, 0xea, 0x8d, 0xaa, 0x0c, 0x8f,
  0xae, 0x4e, 0xae, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d,
  0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x64, 0x8c,
  0x2d, 0x0d, 0x6e, 0x0a, 0x2e, 0x6c, 0xac, 0x0c, 0xea, 0x6d, 0x2e, 0x8d,
  0x2e, 0xed, 0xcd, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x89, 0x68, 0x08,
  0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0xa4, 0x07, 0x64, 0x8c,
  0x2d, 0x0d, 0x6e, 0x0a, 0x2e, 0x6c, 0xac, 0x0c, 0xea, 0x6d, 0x2e, 0x8d,
  0x2e, 0xed, 0xcd, 0xcd, 0x05, 0x2f, 0x4f, 0x0f, 0xe4, 0x05, 0x64, 0x8c,
  0x2d, 0x0d, 0x6e, 0x0a, 0x2e, 0x6c, 0xac, 0x0c, 0xea, 0x6d, 0x2e, 0x8d,
  0x2e, 0xed, 0xcd, 0xcd, 0xe5, 0x6e, 0x07, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0x04, 0xaa, 0x4c, 0x6e, 0x0e, 0xae, 0x6c, 0x8c, 0x2e, 0xcd, 0xae, 0x0c,
  0x84, 0x2c, 0xcd, 0x2e, 0x8d, 0xac, 0x0c, 0x84, 0xee, 0x0d, 0xe4, 0xac,
  0x8c, 0x0e, 0xc4, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0x84, 0xa8, 0xcc,
  0x2e, 0x6d, 0xac, 0x0c, 0x64, 0xe8, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d,
  0x8c, 0xae, 0x6c, 0x4e, 0x07, 0x64, 0x6f, 0xab, 0x25, 0x86, 0x25, 0xa6,
  0x8b, 0x05, 0x64, 0xab, 0x25, 0x86, 0x25, 0xa6, 0x8b, 0x05, 0x04, 0x05,
  0x86, 0x05, 0x24, 0xa6, 0xab, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x89, 0x68, 0x08, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0xcd, 0x25,
  0x0f, 0xa4, 0x07, 0xa4, 0xc5, 0x89, 0x68, 0x08, 0xee, 0x6d, 0x2e, 0x8d,
  0x2e, 0xed, 0xcd, 0xcd, 0x25, 0x6f, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0xc9,
  0xcd, 0xae, 0x4c, 0x8e, 0x0e, 0x24, 0x0b, 0xc4, 0xec, 0x4d, 0x0e, 0x84,
  0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x0e, 0xab, 0x65, 0x8e, 0x2e, 0x8f, 0xad,
  0x0c, 0x64, 0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x6c,
  0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x0c, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0xa4, 0x07, 0x04, 0xc5, 0x89, 0x68,
  0x08, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0xcd, 0x05, 0x2f, 0x0f,
  0x64, 0x05, 0x24, 0x26, 0x05, 0x44, 0x05, 0x04, 0xc6, 0xa5, 0xc6, 0x6c,
  0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0xab, 0x25, 0x86, 0x25, 0xa6,
  0x0b, 0xa4, 0xc5, 0x07, 0x64, 0x0b, 0x86, 0x05, 0x24, 0xa6, 0xab, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84,
  0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e,
  0xed, 0xcd, 0x6d, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5,
  0x05, 0x44, 0xaa, 0x8c, 0x4e, 0x2e, 0xad, 0xcc, 0xae, 0x0c, 0x24, 0x8c,
  0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x0c, 0x24, 0x8c, 0x0e, 0x24,
  0x0c, 0x04, 0x2d, 0x8d, 0x0e, 0x04, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x0d, 0x24, 0xcd, 0x8d, 0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d, 0x8c,
  0xae, 0x8c, 0x0c, 0xc4, 0x4c, 0xee, 0xad, 0x0d, 0xc4, 0xae, 0x4c, 0x8e,
  0xae, 0x0c, 0x0f, 0x24, 0x8c, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae,
  0x6c, 0x0e, 0xa4, 0x6e, 0x2e, 0xcd, 0xed, 0x0c, 0x84, 0x0e, 0xad, 0x0c,
  0x04, 0x2d, 0x8d, 0xee, 0x64, 0x0e, 0x44, 0x2c, 0x4c, 0x2e, 0x6f, 0xac,
  0xcc, 0x8d, 0x4e, 0x2e, 0x6d, 0x6c, 0xce, 0xa5, 0x41, 0xc1, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x29, 0x8d, 0x2e, 0x88, 0x8e, 0x4e, 0x2e,
  0x4d, 0xac, 0x8e, 0xae, 0x0c, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d,
  0xac, 0x8e, 0xae, 0x6c, 0x6b, 0xa6, 0x8b, 0x05, 0x44, 0xa8, 0x2e, 0x8d,
  0x8d, 0x2e, 0xc9, 0x8d, 0x4a, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0x2c,
  0xc9, 0x8d, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x2d,
  0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x0e, 0x24, 0x8c,
  0x8e, 0x4e, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0xae, 0x4c, 0x8e, 0xae,
  0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x0b,
  0xa6, 0x0b, 0x64, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x24, 0x8c, 0x8e, 0x4e, 0xce, 0x45, 0x2c, 0x4c, 0x2e, 0x6f, 0xac,
  0xcc, 0x8d, 0x4e, 0x2e, 0x6d, 0x6c, 0xce, 0x05, 0x0f, 0x44, 0x05, 0x04,
  0xc5, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d,
  0xac, 0x8e, 0xae, 0x6c, 0x2b, 0xa6, 0x0b, 0xa4, 0x05, 0xc4, 0xae, 0x4c,
  0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae,
  0x6c, 0x0b, 0xa6, 0x2b, 0x05, 0x64, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x24, 0x8c, 0x8e, 0x4e, 0xce, 0x45, 0x2c, 0x4c,
  0x2e, 0x6f, 0xac, 0xcc, 0x8d, 0x4e, 0x2e, 0x6d, 0x6c, 0xce, 0x25, 0x0f,
  0x44, 0x05, 0x04, 0xc5, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e,
  0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x4b, 0xa6, 0x0b, 0xa4, 0x05,
  0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d,
  0xac, 0x8e, 0xae, 0x6c, 0x0b, 0xa6, 0x2b, 0x65, 0xa7, 0x41, 0xa1, 0xaf,
  0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0x8c, 0x4e, 0x2e, 0xad,
  0xcc, 0xae, 0x0c, 0x24, 0x8c, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae,
  0x0c, 0x24, 0x8c, 0x0e, 0x24, 0x0c, 0x04, 0x2d, 0x8d, 0x0e, 0x04, 0xee,
  0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0x24, 0xcd, 0x8d, 0xae, 0x4c,
  0x0e, 0xee, 0x8d, 0x2d, 0x8c, 0xae, 0x8c, 0x0c, 0xc4, 0x4c, 0xee, 0xad,
  0x0d, 0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x0f, 0x24, 0x8c, 0x8e, 0x4e,
  0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x0e, 0xa4, 0x6e, 0x2e, 0xcd, 0xed,
  0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2d, 0x8d, 0xee, 0x64, 0x0e, 0x44,
  0x2c, 0x4c, 0x2e, 0x6f, 0xac, 0xcc, 0x8d, 0x4e, 0x2e, 0x6d, 0x6c, 0xce,
  0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04, 0x29, 0x8d,
  0x2e, 0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x0c, 0xc5, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f,
  0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x6b, 0xa6, 0x8b,
  0x05, 0x44, 0xa8, 0x2e, 0x8d, 0x8d, 0x2e, 0xc9, 0x8d, 0x4a, 0x2e, 0x2d,
  0xcc, 0xed, 0x8c, 0xad, 0x2c, 0xc9, 0x8d, 0xae, 0x4c, 0x6e, 0xae, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x2d, 0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e,
  0xae, 0x6c, 0x0e, 0x24, 0x8c, 0x8e, 0x4e, 0x2e, 0xa5, 0x41, 0x61, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d,
  0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d,
  0xac, 0x8e, 0xae, 0x6c, 0x0b, 0xa6, 0x0b, 0x64, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0x8c, 0x8e, 0x4e, 0xce, 0x45,
  0x2c, 0x4c, 0x2e, 0x6f, 0xac, 0xcc, 0x8d, 0x4e, 0x2e, 0x6d, 0x6c, 0xce,
  0x05, 0x0f, 0x44, 0x05, 0x04, 0xc5, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f,
  0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x2b, 0xa6, 0x0b,
  0xa4, 0x05, 0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e,
  0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x0b, 0xa6, 0x2b, 0x05, 0x64, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0x8c, 0x8e,
  0x4e, 0xce, 0x45, 0x2c, 0x4c, 0x2e, 0x6f, 0xac, 0xcc, 0x8d, 0x4e, 0x2e,
  0x6d, 0x6c, 0xce, 0x25, 0x0f, 0x44, 0x05, 0x04, 0xc5, 0xae, 0x4c, 0x8e,
  0xae, 0x0c, 0x2f, 0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c,
  0x4b, 0xa6, 0x0b, 0xa4, 0x05, 0xc4, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0x2f,
  0x88, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x6c, 0x0b, 0xa6, 0x2b,
  0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0xe4,
  0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0x0c, 0x64, 0x2c, 0xac, 0xad,
  0x4c, 0x2e, 0xec, 0x64, 0x0e, 0xc4, 0xec, 0x4d, 0xee, 0x2e, 0x4c, 0x8e,
  0x0c, 0x84, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x44,
  0x2e, 0x2c, 0xaf, 0x41, 0x21, 0xcd, 0x8d, 0x2d, 0xcd, 0xad, 0x0c, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e,
  0x8c, 0xae, 0xcc, 0xe8, 0x4d, 0xee, 0x2e, 0x4c, 0x8e, 0x6c, 0x28, 0xac,
  0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c, 0x8f, 0x28, 0x4d, 0xae, 0x6c, 0x8c,
  0x2e, 0xed, 0xcd, 0x0d, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x8e, 0x06, 0x8f, 0x06, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e,
  0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d,
  0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e,
  0xed, 0x2c, 0xcd, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x21, 0xc1, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x64, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d,
  0xea, 0x6d, 0x0e, 0xa4, 0x07, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06,
  0x05, 0x86, 0x05, 0x04, 0x26, 0x65, 0xa7, 0x41, 0x21, 0xa1, 0x41, 0x21,
  0xe1, 0xe5, 0x05, 0xa4, 0xca, 0x0d, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c,
  0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0x64,
  0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x0c, 0x24, 0xcd,
  0x8d, 0xee, 0x0d, 0x24, 0x0c, 0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x04,
  0xee, 0x6d, 0x2e, 0x8d, 0xee, 0xcd, 0xcd, 0xa5, 0x41, 0x21, 0xc1, 0x8c,
  0xed, 0x2d, 0x8c, 0x8e, 0x06, 0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0xa4,
  0x07, 0xa4, 0xad, 0x8e, 0x0d, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06,
  0x65, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d, 0xea, 0x6d, 0x8e, 0x05, 0x04,
  0x86, 0x05, 0x24, 0x26, 0x85, 0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec,
  0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee,
  0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0x21, 0x41, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x2d,
  0x4d, 0xaf, 0x0c, 0xe5, 0xee, 0x4d, 0x8e, 0x8d, 0xcc, 0x05, 0x2f, 0x4f,
  0x2f, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0x21, 0xcd, 0x8d,
  0x2d, 0xcd, 0xad, 0x0c, 0x44, 0x2a, 0x2c, 0x0f, 0xe4, 0xa8, 0xcc, 0xad,
  0x4c, 0x2e, 0x8c, 0xae, 0xcc, 0xe8, 0x4d, 0xee, 0x2e, 0x4c, 0x8e, 0x6c,
  0x28, 0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c, 0x0f, 0x25, 0xcd, 0x0d,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0x2c, 0xac, 0xad, 0x4c,
  0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x8f, 0x06, 0x04,
  0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed,
  0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad,
  0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0xa5,
  0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x4e, 0x06, 0x64, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d, 0xea, 0x6d,
  0x0e, 0xa4, 0x07, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x05, 0x86,
  0x05, 0x04, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xe4, 0xe5, 0x05, 0xa4, 0xca, 0x0d, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c,
  0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0x64,
  0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x0c, 0x24, 0xcd,
  0x8d, 0xee, 0x0d, 0x24, 0x0c, 0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x04,
  0xee, 0x6d, 0x2e, 0x8d, 0xee, 0xcd, 0xcd, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0xe4, 0xee, 0x4d, 0x8e,
  0x8d, 0x0c, 0xa4, 0x07, 0xa4, 0xad, 0x8e, 0x0d, 0xc5, 0x8c, 0xed, 0x2d,
  0x8c, 0x8e, 0x06, 0x65, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d, 0xea, 0x6d,
  0x8e, 0x05, 0x04, 0x86, 0x05, 0x24, 0x26, 0x85, 0x05, 0x04, 0x4e, 0xee,
  0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d,
  0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e,
  0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41,
  0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2a, 0x2c, 0x0f, 0x44, 0x2e,
  0x2c, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2e, 0x2c, 0xcf,
  0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x0d, 0xa4, 0x07, 0x64, 0x2c, 0xac,
  0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0x2a, 0xcd,
  0x6d, 0xac, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x2c, 0xac, 0xad, 0x4c,
  0x2e, 0xec, 0x64, 0x0e, 0xa4, 0x2c, 0xaf, 0x0c, 0xe4, 0x2e, 0x6c, 0x0e,
  0x24, 0x8c, 0x0e, 0x04, 0x86, 0x05, 0x86, 0x05, 0x06, 0x24, 0xcd, 0x0d,
  0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea,
  0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac,
  0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x0d,
  0xa4, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x84, 0x0e, 0xad,
  0x0c, 0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0xcc, 0x05, 0x2f, 0x4f, 0x0f, 0x24,
  0x6d, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0x2c, 0x4d, 0xae, 0x6c, 0x8c,
  0x2e, 0xed, 0xcd, 0xcd, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2e,
  0x2c, 0xcf, 0x85, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d,
  0xa4, 0x07, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x4d, 0xaf, 0x0c,
  0xe5, 0xee, 0x4d, 0x8e, 0x8d, 0xcc, 0x05, 0x2f, 0x4f, 0x2f, 0x65, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e,
  0xce, 0x0d, 0x44, 0x2e, 0x2c, 0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e,
  0x8c, 0xae, 0x0c, 0x24, 0x0c, 0x44, 0x2e, 0x2c, 0x0f, 0x24, 0xcd, 0x0d,
  0xe4, 0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x64, 0x0e, 0x2e, 0x6c, 0xac, 0x0c,
  0xc4, 0xec, 0x4d, 0x0e, 0x24, 0x0c, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e,
  0x0c, 0x04, 0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0x64, 0xec, 0x4d, 0x4e, 0xae,
  0x6c, 0x0e, 0xee, 0xcd, 0x8d, 0x2c, 0xcd, 0xed, 0x0c, 0x84, 0xee, 0x0d,
  0x24, 0xcc, 0x0d, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0x0f, 0xc4, 0x4c, 0xee,
  0xad, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0x2c, 0x6d, 0x0e, 0x2e, 0x8c,
  0x6e, 0x0c, 0xad, 0x8c, 0x0c, 0x44, 0x86, 0x08, 0xe4, 0x4c, 0x2e, 0x8d,
  0xcc, 0xa5, 0x41, 0x21, 0xcd, 0x8d, 0x2d, 0xcd, 0xad, 0x0c, 0x44, 0x2a,
  0x2c, 0x0f, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0x6c, 0x28,
  0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c, 0x0f, 0xa5, 0x2e, 0xcd, 0x8d,
  0x4e, 0x06, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0x8f, 0x05, 0x24, 0xcd, 0x0d,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0x2c, 0xac, 0xad, 0x4c,
  0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x8f, 0x06, 0x04,
  0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed,
  0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad,
  0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x8d, 0x05,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x44, 0x2d, 0x8d, 0x8e, 0xae,
  0x4c, 0x0e, 0xa4, 0x07, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x05,
  0x86, 0x05, 0x04, 0x26, 0x25, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04, 0x2f, 0x0f,
  0xa4, 0x07, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0x0f, 0x64, 0x05, 0x04, 0xc6,
  0xa5, 0xc6, 0x6c, 0x07, 0xe4, 0xe5, 0x05, 0x64, 0xac, 0xcc, 0x8d, 0xae,
  0x4c, 0x0e, 0x24, 0xcd, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0x2d, 0x8d,
  0x8c, 0x8c, 0xad, 0x0c, 0xe4, 0xcd, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x04,
  0x2e, 0x0d, 0xaf, 0x8c, 0xcd, 0xa5, 0x41, 0x21, 0x01, 0x2f, 0x0f, 0x64,
  0xa5, 0x07, 0x44, 0x2d, 0x8d, 0x8e, 0xae, 0x4c, 0x6e, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x64, 0x6e,
  0x4c, 0xae, 0xac, 0xcc, 0x0d, 0xea, 0x6d, 0x0e, 0xa4, 0x07, 0x04, 0x2f,
  0x0f, 0xe4, 0x05, 0x84, 0x28, 0x6d, 0x0e, 0x2e, 0x8c, 0x6e, 0x0c, 0x4d,
  0x2a, 0x2c, 0x6f, 0x8e, 0x28, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed, 0xcd,
  0x6d, 0x0e, 0x25, 0xc5, 0x05, 0x2f, 0x0f, 0x44, 0x05, 0x44, 0xc6, 0x05,
  0x06, 0xa4, 0x05, 0x24, 0xc6, 0x05, 0x66, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0xc9, 0xcd, 0xae, 0x4c, 0x8e,
  0x0e, 0x24, 0x0b, 0xc4, 0xec, 0x4d, 0x0e, 0x84, 0x28, 0x4d, 0xae, 0x6c,
  0x8c, 0x0e, 0xab, 0x65, 0x8e, 0x2e, 0x8f, 0xad, 0x0c, 0x64, 0xec, 0xed,
  0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x6c, 0xce, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x64, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d, 0xea, 0x6d,
  0xce, 0x25, 0x0f, 0xa4, 0x07, 0xa4, 0x65, 0x6e, 0x4c, 0xae, 0xac, 0xcc,
  0x0d, 0xea, 0x6d, 0xce, 0x25, 0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0xca, 0x0d, 0x4e, 0xee, 0x4d, 0xad,
  0x6c, 0x8c, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2e, 0x0d, 0xaf, 0x8c,
  0x0d, 0x64, 0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x0c,
  0x24, 0xcd, 0x8d, 0xee, 0x0d, 0x24, 0x0c, 0xe4, 0xee, 0x4d, 0x8e, 0x8d,
  0x0c, 0x04, 0xee, 0x6d, 0x2e, 0x8d, 0xee, 0xcd, 0xcd, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0xe4, 0xee,
  0x4d, 0x8e, 0x8d, 0x0c, 0xa4, 0x07, 0xa4, 0xad, 0x8e, 0x0d, 0xc5, 0x8c,
  0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x65, 0x6e, 0x4c, 0xae, 0xac, 0xcc, 0x0d,
  0xea, 0x6d, 0x8e, 0x05, 0x04, 0x86, 0x05, 0x24, 0x26, 0x85, 0x05, 0x04,
  0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed,
  0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad,
  0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65,
  0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2a, 0x2c, 0x0f,
  0x44, 0x2e, 0x2c, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2e,
  0x2c, 0xcf, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x0d, 0xa4, 0x07, 0x64,
  0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x6d, 0xa7, 0x41, 0x21, 0xe1, 0xe5, 0x05, 0x64, 0x2a, 0xcd, 0x6d,
  0xac, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e,
  0xec, 0x64, 0x0e, 0xa4, 0x2c, 0xaf, 0x0c, 0xe4, 0x2e, 0x6c, 0x0e, 0x24,
  0x8c, 0x0e, 0x04, 0x86, 0x05, 0x86, 0x05, 0x06, 0x24, 0xcd, 0x0d, 0x04,
  0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed,
  0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad,
  0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x0d, 0xa4,
  0x41, 0x21, 0xe1, 0xe5, 0x05, 0x84, 0x0e, 0xad, 0x0c, 0xe4, 0xee, 0x4d,
  0x8e, 0x8d, 0xcc, 0x05, 0x2f, 0x4f, 0x0f, 0x24, 0x6d, 0x0e, 0x84, 0x0e,
  0xad, 0x0c, 0x84, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0xcd,
  0xa5, 0x41, 0x21, 0x41, 0x2e, 0x2c, 0xcf, 0x85, 0x2c, 0x4d, 0xae, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0xa4, 0x07, 0xc4, 0xed, 0x4d, 0xae, 0x2d,
  0x8c, 0x2d, 0x4d, 0xaf, 0x0c, 0xe5, 0xee, 0x4d, 0x8e, 0x8d, 0xcc, 0x05,
  0x2f, 0x4f, 0x2f, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x44, 0x2e, 0x2c, 0x6f, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0xaa, 0x0c,
  0x8f, 0xae, 0x4e, 0xae, 0x0c, 0x64, 0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd,
  0x2d, 0x8c, 0xae, 0x6c, 0x0e, 0xe4, 0xcd, 0x0d, 0x24, 0x0c, 0x04, 0xed,
  0x4d, 0x2e, 0x4d, 0xef, 0xcd, 0x8d, 0x2e, 0x8c, 0x0d, 0x04, 0x8e, 0x2d,
  0xcc, 0xad, 0xcc, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06,
  0x84, 0xaa, 0x0c, 0x6f, 0xe8, 0xed, 0x4d, 0x8e, 0x6c, 0x0e, 0x25, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0xee, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04, 0xee, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0xcd, 0x05, 0x4f, 0x6f, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x64, 0x28, 0x8c, 0x6d, 0xac,
  0x8e, 0x2d, 0x8c, 0xae, 0x0c, 0x44, 0x2e, 0x2c, 0x0f, 0x84, 0x2c, 0xcd,
  0xcc, 0xac, 0x4c, 0xae, 0xcc, 0x8d, 0x2e, 0x2d, 0x8c, 0x6d, 0xce, 0xa5,
  0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e,
  0x2d, 0x8c, 0xae, 0x4c, 0x2a, 0x2c, 0x8f, 0x28, 0xcd, 0xcc, 0xac, 0x4c,
  0xae, 0xcc, 0x8d, 0x2e, 0x2d, 0x8c, 0x6d, 0x0e, 0xe5, 0xad, 0x8e, 0x0e,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x0c, 0xef, 0xab,
  0xce, 0x8e, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0x84, 0x8c, 0x2c, 0xef, 0xab, 0xce, 0x8e, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x8e, 0x05,
  0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2d,
  0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0xae, 0x4e,
  0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05,
  0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0x2c,
  0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd,
  0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06,
  0x8f, 0x06, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd,
  0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d,
  0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c,
  0xcd, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4,
  0xe5, 0x05, 0x64, 0xe8, 0xad, 0x0d, 0xae, 0x8e, 0xae, 0x0c, 0x44, 0x2e,
  0x2c, 0x0f, 0x84, 0x2c, 0xcd, 0xcc, 0xac, 0x4c, 0xae, 0xcc, 0x8d, 0x2e,
  0x2d, 0x8c, 0x6d, 0x0e, 0x44, 0x2c, 0x0f, 0x24, 0xcd, 0x8d, 0xae, 0x4c,
  0x6e, 0xae, 0x6c, 0x8c, 0x2e, 0xcd, 0xed, 0x0c, 0x84, 0x0e, 0xad, 0x0c,
  0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x0e, 0x04, 0x8e, 0x2d, 0xcc,
  0xad, 0x0c, 0x84, 0xee, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x64, 0xae,
  0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0x2a, 0x2c, 0x0f, 0x84, 0x8c, 0x0c, 0x0f, 0xa4, 0x07, 0xe4, 0xa8,
  0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0x6c, 0x28, 0xac, 0xad, 0x4c, 0x2e,
  0x4c, 0x2a, 0x2c, 0x0f, 0x85, 0x28, 0x6d, 0x0e, 0x2e, 0x8c, 0x6e, 0x0c,
  0x4d, 0x2a, 0x2c, 0x6f, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0x25, 0xc5,
  0x05, 0x2f, 0x0f, 0x64, 0x05, 0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x25,
  0x86, 0x05, 0x04, 0x26, 0x85, 0x05, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e,
  0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x04, 0x4e,
  0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea,
  0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c,
  0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2a, 0x2c, 0x0f, 0x84, 0x8c, 0x2c,
  0x0f, 0xa4, 0x07, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0x6c,
  0x28, 0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c, 0x0f, 0x85, 0x28, 0x6d,
  0x0e, 0x2e, 0x8c, 0x6e, 0x0c, 0x4d, 0x2a, 0x2c, 0x6f, 0x2e, 0xc9, 0x8d,
  0xac, 0x0c, 0x0f, 0x25, 0xc5, 0x05, 0x2f, 0x0f, 0x64, 0x05, 0xa4, 0x2e,
  0xcd, 0x8d, 0x4e, 0x06, 0x05, 0x86, 0x05, 0x24, 0x26, 0x85, 0x05, 0x64,
  0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x8d, 0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed,
  0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e,
  0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed,
  0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xe4, 0xe5, 0x05, 0x64, 0xe8, 0xad, 0x0d, 0xae, 0x8e, 0xae, 0x0c, 0x44,
  0x2e, 0x2c, 0x0f, 0x84, 0x2c, 0xcd, 0xcc, 0xac, 0x4c, 0xae, 0xcc, 0x8d,
  0x2e, 0x2d, 0x8c, 0x6d, 0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x8c, 0x0c, 0xef, 0x0b, 0xee,
  0x6d, 0x0e, 0xa4, 0x07, 0x84, 0x8c, 0x0c, 0xcf, 0xe5, 0x4d, 0x2e, 0xed,
  0x2c, 0xcd, 0x0d, 0xa4, 0x05, 0x84, 0x8c, 0x0c, 0xcf, 0x85, 0x2c, 0x4d,
  0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x44, 0x05, 0x84, 0xec, 0x8d,
  0x0e, 0x85, 0x8c, 0x0c, 0xcf, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x0d,
  0xa4, 0x05, 0x04, 0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x8d, 0x05, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9,
  0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x05, 0xe4, 0x05, 0x84, 0xec, 0x8d, 0x0e,
  0x85, 0x8c, 0x0c, 0xcf, 0x85, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed,
  0xcd, 0x8d, 0x05, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9,
  0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x8c, 0x2c, 0xef, 0x0b,
  0xee, 0x6d, 0x0e, 0xa4, 0x07, 0x84, 0x8c, 0x2c, 0xcf, 0xe5, 0x4d, 0x2e,
  0xed, 0x2c, 0xcd, 0x0d, 0xa4, 0x05, 0x84, 0x8c, 0x2c, 0xcf, 0x85, 0x2c,
  0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x44, 0x05, 0x84, 0xec,
  0x8d, 0x0e, 0x85, 0x8c, 0x2c, 0xcf, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd,
  0x0d, 0xa4, 0x05, 0x04, 0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e,
  0xed, 0xcd, 0x8d, 0x05, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc,
  0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x05, 0xe4, 0x05, 0x84, 0xec, 0x8d,
  0x0e, 0x85, 0x8c, 0x2c, 0xcf, 0x85, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e,
  0xed, 0xcd, 0x8d, 0x05, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc,
  0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e,
  0x2d, 0x8c, 0xae, 0x0c, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x0c,
  0x64, 0x2e, 0xac, 0x0d, 0x8e, 0x2d, 0xcd, 0xed, 0x0c, 0xc4, 0xec, 0xed,
  0x8d, 0x0e, 0x4e, 0x2e, 0xcd, 0x8d, 0xce, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x84, 0x8c, 0x0c, 0xef, 0xab, 0xce, 0x0e, 0xa4, 0x07, 0x84, 0xaa,
  0x0c, 0x6f, 0xe8, 0xed, 0x4d, 0x8e, 0x6c, 0x0e, 0x85, 0x8c, 0x0c, 0xef,
  0x0b, 0xee, 0x6d, 0x2e, 0x05, 0xa4, 0x05, 0xa4, 0xce, 0x6e, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x84, 0x8c, 0x2c, 0xef, 0xab, 0xce, 0x0e, 0xa4,
  0x07, 0x84, 0xaa, 0x0c, 0x6f, 0xe8, 0xed, 0x4d, 0x8e, 0x6c, 0x0e, 0x85,
  0x8c, 0x2c, 0xef, 0x0b, 0xee, 0x6d, 0x2e, 0x05, 0xa4, 0x05, 0xa4, 0xce,
  0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0xc4,
  0xe8, 0x4d, 0xee, 0x2e, 0x4c, 0x8e, 0x0c, 0x84, 0xac, 0x6c, 0x8c, 0x2d,
  0x4c, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0xcd, 0xa5, 0x41, 0xc1, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x64, 0x08, 0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x6e, 0xee,
  0x48, 0x2e, 0x8d, 0x8c, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x4c, 0xe8,
  0x0d, 0xcf, 0x28, 0x8d, 0x8d, 0xae, 0x4c, 0x0e, 0x25, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x8e, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x0c, 0x8e, 0x0c,
  0x8f, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06,
  0x84, 0x0c, 0x8e, 0x2c, 0x8f, 0x05, 0x24, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd,
  0x8d, 0x0e, 0x44, 0x2e, 0x8c, 0x2e, 0xed, 0x2d, 0x65, 0xa7, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x24,
  0xcc, 0x2d, 0x8c, 0x2d, 0x8f, 0x2e, 0x6d, 0x2c, 0x8c, 0x8d, 0x2d, 0x0f,
  0x24, 0xcd, 0x8d, 0xae, 0xec, 0x4c, 0x2e, 0x8c, 0xae, 0x8c, 0x0c, 0x64,
  0x0c, 0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x4e, 0xec, 0x2d, 0x4c, 0x8e, 0x0c,
  0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x0c, 0x04, 0x45, 0xec, 0x0d,
  0x0f, 0xc4, 0x2c, 0x8d, 0x8d, 0xae, 0x4c, 0x2e, 0xc5, 0xa5, 0x41, 0xc1,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x24, 0xc8, 0x2d, 0x8c, 0x2d, 0x8f, 0x2e,
  0x6d, 0x2c, 0x8c, 0x6d, 0x08, 0xad, 0x6c, 0x6c, 0xad, 0x4c, 0x6e, 0xee,
  0x48, 0x2e, 0x8d, 0x8c, 0xaa, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x0c, 0x25,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2d, 0x8d,
  0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0xae, 0x4e, 0xce,
  0x2c, 0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0x2c, 0xac,
  0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d,
  0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x8f,
  0x06, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d,
  0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28,
  0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x0d, 0x24, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x0c, 0xef, 0xab, 0xce,
  0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0x84, 0x8c, 0x2c, 0xef, 0xab, 0xce, 0x6e, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce,
  0x0e, 0xa4, 0x07, 0x84, 0xaa, 0x0c, 0x6f, 0xe8, 0xed, 0x4d, 0x8e, 0x6c,
  0x0e, 0x05, 0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd,
  0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0x28,
  0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x4c, 0x2a, 0x2c, 0x8f, 0x28,
  0xcd, 0xcc, 0xac, 0x4c, 0xae, 0xcc, 0x8d, 0x2e, 0x2d, 0x8c, 0x6d, 0x0e,
  0x85, 0x8c, 0x0c, 0xef, 0xab, 0xce, 0x8e, 0x05, 0x84, 0x8c, 0x2c, 0xef,
  0xab, 0xce, 0x8e, 0x05, 0xa4, 0xce, 0x8e, 0x05, 0x04, 0x2d, 0x8d, 0x0e,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x64, 0xae, 0x4e,
  0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05,
  0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e,
  0xed, 0xcd, 0x8d, 0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e,
  0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d,
  0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e,
  0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x64, 0x08, 0xad, 0x6c, 0x6c, 0xad,
  0x4c, 0x6e, 0xee, 0x48, 0x2e, 0x8d, 0x8c, 0xaa, 0x0c, 0x8f, 0xae, 0x4e,
  0xae, 0x4c, 0xe8, 0x0d, 0xcf, 0x28, 0x8d, 0x8d, 0xae, 0x4c, 0x0e, 0xa5,
  0xce, 0x8e, 0x05, 0x84, 0x8c, 0x0c, 0xef, 0xab, 0xce, 0x8e, 0x05, 0x84,
  0x8c, 0x2c, 0xef, 0xab, 0xce, 0x8e, 0x05, 0xa4, 0x06, 0x26, 0x65, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0xc4, 0x48, 0xae,
  0x6c, 0xce, 0xad, 0x8c, 0x0d, 0x44, 0xae, 0xcc, 0x8c, 0xad, 0x6c, 0x8c,
  0x2e, 0xcc, 0x6d, 0xac, 0x0c, 0xa4, 0x05, 0x64, 0x6e, 0x0c, 0x8d, 0x2d,
  0x6d, 0x6c, 0x0d, 0x24, 0x0c, 0x0e, 0x4e, 0xee, 0x0d, 0x2f, 0xad, 0x2d,
  0x8c, 0x2e, 0xed, 0xcd, 0xcd, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0xc4, 0x48, 0xae, 0x6c, 0xce, 0xad, 0x8c, 0x4d, 0xaa, 0xcc,
  0x8c, 0xad, 0x6c, 0x8c, 0x2e, 0xcc, 0x6d, 0xac, 0x6c, 0x6a, 0x0c, 0x8d,
  0x2d, 0x6d, 0x6c, 0x0d, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0x24, 0x89, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x6e, 0x06, 0xc4, 0x89, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x08, 0x26, 0xa5, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x64, 0xec,
  0x6d, 0x2e, 0x0d, 0xa4, 0x07, 0x64, 0x2e, 0x8c, 0xae, 0x4e, 0x2e, 0x8c,
  0xae, 0x0c, 0x85, 0xec, 0x8d, 0x0e, 0xa5, 0x25, 0x89, 0x05, 0xc4, 0x29,
  0x25, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae,
  0x4e, 0xce, 0x0d, 0xc4, 0x08, 0x06, 0x64, 0x05, 0x04, 0x25, 0x06, 0xa4,
  0x05, 0xc4, 0x08, 0x26, 0x45, 0x05, 0xee, 0xed, 0x0e, 0x25, 0x06, 0xa4,
  0x05, 0x64, 0xec, 0x6d, 0x2e, 0x8d, 0x05, 0xa4, 0x26, 0x65, 0xa7, 0x41,
  0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0x44, 0xaa, 0xac, 0xed, 0xcd, 0xae, 0x6c, 0x4a, 0xea, 0x48, 0x08, 0xc5,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2f, 0xa5, 0x41, 0x61, 0xaf,
  0x41, 0x21, 0x41, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04, 0x0f, 0x84,
  0x07, 0x04, 0xc6, 0x05, 0x86, 0x06, 0x86, 0xa6, 0x06, 0xe4, 0x07, 0x04,
  0x0f, 0xe4, 0x05, 0x24, 0x46, 0xc6, 0x25, 0x47, 0x06, 0x44, 0x07, 0x04,
  0xee, 0xed, 0x0e, 0x05, 0x05, 0x0f, 0x64, 0x05, 0x04, 0xc6, 0x05, 0xa6,
  0xa6, 0x26, 0x05, 0xe4, 0x05, 0x24, 0xc6, 0x05, 0xa6, 0xa6, 0x86, 0x05,
  0x44, 0xc6, 0x85, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x24, 0x08, 0x0e, 0x8e, 0x2d,
  0x6f, 0x4a, 0xea, 0x48, 0x08, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0x04, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x21, 0x41, 0xae, 0x8c, 0xae,
  0x4e, 0xce, 0x0d, 0x04, 0x0f, 0x84, 0x07, 0x04, 0xc6, 0x05, 0x06, 0x66,
  0x26, 0x66, 0x06, 0x06, 0x07, 0xe4, 0x07, 0x24, 0x46, 0xc6, 0x25, 0x47,
  0x06, 0x44, 0x05, 0x04, 0x0f, 0x44, 0x07, 0x24, 0xc6, 0x05, 0xa6, 0xa6,
  0x06, 0x44, 0x05, 0x04, 0xee, 0xed, 0x0e, 0x25, 0x4c, 0x6c, 0x0e, 0x05,
  0x2f, 0x85, 0x05, 0x24, 0xc6, 0x05, 0x06, 0xe4, 0x05, 0x44, 0xc6, 0x85,
  0x26, 0x05, 0xa4, 0x05, 0x04, 0xc6, 0x05, 0xa6, 0xa6, 0x66, 0xa7, 0x41,
  0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0x64, 0xaa,
  0x2d, 0x8c, 0x8d, 0xad, 0x6c, 0x8e, 0x0e, 0xea, 0xed, 0xae, 0x4c, 0xee,
  0xc9, 0x4c, 0xe6, 0x48, 0xae, 0x2c, 0x8c, 0xae, 0x4c, 0x8e, 0x0a, 0x2d,
  0xcc, 0x0d, 0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x04, 0x2f,
  0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0x64, 0xaa, 0x8c, 0x0e, 0x24, 0x8c, 0x8d, 0x0d, 0x84, 0x0e, 0xad, 0x0c,
  0x44, 0x2c, 0x8d, 0x6e, 0x0e, 0x44, 0xac, 0x0c, 0x2d, 0xcd, 0x8d, 0x0c,
  0x84, 0x0e, 0xad, 0x0c, 0xa4, 0xed, 0x6d, 0x8e, 0x0e, 0x64, 0x2e, 0xed,
  0xcc, 0x2d, 0xcd, 0x2c, 0x6d, 0x2c, 0xcc, 0x8d, 0x0e, 0xc4, 0xed, 0xcd,
  0xad, 0x45, 0xaf, 0x4c, 0xee, 0x0d, 0x44, 0x2c, 0x8d, 0x0e, 0x24, 0xcd,
  0x0d, 0x04, 0x0f, 0x84, 0xee, 0x0d, 0x24, 0xc6, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0x68, 0x6e, 0xae, 0xcc, 0x8d, 0x2e,
  0x2d, 0x8c, 0x8d, 0x2d, 0x0f, 0xe4, 0x2c, 0xcd, 0x2e, 0xcd, 0xed, 0x0c,
  0xa4, 0x6e, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0x2d, 0x4c, 0xee, 0xac,
  0x6c, 0x8e, 0x0e, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x0c, 0x84, 0x0e, 0x2d,
  0x8c, 0x0e, 0x24, 0x6d, 0x0e, 0x64, 0xae, 0x2d, 0x8c, 0x8d, 0xad, 0x4c,
  0x0e, 0x84, 0x0e, 0x2d, 0xcc, 0x0d, 0x84, 0x0e, 0xad, 0xac, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xc4, 0xad, 0x0c, 0x8f, 0x0e, 0x04,
  0xee, 0xed, 0xae, 0x4c, 0x0e, 0xe4, 0xcd, 0x0c, 0x44, 0x06, 0xe4, 0xae,
  0xec, 0x44, 0xae, 0x0c, 0x84, 0xed, 0xed, 0x6d, 0x2d, 0xcd, 0xed, 0x0c,
  0xc4, 0xec, 0x4d, 0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x0f,
  0x84, 0xaf, 0x07, 0x04, 0x0f, 0xc4, 0xc7, 0x07, 0x24, 0x66, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0x0f, 0x84, 0xaf, 0x07, 0x04, 0x0f, 0xc4,
  0xc7, 0x07, 0x44, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x0f,
  0x84, 0xaf, 0x07, 0x04, 0x0f, 0xc4, 0xc7, 0x07, 0x84, 0x66, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0x0f, 0x84, 0xaf, 0x07, 0x04, 0x0f, 0xc4,
  0xc7, 0x07, 0x04, 0x67, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x0f,
  0x84, 0xaf, 0x07, 0x04, 0x0f, 0xc4, 0xc7, 0x07, 0x24, 0xc6, 0x66, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x44, 0xaa,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0xc4, 0xad, 0x0c,
  0x8f, 0x0e, 0x04, 0xee, 0xed, 0xae, 0x4c, 0x0e, 0xe4, 0xcd, 0x0c, 0x84,
  0xee, 0xee, 0x0d, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0xcc, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04, 0x0f,
  0x64, 0x05, 0x24, 0x66, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1,
  0xe5, 0x05, 0x44, 0xaa, 0x8c, 0xae, 0x4e, 0xce, 0x6d, 0x0e, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x4e, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed,
  0xcd, 0x0d, 0xc4, 0xec, 0x4d, 0x0e, 0x24, 0x0c, 0xe4, 0x2c, 0xcd, 0xae,
  0xcc, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x2e, 0x8c, 0xad,
  0xae, 0xcc, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0xc4, 0x2a, 0x8c, 0xad, 0xae,
  0x6c, 0x0e, 0xe4, 0x2e, 0x8d, 0x0e, 0x2d, 0xcd, 0x0d, 0x04, 0xc5, 0x2e,
  0x8c, 0xad, 0xae, 0x0c, 0xa4, 0x05, 0x4e, 0xae, 0x6c, 0x2c, 0x6d, 0x2e,
  0xed, 0xcd, 0x8d, 0x05, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x0c, 0x64, 0x05,
  0x04, 0x4e, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd, 0x2d, 0x05, 0xa4,
  0x2d, 0x0c, 0x0e, 0x84, 0xee, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x2e,
  0xac, 0xad, 0x0c, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0xcc, 0x05, 0xa4, 0x41,
  0xe1, 0xe5, 0x05, 0x04, 0x4a, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd,
  0x0d, 0xa4, 0x07, 0xa4, 0x0c, 0x0f, 0xee, 0xcd, 0xad, 0xcc, 0x8d, 0x4e,
  0x2a, 0xcc, 0xed, 0xac, 0xec, 0xa5, 0x29, 0x0c, 0xaf, 0x29, 0xcc, 0x8d,
  0x2e, 0x6d, 0x6e, 0x2e, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x0c, 0xa4, 0x07,
  0x04, 0x45, 0xc6, 0xab, 0x6c, 0x25, 0x06, 0xa4, 0x05, 0x44, 0xc6, 0xab,
  0x2c, 0x05, 0xe4, 0x05, 0x04, 0x45, 0xc6, 0xcb, 0xa9, 0xae, 0xad, 0x29,
  0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0x4c, 0x28, 0x8d, 0x6e, 0x2e, 0xa5,
  0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0xcc, 0x4c, 0x07, 0x04, 0x8d, 0x8e,
  0x0e, 0x6e, 0x4e, 0xe7, 0xe5, 0x45, 0x8c, 0xed, 0xed, 0xcc, 0x85, 0xac,
  0xac, 0xed, 0xcd, 0xec, 0x0d, 0xcf, 0xe5, 0x4d, 0xee, 0xec, 0x45, 0x06,
  0x26, 0xe6, 0xe6, 0x25, 0x26, 0xe6, 0x45, 0x26, 0xe6, 0xc5, 0x8c, 0xed,
  0x2d, 0x8c, 0x2e, 0xcd, 0xed, 0xac, 0x05, 0xee, 0x2d, 0xcd, 0x8d, 0xae,
  0x05, 0x4e, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd, 0xed, 0xa5, 0x41,
  0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x88, 0xed, 0x2d, 0x8c, 0x0e,
  0x4a, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd, 0x0d, 0x25, 0xcd, 0x0d,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x8f, 0x05, 0x24, 0xcd, 0x0d,
  0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xc4, 0xa9, 0xae, 0xad, 0x29, 0xcc, 0x8d,
  0x2e, 0x6d, 0x6e, 0x2e, 0x4c, 0x28, 0x8d, 0x6e, 0x2e, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xc4, 0x28, 0xcd,
  0x8d, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0x0c, 0x0f, 0xee, 0xcd, 0xad,
  0xcc, 0x8d, 0x0e, 0x44, 0x2e, 0xcc, 0xed, 0xac, 0x0c, 0x84, 0x0e, 0xad,
  0x0c, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x0c, 0x24, 0x6d, 0x0e, 0x24, 0xcd,
  0xcd, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e,
  0xc4, 0xad, 0x0c, 0x8f, 0x0e, 0xea, 0xed, 0xae, 0x4c, 0xee, 0xc9, 0x8c,
  0xea, 0xee, 0x0d, 0xa4, 0x07, 0x64, 0xaa, 0x2d, 0x8c, 0x8d, 0xad, 0x6c,
  0x8e, 0x0e, 0xea, 0xed, 0xae, 0x4c, 0xee, 0xc9, 0x4c, 0xe6, 0x48, 0xae,
  0x2c, 0x8c, 0xae, 0x4c, 0x8e, 0x0a, 0x2d, 0xcc, 0x0d, 0x05, 0x2f, 0x65,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0xa4, 0x0c, 0x0f, 0xee, 0xcd, 0xad, 0xcc, 0x8d, 0x4e, 0x2a, 0xcc, 0xed,
  0xac, 0x0c, 0xa4, 0x07, 0xc4, 0xad, 0x0c, 0x8f, 0x0e, 0xea, 0xed, 0xae,
  0x4c, 0xee, 0xc9, 0x8c, 0xea, 0xee, 0x0d, 0xa4, 0x05, 0x04, 0xc5, 0xad,
  0x0c, 0x8f, 0x0e, 0xea, 0xed, 0xae, 0x4c, 0xee, 0xc9, 0x8c, 0xea, 0xee,
  0x0d, 0xc4, 0xc7, 0x07, 0x24, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x29, 0x0c,
  0xaf, 0x29, 0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0xcc, 0x2a, 0x8c, 0xad,
  0xae, 0x0c, 0xa4, 0x07, 0x24, 0x06, 0x84, 0x87, 0x07, 0xc4, 0xa9, 0xae,
  0xad, 0x29, 0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0x4c, 0x28, 0x8d, 0x6e,
  0x6e, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c,
  0xae, 0x4e, 0xce, 0x0d, 0xa4, 0x0c, 0x0f, 0xee, 0xcd, 0xad, 0xcc, 0x8d,
  0x4e, 0x2a, 0xcc, 0xed, 0xac, 0x0c, 0xe4, 0x05, 0xa4, 0x29, 0x0c, 0xaf,
  0x29, 0xcc, 0x8d, 0x2e, 0x6d, 0x6e, 0x2e, 0xcc, 0x2a, 0x8c, 0xad, 0xae,
  0x6c, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0xc4, 0x88, 0xed, 0x2d, 0x8c, 0x0e, 0x4a, 0xae, 0x6c, 0x2c,
  0x6d, 0x2e, 0xed, 0xcd, 0x4d, 0x2a, 0x06, 0x06, 0x25, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4,
  0x88, 0xed, 0x2d, 0x8c, 0x0e, 0x4a, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed,
  0xcd, 0x0d, 0x05, 0x8f, 0x05, 0xa4, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf,
  0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x88, 0xed,
  0x2d, 0x8c, 0x0e, 0x4a, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd, 0x4d,
  0x2a, 0xc6, 0x06, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x04, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0x88, 0xed, 0x2d, 0x8c, 0x0e,
  0x4a, 0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd, 0x0d, 0x05, 0x8f, 0x05,
  0x24, 0x06, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0x88, 0xed, 0x2d, 0x8c, 0x0e, 0x4a,
  0xae, 0x6c, 0x2c, 0x6d, 0x2e, 0xed, 0xcd, 0x4d, 0x6a, 0x46, 0x06, 0x25,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x04, 0x2f, 0xa5, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e,
  0xce, 0x0d, 0xc4, 0x88, 0xed, 0x2d, 0x8c, 0x0e, 0x4a, 0xae, 0x6c, 0x2c,
  0x6d, 0x2e, 0xed, 0xcd, 0x0d, 0x05, 0x8f, 0x05, 0x44, 0x66, 0x26, 0x65,
  0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x41, 0xe1, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0xe5, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0xc4, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x0d, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0x2c, 0xcd, 0xed, 0xac, 0x41,
  0xe1, 0xe5, 0x05, 0x44, 0xaa, 0xcc, 0x4c, 0x07, 0x04, 0x8d, 0x8e, 0x0e,
  0x6e, 0x4e, 0xe7, 0xe5, 0x65, 0xcd, 0x2d, 0x4c, 0x6e, 0xed, 0xed, 0x2e,
  0x6d, 0x4c, 0xcf, 0xe5, 0xee, 0x4d, 0x8e, 0x0c, 0x4e, 0xae, 0x6c, 0x6e,
  0xce, 0x65, 0xec, 0xad, 0xed, 0x45, 0x06, 0x26, 0x86, 0xe6, 0x05, 0x86,
  0xe6, 0x25, 0xc6, 0xe6, 0xe5, 0x6d, 0x8c, 0x2e, 0x0c, 0xad, 0x8c, 0x4c,
  0xee, 0xcd, 0xad, 0xc5, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0xad, 0xc5, 0xae,
  0x6c, 0x8c, 0xee, 0x4d, 0xae, 0xa5, 0xcc, 0x6d, 0xec, 0x8d, 0x2c, 0xcd,
  0xed, 0xec, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xe4,
  0x69, 0x8c, 0xee, 0x4a, 0x2e, 0x0c, 0x0e, 0xc5, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0xc4, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04, 0x25, 0xc6, 0x05,
  0x06, 0xa4, 0x05, 0x24, 0x4c, 0x6c, 0x0e, 0xc5, 0xce, 0x25, 0x0f, 0x2f,
  0x25, 0x05, 0x44, 0x05, 0x04, 0xc5, 0xce, 0x05, 0x2f, 0x0f, 0xc4, 0xa7,
  0x07, 0x04, 0xc6, 0x05, 0x06, 0xe4, 0x07, 0x24, 0xc6, 0x05, 0x06, 0x44,
  0x07, 0xa4, 0x25, 0xc6, 0x05, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x64, 0xe8, 0xcd, 0xcd, 0xae, 0x4c, 0x8e,
  0x6e, 0x0e, 0x24, 0x0c, 0x64, 0x86, 0x08, 0xa4, 0xce, 0x2d, 0x8d, 0x0e,
  0xc4, 0xae, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0x84, 0xee, 0x0d, 0x24, 0x0c,
  0x44, 0x86, 0x08, 0xc4, 0xae, 0x6c, 0x8c, 0xee, 0x4d, 0x0e, 0xe4, 0x2e,
  0x8d, 0x0e, 0x0d, 0x84, 0x07, 0x86, 0x25, 0xc6, 0x07, 0x44, 0x2e, 0xcc,
  0xed, 0xac, 0xcc, 0x05, 0xa4, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0xa4, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x0d, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x2d, 0xa5,
  0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x0d, 0xe4, 0xa5,
  0x07, 0x04, 0x25, 0x4c, 0x6c, 0x0e, 0xc5, 0xcd, 0x05, 0x2f, 0x05, 0x64,
  0x05, 0x24, 0x4c, 0x6c, 0x0e, 0xc5, 0xcd, 0x25, 0x2f, 0x05, 0x64, 0x05,
  0x24, 0x4c, 0x6c, 0x0e, 0xc5, 0xcd, 0x45, 0x2f, 0x25, 0x65, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0xcd, 0x05, 0x2f, 0x0f, 0xa4, 0x07, 0xc4,
  0xcd, 0x45, 0x0f, 0xc4, 0xa7, 0x07, 0x04, 0xc6, 0x05, 0x06, 0xe4, 0x07,
  0xc4, 0xcd, 0x05, 0x2f, 0x0f, 0x44, 0x07, 0xe4, 0x69, 0x8c, 0xee, 0x4a,
  0x2e, 0x0c, 0x0e, 0xc5, 0xcd, 0x05, 0x2f, 0x2f, 0x65, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0xcd, 0x05, 0x2f, 0x0f, 0xa4, 0x07, 0xc4, 0xcd,
  0x05, 0x2f, 0x0f, 0x44, 0x05, 0x04, 0xc6, 0xa5, 0x06, 0x64, 0x05, 0x04,
  0xc6, 0xa5, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c,
  0xae, 0x4e, 0xce, 0x0d, 0xc4, 0xcd, 0x05, 0x2f, 0x6f, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84,
  0xa8, 0x6c, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d,
  0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xc4, 0x2c, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x0c, 0xa4, 0x07, 0xc4, 0x0c,
  0x44, 0x05, 0x44, 0xc6, 0x05, 0x06, 0xa4, 0x05, 0x24, 0xc6, 0x05, 0x66,
  0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x04,
  0x8d, 0x8e, 0x0e, 0x6e, 0x4e, 0xe7, 0xe5, 0x85, 0xee, 0x2e, 0x8d, 0x8e,
  0xae, 0x4c, 0xce, 0x65, 0xec, 0xad, 0xed, 0x65, 0x8a, 0xae, 0x4e, 0x4c,
  0xac, 0x6c, 0x2e, 0xac, 0x4e, 0xae, 0x6e, 0xee, 0x65, 0x8e, 0x2e, 0x8c,
  0xae, 0x6e, 0xee, 0x25, 0x67, 0xe6, 0x26, 0x27, 0x87, 0xe6, 0x26, 0x07,
  0xa6, 0xa6, 0x66, 0x46, 0x46, 0xe6, 0x46, 0xc6, 0x86, 0xa6, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x0d,
  0xa4, 0x07, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc5, 0xcc, 0x05,
  0x8f, 0x05, 0xc4, 0xcc, 0x25, 0x8f, 0x05, 0x24, 0xc6, 0x05, 0x06, 0xa4,
  0x05, 0x24, 0x4c, 0x6c, 0x0e, 0xc5, 0xcc, 0x05, 0x2f, 0x05, 0xa4, 0x05,
  0x24, 0x4c, 0x6c, 0x0e, 0xc5, 0xcc, 0x25, 0x2f, 0x25, 0x65, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0x0e,
  0xa4, 0x07, 0x64, 0x2e, 0x8c, 0xae, 0x4e, 0x2e, 0x8c, 0xae, 0x0c, 0xa5,
  0xc5, 0xcd, 0x45, 0x2f, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0xcd, 0x05, 0x2f, 0x0f, 0x64, 0xa5, 0x07, 0xc4, 0xcd, 0x05, 0x2f, 0x0f,
  0xc4, 0xa7, 0x07, 0x04, 0xc6, 0x05, 0x06, 0xe4, 0x07, 0xa4, 0x85, 0x0e,
  0x44, 0x07, 0x84, 0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x2d,
  0x4d, 0xaf, 0x0c, 0xc5, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xe1,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0xe5, 0xa5, 0x41, 0xa1, 0x41, 0xa1, 0x41, 0xa1, 0x41,
  0xe1, 0xe5, 0x05, 0x04, 0x2a, 0x6c, 0x6c, 0x0d, 0x64, 0x0b, 0xc6, 0x05,
  0x86, 0x05, 0x24, 0xc6, 0x05, 0xa6, 0x0b, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x84, 0xee, 0x0d, 0x04, 0x07, 0x44, 0x2c, 0x8d, 0x0e, 0xa4, 0x2e,
  0xcd, 0x8d, 0xce, 0x05, 0xa4, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0x04,
  0x2a, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0xcb, 0x88, 0xe9, 0x29, 0x88,
  0x0a, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x2e, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce,
  0x0d, 0x64, 0x8c, 0x2d, 0xac, 0x0d, 0x0e, 0x45, 0xee, 0xad, 0xce, 0x8d,
  0x0c, 0x45, 0x0e, 0x44, 0x05, 0x44, 0xa6, 0xa6, 0x26, 0x85, 0x05, 0x04,
  0x86, 0x05, 0x44, 0xa6, 0xa6, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0xca, 0x0d, 0x2e,
  0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a,
  0xa5, 0x2e, 0xcd, 0x8d, 0x0e, 0x44, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x04,
  0x45, 0x0e, 0xc4, 0x04, 0x04, 0x06, 0xcf, 0xc8, 0x28, 0x05, 0xe4, 0x05,
  0x44, 0xa6, 0xa6, 0xc6, 0x05, 0x66, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0x04, 0x2e, 0x6c, 0x6c, 0x0d, 0x84, 0xee, 0xee,
  0x0d, 0x04, 0x07, 0x44, 0x2c, 0x8d, 0x0e, 0xa4, 0x2e, 0xcd, 0x8d, 0x4e,
  0x06, 0x24, 0xcd, 0x8d, 0xee, 0x0d, 0x24, 0x0c, 0x24, 0xc6, 0x06, 0x44,
  0x2c, 0x8d, 0x0e, 0xa4, 0x2e, 0xcd, 0x8d, 0xce, 0xa5, 0x41, 0xa1, 0x2e,
  0xcd, 0x8d, 0x0e, 0x04, 0x2a, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0x08,
  0xe7, 0x8b, 0xee, 0xed, 0x4b, 0x2a, 0xc6, 0xe6, 0xab, 0x2a, 0xc9, 0x89,
  0x0a, 0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x44, 0x8e, 0x05,
  0x24, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xe4, 0x2c, 0xa5, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e,
  0xce, 0x0d, 0x04, 0x45, 0x0e, 0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0x2c,
  0x05, 0x84, 0x0f, 0x04, 0x05, 0xe5, 0x0c, 0xc4, 0x04, 0x04, 0x06, 0xcf,
  0xcc, 0x2c, 0x05, 0x84, 0x87, 0x07, 0x04, 0x27, 0x65, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0xa4, 0xca, 0x0d,
  0x2e, 0x6c, 0x6c, 0xed, 0x4b, 0x2a, 0xc6, 0xe6, 0x8b, 0xee, 0xed, 0x4b,
  0x0a, 0xe7, 0x08, 0xe7, 0xab, 0x2a, 0xc9, 0x89, 0x0a, 0x25, 0xcd, 0x0d,
  0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xc4, 0x8e, 0x05, 0xe4, 0xad, 0x8e, 0x0e,
  0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x44, 0x8e, 0x05, 0xe4, 0xad, 0x8e, 0x0e,
  0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xe4, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0x0e, 0xa4, 0x07, 0xc4, 0x0e, 0xc4, 0x04,
  0x04, 0x06, 0xcf, 0xc8, 0x68, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4,
  0x0c, 0xa4, 0x07, 0x04, 0xc5, 0x0e, 0xc4, 0xc7, 0x07, 0x04, 0x27, 0x05,
  0xc4, 0x04, 0x04, 0x06, 0xcf, 0xc8, 0x68, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x04, 0x2a, 0x6c, 0x6c, 0x0d,
  0xa4, 0xce, 0x6d, 0x2e, 0xed, 0xcc, 0xad, 0x8c, 0x0c, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x2e, 0xcd, 0xed, 0x0c, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0x8e,
  0x05, 0xe4, 0x0e, 0xad, 0x4c, 0xae, 0x0c, 0xa4, 0x41, 0xe1, 0xe5, 0x05,
  0xa4, 0x05, 0x44, 0xee, 0x4c, 0xcc, 0x45, 0xee, 0x0c, 0x24, 0x4c, 0xae,
  0x0c, 0x24, 0xcd, 0x0d, 0x64, 0x0b, 0x86, 0x05, 0x24, 0xa6, 0x0b, 0x44,
  0x2e, 0xcc, 0xed, 0xac, 0x0c, 0x64, 0x8e, 0xee, 0x4d, 0xae, 0x8c, 0x0c,
  0x24, 0x6c, 0x0e, 0x84, 0xee, 0xee, 0x0d, 0x04, 0x07, 0x44, 0x2c, 0x8d,
  0x0e, 0xa4, 0x2e, 0xcd, 0x8d, 0x6e, 0xce, 0xa5, 0x41, 0xe1, 0xe5, 0x05,
  0xa4, 0x05, 0x44, 0xee, 0x4c, 0xcc, 0x45, 0x0c, 0x24, 0xcd, 0x0d, 0x64,
  0x0b, 0x86, 0x05, 0xc4, 0x88, 0x89, 0xea, 0x2b, 0xc6, 0xe6, 0x4b, 0x28,
  0x89, 0xea, 0xab, 0x29, 0x08, 0xab, 0x0b, 0x44, 0x2e, 0xcc, 0xed, 0xac,
  0x0c, 0x64, 0x8e, 0xee, 0x4d, 0xae, 0x8c, 0x0c, 0x24, 0x6c, 0x0e, 0x24,
  0x0c, 0x24, 0xc6, 0x46, 0x2c, 0x8d, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0xce, 0xa5, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0x04, 0x2a, 0x6c, 0x6c,
  0xed, 0x4b, 0x0a, 0xe7, 0x08, 0x47, 0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9,
  0x29, 0x88, 0x0a, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0xee,
  0x4c, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4,
  0x2e, 0xcd, 0x8d, 0x0e, 0x44, 0x0e, 0xa4, 0x07, 0x04, 0x2a, 0x6c, 0x6c,
  0xed, 0x4b, 0x0a, 0xe7, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0x45, 0xee,
  0x4c, 0xcc, 0x45, 0x2e, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4,
  0x2e, 0xcd, 0x8d, 0x0e, 0xe4, 0x0c, 0xa4, 0x07, 0x04, 0x2a, 0x6c, 0x6c,
  0xed, 0x4b, 0x0a, 0xe7, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0x45, 0xee,
  0x4c, 0xcc, 0xe5, 0x2c, 0x05, 0x84, 0x87, 0x07, 0x04, 0x67, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x44, 0x0c, 0xa4,
  0x07, 0xc4, 0x6c, 0x46, 0x86, 0xee, 0xcd, 0x2c, 0xc6, 0x06, 0x45, 0xee,
  0x4c, 0xcc, 0x45, 0x2c, 0x05, 0x84, 0x87, 0x07, 0x24, 0xc6, 0x66, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d,
  0x44, 0x0e, 0x84, 0x0f, 0xe4, 0x0c, 0x84, 0x0f, 0x44, 0x6c, 0xa7, 0x41,
  0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0xa4, 0xca, 0x0d, 0x2e, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0x08, 0x47,
  0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0xa5, 0x2e, 0xcd,
  0x8d, 0x0e, 0x44, 0xee, 0x4c, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x0e, 0xa4,
  0x07, 0xa4, 0xca, 0x0d, 0x2e, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0xcb,
  0x88, 0xe9, 0x29, 0x88, 0x0a, 0x45, 0xee, 0x4c, 0x2c, 0x65, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xe4, 0x0c,
  0xa4, 0x07, 0xa4, 0xca, 0x0d, 0x2e, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7,
  0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0x45, 0xee, 0x4c, 0x0c, 0xc4, 0xc7,
  0x07, 0x04, 0x27, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x0c, 0xa4, 0x07, 0xc4, 0x2c, 0xc6, 0x86,
  0xee, 0xcd, 0x6c, 0x46, 0x06, 0x45, 0xee, 0x4c, 0x0c, 0xc4, 0xc7, 0x07,
  0x24, 0xc6, 0x26, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae,
  0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0x45, 0x8e, 0x05, 0xe4, 0x8c, 0x05, 0x44, 0x2c, 0x65, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0xc4, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x2d, 0x4d, 0xaf, 0x8c, 0xcc, 0x88, 0xed, 0x2d, 0x8c,
  0x6e, 0x86, 0xea, 0x4d, 0x28, 0x8f, 0xae, 0x6c, 0x06, 0xc5, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0xad, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa5, 0x2e, 0xcd, 0x8d,
  0x0e, 0xc5, 0xce, 0x05, 0x0f, 0x44, 0x05, 0x44, 0xa6, 0xa6, 0x26, 0x05,
  0x84, 0x87, 0x07, 0x24, 0xc6, 0x26, 0x05, 0x64, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa5, 0x2e, 0xcd, 0x8d, 0x0e,
  0xc5, 0xce, 0x25, 0x0f, 0x44, 0x05, 0x44, 0xa6, 0xa6, 0x26, 0x05, 0x84,
  0x87, 0x07, 0x04, 0x27, 0x05, 0x64, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xc5, 0xce, 0x45,
  0x0f, 0x44, 0x05, 0x44, 0xa6, 0xa6, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf,
  0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0x28,
  0x8f, 0xae, 0x6c, 0x86, 0xea, 0xcd, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x2d,
  0x4d, 0xaf, 0x8c, 0xcc, 0x88, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xa5, 0x2e,
  0xcd, 0x8d, 0x0e, 0xc4, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0xc5, 0x0e, 0xc4, 0xc7, 0x07, 0x24, 0xc6, 0x26, 0x05,
  0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0x8c, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xc5, 0x0e, 0xc4, 0xc7, 0x07, 0x04,
  0x27, 0x05, 0xc4, 0x04, 0x04, 0x06, 0xcf, 0xcc, 0x8c, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xc4, 0x0e, 0xc4, 0x04, 0x04,
  0x06, 0xcf, 0xcc, 0x2c, 0x05, 0xe4, 0x05, 0x44, 0xa6, 0xa6, 0x66, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0xa4, 0xc8, 0x6d,
  0xec, 0x8d, 0xac, 0x0c, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0x24,
  0xcc, 0x8d, 0x0c, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0xe4, 0x2e, 0x8d,
  0x0e, 0x0d, 0x24, 0xc6, 0x06, 0x44, 0x2c, 0x8d, 0x6e, 0x0e, 0x24, 0x8c,
  0x8d, 0xed, 0x6d, 0x2c, 0x8c, 0xae, 0x8c, 0x0c, 0xc4, 0xec, 0x4d, 0x0e,
  0xa4, 0x2c, 0x6c, 0x0c, 0xcd, 0xa5, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e,
  0xa4, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c,
  0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0xed, 0xcb, 0x29, 0xc6, 0x86, 0x28, 0xc6,
  0x06, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4,
  0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x2d, 0xa5, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x0d, 0xa4, 0x07, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xa5, 0xc8, 0x6d, 0xec, 0x8d, 0xac,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0xc5, 0xed, 0x4d, 0xae, 0x2d,
  0x8c, 0x2d, 0x85, 0x05, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x2d, 0x65, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d,
  0x04, 0x2a, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7, 0x08, 0x47, 0x28, 0xc6,
  0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0xa5, 0xcc, 0x6d, 0xec, 0x8d,
  0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e,
  0x0e, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x41,
  0xe1, 0xe5, 0x05, 0x84, 0xa8, 0x6c, 0xec, 0x8d, 0xac, 0x8c, 0x0c, 0x24,
  0xc6, 0x06, 0x44, 0x2c, 0x8d, 0x0e, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c,
  0x0d, 0x24, 0xcc, 0x8d, 0x0c, 0x24, 0xc6, 0x46, 0x2c, 0x8d, 0x0e, 0x84,
  0xac, 0x0c, 0x8e, 0x0e, 0xcd, 0xa5, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c,
  0x84, 0xa8, 0x6c, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c,
  0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0xed, 0xcb, 0x29, 0xc6, 0x86, 0x28, 0xc6,
  0x06, 0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x04, 0x2e, 0x6c,
  0x6c, 0xad, 0x8c, 0xac, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9,
  0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0xc8, 0x8d, 0x8c, 0xa8, 0x0c, 0x8e, 0x0e,
  0x8d, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0xe4, 0xad, 0x8e,
  0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e,
  0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x0d,
  0xa4, 0x07, 0xa4, 0xca, 0x0d, 0x2e, 0x6c, 0x6c, 0xed, 0x4b, 0x0a, 0xe7,
  0x08, 0x47, 0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29, 0x88, 0x0a, 0x05,
  0x2e, 0x6c, 0x6c, 0xad, 0x8c, 0xac, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0x8c,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0xc8, 0x8d, 0x8c, 0xa8, 0x0c,
  0x8e, 0x0e, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0xed,
  0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0xa4, 0x07, 0x84, 0xa8, 0x6c, 0xec, 0x8d,
  0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0xa5, 0xcc, 0x6d, 0xec,
  0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c,
  0x8e, 0x0e, 0xcd, 0x05, 0x2f, 0x2f, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0xa4, 0x07, 0xa4, 0xcc, 0x6d,
  0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8,
  0x0c, 0x8e, 0x0e, 0xcd, 0x45, 0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0xa4, 0xc8, 0x6d, 0xec, 0x8d, 0xac,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x0d,
  0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0xed,
  0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x2d, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce,
  0x0d, 0xa4, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0xed, 0xcb, 0x29, 0xc6, 0x86, 0x28,
  0xc6, 0x06, 0xc5, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x84, 0xac,
  0x0c, 0x8e, 0x0e, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0x84, 0xa8, 0x6c, 0xec, 0x8d, 0xac, 0xcc,
  0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x0d, 0x25,
  0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xa4, 0xcc, 0x6d, 0xec, 0x8d,
  0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e,
  0x0e, 0x8d, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0xe4, 0xad,
  0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x0c, 0x8e,
  0x0e, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84,
  0xa8, 0x6c, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d,
  0xa8, 0x0c, 0x8e, 0x0e, 0xed, 0xcb, 0x29, 0xc6, 0x86, 0x28, 0xc6, 0x06,
  0xa5, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x8d, 0x05, 0xc4, 0xed, 0x4d, 0xae,
  0x2d, 0x8c, 0x8d, 0x05, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x2d, 0x65, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0x84,
  0xa8, 0x6c, 0xec, 0x8d, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d,
  0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xa4, 0xcc, 0x6d, 0xec,
  0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c,
  0x8e, 0x0e, 0x8d, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x6e, 0x06, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0xa5, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x8d, 0xa8, 0xae, 0xad, 0x2d, 0x6f,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0xa8, 0x6c, 0xec, 0x8d, 0xac,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0xed,
  0xcb, 0x29, 0xc6, 0x86, 0x28, 0xc6, 0x06, 0xa5, 0xcc, 0x6d, 0xec, 0x8d,
  0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e,
  0x0e, 0x8d, 0x05, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x84,
  0xac, 0x0c, 0x8e, 0x0e, 0x8d, 0xa8, 0xae, 0xad, 0x2d, 0x2f, 0x65, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0xa4,
  0xca, 0x0d, 0x2e, 0x6c, 0x6c, 0xad, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0x8c,
  0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x0d,
  0x25, 0xcd, 0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x04, 0x2e, 0x6c, 0x6c,
  0xad, 0x8c, 0xac, 0xc8, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0x8d, 0x05, 0xe4, 0xad,
  0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xcc, 0x6d,
  0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05,
  0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac,
  0x0c, 0x8e, 0x0e, 0x2d, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xa4, 0xcc, 0x6d, 0xec,
  0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c,
  0x8e, 0x0e, 0x0d, 0xa4, 0x07, 0xa4, 0xca, 0x0d, 0x2e, 0x6c, 0x6c, 0xed,
  0x4b, 0x0a, 0xe7, 0x08, 0x47, 0x28, 0xc6, 0xe6, 0xcb, 0x88, 0xe9, 0x29,
  0x88, 0x0a, 0x05, 0x2e, 0x6c, 0x6c, 0xad, 0x8c, 0xac, 0xc8, 0x6d, 0xec,
  0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c,
  0x8e, 0x0e, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xcc,
  0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d,
  0xa4, 0x07, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0xcd, 0x05, 0x2f, 0x6f,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d,
  0xa4, 0x07, 0xa4, 0xcc, 0x6d, 0xec, 0x8d, 0xac, 0x8c, 0xcc, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x8d, 0xa8, 0x0c, 0x8e, 0x0e, 0xcd, 0x45, 0x6f, 0xa7,
  0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xe5, 0xa5,
  0x41, 0xe1, 0xe5, 0x05, 0x64, 0x86, 0x08, 0xc4, 0x2e, 0x8c, 0xad, 0xae,
  0x0c, 0xc4, 0xed, 0x2d, 0x6d, 0xae, 0xac, 0x41, 0xe1, 0xe5, 0x05, 0x44,
  0xaa, 0xcc, 0x4c, 0x07, 0x04, 0x8d, 0x8e, 0x0e, 0x6e, 0x4e, 0xe7, 0xe5,
  0xe5, 0xee, 0xee, 0xce, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0x8e, 0xee,
  0x2d, 0xcf, 0x65, 0xec, 0xad, 0xed, 0xc5, 0x2e, 0xad, 0xec, 0xee, 0x05,
  0x6b, 0x0e, 0xcb, 0x4c, 0x0a, 0xa9, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x0a,
  0xad, 0x0c, 0xa4, 0x29, 0x89, 0x0a, 0x84, 0x29, 0x6d, 0xac, 0xcc, 0x6d,
  0xae, 0xac, 0x41, 0xe1, 0xe5, 0x05, 0x64, 0xe8, 0x0d, 0x2e, 0x4f, 0x2e,
  0xed, 0x0c, 0x8d, 0x0e, 0x84, 0xfd, 0x94, 0x14, 0x44, 0x06, 0x26, 0xe6,
  0x06, 0x24, 0xc9, 0x2d, 0xed, 0xec, 0x0d, 0x24, 0xaa, 0x2e, 0x8d, 0xad,
  0x4c, 0xaf, 0x41, 0xe1, 0xe5, 0x05, 0x04, 0xaa, 0x4c, 0xae, 0x2d, 0x6d,
  0x6e, 0x2e, 0xed, 0xcd, 0x0d, 0x24, 0x6d, 0x0e, 0x04, 0xad, 0x4c, 0xae,
  0x4c, 0x2c, 0x0f, 0xe4, 0x4c, 0x2e, 0xcc, 0x8d, 0xae, 0x8c, 0x8c, 0x05,
  0xc4, 0x4c, 0xae, 0xac, 0x0c, 0xe4, 0xcd, 0x0c, 0x64, 0x0c, 0x2d, 0x4c,
  0xee, 0xac, 0x8c, 0x05, 0x84, 0xee, 0x0d, 0x24, 0xcc, 0x2d, 0x0f, 0x04,
  0xae, 0x4c, 0x6e, 0xee, 0xcd, 0x0d, 0xe4, 0x4d, 0x8c, 0x2e, 0x2c, 0xcd,
  0x2d, 0xcd, 0xed, 0x0c, 0x24, 0x0c, 0x64, 0xec, 0x0d, 0x2e, 0x0f, 0xe4,
  0xcd, 0x0c, 0x84, 0x0e, 0x2d, 0x6d, 0x0e, 0x64, 0xee, 0xcd, 0x8c, 0xee,
  0x2e, 0x4c, 0xae, 0x0c, 0x24, 0xcc, 0x8d, 0x0c, 0x24, 0x6c, 0x6e, 0xee,
  0x6d, 0x2c, 0x2d, 0x8c, 0xae, 0x8c, 0x0c, 0x84, 0xec, 0x6d, 0xac, 0xae,
  0xad, 0xcc, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0xc4, 0x2c, 0x8d,
  0xad, 0x6c, 0x0e, 0x04, 0x85, 0x0e, 0xad, 0x0c, 0x44, 0x64, 0xea, 0xcd,
  0x8c, 0xee, 0x2e, 0x4c, 0xae, 0x4c, 0x24, 0x85, 0x05, 0x84, 0xee, 0x0d,
  0x84, 0xac, 0x2c, 0x8c, 0x0d, 0x24, 0xcd, 0x0d, 0x84, 0x0e, 0xad, 0x0c,
  0x64, 0xea, 0xcd, 0x8c, 0xee, 0x2e, 0x4c, 0xae, 0x0c, 0xe4, 0x2e, 0x8d,
  0x0e, 0xed, 0xad, 0x8e, 0x0e, 0x44, 0xae, 0x6c, 0x8e, 0x4e, 0x2e, 0x6d,
  0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x6d, 0x8c, 0xad, 0x8e,
  0x2c, 0xcd, 0xed, 0x0c, 0xe4, 0x2e, 0x8d, 0x0e, 0xed, 0xad, 0x8e, 0x0e,
  0x84, 0x2d, 0xad, 0x2d, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x84,
  0x0e, 0xad, 0x0c, 0x44, 0x2e, 0xed, 0x0c, 0x8d, 0x6e, 0x0e, 0x84, 0xee,
  0x0d, 0xa4, 0x6e, 0xae, 0x8c, 0x05, 0x64, 0xec, 0x0d, 0x2e, 0x8f, 0x05,
  0xa4, 0xed, 0x8d, 0x2c, 0xcd, 0x2c, 0x8f, 0x05, 0xa4, 0xad, 0x4c, 0xee,
  0xac, 0x8c, 0x05, 0x04, 0xae, 0x4e, 0x8c, 0x2d, 0x6d, 0x0e, 0x8d, 0x05,
  0x84, 0x2c, 0x6d, 0x8e, 0x4e, 0x2e, 0x4d, 0xac, 0x8e, 0xae, 0x8c, 0x05,
  0x64, 0xae, 0x4e, 0x8c, 0x2d, 0x6d, 0xac, 0xcc, 0x6d, 0xae, 0x8c, 0x05,
  0x24, 0xcc, 0x8d, 0xec, 0xe5, 0x4d, 0x0e, 0x64, 0xae, 0x8c, 0x8d, 0x0d,
  0x64, 0xec, 0x0d, 0x2e, 0xad, 0x6c, 0x0e, 0xe4, 0xcd, 0x0c, 0x84, 0x0e,
  0xad, 0x0c, 0x64, 0xea, 0xcd, 0x8c, 0xee, 0x2e, 0x4c, 0xae, 0x8c, 0x05,
  0x24, 0xcc, 0x8d, 0x0c, 0x84, 0xee, 0x0d, 0x04, 0xae, 0x4c, 0xae, 0x2d,
  0x8d, 0x0e, 0x04, 0xae, 0x4c, 0x6e, 0xee, 0xcd, 0x6d, 0x0e, 0x84, 0xee,
  0x0d, 0xe4, 0x0e, 0xed, 0xad, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0xea,
  0xcd, 0x8c, 0xee, 0x2e, 0x4c, 0xae, 0x0c, 0x24, 0x6d, 0x0e, 0xc4, 0xac,
  0x4e, 0xce, 0x2d, 0x6d, 0x0e, 0xad, 0x8c, 0x0c, 0x84, 0xee, 0x0d, 0x84,
  0xec, 0x0d, 0x64, 0xee, 0x8d, 0x05, 0x64, 0xae, 0x4e, 0x4c, 0xad, 0x6c,
  0x8c, 0x0e, 0x84, 0xee, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0xc4, 0xec, 0x8d,
  0x8d, 0xed, 0xed, 0x2e, 0xcd, 0xed, 0x0c, 0x64, 0xec, 0xcd, 0x8d, 0x2c,
  0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x4e, 0x07, 0x84, 0x0a, 0xad, 0x0c, 0x24,
  0x4c, 0xec, 0xcd, 0xae, 0x0c, 0x64, 0xec, 0x0d, 0x2e, 0x4f, 0x2e, 0xed,
  0x0c, 0x8d, 0x0e, 0xc4, 0xed, 0x8d, 0x2e, 0x6d, 0xac, 0x0c, 0x24, 0xcc,
  0x8d, 0x0c, 0x84, 0x0e, 0x2d, 0x6d, 0x0e, 0x04, 0xae, 0x4c, 0xae, 0x2d,
  0x6d, 0x6e, 0x2e, 0xed, 0xcd, 0x0d, 0xc4, 0xed, 0x8d, 0x2e, 0x6d, 0xac,
  0x0c, 0x64, 0x0e, 0x2d, 0x8c, 0x8d, 0x0d, 0x44, 0xac, 0x0c, 0x24, 0xcd,
  0x6d, 0x8c, 0xad, 0x8e, 0xac, 0x8c, 0x0c, 0x24, 0xcd, 0x0d, 0x24, 0x8c,
  0x8d, 0x0d, 0x64, 0xec, 0x0d, 0x2e, 0xad, 0x6c, 0x0e, 0xe4, 0x4d, 0x0e,
  0x64, 0xae, 0x4e, 0x6c, 0x8e, 0x2e, 0xcc, 0x8d, 0x2e, 0x2d, 0x8c, 0x0d,
  0x04, 0xee, 0x4d, 0x8e, 0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0xe4, 0xcd, 0x0c,
  0x84, 0x0e, 0xad, 0x0c, 0x64, 0xea, 0xcd, 0x8c, 0xee, 0x2e, 0x4c, 0xae,
  0xcc, 0x05, 0x84, 0x0a, 0xa9, 0x08, 0x64, 0xea, 0xc9, 0x88, 0xea, 0x2a,
  0x48, 0xaa, 0x08, 0x24, 0x69, 0x0a, 0x04, 0x4a, 0xea, 0xc9, 0x2a, 0x89,
  0xa8, 0x88, 0x08, 0x44, 0x24, 0x68, 0x0a, 0x24, 0x69, 0x4a, 0x84, 0x05,
  0xe4, 0x2a, 0x89, 0x0a, 0xe9, 0xa9, 0x8a, 0x0a, 0xe4, 0x2a, 0x48, 0x4a,
  0x2a, 0xc8, 0x89, 0x2a, 0x0b, 0xe4, 0xc9, 0x08, 0x24, 0xc8, 0x29, 0x0b,
  0x64, 0x29, 0xc9, 0x89, 0x88, 0x05, 0xa4, 0x08, 0x0b, 0x4a, 0xaa, 0x68,
  0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x24, 0xa9, 0x09, 0x8a, 0x29, 0xa9, 0x88,
  0x88, 0x05, 0x24, 0xc9, 0x69, 0x88, 0xa9, 0x8a, 0x28, 0xc9, 0xe9, 0x08,
  0x44, 0xa8, 0x8a, 0x0a, 0xc4, 0xe9, 0x89, 0x0a, 0x84, 0x29, 0xa9, 0x29,
  0x89, 0xaa, 0x88, 0x08, 0x84, 0xea, 0x09, 0x84, 0x0a, 0xa9, 0x08, 0xe4,
  0x2a, 0x48, 0x4a, 0x2a, 0xc8, 0x89, 0x2a, 0xa9, 0x68, 0x0a, 0xe4, 0xc9,
  0x08, 0xa4, 0xa9, 0x48, 0x6a, 0x08, 0x29, 0xc8, 0x89, 0x2a, 0x48, 0x28,
  0x89, 0x29, 0x89, 0x2a, 0x8b, 0x05, 0xc4, 0x28, 0x89, 0xca, 0xa9, 0x68,
  0x6a, 0x0a, 0xc4, 0xe8, 0x49, 0x0a, 0x24, 0x08, 0x04, 0x2a, 0x48, 0x8a,
  0x2a, 0x69, 0xa8, 0x8a, 0x29, 0x48, 0x0a, 0x04, 0xaa, 0x4a, 0x0a, 0xea,
  0x69, 0xaa, 0x08, 0x24, 0xc8, 0x89, 0x08, 0xc4, 0xe9, 0xc9, 0x29, 0xc9,
  0xc9, 0x48, 0x2a, 0xc9, 0xe9, 0xa8, 0xa8, 0xa9, 0xc8, 0x89, 0xca, 0x05,
  0x24, 0xc9, 0x09, 0xc4, 0xe9, 0x09, 0xa4, 0xc8, 0xaa, 0xc8, 0x89, 0x0a,
  0x64, 0x0a, 0x29, 0x88, 0x89, 0x09, 0x84, 0x0a, 0xa9, 0x08, 0x24, 0xa8,
  0x8a, 0x0a, 0xe9, 0x49, 0x6a, 0x0a, 0xe4, 0x49, 0x0a, 0x64, 0xe8, 0x09,
  0x2a, 0x4b, 0x2a, 0xe9, 0x08, 0x89, 0x0a, 0x04, 0xe9, 0x89, 0x89, 0xa8,
  0x48, 0x6a, 0x0a, 0x44, 0xa8, 0x08, 0x84, 0x29, 0x29, 0x48, 0x88, 0xa9,
  0x08, 0xc4, 0xe8, 0x49, 0x0a, 0x24, 0xc8, 0x29, 0x0b, 0x64, 0x88, 0x29,
  0x28, 0xa9, 0x89, 0x05, 0x84, 0x28, 0xa8, 0x29, 0xe8, 0xa8, 0x68, 0x0a,
  0xe4, 0x49, 0x0a, 0xe4, 0x89, 0x0a, 0xa9, 0x48, 0x0a, 0x84, 0x29, 0x29,
  0x48, 0x28, 0x89, 0x29, 0x89, 0x2a, 0x8b, 0x05, 0xe4, 0x0a, 0xa9, 0x88,
  0x0a, 0xa9, 0x48, 0x0a, 0x24, 0xc9, 0x09, 0x24, 0xc8, 0x09, 0x24, 0x68,
  0x88, 0x2a, 0xe9, 0xc9, 0x09, 0xe4, 0xc9, 0x08, 0x64, 0xe8, 0xc9, 0x89,
  0x4a, 0x2a, 0x68, 0x88, 0x8a, 0x05, 0x84, 0xea, 0x49, 0x8a, 0x0a, 0xe4,
  0x49, 0x0a, 0xe4, 0x89, 0x0a, 0xa9, 0x48, 0xea, 0x2a, 0x69, 0xaa, 0x88,
  0x05, 0x24, 0x48, 0x2a, 0x69, 0x2a, 0xc9, 0xe9, 0x08, 0xc4, 0x48, 0xea,
  0xa9, 0x89, 0x05, 0xe4, 0xa9, 0x8a, 0x0a, 0xe4, 0xc9, 0x08, 0xe4, 0x49,
  0x0a, 0x24, 0xc9, 0x09, 0x64, 0xe8, 0xc9, 0xc9, 0xa9, 0x68, 0x88, 0x2a,
  0xe9, 0xc9, 0x09, 0xe4, 0x2a, 0x89, 0x0a, 0x09, 0x84, 0x0a, 0xa9, 0x08,
  0x64, 0xea, 0xc9, 0x88, 0xea, 0x2a, 0x48, 0xaa, 0x08, 0xe4, 0x49, 0x0a,
  0x84, 0x0a, 0xa9, 0x08, 0xa4, 0x6a, 0xaa, 0x08, 0xe4, 0x49, 0x0a, 0xe4,
  0x89, 0x0a, 0xa9, 0x48, 0x0a, 0x84, 0xa8, 0x28, 0x88, 0x29, 0xc9, 0xe9,
  0x68, 0x0a, 0x24, 0xc9, 0x09, 0x84, 0x0a, 0xa9, 0x08, 0x64, 0xea, 0xc9,
  0x88, 0xea, 0x2a, 0x48, 0xaa, 0xc8, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0x04, 0x2d, 0x6c, 0x0e, 0x0d, 0xc5, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0x04, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x04, 0x0e, 0xa4, 0x07, 0xc4, 0x4c, 0x2e, 0x6c, 0x0c, 0x05, 0x4e,
  0x05, 0xc6, 0x65, 0x26, 0x06, 0x67, 0x06, 0x26, 0x27, 0x07, 0x64, 0x05,
  0xc4, 0x25, 0x26, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x0e,
  0x44, 0xa5, 0x07, 0x24, 0xe6, 0xc6, 0x05, 0x66, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xc4, 0x4c, 0x2e,
  0x6c, 0x0c, 0x05, 0xce, 0x05, 0x4f, 0x05, 0xce, 0x25, 0x4f, 0x05, 0xce,
  0x45, 0x4f, 0x05, 0x05, 0xce, 0x05, 0x0f, 0x64, 0x05, 0x04, 0xce, 0x25,
  0x0f, 0x64, 0x05, 0x04, 0xce, 0x45, 0x2f, 0x25, 0x65, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xe1, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45,
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0xe5, 0xa5, 0x41, 0xa1, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0x64, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x0c, 0xc4,
  0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x0d, 0xa4, 0x2d, 0x0c, 0x8e, 0x05, 0x64,
  0xec, 0xcd, 0xcd, 0xae, 0x4c, 0x8e, 0x0e, 0x84, 0xee, 0x0d, 0x64, 0x2e,
  0xed, 0xcc, 0xad, 0x8c, 0x8c, 0x05, 0x24, 0x0c, 0x0e, 0x8e, 0x2d, 0x0f,
  0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0xae, 0x85, 0xee, 0xad, 0xe5,
  0xee, 0x4d, 0x8e, 0x8d, 0x0c, 0x64, 0x0e, 0x2e, 0x6c, 0xac, 0x0c, 0x84,
  0x4e, 0x2e, 0xcc, 0x6d, 0xce, 0xec, 0x4d, 0xae, 0xcd, 0xa5, 0x41, 0xc1,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0xa8, 0xae, 0x0d, 0xae, 0x29,
  0x0c, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xea, 0xed, 0xea, 0x4d,
  0x8e, 0x8d, 0x6c, 0x0a, 0x2e, 0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x0d, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0xac, 0xae,
  0x0d, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc,
  0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x2e, 0xa5, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0xe8,
  0xad, 0x0d, 0xae, 0x8e, 0xae, 0x0c, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc,
  0x8d, 0x0e, 0xc4, 0x4c, 0x2e, 0xac, 0xad, 0xcc, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9, 0x4d,
  0xae, 0x2d, 0x8c, 0x0d, 0xa4, 0x07, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c,
  0x2d, 0x4d, 0xaf, 0x0c, 0x65, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc,
  0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x0e, 0xa4, 0x07, 0xc4,
  0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x2d, 0x4d, 0xaf, 0x0c, 0x85, 0x2e, 0xcc,
  0xed, 0xac, 0xcc, 0x8d, 0x2e, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0x2c, 0x8d,
  0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x0e, 0xa4, 0x07, 0xc4, 0xed, 0x4d,
  0xae, 0x2d, 0x8c, 0x2d, 0x4d, 0xaf, 0x0c, 0x65, 0x4c, 0xee, 0x6d, 0x6e,
  0x0e, 0x85, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x8e, 0x05, 0x64, 0xae,
  0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x2d,
  0x25, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x6e, 0x06, 0x6f, 0x06, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d,
  0x6e, 0x0a, 0x2e, 0x6c, 0xac, 0x8c, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d,
  0x6c, 0x0a, 0x2e, 0x6c, 0xac, 0x0c, 0xa4, 0x07, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x6e, 0x06, 0x6f, 0x06, 0x85, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d,
  0x8e, 0x05, 0x44, 0x2c, 0x8d, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x8e,
  0x05, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0xcc, 0xe9, 0x4d, 0xae,
  0x2d, 0x8c, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xa4, 0xad, 0x8e, 0x0d, 0x45,
  0xac, 0xae, 0x0d, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x84,
  0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x6e, 0x0a, 0x2e, 0x6c, 0xac, 0x8c,
  0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0x6c, 0x0a, 0x2e, 0x6c, 0xac, 0x2c,
  0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x64,
  0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x0c, 0x24, 0x0c, 0x84,
  0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x0e, 0xc4, 0x4c, 0xee, 0xad, 0x0d,
  0x84, 0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xec, 0x64, 0x0e, 0xc4,
  0xae, 0x4c, 0x8e, 0x2e, 0x6d, 0xac, 0x6c, 0x0e, 0x24, 0xcc, 0x8d, 0x0c,
  0x84, 0x0e, 0xad, 0x2c, 0x4d, 0x0e, 0xa4, 0xce, 0x0e, 0x64, 0xec, 0xed,
  0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x6c, 0xce, 0xa5, 0x41, 0xe1,
  0xe5, 0x05, 0x44, 0xaa, 0xcc, 0x4c, 0x07, 0x04, 0x8d, 0x8e, 0x0e, 0x4e,
  0xe7, 0xe5, 0xe5, 0xee, 0xee, 0xce, 0xe5, 0x0d, 0xae, 0xcc, 0xed, 0x8c,
  0xad, 0x85, 0xae, 0x8e, 0xee, 0x4d, 0x2e, 0x2d, 0x8c, 0xcd, 0xe5, 0x4d,
  0xee, 0xec, 0x25, 0xcd, 0x8d, 0xae, 0x4c, 0xae, 0xad, 0x8c, 0x2c, 0x2d,
  0x8c, 0xae, 0xac, 0x85, 0xae, 0x8e, 0xee, 0x4d, 0x2e, 0x2d, 0x8c, 0x6d,
  0xee, 0x85, 0xae, 0x8e, 0xee, 0x4d, 0x2e, 0x2d, 0x8c, 0xad, 0x25, 0x66,
  0xa6, 0xc5, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0xad, 0xa5, 0x2d, 0x0c, 0x0e,
  0x2e, 0xcd, 0xed, 0xec, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x8c, 0x2a,
  0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x0e, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x0e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x2e, 0x86, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0xc4, 0x4e, 0x86, 0x05,
  0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce,
  0x0e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0xa4, 0xce, 0x2e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x4e, 0x26, 0xa5, 0x41, 0x61, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0x28, 0x8c, 0x6d,
  0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x0c, 0xa4, 0x8c, 0xec, 0xac, 0x6c, 0xae,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x04, 0xea, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x0d, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0xac, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84,
  0xac, 0x8c, 0x8d, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x06, 0xa4, 0x07, 0xc4,
  0x2e, 0x06, 0xa4, 0x05, 0xc4, 0x0e, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0xac, 0x8c, 0x8d,
  0x2e, 0x0c, 0xea, 0x6d, 0x4e, 0x06, 0xa4, 0x07, 0xc4, 0x4e, 0x06, 0xa4,
  0x05, 0xc4, 0x0e, 0x66, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xe4, 0xe5, 0x05, 0xa4, 0xca, 0x0a, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0xac,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06,
  0x84, 0xac, 0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x2a, 0x06, 0xa4, 0x07, 0xa4,
  0xce, 0x2e, 0x06, 0xa4, 0x05, 0xa4, 0xce, 0x0e, 0x66, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0xac,
  0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x4a, 0x06, 0xa4, 0x07, 0xa4, 0xce, 0x4e,
  0x06, 0xa4, 0x05, 0xa4, 0xce, 0x0e, 0x66, 0xa7, 0x41, 0xa1, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x0e, 0xa4,
  0x07, 0x24, 0xc6, 0x05, 0xc6, 0x0c, 0xe4, 0x05, 0x04, 0x85, 0xac, 0x8c,
  0x8d, 0x2e, 0xac, 0xca, 0x2a, 0xc6, 0x05, 0x0f, 0x44, 0x05, 0x84, 0xac,
  0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x4a, 0xc6, 0x25, 0x0f, 0xa4, 0x05, 0x84,
  0xac, 0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x2a, 0xc6, 0x25, 0x0f, 0x44, 0x05,
  0x84, 0xac, 0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x4a, 0xc6, 0x05, 0x2f, 0x65,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce,
  0x0d, 0x04, 0x85, 0xac, 0x8c, 0x8d, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x06,
  0x44, 0x05, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x4a, 0xc6, 0x25,
  0x0f, 0xa4, 0x05, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0x0c, 0xea, 0x6d, 0x4e,
  0x06, 0x44, 0x05, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0xac, 0xca, 0x2a, 0xc6,
  0x25, 0x2f, 0x05, 0x44, 0x05, 0x44, 0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0x2a, 0x2c,
  0x0f, 0x8a, 0x2d, 0xcc, 0xad, 0x2c, 0xc9, 0x8d, 0xae, 0x4c, 0x6e, 0xae,
  0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0x04, 0x8e, 0x2d, 0xcc, 0xad, 0xec, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x8d, 0x05, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x8e, 0x2d,
  0xcc, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44, 0x2e, 0x2c, 0xef, 0x49, 0x2e, 0xed,
  0x2c, 0xcd, 0x8d, 0x05, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x44,
  0x2e, 0x2c, 0x8f, 0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x2d,
  0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x84, 0x0c, 0xa4, 0x07, 0xa4, 0x85, 0xec, 0x8d, 0x0e,
  0x05, 0x8e, 0x2d, 0xcc, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d,
  0x05, 0x04, 0x8e, 0x2d, 0xcc, 0xad, 0xec, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0x84, 0x0e, 0xa4, 0x07, 0x04, 0xa5, 0x85, 0xec, 0x8d, 0x0e,
  0x05, 0x8e, 0x2d, 0xcc, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d,
  0x05, 0x44, 0x2e, 0x2c, 0xef, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x05,
  0xa4, 0x05, 0x84, 0x2c, 0x05, 0xe4, 0x05, 0x84, 0xec, 0x8d, 0x0e, 0x05,
  0x8e, 0x2d, 0xcc, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05,
  0x44, 0x2e, 0x2c, 0x8f, 0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd,
  0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae,
  0x4e, 0xce, 0x0d, 0x44, 0x2e, 0x2c, 0xef, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x0d, 0x64, 0x05, 0x84, 0x0e, 0x44, 0x05, 0x44, 0x2e, 0x2c, 0x8f, 0x28,
  0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0xa1, 0xaf,
  0x41, 0xa1, 0x41, 0x41, 0xec, 0xed, 0x8d, 0x0d, 0x24, 0xc9, 0xcd, 0xae,
  0x4c, 0x6e, 0xae, 0x4c, 0x06, 0x4f, 0x06, 0xc5, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0x4f, 0x06, 0xa4, 0x2d, 0x8c, 0x8e, 0x05, 0xe4, 0xad, 0x8e,
  0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x4f, 0x06, 0x24, 0xcd,
  0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x84, 0xac, 0x8c,
  0xae, 0x4c, 0xae, 0x2d, 0xcd, 0x2d, 0xcc, 0x8d, 0x0e, 0xa4, 0x07, 0xa4,
  0x2d, 0x8c, 0x6e, 0x0b, 0xa6, 0x6b, 0x0b, 0xa6, 0x0b, 0x44, 0x05, 0xa4,
  0x2d, 0x8c, 0x6e, 0x2b, 0xa6, 0x6b, 0x2b, 0xa6, 0x0b, 0xa4, 0x05, 0xa4,
  0x2d, 0x8c, 0x6e, 0x2b, 0xa6, 0x6b, 0x0b, 0xa6, 0x0b, 0x44, 0x05, 0xa4,
  0x2d, 0x8c, 0x6e, 0x0b, 0xa6, 0x6b, 0x2b, 0xa6, 0x6b, 0xa7, 0x41, 0xa1,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44,
  0x6e, 0x0c, 0x8e, 0xa8, 0x8c, 0xae, 0x4c, 0xae, 0x2d, 0xcd, 0x2d, 0xcc,
  0x8d, 0x0e, 0xa4, 0x07, 0x44, 0x6e, 0x0c, 0x0e, 0x85, 0xac, 0x8c, 0xae,
  0x4c, 0xae, 0x2d, 0xcd, 0x2d, 0xcc, 0x8d, 0x2e, 0x65, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x0b,
  0xa6, 0x6b, 0x0b, 0xa6, 0x0b, 0xa4, 0x07, 0xa4, 0x2d, 0x8c, 0x6e, 0x2b,
  0xa6, 0x6b, 0x2b, 0xa6, 0x6b, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24,
  0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x2b, 0xa6, 0x6b, 0x2b, 0xa6,
  0x0b, 0xa4, 0x07, 0xa4, 0x2d, 0x8c, 0x6e, 0x0b, 0xa6, 0x6b, 0x0b, 0xa6,
  0x6b, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0xcd, 0xae, 0x4c,
  0x6e, 0xae, 0x6c, 0x2b, 0xa6, 0x6b, 0x0b, 0xa6, 0x0b, 0xa4, 0x07, 0xa4,
  0xa5, 0x2d, 0x8c, 0x6e, 0x2b, 0xa6, 0x6b, 0x0b, 0xa6, 0x6b, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c,
  0x0b, 0xa6, 0x6b, 0x2b, 0xa6, 0x0b, 0xa4, 0x07, 0xa4, 0xa5, 0x2d, 0x8c,
  0x6e, 0x0b, 0xa6, 0x6b, 0x2b, 0xa6, 0x6b, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x0c, 0xa4, 0x07, 0x44,
  0x6e, 0x0c, 0x8e, 0xa8, 0x8c, 0xae, 0x4c, 0xae, 0x2d, 0xcd, 0x2d, 0xcc,
  0x8d, 0x0e, 0x44, 0x05, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c,
  0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae,
  0x4e, 0xce, 0x0d, 0x24, 0x4c, 0x6c, 0x0e, 0x85, 0xac, 0x8c, 0xae, 0x4c,
  0xae, 0x2d, 0xcd, 0x2d, 0xcc, 0x8d, 0x2e, 0x05, 0xc4, 0x07, 0x04, 0xc6,
  0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x26, 0x66, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x41, 0xe1, 0x45, 0xa5, 0x41, 0x01, 0xa4,
  0x6a, 0x2e, 0xcd, 0xed, 0x0c, 0x24, 0xad, 0x0d, 0x8e, 0xad, 0xac, 0xad,
  0xcc, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x84, 0xac, 0x6c, 0x6e,
  0x4c, 0x2e, 0x4d, 0xac, 0x8c, 0x0c, 0x24, 0xcd, 0x0d, 0x04, 0x4a, 0x48,
  0x8a, 0x8a, 0x05, 0xc4, 0x2c, 0xcd, 0x8d, 0x2c, 0xcd, 0xed, 0x0c, 0x84,
  0x0e, 0xad, 0x0c, 0x04, 0x2e, 0x4c, 0x8e, 0x2e, 0x2d, 0x8c, 0x0d, 0x84,
  0xac, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x0c, 0xe4, 0xcd,
  0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x65, 0x0c, 0x2d, 0xcc, 0xed, 0xac,
  0x0c, 0x24, 0xcd, 0x0d, 0x04, 0xee, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd,
  0x2d, 0xe5, 0x05, 0x65, 0x0c, 0x2d, 0xcc, 0xed, 0xac, 0x0c, 0x24, 0xcd,
  0x0d, 0xa4, 0xca, 0x0a, 0x64, 0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d,
  0x8c, 0xae, 0x6c, 0x2e, 0xa5, 0x41, 0x01, 0x24, 0xcc, 0x65, 0xcd, 0x25,
  0x0c, 0x84, 0x0c, 0xee, 0x85, 0xac, 0x0e, 0x24, 0xcc, 0x8d, 0x0c, 0x84,
  0x0c, 0xee, 0x85, 0xcc, 0xae, 0x41, 0xa1, 0x41, 0x01, 0xe4, 0x28, 0xcd,
  0xae, 0xcc, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x06, 0xa4, 0xca, 0x0a,
  0x24, 0xcc, 0x8d, 0x0c, 0x64, 0x06, 0x84, 0x4e, 0x2e, 0x2d, 0xcc, 0xed,
  0x8c, 0xad, 0x0c, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0x6e, 0x8e, 0x05, 0x84,
  0x0e, 0x2d, 0x6d, 0x0e, 0x64, 0x2c, 0xcc, 0x0d, 0x44, 0xac, 0x0c, 0x44,
  0xae, 0x0c, 0x4e, 0xae, 0x6c, 0xae, 0xcc, 0x8d, 0xae, 0x8c, 0x0c, 0x24,
  0x6c, 0x0e, 0x24, 0x0c, 0x84, 0x2d, 0xcd, 0xad, 0x2c, 0x4c, 0x0e, 0xa4,
  0x2c, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x4d, 0xa7, 0x41, 0xa1, 0x41,
  0x01, 0x04, 0xa5, 0xce, 0x0e, 0xc6, 0xa5, 0x0e, 0xa4, 0x05, 0xa4, 0xce,
  0x4e, 0xc6, 0xa5, 0x8e, 0x05, 0xa4, 0xce, 0x0e, 0xc6, 0xc5, 0x0e, 0xa4,
  0x05, 0xa4, 0xce, 0x4e, 0xc6, 0xc5, 0x2e, 0x05, 0x04, 0x04, 0x04, 0x85,
  0x0c, 0xee, 0x85, 0xac, 0x2e, 0x05, 0x04, 0x04, 0xa4, 0x07, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x05, 0x0e, 0x06, 0xa4, 0x05, 0x04, 0x4e, 0x26, 0xa5,
  0x41, 0x01, 0x04, 0xa5, 0xce, 0x2e, 0xc6, 0xa5, 0x0e, 0xa4, 0x05, 0xa4,
  0xce, 0x4e, 0xc6, 0xa5, 0x8e, 0x05, 0xa4, 0xce, 0x2e, 0xc6, 0xc5, 0x0e,
  0xa4, 0x05, 0xa4, 0xce, 0x4e, 0xc6, 0xc5, 0x2e, 0x05, 0x04, 0x04, 0x04,
  0x85, 0x0c, 0xee, 0x85, 0xcc, 0x2e, 0x05, 0x04, 0x04, 0xa4, 0x07, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x05, 0x2e, 0x06, 0xa4, 0x05, 0x04, 0x4e, 0x26,
  0xa5, 0x41, 0xa1, 0x41, 0x01, 0x84, 0xea, 0x0d, 0x64, 0xee, 0x8d, 0xcd,
  0xae, 0x0c, 0xc4, 0xec, 0x4d, 0x0e, 0x84, 0x0c, 0xee, 0x85, 0xac, 0x8e,
  0x05, 0xe4, 0xae, 0x0c, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x8e, 0x0e, 0x84,
  0x0e, 0xad, 0x0c, 0x44, 0x06, 0x4f, 0x06, 0xa4, 0x2d, 0x8c, 0x4e, 0x2e,
  0x0d, 0x0f, 0xe4, 0xcd, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0xad, 0xcc,
  0x8c, 0x0e, 0x64, 0x2e, 0x8d, 0xac, 0x0c, 0x84, 0xee, 0x0d, 0xe4, 0xac,
  0x8c, 0xae, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x85, 0x0c, 0xee, 0x85, 0xac,
  0x2e, 0x05, 0x04, 0x04, 0xa4, 0x07, 0x04, 0xa5, 0xce, 0x0e, 0xc6, 0xa5,
  0x0e, 0xa4, 0x05, 0xa4, 0xce, 0x4e, 0xc6, 0xa5, 0x8e, 0x05, 0xa4, 0xce,
  0x0e, 0xc6, 0xc5, 0x0e, 0xa4, 0x05, 0xa4, 0xce, 0x4e, 0xc6, 0xc5, 0x2e,
  0xc5, 0xab, 0x25, 0x06, 0x04, 0x04, 0x05, 0x0e, 0x06, 0xa4, 0x05, 0x04,
  0x4e, 0x26, 0xa5, 0x41, 0x01, 0x04, 0x85, 0x0c, 0xee, 0x85, 0xcc, 0x2e,
  0x05, 0x04, 0x04, 0xa4, 0x07, 0x04, 0xa5, 0xce, 0x2e, 0xc6, 0xa5, 0x0e,
  0xa4, 0x05, 0xa4, 0xce, 0x4e, 0xc6, 0xa5, 0x8e, 0x05, 0xa4, 0xce, 0x2e,
  0xc6, 0xc5, 0x0e, 0xa4, 0x05, 0xa4, 0xce, 0x4e, 0xc6, 0xc5, 0x2e, 0x05,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x2e, 0x06, 0xa4, 0x05, 0x04, 0x4e,
  0x26, 0xa5, 0x41, 0x41, 0xe5, 0xa5, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c,
  0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x8c, 0x4a, 0x2e,
  0x2d, 0xcc, 0xed, 0x8c, 0xad, 0x0c, 0x2a, 0x4c, 0x8e, 0x2e, 0x2d, 0x8c,
  0x8d, 0xa8, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0x0e,
  0xc5, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x0e, 0x86, 0x05,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x2e, 0x86, 0x05,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x4e, 0x86, 0x05,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x0e, 0x86, 0x05, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2e, 0x86, 0x05, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x4e, 0x86, 0x05, 0xe4, 0xad, 0x8e,
  0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x0c, 0x8e, 0xac,
  0x8e, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0x84, 0x0c, 0x8e, 0xcc, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x4f, 0x06,
  0x84, 0x2d, 0xcd, 0xad, 0x2c, 0x4c, 0xae, 0x28, 0xae, 0x2e, 0x8c, 0x2e,
  0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0x2d, 0xcd,
  0xad, 0x2c, 0x4c, 0xae, 0x28, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0x0b, 0xa6, 0x0b, 0xa4, 0x07, 0xa4, 0xce, 0x0e, 0x06, 0xa4, 0x05, 0xa4,
  0xce, 0x4e, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0x2d, 0xcd,
  0xad, 0x2c, 0x4c, 0xae, 0x28, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0x2b, 0xa6, 0x0b, 0xa4, 0x07, 0xa4, 0xce, 0x2e, 0x06, 0xa4, 0x05, 0xa4,
  0xce, 0x4e, 0x66, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x6f, 0x06, 0x04, 0xee, 0x2d, 0xcd,
  0x8d, 0xce, 0xaa, 0x6c, 0x8c, 0xee, 0x4d, 0x6e, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0xce, 0xaa, 0x6c, 0x8c, 0xee,
  0x4d, 0x6e, 0x0b, 0xa6, 0x0b, 0xa4, 0x07, 0x04, 0x0e, 0x06, 0xa4, 0x05,
  0x04, 0x4e, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xee, 0x2d,
  0xcd, 0x8d, 0xce, 0xaa, 0x6c, 0x8c, 0xee, 0x4d, 0x6e, 0x2b, 0xa6, 0x0b,
  0xa4, 0x07, 0x04, 0x2e, 0x06, 0xa4, 0x05, 0x04, 0x4e, 0x66, 0xa7, 0x41,
  0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0x4f, 0x06, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xc9, 0xcd, 0xae, 0x4c, 0x6e, 0xae,
  0x4c, 0x06, 0x4f, 0x06, 0x85, 0x2d, 0xcd, 0xad, 0x2c, 0x4c, 0xae, 0x28,
  0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0xcd, 0xae,
  0x4c, 0x6e, 0xae, 0x2c, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x84, 0x0c, 0x8e, 0xac, 0x0e, 0xa4, 0x07, 0x24, 0xcd, 0xcd, 0xae,
  0x4c, 0x6e, 0xae, 0x6c, 0x0b, 0xa6, 0x6b, 0x0b, 0xa6, 0x0b, 0x44, 0x05,
  0x04, 0xee, 0x2d, 0xcd, 0x8d, 0xce, 0xaa, 0x6c, 0x8c, 0xee, 0x4d, 0x6e,
  0x0b, 0xa6, 0x0b, 0x64, 0x05, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae,
  0x6c, 0x0b, 0xa6, 0x6b, 0x2b, 0xa6, 0x0b, 0x44, 0x05, 0x04, 0xee, 0x2d,
  0xcd, 0x8d, 0xce, 0xaa, 0x6c, 0x8c, 0xee, 0x4d, 0x6e, 0x2b, 0xa6, 0x6b,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0x0c, 0x8e, 0xcc, 0x0e, 0xa4,
  0x07, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x2b, 0xa6, 0x6b,
  0x0b, 0xa6, 0x0b, 0x44, 0x05, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0xce, 0xaa,
  0x6c, 0x8c, 0xee, 0x4d, 0x6e, 0x0b, 0xa6, 0x0b, 0x64, 0x05, 0x24, 0xcd,
  0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x2b, 0xa6, 0x6b, 0x2b, 0xa6, 0x0b,
  0x44, 0x05, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0xce, 0xaa, 0x6c, 0x8c, 0xee,
  0x4d, 0x6e, 0x2b, 0xa6, 0x6b, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xe1, 0x45, 0xa5, 0x41, 0xa1, 0x6a, 0x2e, 0xcd, 0xed, 0x0c, 0x24, 0xad,
  0x0d, 0x8e, 0xad, 0xac, 0xad, 0xcc, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd,
  0x0d, 0x84, 0xac, 0x6c, 0x6e, 0x4c, 0x2e, 0x4d, 0xac, 0x8c, 0x0c, 0x24,
  0xcd, 0x0d, 0x04, 0x4a, 0x48, 0x8a, 0x8a, 0x05, 0xc4, 0x2c, 0xcd, 0x8d,
  0x2c, 0xcd, 0xed, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0xac, 0x4c, 0x2e,
  0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x0c, 0xc4, 0xec, 0x4d, 0x0e, 0x84,
  0x0e, 0xad, 0x0c, 0xa4, 0xca, 0x6a, 0x0e, 0x04, 0x85, 0xac, 0x8a, 0x05,
  0x84, 0xcc, 0x2a, 0x05, 0x04, 0x24, 0xcd, 0x0d, 0x44, 0xec, 0x8d, 0x0e,
  0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x0f, 0x24, 0xcc, 0x8d, 0x0c, 0x24,
  0x0f, 0x84, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xae,
  0x41, 0xa1, 0x41, 0xe1, 0x28, 0xcd, 0xae, 0xcc, 0x0d, 0x84, 0x0e, 0xad,
  0x0c, 0xe4, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x8c, 0x0d, 0x04, 0xee,
  0x2d, 0xcd, 0x8d, 0x0e, 0x24, 0xcc, 0x8d, 0x0c, 0x84, 0x0e, 0xad, 0x0c,
  0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0x04, 0xee, 0x2d, 0xcd, 0x8d,
  0x6e, 0x0e, 0x04, 0x05, 0x0e, 0x0b, 0x24, 0xcc, 0x8d, 0x0c, 0x04, 0x2e,
  0x2b, 0x05, 0x64, 0x05, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x2e, 0x4c, 0x8e,
  0x2e, 0x2d, 0x8c, 0x0d, 0x84, 0xac, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e,
  0xcd, 0xae, 0x6c, 0x8e, 0x05, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0x2d, 0xcd,
  0xad, 0x2c, 0x4c, 0x0e, 0xa4, 0x2c, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd,
  0x0d, 0x64, 0x2c, 0xcc, 0x0d, 0x44, 0xac, 0x0c, 0xc4, 0xec, 0x4d, 0xae,
  0xad, 0x8c, 0x4c, 0xa7, 0x41, 0xc1, 0xe9, 0x8d, 0xae, 0x0c, 0x84, 0xac,
  0x6c, 0x6e, 0x4c, 0x2e, 0x4d, 0xac, 0x8c, 0x0c, 0xe4, 0xcd, 0x8d, 0x2d,
  0x0f, 0xe4, 0x2e, 0x8d, 0x0e, 0x0d, 0x04, 0x0e, 0x8b, 0x05, 0x44, 0xac,
  0x8e, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x2e, 0xac, 0xad, 0x0c, 0x24,
  0x6d, 0x0e, 0x24, 0x8c, 0x6d, 0xee, 0x0d, 0x24, 0x0c, 0x0e, 0x8e, 0x2d,
  0xad, 0x8c, 0x0c, 0x84, 0xee, 0x0d, 0x04, 0x2e, 0xab, 0x41, 0xa1, 0x41,
  0x01, 0x05, 0x84, 0x0c, 0x8e, 0xac, 0xce, 0x05, 0x8f, 0x05, 0x84, 0x0c,
  0x8e, 0xcc, 0xce, 0x05, 0x2f, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0xa4, 0x07, 0x04, 0x04, 0x04, 0x05, 0x0e, 0xcb, 0x05,
  0x0f, 0xa4, 0x05, 0x04, 0xce, 0x05, 0x2f, 0xa5, 0x41, 0x01, 0x05, 0x84,
  0x0c, 0x8e, 0xac, 0xce, 0x25, 0x8f, 0x05, 0x84, 0x0c, 0x8e, 0xcc, 0xce,
  0x25, 0x2f, 0x05, 0x04, 0x04, 0x04, 0x85, 0xac, 0x2a, 0x05, 0x04, 0x04,
  0xa4, 0x07, 0x04, 0x04, 0x04, 0x05, 0x0e, 0xcb, 0x25, 0x0f, 0xa4, 0x05,
  0x04, 0xce, 0x25, 0x2f, 0xa5, 0x41, 0x01, 0x05, 0x84, 0x0c, 0x8e, 0xac,
  0xce, 0x45, 0x8f, 0x05, 0x84, 0x0c, 0x8e, 0xcc, 0xce, 0x45, 0x2f, 0x05,
  0x04, 0x04, 0x04, 0x85, 0xcc, 0x2a, 0x05, 0x04, 0x04, 0xa4, 0x07, 0x04,
  0x04, 0x04, 0x05, 0x0e, 0xcb, 0x45, 0x0f, 0xa4, 0x05, 0x04, 0xce, 0x45,
  0x2f, 0xa5, 0x41, 0xa1, 0x41, 0x41, 0xa8, 0x6c, 0x2c, 0xac, 0x6e, 0xae,
  0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x04, 0x4e, 0xee, 0x4d, 0x8c, 0xad, 0xac,
  0x0d, 0x24, 0x6d, 0x0e, 0xe4, 0xcd, 0xae, 0x4c, 0xae, 0x65, 0xec, 0xcd,
  0x6d, 0x8e, 0x4e, 0x2e, 0x2c, 0xcd, 0xad, 0x8c, 0x0c, 0x04, 0x65, 0x06,
  0xa4, 0x2c, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0x24, 0xcc,
  0x8d, 0x0c, 0xe4, 0xcd, 0x8d, 0x2d, 0x0f, 0x44, 0x06, 0xa4, 0xce, 0x6d,
  0xcd, 0xed, 0xed, 0xce, 0x6d, 0x2e, 0x85, 0x05, 0xe4, 0xae, 0x0c, 0x04,
  0x2e, 0x6d, 0x6c, 0x0d, 0x44, 0x06, 0x64, 0x0c, 0x2d, 0xcc, 0xcd, 0xad,
  0x8c, 0x6d, 0xce, 0x05, 0x64, 0x2a, 0xcd, 0x6d, 0xac, 0x0c, 0xe4, 0xcd,
  0xad, 0x0c, 0xe4, 0xcd, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0x2c, 0xae,
  0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0x64, 0x2c, 0xcc, 0xad, 0x41,
  0x41, 0xac, 0x0c, 0x84, 0xac, 0xec, 0xac, 0xcc, 0xad, 0x4c, 0x2e, 0x8c,
  0xae, 0x8c, 0x05, 0xe4, 0xae, 0x0c, 0x04, 0x2e, 0x6d, 0x6c, 0x0d, 0x84,
  0x0e, 0xad, 0x0c, 0xe4, 0x8d, 0x0e, 0xad, 0x4c, 0x0e, 0x44, 0x06, 0xa4,
  0x05, 0xc4, 0x2d, 0xac, 0xad, 0x8c, 0x2d, 0x0f, 0x44, 0x06, 0xe4, 0x2e,
  0x8d, 0x0e, 0x0d, 0x84, 0xad, 0x2c, 0x6c, 0x8e, 0x0e, 0xa4, 0x2d, 0xec,
  0xcc, 0x2d, 0x8d, 0xae, 0x8e, 0xac, 0x0c, 0x24, 0xcd, 0x0d, 0x84, 0x0e,
  0xad, 0x2c, 0x4d, 0x0e, 0x64, 0x4c, 0xee, 0x6d, 0x6e, 0x0e, 0x04, 0x4e,
  0xee, 0x8d, 0xac, 0x6e, 0x8c, 0x8e, 0x05, 0xe4, 0x0e, 0x2d, 0x6d, 0x0c,
  0x0d, 0x24, 0x4c, 0xae, 0x0c, 0x64, 0xec, 0xcd, 0xcd, 0xae, 0xcc, 0x2d,
  0xad, 0xcc, 0x8d, 0x8e, 0x2d, 0x0f, 0x24, 0xcc, 0x2e, 0x2c, 0x8d, 0x2d,
  0x4c, 0x8c, 0xad, 0x0c, 0x24, 0xcd, 0x0d, 0xc4, 0xcd, 0xa5, 0x41, 0x81,
  0x0a, 0xa9, 0xcc, 0x0d, 0xe4, 0xae, 0x0c, 0x64, 0xee, 0x8d, 0xcd, 0xae,
  0x0c, 0xc4, 0xec, 0x4d, 0x0e, 0x84, 0xac, 0x8a, 0x05, 0x84, 0xcc, 0x0a,
  0x44, 0x2c, 0x0f, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x8e, 0x2e, 0xcd, 0xed,
  0x0c, 0x84, 0x0e, 0xad, 0x0c, 0xa4, 0x2d, 0x8c, 0x4e, 0x2e, 0x0d, 0xaf,
  0x41, 0xa1, 0x41, 0x81, 0xac, 0x0a, 0x04, 0x04, 0x04, 0xa4, 0x07, 0x04,
  0x04, 0x04, 0x05, 0x84, 0x0c, 0x8e, 0xac, 0xce, 0x05, 0x8f, 0x05, 0x84,
  0x0c, 0x8e, 0xcc, 0xce, 0x05, 0x2f, 0xc5, 0xab, 0x25, 0x06, 0x04, 0x04,
  0x05, 0x0e, 0xcb, 0x05, 0x0f, 0xa4, 0x05, 0x04, 0xce, 0x05, 0x2f, 0xa5,
  0x41, 0x81, 0xcc, 0x0a, 0x04, 0x04, 0x04, 0xa4, 0x07, 0x04, 0x04, 0x04,
  0x05, 0x84, 0x0c, 0x8e, 0xac, 0xce, 0x25, 0x8f, 0x05, 0x84, 0x0c, 0x8e,
  0xcc, 0xce, 0x25, 0x2f, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x0e,
  0xcb, 0x25, 0x0f, 0xa4, 0x05, 0x04, 0xce, 0x25, 0x2f, 0xa5, 0x41, 0x41,
  0xe5, 0xa5, 0x41, 0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0x64, 0x28, 0x8c, 0x6d,
  0xac, 0x8e, 0x2d, 0x8c, 0xae, 0xac, 0xca, 0x8a, 0xa8, 0x4c, 0x2e, 0xcd,
  0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0x0e, 0xc5, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0xc4, 0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x0c, 0x8e, 0xac, 0x8e, 0x05, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x0c, 0x8e, 0xcc, 0x8e, 0x05,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x8e, 0x05, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x0e, 0x8b, 0x05, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2e, 0x8b, 0x05, 0xe4, 0xad, 0x8e, 0x0e,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x0c, 0x8f, 0x05,
  0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84,
  0x8c, 0x2c, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x24, 0xcd, 0x8d, 0x4e, 0x06, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c,
  0x6e, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0x24, 0x4c, 0x6c, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x0d,
  0xa4, 0x07, 0x24, 0x4c, 0x6c, 0x0e, 0xc5, 0xed, 0x4d, 0xae, 0x2d, 0x8c,
  0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0c, 0x04,
  0x25, 0x4c, 0x6c, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0xcd, 0x05, 0x0f,
  0xc4, 0x07, 0x24, 0x4c, 0x6c, 0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0xcd,
  0x25, 0x0f, 0xc4, 0xc4, 0x04, 0x24, 0x4c, 0x6c, 0xce, 0xe9, 0x4d, 0xae,
  0x2d, 0x8c, 0xcd, 0x05, 0x0f, 0xc4, 0x07, 0x24, 0x4c, 0x6c, 0xce, 0xe9,
  0x4d, 0xae, 0x2d, 0x8c, 0xcd, 0x45, 0x2f, 0xa5, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x0e, 0xa4, 0x07, 0x24, 0xcd,
  0x8d, 0x4e, 0x06, 0x25, 0x86, 0x05, 0x44, 0x26, 0x65, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x8c,
  0x6d, 0xae, 0x0c, 0x24, 0xcd, 0x0c, 0x04, 0x25, 0x4c, 0x6c, 0xce, 0xe9,
  0x4d, 0xae, 0x2d, 0x8c, 0xcd, 0x25, 0x0f, 0xc4, 0x07, 0x24, 0x4c, 0x6c,
  0xce, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0xcd, 0x45, 0x2f, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x24, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0x0e, 0xa4, 0x07,
  0x24, 0xcd, 0x8d, 0x4e, 0x06, 0x05, 0x86, 0x05, 0x44, 0x26, 0x65, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0x8c, 0x6d, 0xae, 0xac, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x8d,
  0x2c, 0x6d, 0xac, 0x6c, 0x0e, 0xa4, 0x07, 0x24, 0xcd, 0x8d, 0x4e, 0x06,
  0x05, 0x86, 0x05, 0x24, 0x26, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0xa4, 0xaf, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x4e, 0x06, 0x4f, 0x06, 0x84, 0x2d, 0xcd, 0xad, 0x2c, 0x4c,
  0xae, 0x28, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x84, 0x2d, 0xcd, 0xad, 0x2c, 0x4c, 0xae, 0x28, 0xae,
  0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x0b, 0xa6, 0x0b, 0xa4, 0x07, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x85, 0x0c, 0x8e, 0xac, 0x6e, 0x2b,
  0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0xaf, 0x8b, 0x05, 0x84,
  0x0c, 0x8e, 0xcc, 0x6e, 0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce,
  0x05, 0xaf, 0x2b, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x84, 0x2d,
  0xcd, 0xad, 0x2c, 0x4c, 0xae, 0x28, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd,
  0x6d, 0x2b, 0xa6, 0x0b, 0xa4, 0x07, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0x85, 0x0c, 0x8e, 0xac, 0x6e, 0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac,
  0x6c, 0xce, 0x25, 0xaf, 0x8b, 0x05, 0x84, 0x0c, 0x8e, 0xcc, 0x6e, 0x2b,
  0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x25, 0xaf, 0x2b, 0x65, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0x4f, 0x06, 0x24, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x6c,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xc9, 0xcd, 0xae, 0x4c, 0x6e,
  0xae, 0x4c, 0x06, 0x4f, 0x06, 0x85, 0x2d, 0xcd, 0xad, 0x2c, 0x4c, 0xae,
  0x28, 0xae, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0xcd,
  0xae, 0x4c, 0x6e, 0xae, 0x2c, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04, 0xee, 0x2d,
  0xcd, 0x8d, 0xee, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0xa4, 0x07, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x05, 0x0e, 0x6b, 0x2b, 0xcd, 0x8d,
  0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0xaf, 0x0b, 0xa4, 0x05, 0x04, 0x6e,
  0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0xaf, 0x8b, 0x05,
  0x04, 0x0e, 0x6b, 0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x25,
  0xaf, 0x0b, 0xa4, 0x05, 0x04, 0x6e, 0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac,
  0x6c, 0xce, 0x25, 0xaf, 0x2b, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x84, 0x8c, 0x0c, 0x0f, 0xa4, 0x07, 0x24, 0x4c, 0x6c, 0x0e, 0xa5, 0xad,
  0x8e, 0x0d, 0x25, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x8c, 0x05, 0x04,
  0xee, 0x2d, 0xcd, 0x8d, 0xee, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x25,
  0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0xee, 0x2d,
  0xcd, 0x8d, 0xee, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0xa4, 0x07, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x05, 0x2e, 0x6b, 0x2b, 0xcd, 0x8d,
  0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0xaf, 0x0b, 0xa4, 0x05, 0x04, 0x6e,
  0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x05, 0xaf, 0x8b, 0x05,
  0x04, 0x2e, 0x6b, 0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac, 0x6c, 0xce, 0x25,
  0xaf, 0x0b, 0xa4, 0x05, 0x04, 0x6e, 0x2b, 0xcd, 0x8d, 0x2c, 0x6d, 0xac,
  0x6c, 0xce, 0x25, 0xaf, 0x2b, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x84, 0x8c, 0x2c, 0x0f, 0xa4, 0x07, 0x24, 0x4c, 0x6c, 0x0e, 0xa5, 0xad,
  0x8e, 0x0d, 0x25, 0xcd, 0xcd, 0xae, 0x4c, 0x6e, 0xae, 0x8c, 0x05, 0x04,
  0xee, 0x2d, 0xcd, 0x8d, 0xee, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x25,
  0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x41, 0xc1, 0xee,
  0x2d, 0x8d, 0x0c, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae,
  0xac, 0xca, 0x8a, 0xa8, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae,
  0x6c, 0x0e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x8e, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2d, 0x8d, 0x0e,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x4e, 0x2e, 0x2d, 0xcc,
  0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0xa5, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0x04, 0x0e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x4e, 0x86, 0x05, 0xa4, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0xa4, 0xce, 0x0e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x2e, 0x86, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x4e, 0x86,
  0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x6e, 0x06, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea,
  0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x8f, 0x06, 0x04, 0x4e, 0xee, 0x4d,
  0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e,
  0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c,
  0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x8d, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0x84, 0x8c, 0x0c, 0x8f, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x2c, 0x2f, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0x2a, 0x2c, 0x0f, 0x44, 0x2e,
  0x2c, 0x2f, 0x06, 0x06, 0xa4, 0x07, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e,
  0x8c, 0xae, 0x6c, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c, 0x0f,
  0x85, 0x28, 0x6d, 0x0e, 0x2e, 0x8c, 0x6e, 0x0c, 0x4d, 0x2a, 0x2c, 0x6f,
  0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0x25, 0xc5, 0x05, 0x2f, 0x0f, 0x64,
  0x05, 0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x25, 0x86, 0x05, 0x04, 0x26,
  0x85, 0x05, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec,
  0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee,
  0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04,
  0x04, 0x44, 0x2a, 0x2c, 0x0f, 0x44, 0x2e, 0x2c, 0x0f, 0x26, 0x06, 0xa4,
  0x07, 0xe4, 0xa8, 0xcc, 0xad, 0x4c, 0x2e, 0x8c, 0xae, 0x6c, 0x28, 0xac,
  0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c, 0x0f, 0x85, 0x28, 0x6d, 0x0e, 0x2e,
  0x8c, 0x6e, 0x0c, 0x4d, 0x2a, 0x2c, 0x6f, 0x2e, 0xc9, 0x8d, 0xac, 0x0c,
  0x0f, 0x25, 0xc5, 0x05, 0x2f, 0x0f, 0x64, 0x05, 0xa4, 0x2e, 0xcd, 0x8d,
  0x4e, 0x06, 0x05, 0x86, 0x05, 0x24, 0x26, 0x85, 0x05, 0x64, 0x2c, 0xac,
  0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d,
  0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d,
  0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28,
  0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd,
  0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c,
  0x0e, 0xea, 0x2d, 0xcd, 0x8d, 0x0e, 0xa4, 0x07, 0x44, 0x2a, 0x2c, 0x0f,
  0x8a, 0x2d, 0xcc, 0xad, 0x2c, 0xc9, 0x8d, 0xae, 0x4c, 0x6e, 0xae, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x05, 0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e,
  0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x84, 0x4e, 0x2e, 0x2d, 0xcc, 0xed,
  0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x44, 0x2e,
  0x2c, 0x2f, 0x06, 0xc6, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x8d, 0x05,
  0x44, 0x2e, 0x2c, 0x2f, 0x06, 0xc6, 0x85, 0x2c, 0x4d, 0xae, 0x6c, 0x8c,
  0x2e, 0xed, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x24, 0xef, 0xc9, 0xcc, 0x6c, 0xae,
  0x8c, 0x0e, 0xea, 0x2d, 0xcd, 0x8d, 0x0e, 0xa4, 0x07, 0x44, 0x2a, 0x2c,
  0x0f, 0x8a, 0x2d, 0xcc, 0xad, 0x2c, 0xc9, 0x8d, 0xae, 0x4c, 0x6e, 0xae,
  0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x05, 0x2d, 0x8d, 0x0e, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x84, 0x4e, 0x2e, 0x2d, 0xcc,
  0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d, 0x05, 0x44,
  0x2e, 0x2c, 0x0f, 0x26, 0xc6, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x8d,
  0x05, 0x44, 0x2e, 0x2c, 0x0f, 0x26, 0xc6, 0x85, 0x2c, 0x4d, 0xae, 0x6c,
  0x8c, 0x2e, 0xed, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x0c, 0x8e,
  0xac, 0x8e, 0x05, 0x84, 0x0c, 0x8e, 0xcc, 0x6e, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x8c,
  0x4a, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0x0c, 0x2a, 0x4c, 0x8e, 0x2e,
  0x2d, 0x8c, 0x8d, 0xa8, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae,
  0x6c, 0x0e, 0xa5, 0xce, 0x0e, 0x86, 0x05, 0xa4, 0xce, 0x2e, 0x86, 0x05,
  0xa4, 0xce, 0x4e, 0x86, 0x05, 0x04, 0x0e, 0x86, 0x05, 0x04, 0x2e, 0x86,
  0x05, 0x04, 0x4e, 0x86, 0x05, 0x84, 0x0c, 0x8e, 0xac, 0x8e, 0x05, 0x84,
  0x0c, 0x8e, 0xcc, 0x2e, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x64,
  0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0xac, 0xca, 0x8a, 0xa8,
  0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0x0e, 0x85, 0x4e,
  0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c,
  0x8d, 0x05, 0x84, 0x0c, 0x8e, 0xac, 0x8e, 0x05, 0x84, 0x0c, 0x8e, 0xcc,
  0x8e, 0x05, 0x04, 0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x8d, 0x05, 0x04, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0xea,
  0x2d, 0xcd, 0x8d, 0x8e, 0x05, 0x24, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c,
  0x0e, 0xea, 0x2d, 0xcd, 0x8d, 0x8e, 0x05, 0x84, 0x8c, 0x0c, 0x8f, 0x05,
  0x84, 0x8c, 0x2c, 0x2f, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41,
  0xe1, 0xe5, 0x05, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae,
  0x0c, 0x84, 0xac, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c,
  0x0e, 0xe4, 0xcd, 0x0c, 0x84, 0xae, 0x0c, 0x8f, 0xae, 0x4e, 0xae, 0x0c,
  0x64, 0xec, 0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x6c, 0x0e,
  0xe4, 0xcd, 0x0d, 0x24, 0x0c, 0xe4, 0x2c, 0xcd, 0xae, 0xcc, 0x0d, 0x84,
  0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0xa5, 0x41, 0xc1, 0xee,
  0x2d, 0x8d, 0x0c, 0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae,
  0xac, 0xca, 0x8a, 0xa8, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae,
  0x6c, 0x0e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x2d, 0x8d, 0x0e, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x8e, 0x05, 0x24, 0xcd, 0x0d,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84, 0x2e, 0xcc, 0xed, 0xac,
  0xcc, 0x8d, 0x8e, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x6e, 0x06, 0x44, 0x2c, 0x8d, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x8e,
  0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x84,
  0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x8d, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x04, 0x0e, 0x86, 0x05, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0xa8,
  0x4e, 0x4e, 0xae, 0xcc, 0x8d, 0x0e, 0x44, 0x2e, 0x2c, 0xef, 0x64, 0x0e,
  0x24, 0xcd, 0x8d, 0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd,
  0x0d, 0x04, 0xee, 0x2d, 0xcd, 0x8d, 0x0e, 0xe4, 0x2e, 0x8d, 0x0e, 0x0d,
  0x84, 0x0e, 0xad, 0x0c, 0x84, 0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad,
  0xcc, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0x44, 0x2a,
  0x2c, 0x0f, 0x44, 0x0e, 0x8f, 0x05, 0x24, 0xcd, 0x0d, 0x44, 0x2a, 0x2c,
  0x0f, 0x44, 0x2e, 0x8f, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0xa8, 0x0e,
  0x2f, 0x8d, 0x2d, 0x4c, 0x2e, 0x0f, 0x44, 0x2e, 0x2c, 0x6f, 0xae, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0xa4, 0xce, 0x0e, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x2e, 0x86, 0x05, 0x24, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xa4, 0xce, 0x4e, 0x86,
  0x05, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0xca, 0x0a, 0x64, 0xec,
  0xed, 0x4d, 0x8e, 0x2c, 0xcd, 0x2d, 0x8c, 0xae, 0x6c, 0x0e, 0x24, 0x8c,
  0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x84, 0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c,
  0xad, 0xec, 0x64, 0x0e, 0xc4, 0xae, 0x4c, 0x8e, 0x2e, 0x6d, 0xac, 0x6c,
  0xce, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x6e, 0x06, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d,
  0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x8f, 0x06, 0x04, 0x4e, 0xee,
  0x4d, 0xad, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d,
  0x8e, 0x8d, 0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e,
  0x2c, 0x88, 0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x8d, 0xa5, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x4e, 0x06, 0x84, 0x8c, 0x0c, 0x8f, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x2c, 0x8f, 0x05, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0xa4, 0xca, 0x0a, 0x84, 0xac, 0x4c, 0x2e,
  0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0xae, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x06,
  0x04, 0x0e, 0x8f, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x6e, 0x06, 0x04, 0x2e, 0x2f, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04,
  0xe4, 0xe5, 0x05, 0x24, 0xa8, 0x0e, 0x2f, 0x8d, 0x2d, 0x4c, 0x2e, 0x0f,
  0x44, 0x2e, 0x2c, 0x6f, 0xee, 0x04, 0x24, 0xcd, 0x8d, 0xae, 0x4c, 0x6e,
  0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x04, 0xee, 0x2d, 0xcd, 0x8d,
  0x6e, 0x0e, 0xe4, 0x2e, 0x8d, 0x0e, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x84,
  0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0x25, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x0e, 0x0f, 0xa4, 0x07, 0x44,
  0x2a, 0x2c, 0x0f, 0x8a, 0x2d, 0xcc, 0xad, 0x2c, 0xc9, 0x8d, 0xae, 0x4c,
  0x6e, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x05, 0x2d, 0x8d, 0x0e,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x84, 0x4e, 0x2e,
  0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d, 0x8c, 0x8d,
  0x05, 0x44, 0x0e, 0xcf, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd, 0x8d, 0x05,
  0x44, 0x0e, 0xcf, 0x85, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd,
  0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x2e, 0x0f, 0xa4,
  0x07, 0x44, 0x2a, 0x2c, 0x0f, 0x8a, 0x2d, 0xcc, 0xad, 0x2c, 0xc9, 0x8d,
  0xae, 0x4c, 0x6e, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d, 0x05, 0x2d,
  0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x84,
  0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x8d, 0x05, 0x44, 0x2e, 0xcf, 0xe5, 0x4d, 0x2e, 0xed, 0x2c, 0xcd,
  0x8d, 0x05, 0x44, 0x2e, 0xcf, 0x85, 0x2c, 0x4d, 0xae, 0x6c, 0x8c, 0x2e,
  0xed, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x64, 0x28, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0xac, 0xca, 0x8a,
  0xa8, 0x4c, 0x2e, 0xcd, 0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0x0e, 0x85,
  0x4e, 0x2e, 0x2d, 0xcc, 0xed, 0x8c, 0xad, 0xcc, 0xe9, 0x4d, 0xae, 0x2d,
  0x8c, 0x8d, 0x05, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x8e, 0x05,
  0x44, 0x2c, 0x8d, 0x2e, 0xcc, 0xed, 0xac, 0xcc, 0x8d, 0x8e, 0x05, 0x04,
  0x2d, 0x8d, 0x0e, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05,
  0x04, 0x0e, 0x8f, 0x05, 0x04, 0x2e, 0x8f, 0x05, 0x84, 0x8c, 0x0c, 0x8f,
  0x05, 0x84, 0x8c, 0x2c, 0x2f, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0x8c, 0x4e, 0x2e, 0xad, 0xcc, 0xae,
  0x6c, 0x0e, 0x24, 0xac, 0x0e, 0x2f, 0x8d, 0x2d, 0x4c, 0x2e, 0x0f, 0x64,
  0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0x44, 0x2e, 0x2c, 0x6f, 0x0e, 0xe4,
  0xcd, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0x44, 0x2c, 0x0f, 0xe4, 0xcd, 0xad,
  0x0c, 0x04, 0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0x24, 0xcd, 0x0d, 0x04, 0x0f,
  0x24, 0xcc, 0x8d, 0x0c, 0x24, 0x0f, 0x84, 0x2c, 0x4d, 0xae, 0x6c, 0x8c,
  0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0x24, 0xcd, 0x0d, 0x64, 0x6e, 0x4c, 0xae,
  0xac, 0xcc, 0x0d, 0x64, 0x0e, 0x2e, 0x6c, 0xac, 0xcc, 0x05, 0xa4, 0x41,
  0xc1, 0xee, 0x2d, 0x8d, 0x0c, 0xe4, 0xa8, 0x8c, 0x2e, 0xa8, 0x0e, 0x2f,
  0x8d, 0x2d, 0x4c, 0x2e, 0x6f, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a,
  0x2c, 0x6f, 0x0e, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e,
  0x06, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d, 0x2e, 0x8d,
  0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x8e, 0x06, 0x8f, 0x06, 0x04, 0x4e, 0xee, 0x4d, 0xad, 0x6c, 0x8c,
  0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d, 0xec, 0x2a,
  0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88, 0xee, 0x49,
  0x2e, 0xed, 0x2c, 0xcd, 0x8d, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0x44, 0x2a,
  0x2c, 0x0f, 0x44, 0x0e, 0x8f, 0x05, 0xe4, 0xad, 0x8e, 0x0e, 0x44, 0x2a,
  0x2c, 0x0f, 0x44, 0x2e, 0x2f, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0x0e, 0x0f, 0xa4, 0x07, 0xe4, 0xa8, 0xcc, 0xad, 0x4c,
  0x2e, 0x8c, 0xae, 0x6c, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c,
  0x0f, 0x85, 0x28, 0x6d, 0x0e, 0x2e, 0x8c, 0x6e, 0x0c, 0x4d, 0x2a, 0x2c,
  0x6f, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0x25, 0xc5, 0x05, 0x2f, 0x0f,
  0x64, 0x05, 0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x25, 0x86, 0x05, 0x04,
  0x26, 0x85, 0x05, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad,
  0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d,
  0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88,
  0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0x2e, 0x0f, 0xa4, 0x07, 0xe4, 0xa8, 0xcc, 0xad, 0x4c,
  0x2e, 0x8c, 0xae, 0x6c, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x4c, 0x2a, 0x2c,
  0x0f, 0x85, 0x28, 0x6d, 0x0e, 0x2e, 0x8c, 0x6e, 0x0c, 0x4d, 0x2a, 0x2c,
  0x6f, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0x25, 0xc5, 0x05, 0x2f, 0x0f,
  0x64, 0x05, 0xa4, 0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x05, 0x86, 0x05, 0x24,
  0x26, 0x85, 0x05, 0x64, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x0c, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x8d, 0x05, 0x04, 0x4e, 0xee, 0x4d, 0xad,
  0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x8d, 0xea, 0xed, 0xea, 0x4d, 0x8e, 0x8d,
  0xec, 0x2a, 0x8d, 0x0e, 0x6d, 0x28, 0xac, 0xad, 0x4c, 0x2e, 0x2c, 0x88,
  0xee, 0x49, 0x2e, 0xed, 0x2c, 0xcd, 0x2d, 0x65, 0xa7, 0x41, 0xa1, 0xaf,
  0x41, 0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d, 0xcd,
  0x8d, 0x06, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06,
  0xc4, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0xa4, 0x2d, 0xcd, 0x0d, 0xa5, 0x2d,
  0xcd, 0x0d, 0xc5, 0xce, 0x05, 0x8f, 0x05, 0xc4, 0xce, 0x25, 0x2f, 0x85,
  0x05, 0xa4, 0x2d, 0xcd, 0x0d, 0xc5, 0xce, 0x45, 0x8f, 0x05, 0xc4, 0xce,
  0xe5, 0x2e, 0x25, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xc1,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d, 0x0c, 0x8f, 0x06, 0x25, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0xc4, 0x2e, 0xa5, 0x41,
  0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e,
  0xce, 0x0d, 0xa4, 0x2d, 0x0c, 0x0f, 0xa5, 0x2d, 0x0c, 0x0f, 0xc5, 0xce,
  0x05, 0x8f, 0x05, 0xc4, 0xce, 0x25, 0x2f, 0x85, 0x05, 0xa4, 0x2d, 0x0c,
  0x0f, 0xc5, 0xce, 0x45, 0x8f, 0x05, 0xc4, 0xce, 0xe5, 0x2e, 0x25, 0x65,
  0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x4e,
  0x06, 0xe4, 0xa8, 0x8c, 0x4e, 0x86, 0x28, 0xaa, 0x2e, 0x8c, 0x2c, 0xc9,
  0x8d, 0xac, 0x0c, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0x25, 0xcd,
  0x0d, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0x24, 0x2d, 0xa5, 0x41, 0x61, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x64, 0xec, 0xcd, 0x6d, 0x8e, 0x0e, 0xa4,
  0x2e, 0xcd, 0x8d, 0x4e, 0x06, 0x24, 0xcd, 0x8d, 0xac, 0x0c, 0xef, 0xc9,
  0xcc, 0x6c, 0xae, 0x8c, 0x6e, 0x6e, 0x8b, 0xa6, 0x0b, 0xa4, 0x07, 0x64,
  0x0f, 0x64, 0x0f, 0x86, 0x05, 0x04, 0xa6, 0x8f, 0x05, 0x64, 0x2f, 0x86,
  0x05, 0x04, 0xa6, 0x8f, 0x05, 0x64, 0x0f, 0x86, 0x05, 0x24, 0xa6, 0x8f,
  0x05, 0x64, 0x2f, 0x86, 0x05, 0x24, 0xa6, 0x0f, 0xa4, 0x6f, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x24,
  0xcd, 0x8d, 0xac, 0x0c, 0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x6e, 0x6e,
  0x2b, 0xad, 0x6b, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e,
  0xcd, 0x8d, 0x0e, 0xe4, 0xa8, 0x8c, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0xef,
  0xc9, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x88, 0xed, 0x6d, 0xae, 0x6c,
  0x8e, 0x8e, 0xea, 0x8d, 0x0a, 0xad, 0x4c, 0xaa, 0xcc, 0xac, 0x4c, 0xae,
  0xcc, 0x6d, 0xac, 0x0c, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c,
  0x0e, 0x44, 0xae, 0xcc, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x8c, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xc4, 0xce, 0x2a,
  0x8c, 0xad, 0xae, 0x6c, 0x2e, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0xac, 0x8c,
  0x8d, 0x2e, 0x0c, 0xa4, 0x07, 0x24, 0x4c, 0x6c, 0x0e, 0x45, 0xae, 0xcc,
  0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x0c, 0xa4, 0x05, 0xc4, 0xce, 0x2a, 0x8c,
  0xad, 0xae, 0x6c, 0x2e, 0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e, 0xe4, 0xad, 0x8e, 0x2e, 0xc9, 0x8d,
  0xac, 0x0c, 0x0f, 0xa4, 0x07, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0x6c, 0x2b,
  0xa6, 0x0b, 0x84, 0x07, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0x6c, 0x0b, 0xa6,
  0x0b, 0xe4, 0x07, 0x24, 0x06, 0x44, 0x07, 0x04, 0x66, 0xa7, 0x41, 0xa1,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d,
  0xe4, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x6f, 0xa7, 0x41, 0xa1,
  0xaf, 0x41, 0xa1, 0x41, 0xa1, 0x2e, 0xcd, 0x8d, 0x0e, 0xe4, 0xa8, 0x8c,
  0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0xef, 0xc9, 0xcc, 0x2a, 0x8c, 0xad, 0xae,
  0x6c, 0x88, 0xed, 0x6d, 0xae, 0x6c, 0x8e, 0x8e, 0xea, 0x8d, 0x0a, 0xad,
  0x4c, 0xaa, 0xcc, 0xac, 0x4c, 0xae, 0xcc, 0x6d, 0xac, 0x0c, 0x25, 0xcd,
  0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0xae, 0xcc, 0xcc, 0x2a,
  0x8c, 0xad, 0xae, 0x8c, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x8e, 0x06, 0xc4, 0xce, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x2e, 0xa5,
  0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d,
  0x8c, 0x8e, 0x06, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0x0c, 0xa4, 0x07, 0x24,
  0x4c, 0x6c, 0x0e, 0x45, 0xae, 0xcc, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x0c,
  0xa4, 0x05, 0xc4, 0xce, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x2e, 0x65, 0xa7,
  0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0xa4, 0x2e, 0xcd, 0x8d, 0x0e,
  0xe4, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0xa4, 0x07, 0x84,
  0xac, 0x8c, 0x8d, 0x2e, 0x6c, 0x2b, 0xa6, 0x0b, 0x84, 0x07, 0x84, 0xac,
  0x8c, 0x8d, 0x2e, 0x6c, 0x0b, 0xa6, 0x0b, 0xe4, 0x07, 0x24, 0x06, 0x44,
  0x07, 0x04, 0x66, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xad, 0x8e,
  0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0xa4, 0x07, 0x84, 0xac, 0x8c, 0x8d,
  0x2e, 0x6c, 0x4b, 0xa6, 0x0b, 0x84, 0x07, 0x84, 0xac, 0x8c, 0x8d, 0x2e,
  0x6c, 0xeb, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0xaf, 0x0b, 0xe4,
  0x07, 0x44, 0x06, 0x44, 0x07, 0xe4, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac,
  0x0c, 0x6f, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xad, 0x8e, 0x2e,
  0xc9, 0x8d, 0xac, 0x0c, 0x0f, 0xa4, 0x07, 0x84, 0xac, 0x8c, 0x8d, 0x2e,
  0x6c, 0x6b, 0xa6, 0x0b, 0x84, 0x07, 0x84, 0xac, 0x8c, 0x8d, 0x2e, 0x6c,
  0xeb, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac, 0x0c, 0xaf, 0x0b, 0xe4, 0x07,
  0x64, 0x06, 0x44, 0x07, 0xe4, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac, 0x0c,
  0x6f, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c,
  0xae, 0x4e, 0xce, 0x0d, 0xe4, 0xad, 0x8e, 0x2e, 0xc9, 0x8d, 0xac, 0x0c,
  0x6f, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0xe1, 0xe5, 0x05, 0x44,
  0xaa, 0xac, 0x2d, 0x0c, 0x0e, 0x04, 0x2e, 0x4c, 0x8e, 0x2e, 0x2d, 0x8c,
  0x0d, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x84, 0xac, 0x4c, 0x2e, 0xcd,
  0x2e, 0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0x0e, 0x24, 0x8c, 0x0e, 0x44, 0x0f,
  0x06, 0xc4, 0x4c, 0xee, 0xad, 0x0d, 0x64, 0x2b, 0x86, 0x25, 0xa6, 0x0b,
  0x04, 0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c,
  0x0e, 0x84, 0xee, 0x0d, 0x24, 0x0c, 0xc4, 0xad, 0xec, 0x0e, 0x04, 0x2e,
  0x0d, 0xaf, 0x8c, 0x0d, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c, 0xce, 0xa5,
  0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x44, 0xaa, 0xac, 0x2d,
  0x0c, 0x8e, 0x88, 0x0c, 0x2f, 0x0f, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x44, 0x0f, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x0c, 0x2f, 0x8f, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04, 0x2e, 0x0d,
  0xaf, 0x8c, 0xed, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0xa5, 0x41, 0x61,
  0x0f, 0x04, 0x04, 0x04, 0xa4, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5,
  0x05, 0x04, 0xaa, 0x4c, 0x6e, 0x0e, 0xae, 0x6c, 0x8c, 0x2e, 0xcd, 0xae,
  0x0c, 0x64, 0xec, 0x4d, 0x4e, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x0d,
  0xc4, 0xec, 0x4d, 0x0e, 0xc4, 0xed, 0xcd, 0xad, 0x85, 0x2d, 0xcd, 0xad,
  0x2c, 0x4c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x24, 0xcd, 0x8d,
  0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0xcd, 0xa5,
  0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x44, 0xaa, 0xcc, 0x4c,
  0x07, 0x04, 0x8d, 0x8e, 0x0e, 0x6e, 0x4e, 0xe7, 0xe5, 0xe5, 0xee, 0xee,
  0xce, 0x65, 0x6e, 0x4c, 0x2e, 0x8c, 0x6e, 0x0c, 0x2d, 0x0c, 0x2e, 0x0d,
  0xaf, 0x8c, 0xcd, 0x65, 0xec, 0xad, 0xed, 0x85, 0xad, 0x6c, 0x6e, 0xee,
  0xcd, 0x6d, 0xee, 0x65, 0x86, 0xac, 0x45, 0x2c, 0x6c, 0x2e, 0x6d, 0xac,
  0x45, 0xae, 0xcc, 0x8d, 0xac, 0x4c, 0x2e, 0xcd, 0xed, 0xec, 0x45, 0x2e,
  0x6c, 0x8e, 0xae, 0x4c, 0x2e, 0x4d, 0x2f, 0x8c, 0x2e, 0xed, 0xcd, 0xad,
  0x05, 0x4e, 0x2e, 0x6c, 0x8c, 0x2e, 0x6d, 0x2c, 0x8c, 0xad, 0x25, 0xad,
  0x0d, 0x8e, 0xad, 0xac, 0xad, 0xcc, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd,
  0xed, 0xc5, 0x2e, 0x6d, 0x2e, 0x4d, 0x2c, 0x8d, 0x2d, 0x8d, 0x2e, 0xaf,
  0x05, 0x4e, 0xee, 0x4d, 0x8c, 0xad, 0xac, 0xad, 0x85, 0xac, 0x0c, 0x8e,
  0x0e, 0xad, 0x45, 0xac, 0xce, 0xcc, 0xac, 0x4c, 0xae, 0x85, 0xac, 0x0c,
  0x8e, 0x0e, 0xad, 0x25, 0xcd, 0x8d, 0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d,
  0x8c, 0x2e, 0xed, 0xcd, 0xad, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5,
  0x05, 0xe4, 0x28, 0xcd, 0xae, 0xcc, 0x0d, 0x24, 0x0c, 0x84, 0x2d, 0xcd,
  0xad, 0x2c, 0x4c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x24, 0xcd,
  0x8d, 0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d, 0x8c, 0x2e, 0xed, 0xcd, 0x0d,
  0xc4, 0xec, 0x4d, 0x0e, 0xc4, 0x2c, 0xcd, 0x8d, 0x2c, 0xcd, 0xed, 0x0c,
  0x44, 0x0f, 0x24, 0x8c, 0x0e, 0xe4, 0xcd, 0xcc, 0x6c, 0xae, 0x8c, 0x0e,
  0x24, 0x0e, 0x24, 0x8c, 0xed, 0xcd, 0xed, 0x0c, 0x44, 0x0f, 0x06, 0x84,
  0xee, 0x0d, 0x44, 0x2f, 0xa6, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5,
  0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x0f, 0xa4, 0x07, 0x04, 0x24,
  0x06, 0xe4, 0x05, 0x04, 0x25, 0x06, 0xe4, 0x05, 0x44, 0x0f, 0x06, 0x44,
  0x05, 0x04, 0x25, 0x06, 0xa4, 0x05, 0x24, 0x2e, 0x05, 0x64, 0x05, 0x24,
  0x06, 0xe4, 0x05, 0x44, 0x2f, 0x06, 0x44, 0x05, 0x24, 0x2e, 0xa5, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x24, 0xcc, 0x8d, 0x0c, 0x44,
  0x2f, 0x06, 0xa4, 0x07, 0x44, 0x0f, 0x06, 0x64, 0x05, 0x84, 0x8c, 0x0c,
  0x2f, 0x8f, 0x05, 0xe4, 0x0e, 0xad, 0x4c, 0xae, 0x0c, 0x44, 0x2f, 0x06,
  0x24, 0x6d, 0x0e, 0x24, 0x8c, 0x0e, 0x24, 0x0c, 0xa4, 0xce, 0x2d, 0x8d,
  0x0e, 0x04, 0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0xe4, 0xcd, 0xcc, 0x6c, 0xae,
  0x8c, 0x0e, 0x64, 0x2b, 0x86, 0x05, 0x24, 0xa6, 0xab, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0x44, 0x0f, 0x64, 0x2c, 0xcc, 0x0d, 0x44,
  0xac, 0x0c, 0x64, 0x2c, 0x8c, 0x6d, 0xac, 0x8e, 0x2d, 0x8c, 0xae, 0x8c,
  0x0c, 0xc4, 0x2e, 0x2d, 0x0c, 0x84, 0x8c, 0x0c, 0x2f, 0x0f, 0x24, 0x6c,
  0xae, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0xa5, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xe4, 0xe5, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x0f,
  0xa4, 0x07, 0x04, 0x45, 0x0f, 0x06, 0x64, 0x05, 0x84, 0x8c, 0x0c, 0x2f,
  0x2f, 0x05, 0xe4, 0x05, 0x04, 0x25, 0x06, 0x64, 0x05, 0x04, 0x25, 0xa6,
  0x25, 0x2e, 0x05, 0xe4, 0x05, 0x44, 0x0f, 0x06, 0x44, 0x05, 0x84, 0x8c,
  0x0c, 0x2f, 0x2f, 0x05, 0xa4, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x44, 0x0f, 0xa4, 0x07, 0x04, 0x45, 0x0f,
  0x06, 0x64, 0x05, 0x84, 0x8c, 0x0c, 0x2f, 0x2f, 0x05, 0xe4, 0x05, 0x04,
  0x25, 0x06, 0x64, 0x05, 0x04, 0x05, 0x25, 0x06, 0xa4, 0x05, 0x04, 0x2e,
  0x0d, 0xaf, 0x8c, 0xed, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x05, 0xe4,
  0x05, 0x44, 0x0f, 0x26, 0x05, 0x44, 0x05, 0x84, 0x8c, 0x0c, 0x2f, 0x2f,
  0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e,
  0xce, 0x0d, 0x64, 0x2e, 0xed, 0xcc, 0x0d, 0x05, 0x2e, 0x0d, 0xaf, 0x8c,
  0xed, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x05, 0x44, 0x05, 0x04, 0x45,
  0x0f, 0xa4, 0x05, 0x44, 0x0f, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41,
  0xa1, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xe4, 0xa8, 0x8c, 0x8e,
  0xa8, 0x0c, 0x8e, 0x0e, 0x2d, 0x88, 0x0e, 0x2a, 0x0d, 0xaf, 0x8c, 0xed,
  0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x0e, 0x25, 0xcd, 0x0d, 0xc4, 0x8c, 0xed,
  0x2d, 0x8c, 0x0e, 0x44, 0x0f, 0x86, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x0c, 0x2f, 0x8f, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x04, 0x2e, 0x0d,
  0xaf, 0x8c, 0xed, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0xa5, 0x41, 0x61,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0xc4, 0xad, 0xec, 0x8e, 0x88, 0x0c, 0x2f, 0x0f, 0xa4, 0x07, 0x44,
  0xaa, 0xac, 0x2d, 0x0c, 0x8e, 0x88, 0x0c, 0x2f, 0x0f, 0x45, 0x0f, 0x86,
  0x05, 0x84, 0x8c, 0x0c, 0x2f, 0x8f, 0x05, 0x04, 0x2e, 0x0d, 0xaf, 0x8c,
  0xed, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x2e, 0x65, 0xa7, 0x41, 0x01, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x44, 0x0f, 0x06,
  0x64, 0x05, 0x84, 0xec, 0x8d, 0x0e, 0x25, 0x86, 0x05, 0xc4, 0xad, 0xec,
  0x8e, 0x88, 0x0c, 0x2f, 0x2f, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0x44, 0xaa, 0x8c, 0xae, 0x4e, 0xce, 0x6d, 0x0e,
  0x24, 0xcc, 0x0d, 0x24, 0x0c, 0x0e, 0x4e, 0xee, 0x0d, 0x2f, 0xad, 0x2d,
  0x8c, 0xae, 0x0c, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c, 0xac, 0x0c, 0x84,
  0x2c, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d, 0x0e, 0x64, 0xec,
  0xcd, 0xae, 0x4c, 0xae, 0x8c, 0x0c, 0x24, 0xcd, 0x0d, 0x24, 0x0c, 0x04,
  0x2e, 0x0d, 0xaf, 0x8c, 0xcd, 0x05, 0xa4, 0x41, 0xe1, 0xe5, 0x05, 0x84,
  0x0a, 0x2d, 0x6d, 0x0e, 0x24, 0x6d, 0x0e, 0x24, 0x0c, 0x64, 0x2e, 0xad,
  0x0d, 0x8e, 0x2d, 0xcd, 0x2c, 0xad, 0x8c, 0x0c, 0xa4, 0xed, 0x8d, 0xac,
  0x8c, 0x0d, 0x24, 0x6c, 0x6e, 0xae, 0xae, 0x2d, 0xcd, 0xed, 0x0c, 0x04,
  0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0x84, 0xee, 0x0d, 0x04, 0x2e, 0x0d, 0xaf,
  0x8c, 0x0d, 0xc4, 0x2e, 0xad, 0xec, 0x0e, 0x24, 0xcc, 0xed, 0x8c, 0xad,
  0x6c, 0x0e, 0x24, 0x4c, 0xae, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0x2e,
  0xac, 0xad, 0xcc, 0xa5, 0x41, 0xe1, 0xe5, 0x05, 0x44, 0x0f, 0xa4, 0x05,
  0x84, 0x2d, 0xcd, 0xad, 0x2c, 0x4c, 0x0e, 0x84, 0xac, 0x0c, 0x8e, 0x0e,
  0x0d, 0xe4, 0xcd, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0xae, 0x4e, 0xce,
  0x2c, 0x6c, 0xac, 0x0c, 0x24, 0x8c, 0x0e, 0x84, 0x0e, 0xad, 0x0c, 0x04,
  0x2e, 0x0d, 0xaf, 0x8c, 0xad, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x8c, 0x0c,
  0x2f, 0x0f, 0xa4, 0x05, 0x04, 0x2e, 0x4c, 0x8e, 0x2e, 0x2d, 0x8c, 0x0d,
  0x84, 0xac, 0x0c, 0x8e, 0x0e, 0x0d, 0x84, 0xac, 0x4c, 0x2e, 0xcd, 0x2e,
  0x8c, 0x2e, 0xcd, 0xae, 0x6c, 0xae, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0x2e,
  0xcc, 0xed, 0x2b, 0x0c, 0xa4, 0x05, 0x84, 0x2e, 0xcc, 0xed, 0xac, 0xcc,
  0x8d, 0x0e, 0xe4, 0xcd, 0x0c, 0x24, 0x0c, 0x04, 0xae, 0x4c, 0x0e, 0x04,
  0x2e, 0x0d, 0xaf, 0x8c, 0x0d, 0xc4, 0x2e, 0xad, 0xec, 0x0e, 0x24, 0xcc,
  0xed, 0x8c, 0xad, 0x0c, 0xa4, 0x41, 0xc1, 0x8c, 0xed, 0x2d, 0x8c, 0x4e,
  0x06, 0x24, 0x08, 0x0e, 0x4e, 0xee, 0x0d, 0x2f, 0xad, 0x2d, 0x8c, 0xae,
  0x0c, 0x4a, 0xee, 0x4d, 0xad, 0x6c, 0x8c, 0xae, 0x8c, 0x6c, 0xaa, 0x4e,
  0xce, 0x2c, 0x6c, 0xac, 0x8c, 0x28, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed,
  0xcd, 0x6d, 0x0e, 0xaa, 0x4c, 0x0e, 0x2a, 0x0d, 0xaf, 0x8c, 0x0d, 0x25,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x44, 0x8f, 0x05, 0x24,
  0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x8c, 0x0c,
  0x2f, 0x8f, 0x05, 0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e,
  0x84, 0x2e, 0xcc, 0xed, 0x2b, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05, 0x64, 0xaa, 0x4e, 0xce, 0x2c, 0x6c,
  0xac, 0x0c, 0x84, 0x2c, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d,
  0x0e, 0xc4, 0xec, 0x4d, 0x0e, 0x24, 0x0c, 0x64, 0xae, 0x4e, 0xce, 0x2c,
  0x6c, 0xac, 0x0c, 0x04, 0x2e, 0x4c, 0x2e, 0x8c, 0x8d, 0xad, 0x8c, 0x0d,
  0x24, 0x8c, 0x0e, 0x44, 0xcf, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x4e, 0x06, 0x84, 0x0c, 0x0f, 0xa4, 0x07, 0x84,
  0x2e, 0xcc, 0xed, 0x2b, 0x0c, 0x44, 0x05, 0x44, 0x6f, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0xa4, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xe5, 0x05,
  0xa4, 0x6a, 0x2e, 0xcd, 0xed, 0x0c, 0x04, 0x2a, 0x8f, 0x0e, 0x2d, 0xec,
  0xec, 0x4d, 0xae, 0x2c, 0xcc, 0x0d, 0x84, 0x0e, 0xad, 0xec, 0x4d, 0xae,
  0xac, 0x0d, 0x24, 0x0c, 0x0e, 0x4e, 0xee, 0x0d, 0x2f, 0xad, 0x2d, 0x8c,
  0xae, 0x0c, 0x84, 0x0e, 0xad, 0x0c, 0x64, 0xae, 0x4e, 0xce, 0x2c, 0x6c,
  0xac, 0x0c, 0x84, 0x2c, 0xad, 0xad, 0xcc, 0x6d, 0x2e, 0xed, 0xcd, 0x6d,
  0x0e, 0xe4, 0x2c, 0xcd, 0xae, 0xcc, 0x0d, 0x84, 0x0e, 0xad, 0x0c, 0x84,
  0x8c, 0x0c, 0x2f, 0xcf, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x4e, 0x06, 0xe4, 0x0e, 0xa4, 0x07, 0x64, 0x2e, 0x4e,
  0x8e, 0x0e, 0x85, 0x0c, 0x0f, 0x44, 0x05, 0x84, 0x0c, 0x0f, 0x64, 0x05,
  0x84, 0x8c, 0x0c, 0x2f, 0x0f, 0x44, 0x05, 0x84, 0x8c, 0x0c, 0x2f, 0x2f,
  0x65, 0xa7, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44, 0xae, 0x8c,
  0xae, 0x4e, 0xce, 0x0d, 0xe4, 0x6e, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1,
  0x41, 0xe1, 0xe5, 0x05, 0xa4, 0xc8, 0x6d, 0xae, 0x4e, 0xae, 0x0c, 0xe4,
  0xcd, 0x8d, 0x2d, 0x0f, 0xc4, 0x2e, 0x8c, 0x2d, 0x8d, 0x0c, 0x64, 0x2e,
  0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x0e, 0x24, 0x4c, 0xae, 0x0c, 0x24, 0xcd,
  0x8d, 0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d, 0x8c, 0xae, 0x8c, 0xcc, 0x05,
  0xa4, 0x41, 0xe1, 0xe5, 0x05, 0x84, 0xa8, 0xcc, 0x2c, 0xac, 0x8e, 0x8d,
  0x6e, 0x0e, 0x84, 0xee, 0x0d, 0x24, 0xcc, 0x0d, 0x24, 0xcc, 0xae, 0x4c,
  0x2e, 0xec, 0xac, 0x0c, 0xe4, 0x4d, 0x0e, 0x24, 0xcc, 0x0d, 0x24, 0xcd,
  0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0x0c, 0xc4, 0x2e, 0x8c, 0xad, 0xae, 0x0c,
  0x24, 0xcd, 0x0c, 0xc4, 0xed, 0xcd, 0xad, 0x0c, 0x24, 0x4c, 0xae, 0x0c,
  0xc4, 0x2e, 0x8c, 0x2d, 0x8d, 0xcc, 0xa5, 0x41, 0xc1, 0x8c, 0xed, 0x2d,
  0x8c, 0x0e, 0x24, 0xc9, 0x8d, 0xae, 0x4c, 0x0e, 0xee, 0x8d, 0x2d, 0x8c,
  0xae, 0xcc, 0x2a, 0x8c, 0x2d, 0x8d, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x6c,
  0x0e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x8e, 0x06, 0xe4, 0xae, 0x2c, 0xed, 0x0c, 0x8d, 0x6e,
  0x8e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4, 0x8c,
  0xed, 0x2d, 0x8c, 0x8e, 0x06, 0x64, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0xcc,
  0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x8e, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04,
  0x24, 0xcd, 0x0d, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xa4, 0x2d, 0xcd,
  0xed, 0xaa, 0x2c, 0xed, 0x0c, 0x8d, 0x0e, 0xa4, 0x07, 0x24, 0xa6, 0xac,
  0xc5, 0x86, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0d, 0xc4,
  0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0x24, 0xcd, 0xcd, 0x2e, 0x8c, 0x2d, 0x8d,
  0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x0c, 0xa4, 0x07, 0x44, 0x8a, 0x2a, 0xe8,
  0x49, 0x47, 0x27, 0xc9, 0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0x2c, 0xe8, 0x69,
  0xe8, 0xad, 0xcc, 0xcc, 0x2c, 0x6d, 0x2c, 0xad, 0xcc, 0x8d, 0xce, 0x2a,
  0x8c, 0xad, 0xae, 0x2c, 0xa5, 0x41, 0x61, 0xaf, 0x41, 0x01, 0x04, 0x04,
  0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x8e, 0x06, 0xc4, 0x2e, 0x8c, 0x2d,
  0x8d, 0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x0e, 0xa4, 0x07, 0x64,
  0x2a, 0xac, 0x0d, 0x8e, 0xad, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x0e,
  0x24, 0xa4, 0x07, 0x24, 0xcd, 0xcd, 0x2e, 0x8c, 0x2d, 0x8d, 0xcc, 0x2a,
  0x8c, 0xad, 0xae, 0x6c, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0xe4, 0xae,
  0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x0e, 0x44, 0xa5, 0x07, 0xc4, 0x2e, 0x8c,
  0x2d, 0x8d, 0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x6e, 0xa7, 0x41,
  0x01, 0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xe4, 0xae,
  0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0xaa, 0xae, 0x0d, 0xa4, 0x07, 0x84, 0xec,
  0x8d, 0x0e, 0xe5, 0xae, 0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x8e, 0x05, 0x24,
  0x26, 0x65, 0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x24, 0xcd, 0x0c, 0x04,
  0xe5, 0xae, 0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0xaa, 0xae, 0x0d, 0x84, 0x07,
  0xa4, 0x2d, 0xcd, 0xed, 0xaa, 0x2c, 0xed, 0x0c, 0x8d, 0x2e, 0xa5, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x64, 0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x0e, 0xc4, 0xad, 0xae,
  0xcd, 0x2a, 0x8c, 0x2d, 0x8d, 0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c,
  0x0e, 0xa4, 0x07, 0x84, 0xec, 0x8d, 0x0e, 0xc5, 0x2e, 0x8c, 0x2d, 0x8d,
  0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x8e, 0x05, 0x24, 0x26, 0x65,
  0xa7, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x24, 0xcd,
  0x0c, 0x04, 0xc5, 0xad, 0xae, 0xcd, 0x2a, 0x8c, 0x2d, 0x8d, 0x6c, 0x2a,
  0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x0e, 0xc4, 0x07, 0x24, 0xa6, 0xac, 0xc5,
  0x26, 0xa5, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64,
  0xaf, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0xec, 0x8d,
  0x0e, 0xc5, 0x2e, 0x8c, 0x2d, 0x8d, 0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad,
  0x6c, 0x8e, 0x05, 0x64, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0xcc, 0x2a, 0x8c,
  0xad, 0xae, 0x6c, 0x2e, 0x05, 0xe4, 0x05, 0xc4, 0xad, 0xae, 0xcd, 0x2a,
  0x8c, 0x2d, 0x8d, 0x6c, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x6c, 0x6e, 0xa7,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41,
  0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0x8c, 0x6d, 0xae,
  0xac, 0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x64, 0xaf,
  0x41, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x44, 0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x24, 0xcd, 0xcd, 0x2e,
  0x8c, 0x2d, 0x8d, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0xa7, 0x41, 0x01,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xa4, 0xaf, 0x41, 0x01, 0x04,
  0x04, 0x04, 0xa4, 0xaf, 0x41, 0xa1, 0x41, 0x01, 0x04, 0x04, 0x04, 0x44,
  0xae, 0x8c, 0xae, 0x4e, 0xce, 0x0d, 0x84, 0xec, 0x8d, 0x0e, 0xe5, 0xae,
  0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x8e, 0x05, 0x64, 0x2a, 0xac, 0x0d, 0x8e,
  0xad, 0xcc, 0x2a, 0x8c, 0xad, 0xae, 0x6c, 0x2e, 0x05, 0xe4, 0x05, 0x84,
  0xec, 0x8d, 0x0e, 0xe5, 0xae, 0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x8e, 0x05,
  0x24, 0x26, 0x65, 0xa7, 0x41, 0xa1, 0xaf, 0x41, 0xa1, 0x41, 0x61, 0xa4,
  0xcc, 0x8d, 0x2c, 0xcd, 0x0c, 0xe4, 0xe5, 0x05, 0x44, 0x2a, 0x28, 0x8b,
  0x4a, 0x2a, 0x68, 0x28, 0xc9, 0xe9, 0x68, 0x0a, 0x29, 0x88, 0xa8, 0x48,
  0x0a, 0xa9, 0x88, 0x09, 0xaa, 0x48, 0xea, 0x0b, 0xa9, 0x41, 0x61, 0x83,
  0xa0, 0x2a, 0xab, 0xb2, 0x21, 0x08, 0x28, 0xb4, 0x14, 0x51, 0x68, 0xa1,
  0xa2, 0x31, 0x36, 0xf7, 0x65, 0xf3, 0x35, 0x43, 0xe1, 0x25, 0x89, 0x23,
  0x31, 0xa4, 0xc3, 0x55, 0x35, 0x57, 0x26, 0x37, 0xc7, 0x55, 0x37, 0x57,
  0x26, 0xc7, 0x45, 0x54, 0x36, 0xb7, 0x46, 0xf7, 0x06, 0xc7, 0x45, 0x94,
  0x26, 0x57, 0x36, 0x46, 0x87, 0xd5, 0x72, 0x24, 0x17, 0x06, 0x87, 0x96,
  0x36, 0x36, 0xd7, 0x32, 0x15, 0xd6, 0x06, 0xc7, 0x56, 0x36, 0xc7, 0x35,
  0x15, 0xd6, 0x06, 0xc7, 0x56, 0x36, 0xc7, 0x45, 0x54, 0x36, 0xb7, 0x46,
  0xf7, 0x06, 0xc7, 0x45, 0x34, 0x43, 0x14, 0x23, 0x23, 0x15, 0x96, 0x47,
  0x27, 0x17, 0x36, 0x96, 0xe6, 0x76, 0xc6, 0x35, 0x27, 0x37, 0xc6, 0x45,
  0x34, 0x43, 0x14, 0x23, 0x23, 0x15, 0x96, 0x47, 0x27, 0x17, 0x36, 0x96,
  0xe6, 0x76, 0x26, 0x55, 0x16, 0xc6, 0x46, 0x95, 0xd6, 0x56, 0x46, 0x54,
  0xe6, 0xf6, 0x96, 0x36, 0x57, 0x46, 0x16, 0xd4, 0x26, 0x96, 0x56, 0xe6,
  0x46, 0xf7, 0x34, 0x36, 0xc6, 0x56, 0x37, 0x97, 0xf6, 0xe6, 0xc6, 0x45,
  0x46, 0x8a, 0x2a, 0xe8, 0xe9, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0x6e,
  0x8e, 0xd2, 0x54, 0x58, 0x1b, 0x1c, 0x5b, 0xd9, 0xd0, 0x9b, 0x5c, 0xd9,
  0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0xdc, 0x1c, 0xaf, 0xa9, 0xb0, 0x36,
  0x38, 0xb6, 0xb2, 0xa1, 0x37, 0xb9, 0xb2, 0x97, 0x39, 0xb4, 0x30, 0xb2,
  0x32, 0xb9, 0xb9, 0x97, 0x3a, 0xba, 0x34, 0x36, 0x0e, 0x2f, 0x4f, 0x64,
  0x1c, 0x5e, 0xb4, 0xd2, 0xd8, 0xb4, 0x44, 0x95, 0xb5, 0x89, 0x95, 0x91,
  0x7d, 0x91, 0x95, 0x89, 0xd5, 0x9d, 0x6d, 0x88, 0x5c, 0xe5, 0x7b, 0x15,
  0x58, 0x89, 0x15, 0x59, 0x89, 0x15, 0x59, 0x89, 0x95, 0x59, 0x89, 0x15,
  0x5a, 0x89, 0x95, 0x5a, 0xb1, 0x95, 0x5b, 0xc1, 0x95, 0x09, 0x02, 0x20,
  0x6d, 0x10, 0x74, 0xa5, 0x9a, 0x20, 0x00, 0xd3, 0x06, 0x41, 0x57, 0x78,
  0x85, 0xc2, 0xd8, 0xdc, 0x86, 0xc1, 0x57, 0x78, 0xa5, 0x9a, 0x20, 0x00,
  0xd4, 0x04, 0x81, 0x0d, 0xc4, 0x60, 0x82, 0x00, 0x54, 0x1b, 0x04, 0x70,
  0x11, 0x97, 0x0d, 0x09, 0xb8, 0x84, 0x4b, 0x6f, 0x80, 0x0b, 0xb8, 0xe8,
  0x8a, 0x19, 0x80, 0xcb, 0xb8, 0x4c, 0x10, 0xe0, 0x60, 0x0c, 0x26, 0x08,
  0x80, 0xb5, 0x41, 0x00, 0x17, 0x73, 0xd9, 0x90, 0xe8, 0x4a, 0xb9, 0x8c,
  0x07, 0xb8, 0xe8, 0x8a, 0xae, 0x98, 0x01, 0xb8, 0x9c, 0xcb, 0x04, 0x81,
  0x0e, 0xce, 0x60, 0x82, 0x00, 0x5c, 0x13, 0x04, 0x00, 0xdb, 0x20, 0xe8,
  0xca, 0xba, 0x6c, 0x48, 0xcc, 0x20, 0x5d, 0x58, 0x04, 0x5c, 0x2a, 0x5d,
  0x51, 0x17, 0x70, 0x61, 0x97, 0x0d, 0x03, 0xb9, 0xa0, 0x4b, 0xbb, 0x4c,
  0x10, 0xec, 0x00, 0x0d, 0x26, 0x08, 0x67, 0xf0, 0x6d, 0x58, 0xc0, 0xe5,
  0x5d, 0xd4, 0x03, 0x5c, 0xc0, 0x45, 0x57, 0xcc, 0x00, 0x5e, 0xe0, 0x05,
  0x5e, 0xc6, 0x65, 0x43, 0x10, 0x2f, 0x13, 0x04, 0x3d, 0x58, 0x83, 0x09,
  0x02, 0x90, 0x6d, 0x40, 0xc0, 0x65, 0x5e, 0xde, 0x03, 0x5c, 0xc0, 0x45,
  0x57, 0xe8, 0x05, 0xd8, 0x10, 0xd4, 0xcb, 0x06, 0xc2, 0x5d, 0xe4, 0xc5,
  0x5e, 0x80, 0x09, 0x02, 0x1e, 0xa4, 0xc1, 0x04, 0x01, 0xd0, 0x36, 0x18,
  0xbc, 0x32, 0x1f, 0x15, 0xb8, 0xe4, 0x8b, 0xb8, 0x4c, 0x10, 0x80, 0x6d,
  0x83, 0xc1, 0x2b, 0xf7, 0x51, 0xed, 0x4b, 0xbe, 0xa8, 0xc6, 0x06, 0x83,
  0x57, 0xf6, 0xa3, 0x52, 0x97, 0x7c, 0x51, 0x8d, 0x0d, 0x06, 0xaf, 0xf4,
  0x47, 0xb5, 0x2e, 0xf9, 0x22, 0x2e, 0x13, 0x04, 0x80, 0xdb, 0x60, 0xf0,
  0xca, 0x7f, 0x54, 0xff, 0x92, 0x2f, 0xe2, 0x32, 0x41, 0x00, 0xba, 0x0d,
  0x06, 0xaf, 0x84, 0x48, 0x15, 0x32, 0xf9, 0x22, 0x2e, 0x13, 0x04, 0xc0,
  0xdb, 0x60, 0xf0, 0xca, 0x88, 0x54, 0x23, 0x93, 0x2f, 0xe2, 0xb2, 0x01,
  0xa1, 0x17, 0x7d, 0xe1, 0x97, 0x7e, 0xf1, 0x17, 0x90, 0x11, 0x19, 0x92,
  0x99, 0x20, 0xcc, 0x81, 0x19, 0x30, 0x40, 0xdb, 0x40, 0xf0, 0xca, 0xc9,
  0x54, 0xe0, 0xb2, 0x41, 0x58, 0x17, 0x94, 0x99, 0x20, 0xc8, 0x41, 0x19,
  0x6c, 0x30, 0x78, 0xe5, 0x45, 0x2a, 0x70, 0xc9, 0x17, 0x73, 0xd9, 0x60,
  0xf0, 0xca, 0x8c, 0x54, 0xea, 0x92, 0x2f, 0xe2, 0xb2, 0x61, 0x58, 0x97,
  0x95, 0x61, 0x99, 0x09, 0x42, 0x1e, 0xa8, 0xc1, 0x06, 0x82, 0x57, 0xde,
  0xa3, 0x02, 0x97, 0x0d, 0x02, 0xbd, 0xbc, 0xcc, 0x86, 0x04, 0x5c, 0xf0,
  0xa5, 0x64, 0x4c, 0x26, 0x65, 0x54, 0xa6, 0x65, 0x5c, 0x06, 0x66, 0x36,
  0x0c, 0xe0, 0x42, 0x10, 0x1b, 0x02, 0x99, 0xd9, 0x30, 0xe8, 0x4a, 0x1b,
  0xcc, 0xcc, 0x04, 0xe1, 0x00, 0x83, 0x0d, 0xc3, 0xbe, 0xec, 0x8b, 0xae,
  0x6c, 0x20, 0xc0, 0xa5, 0x66, 0x54, 0xc3, 0x66, 0x36, 0x14, 0x6d, 0xf0,
  0x01, 0xf7, 0x72, 0x33, 0xb3, 0x8a, 0xc0, 0x0d, 0x84, 0x3a, 0x48, 0x66,
  0x15, 0x41, 0xce, 0x08, 0x76, 0x50, 0xf4, 0x1d, 0x60, 0xe4, 0x0c, 0x40,
  0x82, 0x88, 0x2a, 0x8d, 0x6c, 0x5c, 0x02, 0x84, 0x88, 0x1b, 0xf0, 0x8c,
  0x40, 0x06, 0x6a, 0x10, 0x00, 0xeb, 0x08, 0xa0, 0x27, 0x00, 0x30, 0x58,
  0x47, 0x00, 0x3d, 0x01, 0x06, 0x60, 0xc0, 0x85, 0x88, 0x2a, 0x8d, 0xcc,
  0xa8, 0x8e, 0x8d, 0x4d, 0xaa, 0x6c, 0x6e, 0x5c, 0x02, 0x80, 0x88, 0x1b,
  0x80, 0x8d, 0x60, 0x06, 0x6a, 0x00, 0x00, 0xb3, 0x8a, 0xc0, 0x0d, 0x04,
  0x34, 0x48, 0x66, 0x15, 0x81, 0xd8, 0x08, 0x69, 0x50, 0x50, 0x81, 0x4b,
  0xc3, 0x2b, 0x63, 0x9b, 0xa2, 0x2b, 0x83, 0xc3, 0x1a, 0x97, 0x00, 0x20,
  0x32, 0x36, 0x64, 0x23, 0xa8, 0x81, 0x4f, 0x00, 0xc0, 0xba, 0x00, 0x20,
  0x93, 0x36, 0x57, 0x64, 0x57, 0xe6, 0x06, 0x95, 0x86, 0x57, 0xc6, 0x96,
  0x45, 0x42, 0xec, 0xed, 0x8d, 0x6d, 0x8f, 0x01, 0x90, 0x01, 0xda, 0x80,
  0x01, 0x18, 0x08, 0xe3, 0x12, 0x00, 0x44, 0xc6, 0xe6, 0x6c, 0x84, 0x35,
  0x48, 0x1b, 0x00, 0x20, 0x03, 0x97, 0x86, 0x57, 0xc6, 0xf6, 0x64, 0x66,
  0x36, 0x57, 0x46, 0x87, 0x35, 0x2e, 0x01, 0x40, 0x64, 0x6c, 0xd6, 0x46,
  0x60, 0x03, 0x9f, 0x00, 0x00, 0x06, 0x72, 0xe3, 0x12, 0x20, 0x44, 0x4c,
  0xa1, 0x6d, 0xe0, 0x80, 0x5d, 0xba, 0x00, 0x68, 0x39, 0x28, 0x68, 0x03,
  0xa0, 0xf1, 0xa6, 0x00, 0x0f, 0xde, 0xa6, 0xd9, 0x26, 0x64, 0x0f, 0xe0,
  0xa6, 0x57, 0xe6, 0x01, 0x14, 0xe2, 0x86, 0x52, 0x99, 0xdb, 0xd8, 0x1b,
  0x59, 0x19, 0x99, 0xd3, 0x9b, 0x5c, 0x5b, 0x18, 0x1b, 0x51, 0x19, 0x1c,
  0x1d, 0xda, 0xb8, 0x04, 0x08, 0x91, 0x3c, 0x98, 0x1b, 0x38, 0xb0, 0x9b,
  0x2e, 0x00, 0xb8, 0xc1, 0x85, 0x8d, 0xad, 0x95, 0x91, 0x15, 0xb9, 0x8d,
  0xbd, 0x91, 0x95, 0x91, 0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0x05, 0xb9,
  0x91, 0x11, 0x95, 0xc1, 0xd1, 0xa1, 0x8d, 0x4b, 0x80, 0x10, 0xe1, 0x83,
  0xba, 0x81, 0x03, 0xb5, 0xe9, 0x02, 0x80, 0x83, 0xdc, 0x99, 0xd8, 0xb8,
  0x04, 0x08, 0x91, 0x50, 0xb8, 0x1b, 0x38, 0x48, 0x99, 0x2e, 0x00, 0xc6,
  0x25, 0x00, 0x88, 0x84, 0x42, 0xdb, 0xc0, 0xc1, 0xca, 0x24, 0x00, 0xd0,
  0x2c, 0xf3, 0x00, 0x0a, 0x71, 0xc3, 0xe0, 0x6c, 0x5c, 0x02, 0x80, 0x48,
  0x28, 0xec, 0x0d, 0x1c, 0xb0, 0x4c, 0x02, 0x00, 0x0c, 0xc4, 0xc6, 0x25,
  0x00, 0x88, 0x84, 0x42, 0xdf, 0xc0, 0x41, 0xcb, 0x24, 0x00, 0x30, 0x2e,
  0x01, 0x40, 0x84, 0x0f, 0xe6, 0x06, 0x0e, 0xd8, 0x26, 0x03, 0x80, 0x75,
  0x04, 0xd0, 0x13, 0xa0, 0x00, 0x06, 0x0c, 0xcc, 0xc6, 0x25, 0x40, 0x88,
  0xcc, 0x42, 0xe8, 0xc0, 0x01, 0xae, 0xc0, 0x42, 0x00, 0x74, 0xdb, 0x38,
  0xec, 0x01, 0xdc, 0x30, 0x70, 0x1b, 0x97, 0x00, 0x20, 0x32, 0x0b, 0xa4,
  0x03, 0x07, 0xbd, 0x92, 0x01, 0x00, 0x03, 0xba, 0x71, 0x09, 0x00, 0x22,
  0xb3, 0x60, 0x3a, 0x70, 0xe0, 0x2b, 0x09, 0x00, 0xd0, 0x70, 0x7b, 0x93,
  0x6b, 0x0b, 0x63, 0x1b, 0x97, 0x00, 0x21, 0xc2, 0x07, 0xa8, 0x03, 0x07,
  0x6a, 0x93, 0x09, 0xc0, 0xb8, 0x04, 0x08, 0x91, 0x3c, 0x40, 0x1d, 0x38,
  0xb0, 0x9b, 0x4c, 0x00, 0xd8, 0xcc, 0xd5, 0xc9, 0x99, 0x85, 0x8d, 0x95,
  0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0x8d, 0x4b, 0x00, 0x10, 0x71, 0x83,
  0xd5, 0x11, 0xe0, 0x20, 0x03, 0x00, 0x16, 0x64, 0x65, 0x70, 0x74, 0x68,
  0xe3, 0x12, 0x20, 0x44, 0xf8, 0xa0, 0x75, 0xe0, 0x40, 0x6d, 0x92, 0x01,
  0x18, 0x97, 0x00, 0x21, 0x92, 0x07, 0xad, 0x03, 0x07, 0x76, 0x93, 0x0c,
  0x00, 0x1d, 0xb9, 0xb0, 0xbc, 0x27, 0xb9, 0xb4, 0xb3, 0x34, 0x37, 0xa2,
  0x32, 0x38, 0x3a, 0xb4, 0x71, 0x09, 0x00, 0x22, 0x6e, 0x00, 0x3b, 0x42,
  0x1c, 0x24, 0x00, 0x30, 0x41, 0x88, 0x03, 0x32, 0x20, 0x23, 0x17, 0x96,
  0x47, 0x94, 0x26, 0x57, 0x36, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x2e, 0x01,
  0x40, 0xc4, 0x0d, 0x66, 0x47, 0xa0, 0x83, 0x0c, 0x00, 0xc6, 0x25, 0x40,
  0x88, 0xe8, 0xc2, 0x7c, 0xd4, 0x02, 0xa4, 0x06, 0x03, 0x40, 0x4a, 0x2e,
  0x2c, 0x6f, 0x2a, 0xac, 0x0d, 0x8e, 0xad, 0x2c, 0xc9, 0x8d, 0xac, 0x0c,
  0xef, 0xc9, 0xcc, 0x6c, 0xae, 0x8c, 0x6e, 0x5c, 0x02, 0x84, 0x88, 0x2e,
  0xd8, 0x4e, 0x2d, 0x40, 0x1d, 0x01, 0x8c, 0x4b, 0x80, 0x10, 0xd1, 0x85,
  0xd5, 0xa9, 0x05, 0x28, 0x13, 0x00, 0x2e, 0x73, 0x72, 0x63, 0x52, 0x61,
  0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0xe3, 0x12, 0x20, 0x44, 0x74, 0x21,
  0x77, 0x6a, 0x01, 0x52, 0x83, 0x00, 0x18, 0x97, 0x00, 0x20, 0xa2, 0x0b,
  0xa7, 0x51, 0x0b, 0x53, 0x06, 0x00, 0x2c, 0xe4, 0xd2, 0xce, 0xd0, 0xe8,
  0xc6, 0x25, 0x00, 0x88, 0xe8, 0x02, 0xef, 0xd4, 0xc2, 0x95, 0x01, 0x00,
  0x03, 0xbb, 0x71, 0x09, 0x00, 0x22, 0xba, 0xe0, 0x3b, 0xb5, 0x30, 0x65,
  0x00, 0xc0, 0xa0, 0x6e, 0x5c, 0x02, 0x80, 0x88, 0x2e, 0x80, 0x4f, 0x2d,
  0x4c, 0x19, 0x00, 0xcc, 0x2a, 0x02, 0x5d, 0xa8, 0x05, 0xaf, 0x20, 0xe4,
  0x56, 0xd7, 0x36, 0x15, 0xd6, 0x06, 0xc7, 0x56, 0x36, 0x55, 0x46, 0x37,
  0x97, 0xe4, 0x86, 0x35, 0x2e, 0x01, 0x40, 0x44, 0x7c, 0xc6, 0xa7, 0x16,
  0xc8, 0xa0, 0x03, 0x00, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53,
  0x65, 0x74, 0x49, 0x64, 0xe3, 0x12, 0x00, 0x44, 0xc4, 0xa7, 0x7c, 0x6a,
  0xa1, 0x0c, 0xd4, 0x00, 0x00, 0xb8, 0xc0, 0xa5, 0xe1, 0x95, 0xb1, 0x69,
  0x95, 0xc9, 0xbd, 0x25, 0x91, 0x8d, 0x4b, 0x00, 0x10, 0x11, 0x9f, 0xf3,
  0xa9, 0x05, 0x35, 0x50, 0x03, 0x00, 0x20, 0x05, 0x97, 0x86, 0x57, 0xc6,
  0xa6, 0x55, 0x26, 0xf7, 0x86, 0x94, 0x46, 0x07, 0xf5, 0x36, 0x97, 0x46,
  0x97, 0xf6, 0xe6, 0x36, 0x2e, 0x01, 0x40, 0x44, 0x7c, 0xd2, 0xa7, 0x16,
  0xd6, 0x20, 0x03, 0x00, 0x06, 0x70, 0xe3, 0x12, 0x20, 0x44, 0x7e, 0x61,
  0x7d, 0xe0, 0xc0, 0x75, 0xb2, 0x00, 0x68, 0x36, 0x98, 0x0a, 0x9f, 0x9d,
  0x61, 0x33, 0x17, 0xd6, 0x06, 0xc7, 0x56, 0x36, 0x55, 0x46, 0x37, 0x55,
  0x56, 0x46, 0x36, 0x2e, 0x01, 0x40, 0x44, 0x7c, 0xdc, 0xa7, 0x16, 0xd8,
  0xa0, 0x03, 0x80, 0x71, 0x09, 0x10, 0x22, 0xe8, 0xd0, 0x1f, 0xe1, 0x30,
  0x75, 0x01, 0xd0, 0x6d, 0x90, 0x11, 0x3e, 0x3b, 0xc3, 0x62, 0x8e, 0x2e,
  0x8c, 0xae, 0x6c, 0x5c, 0x02, 0x84, 0x08, 0x3e, 0xc8, 0x4f, 0x38, 0x80,
  0x41, 0x17, 0x00, 0x8d, 0x07, 0x25, 0xe1, 0xb3, 0x33, 0x9d, 0x07, 0x38,
  0xee, 0x40, 0x3f, 0xcd, 0x06, 0x25, 0xf3, 0x50, 0x3f, 0xe3, 0x12, 0x20,
  0x44, 0xe8, 0x41, 0x7e, 0xc2, 0x41, 0x0d, 0xba, 0x00, 0x18, 0x97, 0x00,
  0x21, 0xf2, 0x0e, 0xf2, 0x13, 0x0e, 0x77, 0xd0, 0x05, 0x40, 0xbf, 0x41,
  0x46, 0xf8, 0xec, 0x4c, 0xe7, 0x01, 0x8e, 0x3b, 0xe4, 0x4f, 0xb3, 0x41,
  0xc9, 0x3c, 0xe8, 0x0f, 0x11, 0x29, 0xa7, 0xa3, 0x29, 0xba, 0x30, 0xba,
  0xb2, 0x71, 0x09, 0x00, 0x22, 0xe2, 0xc3, 0x3f, 0xb5, 0xd0, 0x06, 0x1d,
  0x00, 0xb0, 0xa8, 0x83, 0x83, 0x2b, 0x93, 0x1b, 0x97, 0x00, 0x21, 0xf2,
  0x0e, 0xfe, 0x13, 0x0e, 0x77, 0xd0, 0x0d, 0x00, 0x0b, 0xb6, 0xb7, 0xbb,
  0x32, 0xb9, 0x71, 0x09, 0x10, 0x22, 0xef, 0x00, 0x42, 0xe1, 0x70, 0x07,
  0x9d, 0x00, 0xb0, 0x99, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x9b, 0x2a, 0xa3,
  0x53, 0xaa, 0x6b, 0x83, 0x1b, 0x97, 0x00, 0x20, 0xa2, 0x0b, 0x22, 0x54,
  0x0b, 0x5c, 0x07, 0x00, 0x74, 0xe0, 0xd2, 0xf0, 0xca, 0x92, 0x88, 0xa0,
  0xca, 0xe4, 0xa6, 0xca, 0xe8, 0x64, 0x88, 0xc6, 0x25, 0x00, 0x88, 0x88,
  0x0f, 0x09, 0xd5, 0x82, 0x1c, 0xa8, 0x01, 0x00, 0x90, 0x81, 0x4b, 0xc3,
  0x2b, 0x4b, 0x22, 0x82, 0x2a, 0x93, 0x9b, 0x2a, 0xa3, 0x1b, 0x97, 0x00,
  0x20, 0x22, 0x3e, 0x26, 0x54, 0x0b, 0x73, 0xd0, 0x01, 0x00, 0x1f, 0xb7,
  0xba, 0x36, 0xa8, 0x34, 0xbc, 0x32, 0xb6, 0x39, 0xa8, 0x32, 0xb9, 0xa9,
  0x32, 0xba, 0x71, 0x09, 0x00, 0x22, 0xe2, 0x83, 0x42, 0xb5, 0x70, 0x07,
  0x1d, 0x00, 0x50, 0x99, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x53, 0xaa, 0x6b,
  0x83, 0x1b, 0x97, 0x00, 0x20, 0xa2, 0x0b, 0x2a, 0x54, 0x0b, 0x5d, 0x07,
  0x00, 0x34, 0xe6, 0xc2, 0xda, 0xe0, 0xd8, 0xca, 0xc6, 0x25, 0x00, 0x88,
  0xe8, 0x02, 0x0b, 0xd5, 0x02, 0x1f, 0x64, 0x00, 0x30, 0x2e, 0x01, 0x40,
  0x44, 0x17, 0x66, 0xa7, 0x16, 0xfa, 0x20, 0x03, 0x80, 0x71, 0x09, 0x10,
  0x22, 0xfd, 0xd0, 0x3a, 0x70, 0x10, 0x37, 0x89, 0x00, 0xb4, 0x1e, 0xa8,
  0xb4, 0x01, 0x30, 0x2e, 0x01, 0x42, 0xa4, 0x1f, 0x50, 0x07, 0x0e, 0xe2,
  0x26, 0x0b, 0x80, 0x71, 0x09, 0x10, 0x22, 0x20, 0xd1, 0x3a, 0x70, 0x20,
  0x36, 0x89, 0x00, 0xf4, 0xdc, 0x30, 0xf0, 0x03, 0x0c, 0x8d, 0x4b, 0x80,
  0x10, 0x01, 0x09, 0xd4, 0x81, 0x03, 0xb1, 0xc9, 0x02, 0x60, 0x5c, 0x02,
  0x84, 0x48, 0x49, 0x90, 0x0e, 0x1c, 0xc0, 0x4a, 0x16, 0x00, 0x4d, 0x36,
  0x28, 0xff, 0x30, 0x43, 0xe3, 0x12, 0x20, 0x44, 0x54, 0xc2, 0x77, 0xe0,
  0x40, 0x55, 0x60, 0x21, 0x00, 0x7a, 0x56, 0x40, 0x48, 0xc2, 0x86, 0xc6,
  0x25, 0x00, 0x88, 0x80, 0xc4, 0xdc, 0xc0, 0x01, 0xd9, 0x64, 0x00, 0x30,
  0x2e, 0x01, 0x42, 0xe4, 0x25, 0xee, 0x06, 0x0e, 0x42, 0x26, 0x0b, 0x80,
  0x2e, 0x1b, 0x86, 0x7f, 0x98, 0xa1, 0x71, 0x09, 0x10, 0x22, 0x34, 0xd1,
  0x36, 0x70, 0x70, 0x2e, 0x49, 0x00, 0xf4, 0xc8, 0x38, 0xb8, 0xc4, 0x0e,
  0x8d, 0x4b, 0x00, 0x10, 0x79, 0x89, 0xb6, 0x81, 0x83, 0x91, 0xe9, 0x00,
  0xa0, 0x49, 0xc6, 0xc1, 0x25, 0x76, 0x68, 0x5c, 0x02, 0x80, 0xc8, 0x4b,
  0xec, 0x0d, 0x1c, 0x90, 0x4c, 0x07, 0x00, 0xe3, 0x12, 0x00, 0x44, 0x5e,
  0xa2, 0x6f, 0xe0, 0xa0, 0x64, 0x3a, 0x00, 0xf0, 0xc2, 0xc6, 0x66, 0xd7,
  0xe6, 0x42, 0x26, 0x76, 0xe6, 0x32, 0x56, 0x37, 0x25, 0x60, 0x13, 0x47,
  0x6c, 0x6c, 0x76, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
  0x66, 0x6c, 0x61, 0x67, 0x73, 0x53, 0x04, 0x37, 0x81, 0x13, 0x2b, 0x6c,
  0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x82, 0x38,
  0xb1, 0x44, 0x86, 0xe7, 0x32, 0xf7, 0x56, 0x27, 0x37, 0x56, 0xe6, 0x32,
  0xf6, 0xe6, 0x46, 0x57, 0xe6, 0x46, 0x37, 0x37, 0x45, 0x99, 0x13, 0x3b,
  0xc9, 0x13, 0x3e, 0xe9, 0x93, 0x3f, 0x11, 0x95, 0x52, 0x41, 0x95, 0x55,
  0x71, 0x44, 0x86, 0xe7, 0x32, 0xf7, 0x56, 0x27, 0x37, 0x56, 0xe6, 0x42,
  0x56, 0x66, 0x96, 0xe6, 0x56, 0x36, 0x37, 0x25, 0x18, 0x6c, 0x91, 0xe1,
  0xb9, 0xcc, 0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xb9, 0xb4, 0x85, 0xa5, 0xb9,
  0x19, 0xa5, 0xb1, 0x95, 0x39, 0x85, 0xb5, 0x95, 0x4d, 0x09, 0x58, 0xc5,
  0x0e, 0x19, 0x9e, 0xcb, 0xdc, 0x5b, 0x9d, 0xdc, 0x58, 0x99, 0x4b, 0x98,
  0xdc, 0xd9, 0xdc, 0x94, 0x00, 0x57, 0xac, 0x90, 0xe1, 0xb9, 0xd8, 0x95,
  0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x74, 0xc5, 0x09, 0x19, 0x9e,
  0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0x80, 0x57, 0xec, 0x90,
  0xe1, 0xb9, 0xcc, 0xa1, 0x85, 0x91, 0x95, 0xc9, 0x35, 0xbd, 0x91, 0x95,
  0xb1, 0x4d, 0x09, 0x7c, 0xc5, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9, 0xdc,
  0x5b, 0x9d, 0xdc, 0x58, 0xd9, 0xdc, 0x94, 0xc0, 0x5e, 0x2c, 0x91, 0xe1,
  0xb9, 0xd0, 0xe5, 0xc1, 0x95, 0x05, 0xb9, 0xb9, 0xbd, 0xd1, 0x85, 0xd1,
  0xa5, 0xbd, 0xb9, 0xcd, 0x4d, 0x11, 0x60, 0x66, 0x66, 0xec, 0x90, 0xe1,
  0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd,
  0x4d, 0x09, 0x6e, 0x06, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x0c, 0x97,
  0xdf, 0x38, 0xd3, 0x81, 0x34, 0x86, 0x0f, 0x18, 0x03, 0x34, 0x5c, 0xbe,
  0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x0d, 0xdb,
  0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0,
  0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72, 0xdb, 0xe6, 0x20, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84,
  0x21, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7,
  0x6d, 0x06, 0xd4, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x84, 0x01, 0x08, 0xd8,
  0x57, 0xeb, 0xad, 0xf3, 0xdd, 0xb6, 0x2d, 0x50, 0xc3, 0xe5, 0x3b, 0x8f,
  0xbf, 0x10, 0x06, 0x20, 0x60, 0xdf, 0x6d, 0xb7, 0xce, 0x57, 0xeb, 0xa6,
  0x70, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x04, 0x58, 0x1b, 0x55, 0x14, 0x44,
  0x54, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x09, 0xd5, 0x70, 0xf9, 0xce,
  0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7,
  0x6d, 0x05, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11,
  0x51, 0x3a, 0xc0, 0xe0, 0x23, 0xb7, 0x6d, 0x04, 0xd6, 0x70, 0xf9, 0xce,
  0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8, 0xc8,
  0x6d, 0xdb, 0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11, 0xc0,
  0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x76, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e,
  0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x02, 0xce, 0xb2, 0x54, 0x8c,
  0x3f, 0x04, 0x86, 0x5f, 0x01, 0x0b, 0x45, 0x58, 0x00, 0xc1, 0x00, 0x48,
  0x03, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x07, 0x0d, 0x00, 0x00,
  0x13, 0x04, 0x45, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x04, 0x94, 0xdd, 0x0c, 0x40, 0xc9, 0x15, 0x4b, 0xb9, 0x95, 0x4c, 0xe9,
  0x06, 0x14, 0x61, 0x40, 0xf9, 0x0f, 0x94, 0x46, 0x89, 0x14, 0x20, 0x20,
  0x20, 0xfe, 0x41, 0xd1, 0x94, 0x51, 0x21, 0x95, 0xa1, 0x40, 0xe9, 0x95,
  0x36, 0xeb, 0x69, 0x3f, 0x41, 0x79, 0x94, 0xa5, 0x40, 0x11, 0x0a, 0x94,
  0x61, 0x00, 0x1d, 0x23, 0x00, 0xc4, 0x8c, 0x00, 0x94, 0x40, 0x11, 0x94,
  0x43, 0x79, 0x10, 0x35, 0x02, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f,
  0x63, 0x04, 0x20, 0x08, 0xfa, 0x77, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08,
  0xc2, 0xdf, 0x18, 0x81, 0xce, 0x9a, 0x73, 0xfa, 0x8d, 0x11, 0x90, 0xac,
  0x5f, 0xaa, 0xdf, 0x18, 0x41, 0x6b, 0xce, 0x39, 0xef, 0x8d, 0x11, 0x80,
  0x20, 0x08, 0xe3, 0x60, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0xc1,
  0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x0a, 0x63, 0x04, 0xec, 0x4b, 0xc3,
  0xf3, 0x2f, 0x8c, 0x11, 0xa4, 0xe1, 0xed, 0xc3, 0xdf, 0x18, 0xc1, 0x3e,
  0x96, 0xbc, 0xfa, 0x0b, 0xb4, 0x0f, 0x75, 0x04, 0x02, 0x00, 0x50, 0x00,
  0x45, 0xfd, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x82, 0x20, 0x08, 0xf2,
  0xff, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0x20, 0x08, 0x82, 0xfc,
  0xbf, 0x00, 0x00, 0x00, 0xf1, 0x30, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
  0x13, 0x04, 0xa0, 0x17, 0x26, 0x08, 0x80, 0x2f, 0x4c, 0x10, 0x80, 0x73,
  0x98, 0x20, 0x00, 0xef, 0x30, 0x41, 0x00, 0xe4, 0x61, 0x82, 0x00, 0xd0,
  0xc3, 0x04, 0x01, 0xa8, 0x87, 0x09, 0x42, 0x64, 0x0f, 0x13, 0x04, 0xe0,
  0x1e, 0x26, 0x08, 0x94, 0x3f, 0x4c, 0x10, 0x80, 0x90, 0x98, 0x20, 0x50,
  0x25, 0x31, 0x41, 0xa0, 0x52, 0x62, 0x82, 0x40, 0xc1, 0xc4, 0x04, 0x81,
  0x8a, 0x89, 0x09, 0x02, 0x55, 0x13, 0x13, 0x04, 0x0a, 0x27, 0x26, 0x08,
  0xd4, 0x4f, 0x4c, 0x10, 0x28, 0xb0, 0x98, 0x20, 0x50, 0x65, 0x31, 0x41,
  0xa0, 0xcc, 0x62, 0x82, 0x40, 0x9d, 0xc5, 0x04, 0x01, 0x90, 0x8b, 0x09,
  0x02, 0x85, 0x17, 0x13, 0x04, 0x2a, 0x2f, 0x26, 0x08, 0x94, 0x5e, 0x4c,
  0x10, 0xa8, 0xd3, 0x98, 0x20, 0x50, 0xa8, 0x31, 0x41, 0xa0, 0x52, 0x63,
  0x82, 0x40, 0xb5, 0xc6, 0x04, 0x81, 0x82, 0x8d, 0x09, 0x02, 0x35, 0x1b,
  0x13, 0x04, 0x60, 0x37, 0x26, 0x08, 0xc0, 0x6f, 0x4c, 0x10, 0x00, 0xf0,
  0x98, 0x20, 0x00, 0xe4, 0x31, 0x41, 0x00, 0xca, 0x63, 0x82, 0x40, 0xa1,
  0xc7, 0x04, 0x81, 0x4a, 0x8f, 0x09, 0x02, 0xa5, 0x1e, 0x13, 0x04, 0xca,
  0x3e, 0x26, 0x08, 0xd4, 0x7d, 0x4c, 0x10, 0x28, 0xfc, 0x98, 0x20, 0x50,
  0xf9, 0x31, 0x41, 0xa0, 0xf4, 0x63, 0x82, 0x40, 0xed, 0xc7, 0x04, 0x01,
  0x40, 0x91, 0x09, 0x02, 0xd0, 0x22, 0x13, 0x04, 0xc0, 0x45, 0x26, 0x08,
  0x00, 0x8c, 0x4c, 0x10, 0x80, 0x18, 0x99, 0x20, 0x00, 0x33, 0x32, 0x41,
  0x00, 0x70, 0x64, 0x82, 0x00, 0x80, 0xc9, 0x04, 0x01, 0x18, 0x93, 0x09,
  0x02, 0x60, 0x26, 0x13, 0x04, 0x80, 0x4e, 0x26, 0x08, 0x00, 0x9e, 0x4c,
  0x10, 0x80, 0x3c, 0x99, 0x20, 0x00, 0x7e, 0x32, 0x41, 0x00, 0x48, 0x65,
  0x82, 0x00, 0x98, 0xca, 0x04, 0x01, 0x70, 0x95, 0x09, 0x02, 0x10, 0x2b,
  0x13, 0x04, 0x80, 0x56, 0x26, 0x08, 0x40, 0xb8, 0x4c, 0x10, 0x28, 0x74,
  0x99, 0x20, 0x50, 0xe9, 0x32, 0x41, 0xa0, 0xd4, 0x65, 0x82, 0x40, 0xf5,
  0xcb, 0x04, 0x81, 0xf2, 0x97, 0x09, 0x02, 0xf5, 0x2f, 0x13, 0x04, 0x6a,
  0x64, 0x26, 0x08, 0x14, 0xc9, 0x4c, 0x10, 0xa8, 0x92, 0x99, 0x20, 0x50,
  0x2e, 0x33, 0x41, 0xa0, 0x5e, 0x66, 0x82, 0x40, 0xc1, 0xcc, 0x04, 0x81,
  0x02, 0x9b, 0x09, 0x02, 0x15, 0x36, 0x13, 0x04, 0x8a, 0x6c, 0x26, 0x08,
  0x54, 0xd9, 0x4c, 0x10, 0x00, 0xb7, 0x99, 0x20, 0x00, 0x78, 0x33, 0x41,
  0x00, 0xf6, 0x06, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x06,
  0xaa, 0xa0, 0x06, 0x14, 0x29, 0x90, 0x42, 0x1e, 0xcc, 0x18, 0x10, 0x7c,
  0x50, 0xe9, 0xc2, 0xce, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x1a,
  0xac, 0xc2, 0x1a, 0x58, 0xa9, 0xa0, 0x0a, 0x7a, 0x30, 0x61, 0x00, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x1a, 0xb0, 0x02, 0x1b, 0x5c, 0xa8,
  0x80, 0x0a, 0x7b, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x01, 0x1a, 0xb4, 0x42, 0x1b, 0x60, 0xa7, 0x70, 0x0a, 0x7c, 0x30, 0x61,
  0x00, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x1a, 0xb8, 0x82, 0x1b,
  0x5c, 0xa8, 0x80, 0x0a, 0x7d, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x81, 0xa2, 0x0b, 0x6b, 0x90, 0x0a, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xa0, 0xec, 0x02, 0x1b, 0xb0, 0xc2, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x20, 0xbd, 0xe0, 0xc7, 0xff, 0xff, 0xff, 0x43, 0x37, 0xda,
  0xff, 0xff, 0xff, 0x83, 0x68, 0xff, 0xff, 0xff, 0x0f, 0x33, 0x06, 0x04,
  0x19, 0x44, 0x6e, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0xd2,
  0x0b, 0x7d, 0xfc, 0xff, 0xff, 0x3f, 0x74, 0xa3, 0xfd, 0xff, 0xff, 0x3f,
  0x84, 0xf6, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x90, 0x02, 0x80, 0x19,
  0x03, 0xc2, 0x0c, 0x16, 0x37, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0x00, 0xf1, 0x85, 0x3f, 0xfe, 0xff, 0xff, 0x1f, 0x3c, 0xd0, 0xfe, 0xff,
  0xff, 0x1f, 0x46, 0xfb, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x00, 0xf1, 0x05, 0x3f, 0xfe, 0xff, 0xff, 0x1f,
  0x3c, 0xd0, 0xfe, 0xff, 0xff, 0x1f, 0x44, 0xfb, 0xff, 0xff, 0x7f, 0x98,
  0x30, 0x00, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x0c, 0x66, 0x81,
  0x0e, 0x08, 0x56, 0x98, 0x31, 0x20, 0xd0, 0x80, 0x11, 0x1b, 0x60, 0x34,
  0x21, 0x10, 0x26, 0x0c, 0x80, 0xe1, 0x86, 0xc0, 0x15, 0xc2, 0x60, 0xc6,
  0x80, 0x40, 0x83, 0x44, 0x6c, 0x80, 0x59, 0x86, 0x40, 0x08, 0x66, 0x0c,
  0x08, 0x34, 0x48, 0xdc, 0x00, 0x20, 0x07, 0x00, 0x33, 0x06, 0x84, 0x1a,
  0x38, 0x63, 0x03, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x22, 0x0e,
  0x7f, 0x20, 0x06, 0xa0, 0xfd, 0xff, 0xff, 0x3f, 0xfc, 0xf5, 0xff, 0xff,
  0xff, 0x30, 0x61, 0x00, 0x94, 0x21, 0x0b, 0x3a, 0x63, 0x40, 0xac, 0x41,
  0x19, 0x8c, 0x0d, 0x30, 0xdc, 0x10, 0xc4, 0x02, 0x18, 0xcc, 0x18, 0x10,
  0x6b, 0xa0, 0x06, 0x63, 0x03, 0x0c, 0x37, 0x04, 0xa7, 0x10, 0x06, 0x13,
  0x06, 0xc0, 0x05, 0x40, 0xcc, 0x18, 0x10, 0x6b, 0xe0, 0x8c, 0x0d, 0x40,
  0x13, 0x00, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40,
  0xce, 0xc1, 0x94, 0xff, 0xff, 0xff, 0x87, 0x33, 0x00, 0xed, 0xff, 0xff,
  0xff, 0x81, 0xb4, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xb8, 0x41,
  0xa8, 0x85, 0x30, 0x98, 0x31, 0x20, 0xd8, 0xa0, 0x1b, 0x1b, 0xe0, 0x02,
  0x20, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x28, 0x03,
  0x5f, 0xf8, 0x83, 0xe7, 0x16, 0x66, 0x0c, 0x08, 0x36, 0x80, 0x83, 0xb1,
  0x01, 0x46, 0x13, 0x82, 0x61, 0xc2, 0x00, 0x18, 0x6e, 0x18, 0x82, 0x30,
  0x98, 0x31, 0x20, 0xd8, 0x40, 0x0d, 0xc6, 0x06, 0x18, 0x6e, 0x08, 0x5e,
  0x21, 0x0c, 0x26, 0x0c, 0x80, 0x0b, 0x80, 0x98, 0x31, 0x20, 0xd8, 0xa0,
  0x1b, 0x1b, 0x80, 0x36, 0x00, 0xcc, 0x18, 0x10, 0x6c, 0xe0, 0x8c, 0x0d,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x3b, 0xb4, 0xf2, 0xff,
  0xff, 0xff, 0xf0, 0x06, 0xa6, 0xfd, 0xff, 0xff, 0x3f, 0xb0, 0xf6, 0xff,
  0xff, 0xff, 0x30, 0x61, 0x00, 0x14, 0x15, 0x0e, 0x32, 0x63, 0x40, 0xb4,
  0x01, 0x18, 0x8c, 0x0d, 0x50, 0xc1, 0x00, 0x33, 0x06, 0x44, 0x1b, 0xb4,
  0xc1, 0xd8, 0x00, 0xe4, 0x01, 0x60, 0xc6, 0x80, 0x68, 0x83, 0x6b, 0x6c,
  0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xe4, 0xe1, 0x95, 0xff,
  0xff, 0xff, 0x07, 0x39, 0xa0, 0xed, 0xff, 0xff, 0xff, 0xe1, 0xb6, 0xff,
  0xff, 0xff, 0x87, 0x19, 0x03, 0xc2, 0x0c, 0x16, 0x37, 0x00, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x00, 0x91, 0x07, 0x59, 0xfe, 0xff, 0xff, 0x1f,
  0xe4, 0x80, 0xb6, 0xff, 0xff, 0xff, 0x07, 0xdb, 0xfe, 0xff, 0xff, 0x1f,
  0x26, 0x0c, 0x80, 0x59, 0x02, 0x61, 0xc6, 0x80, 0x70, 0x83, 0x62, 0x6c,
  0x80, 0x81, 0x0a, 0x80, 0x08, 0xdc, 0x00, 0x18, 0xa8, 0x00, 0xdc, 0x20,
  0x70, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x7a, 0x80,
  0xe5, 0xff, 0xff, 0xff, 0x81, 0x0e, 0x6c, 0xfb, 0xff, 0xff, 0x7f, 0xc8,
  0xed, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x30, 0x83, 0xc5, 0x0d, 0x80,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xe8, 0xe1, 0x95, 0xff, 0xff,
  0xff, 0x07, 0x3a, 0xb0, 0xed, 0xff, 0xff, 0xff, 0x01, 0xb7, 0xff, 0xff,
  0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10,
  0x7a, 0x80, 0xe5, 0xff, 0xff, 0xff, 0x81, 0x0e, 0x6c, 0xfb, 0xff, 0xff,
  0x7f, 0xc8, 0xed, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0x84, 0x1e, 0x5e, 0xf9, 0xff, 0xff, 0x7f, 0xa0,
  0x03, 0xdb, 0xfe, 0xff, 0xff, 0x1f, 0x70, 0xfb, 0xff, 0xff, 0x7f, 0x98,
  0x30, 0x00, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x40, 0x8a, 0x87, 0x51,
  0xd8, 0xc4, 0x41, 0x08, 0x52, 0x21, 0x15, 0x52, 0x21, 0x15, 0x66, 0x0c,
  0x08, 0x39, 0xb8, 0xdc, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0xa4, 0x1e, 0x5e, 0xf9, 0xff, 0xff, 0x7f, 0xa8, 0x03, 0xd5, 0xfe, 0xff,
  0xff, 0x1f, 0x64, 0xfb, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xd8, 0x85,
  0x33, 0x05, 0xb9, 0x19, 0x4d, 0x08, 0x80, 0x19, 0x03, 0x42, 0x0e, 0x2e,
  0x37, 0x00, 0x68, 0x0c, 0x00, 0x30, 0x63, 0x40, 0xc8, 0x41, 0xe1, 0x06,
  0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0xf7, 0x00, 0xcb, 0xff,
  0xff, 0xff, 0xc3, 0x1d, 0x98, 0xf6, 0xff, 0xff, 0xff, 0x40, 0xdb, 0xff,
  0xff, 0xff, 0xc3, 0x8c, 0x01, 0x61, 0x37, 0x60, 0x90, 0x07, 0x6f, 0x43,
  0x64, 0x00, 0x80, 0x19, 0x03, 0x02, 0x6f, 0x8a, 0x3c, 0x78, 0x9b, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xf0, 0x21, 0x96, 0xff, 0xff, 0xff,
  0x07, 0x3c, 0x28, 0xed, 0xff, 0xff, 0xff, 0xa1, 0xb6, 0xff, 0xff, 0xff,
  0x87, 0x19, 0x03, 0x42, 0x6d, 0xce, 0x80, 0x0f, 0xe0, 0x86, 0xca, 0x00,
  0x00, 0x33, 0x06, 0x04, 0xdb, 0x84, 0x01, 0x1f, 0xc0, 0xcd, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x20, 0xf9, 0x20, 0xcb, 0xff, 0xff, 0xff, 0x43,
  0x1e, 0x90, 0xf6, 0xff, 0xff, 0xff, 0x60, 0xdb, 0xff, 0xff, 0xff, 0xc3,
  0x8c, 0x01, 0x91, 0x32, 0x62, 0x10, 0x0a, 0x71, 0x43, 0x66, 0x00, 0x80,
  0x19, 0x03, 0x62, 0x65, 0x9e, 0x50, 0x88, 0x9b, 0x2a, 0x50, 0x41, 0x67,
  0x0c, 0x08, 0x77, 0x79, 0x4c, 0x41, 0x6e, 0x2e, 0xa0, 0x6a, 0xc6, 0x80,
  0x70, 0x17, 0xc6, 0x14, 0xe4, 0xc6, 0x02, 0x3a, 0xa0, 0xcf, 0x8c, 0x01,
  0xe1, 0x2e, 0x97, 0x29, 0xc8, 0x0d, 0xa9, 0x01, 0x00, 0x66, 0x0c, 0x08,
  0x77, 0x29, 0x4c, 0x41, 0x6e, 0x68, 0x0d, 0x00, 0x30, 0x63, 0x40, 0xac,
  0xcc, 0x12, 0x0a, 0x71, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xc8,
  0x3f, 0xdc, 0xf2, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xa9, 0xfd, 0xff, 0xff,
  0x3f, 0xf0, 0xf6, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x94, 0x62, 0x0e,
  0x38, 0x63, 0x40, 0xb0, 0xcc, 0x18, 0x84, 0x42, 0xdc, 0x50, 0x1b, 0x00,
  0x60, 0xc6, 0x80, 0x60, 0x99, 0x27, 0x14, 0xe2, 0x66, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x90, 0x90, 0xc0, 0xe5, 0xff, 0xff, 0xff, 0x21, 0x14,
  0x6c, 0xfb, 0xff, 0xff, 0x7f, 0xf0, 0xed, 0xff, 0xff, 0xff, 0x61, 0xc6,
  0x80, 0x60, 0x17, 0xce, 0x14, 0xf4, 0xa6, 0x84, 0x57, 0xd0, 0x19, 0x03,
  0xc2, 0x5d, 0x1e, 0x53, 0xd0, 0x9b, 0x0b, 0xa8, 0x9a, 0x31, 0x20, 0xdc,
  0x85, 0x31, 0x05, 0xbd, 0xb1, 0x60, 0x0f, 0xe8, 0x33, 0x63, 0x40, 0xb8,
  0xcb, 0x65, 0x0a, 0x7a, 0x43, 0x71, 0x00, 0x80, 0x19, 0x03, 0xc2, 0x5d,
  0x0a, 0x53, 0xd0, 0x1b, 0x92, 0x03, 0x00, 0xcc, 0x18, 0x10, 0x2c, 0xb3,
  0x84, 0x42, 0xdc, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x62, 0x12,
  0xbc, 0xfc, 0xff, 0xff, 0x3f, 0x98, 0x42, 0x6b, 0xff, 0xff, 0xff, 0x0f,
  0xe3, 0xfd, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x15, 0xc1, 0x03, 0xce,
  0x18, 0x10, 0x2d, 0xc3, 0x85, 0x42, 0xdc, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x41, 0x35, 0x12, 0xae, 0x10, 0xcc, 0x18, 0x10, 0x2d, 0xf3, 0x84,
  0x42, 0xdc, 0x50, 0x1d, 0x00, 0x60, 0xc6, 0x80, 0x68, 0x99, 0x25, 0x14,
  0xe2, 0x66, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x94, 0xf0, 0xe5,
  0xff, 0xff, 0xff, 0x21, 0x15, 0x5c, 0xfb, 0xff, 0xff, 0x7f, 0x30, 0xef,
  0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x20, 0x3b, 0x00, 0xc0, 0x8c, 0x01,
  0xe1, 0x32, 0x45, 0x28, 0xc4, 0x0d, 0xdd, 0x01, 0x00, 0x66, 0x0c, 0x08,
  0xb6, 0x61, 0xf8, 0x00, 0x6e, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00,
  0x59, 0x89, 0x71, 0xfe, 0xff, 0xff, 0x1f, 0x56, 0xe1, 0xb5, 0xff, 0xff,
  0xff, 0x07, 0xf8, 0xfe, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x40, 0x56, 0x22, 0x9c, 0xff, 0xff, 0xff, 0x87,
  0x55, 0x78, 0xed, 0xff, 0xff, 0xff, 0xe1, 0xbd, 0xff, 0xff, 0xff, 0x87,
  0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x95, 0x00,
  0xe7, 0xff, 0xff, 0xff, 0x61, 0x15, 0x5e, 0xfb, 0xff, 0xff, 0x7f, 0x70,
  0xed, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x20, 0x3c, 0x00, 0xc0, 0x8c,
  0x01, 0xd1, 0x36, 0x0e, 0x1f, 0xc0, 0xcd, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x20, 0x2c, 0x41, 0xce, 0xff, 0xff, 0xff, 0x03, 0x2b, 0xb4, 0xf6,
  0xff, 0xff, 0xff, 0x10, 0xdf, 0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x81,
  0x2b, 0xdc, 0x2c, 0x8c, 0xce, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20,
  0x2c, 0x21, 0xce, 0xff, 0xff, 0xff, 0x03, 0x2b, 0xb4, 0xf6, 0xff, 0xff,
  0xff, 0x00, 0xdf, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x60, 0x90, 0x1f,
  0xc8, 0x67, 0xc6, 0x80, 0xd0, 0x95, 0x65, 0x16, 0x46, 0xc7, 0x94, 0x3f,
  0x90, 0xcf, 0x84, 0x01, 0x60, 0xc2, 0x29, 0xc4, 0x67, 0xc6, 0x80, 0xd0,
  0x95, 0x68, 0x16, 0x46, 0xc7, 0x04, 0x54, 0x88, 0xcf, 0x84, 0x01, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x08, 0x4c, 0x90, 0xf3, 0xff, 0xff,
  0xff, 0x00, 0x0b, 0xb1, 0xfd, 0xff, 0xff, 0x3f, 0xd4, 0xf7, 0xff, 0xff,
  0xff, 0x30, 0x63, 0x40, 0xe0, 0x0a, 0x37, 0x0b, 0xa3, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x08, 0x4c, 0x8c, 0xf3, 0xff, 0xff, 0xff, 0x00,
  0x0b, 0xb1, 0xfd, 0xff, 0xff, 0x3f, 0xd0, 0xf7, 0xff, 0xff, 0xff, 0x30,
  0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x02, 0x13, 0xe4,
  0xfc, 0xff, 0xff, 0x3f, 0xc0, 0x42, 0x6c, 0xff, 0xff, 0xff, 0x0f, 0xf5,
  0xfd, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x80, 0xc0, 0xc4, 0x38, 0xff, 0xff, 0xff, 0x0f, 0xb0, 0x10, 0xdb,
  0xff, 0xff, 0xff, 0x03, 0x7d, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x5c, 0x2b, 0xf1, 0x0f, 0xc2, 0x8c,
  0x01, 0xd1, 0x2b, 0x67, 0x30, 0x0b, 0xa3, 0x63, 0xaa, 0x10, 0xc4, 0x67,
  0xc6, 0x80, 0xe8, 0x95, 0x32, 0x98, 0x85, 0xd1, 0x19, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x83, 0xab, 0x25, 0x42, 0x62, 0x98, 0x31, 0x20, 0x7a, 0x45,
  0x0e, 0x66, 0x61, 0x74, 0x4c, 0x08, 0xe2, 0x33, 0x63, 0x40, 0xf4, 0x0a,
  0x1c, 0xcc, 0xc2, 0xe8, 0x50, 0x28, 0x00, 0x60, 0xc6, 0x80, 0xe8, 0x15,
  0x66, 0x16, 0x46, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x9a,
  0x48, 0xe7, 0xff, 0xff, 0xff, 0xa1, 0x16, 0x66, 0xfb, 0xff, 0xff, 0x7f,
  0xd0, 0xef, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0xa4, 0x26, 0xd0, 0xf9, 0xff, 0xff, 0x7f, 0xa8, 0x85,
  0xd9, 0xfe, 0xff, 0xff, 0x1f, 0xf2, 0xfb, 0xff, 0xff, 0x7f, 0x98, 0x30,
  0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0xa9, 0x89, 0x73, 0xfe,
  0xff, 0xff, 0x1f, 0x6a, 0x61, 0xb6, 0xff, 0xff, 0xff, 0x07, 0xdc, 0xfe,
  0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x33, 0x05, 0x21, 0x3e, 0x33, 0x06,
  0x84, 0xaf, 0x60, 0xb3, 0x30, 0x3a, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x70, 0xc5, 0x84, 0x3f, 0x04, 0x33, 0x06, 0x84, 0xaf, 0x3c, 0xb3, 0x30,
  0x3a, 0x44, 0x0a, 0x00, 0x98, 0x31, 0x20, 0x7c, 0x65, 0x99, 0x85, 0xd1,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x04, 0x27, 0xd2, 0xf9, 0xff,
  0xff, 0x7f, 0xc0, 0x05, 0xda, 0xfe, 0xff, 0xff, 0x1f, 0xea, 0xfb, 0xff,
  0xff, 0x7f, 0x98, 0x30, 0x00, 0x86, 0x23, 0x14, 0x59, 0x18, 0xbe, 0x19,
  0x03, 0xe2, 0x57, 0xa4, 0x59, 0x18, 0x9d, 0xe1, 0x08, 0x65, 0x16, 0x86,
  0x6f, 0xc2, 0x00, 0xb0, 0x55, 0x20, 0xe2, 0x33, 0x63, 0x40, 0xfc, 0xca,
  0x36, 0x0b, 0xa3, 0x33, 0xdd, 0x10, 0x14, 0xc3, 0x8c, 0x01, 0xf1, 0x2b,
  0xcd, 0x2c, 0x8c, 0xce, 0x74, 0x83, 0x60, 0x0c, 0x13, 0x06, 0x80, 0x3d,
  0x02, 0x7c, 0x66, 0x0c, 0x88, 0x5f, 0x51, 0x66, 0x61, 0x74, 0xec, 0x11,
  0xe0, 0x33, 0x61, 0x00, 0x10, 0x2b, 0x00, 0x60, 0xc2, 0x00, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x04, 0x2c, 0xe0, 0xf9, 0xff, 0xff, 0x7f,
  0x00, 0x07, 0xdf, 0xfe, 0xff, 0xff, 0x1f, 0x4a, 0xfc, 0xff, 0xff, 0x7f,
  0x98, 0x31, 0x20, 0x7a, 0x85, 0x99, 0x85, 0xd1, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x04, 0x2c, 0xe6, 0xf9, 0xff, 0xff, 0x7f, 0x00, 0x07,
  0xdf, 0xfe, 0xff, 0xff, 0x1f, 0x48, 0xfc, 0xff, 0xff, 0x7f, 0x98, 0x30,
  0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x01, 0x0b, 0x79, 0xfe,
  0xff, 0xff, 0x1f, 0xc0, 0xc1, 0xb7, 0xff, 0xff, 0xff, 0x87, 0xf1, 0xfe,
  0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x6a, 0x05, 0x00, 0xcc, 0x18, 0x10,
  0xbf, 0xa2, 0xcc, 0xc2, 0xe8, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01,
  0x12, 0x16, 0xf1, 0xfc, 0xff, 0xff, 0x3f, 0x84, 0xc3, 0x6f, 0xff, 0xff,
  0xff, 0x0f, 0x26, 0xfe, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xbd, 0xc2,
  0xcc, 0xc2, 0xe8, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x12, 0x16,
  0xf0, 0xfc, 0xff, 0xff, 0x3f, 0x84, 0xc3, 0x6f, 0xff, 0xff, 0xff, 0x0f,
  0x25, 0xfe, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x80, 0x84, 0xc5, 0x3c, 0xff, 0xff, 0xff, 0x0f, 0xe1, 0xf0,
  0xdb, 0xff, 0xff, 0xff, 0x03, 0x79, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06,
  0xc0, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x64, 0x3b, 0x31, 0x0f, 0xc4,
  0xe0, 0x10, 0x83, 0x33, 0x63, 0x40, 0x80, 0x0b, 0x33, 0x0b, 0xa3, 0x33,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x57, 0x4f, 0xcc, 0x43, 0x30, 0x61,
  0x00, 0x98, 0x11, 0xc8, 0x67, 0xc2, 0x00, 0x30, 0x43, 0x90, 0xcf, 0x84,
  0x01, 0x60, 0xd2, 0x20, 0x9f, 0x09, 0x03, 0x80, 0x66, 0x01, 0x00, 0x33,
  0x06, 0x04, 0xb8, 0x14, 0xb3, 0x30, 0x3a, 0x44, 0x0b, 0x00, 0x98, 0x31,
  0x20, 0xda, 0x86, 0xe1, 0x03, 0xb8, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x03, 0x04, 0x2d, 0xec, 0xf9, 0xff, 0xff, 0x7f, 0x40, 0x07, 0xf1, 0xfe,
  0xff, 0xff, 0x1f, 0x5a, 0xfc, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xd4,
  0xe6, 0x15, 0xf8, 0x00, 0x6e, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00,
  0x41, 0x8b, 0x7a, 0xfe, 0xff, 0xff, 0x1f, 0xd0, 0x41, 0xbc, 0xff, 0xff,
  0xff, 0x07, 0x16, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x40, 0xd0, 0x82, 0x9e, 0xff, 0xff, 0xff, 0x07,
  0x74, 0x10, 0xef, 0xff, 0xff, 0xff, 0x61, 0xbd, 0xff, 0xff, 0xff, 0x87,
  0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xb4, 0xb0,
  0xe7, 0xff, 0xff, 0xff, 0x01, 0x1d, 0xc4, 0xfb, 0xff, 0xff, 0x7f, 0x68,
  0xf1, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x03, 0x04, 0x2d, 0xea, 0xf9, 0xff, 0xff, 0x7f, 0x40, 0x07, 0xf1,
  0xfe, 0xff, 0xff, 0x1f, 0x58, 0xfc, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x41, 0x0b, 0x7a, 0xfe, 0xff,
  0xff, 0x1f, 0xd0, 0x41, 0xbc, 0xff, 0xff, 0xff, 0x87, 0xf5, 0xfe, 0xff,
  0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40,
  0xd0, 0xc2, 0x9e, 0xff, 0xff, 0xff, 0x07, 0x74, 0x08, 0xef, 0xff, 0xff,
  0xff, 0xa1, 0xc5, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0xc2, 0x6e, 0xfe,
  0x20, 0x0f, 0xde, 0x66, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xb4,
  0xa8, 0xe7, 0xff, 0xff, 0xff, 0x01, 0x1d, 0xc2, 0xfb, 0xff, 0xff, 0x7f,
  0x60, 0xf1, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x04, 0x2d, 0xe8, 0xf9, 0xff, 0xff, 0x7f, 0x40, 0x87,
  0xf0, 0xfe, 0xff, 0xff, 0x1f, 0xd6, 0xfb, 0xff, 0xff, 0x7f, 0x98, 0x30,
  0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x41, 0x0b, 0x7b, 0xfe,
  0xff, 0xff, 0x1f, 0xd0, 0x21, 0xbc, 0xff, 0xff, 0xff, 0x87, 0x16, 0xff,
  0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x40, 0xd0, 0xa2, 0x9e, 0xff, 0xff, 0xff, 0x07, 0x74, 0x08, 0xef, 0xff,
  0xff, 0xff, 0x81, 0xc5, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xb4, 0xa0, 0xe7, 0xff, 0xff, 0xff,
  0x01, 0x1d, 0xc2, 0xfb, 0xff, 0xff, 0x7f, 0x58, 0xef, 0xff, 0xff, 0xff,
  0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x04, 0x2d,
  0xec, 0xf9, 0xff, 0xff, 0x7f, 0x40, 0x87, 0xdf, 0xfe, 0xff, 0xff, 0x1f,
  0x5a, 0xfc, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xe0, 0x80, 0x71, 0x03,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xb4, 0xa8, 0xe7, 0xff,
  0xff, 0xff, 0x01, 0x1d, 0x7e, 0xfb, 0xff, 0xff, 0x7f, 0x60, 0xf1, 0xff,
  0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0x04, 0x2d, 0xe8, 0xf9, 0xff, 0xff, 0x7f, 0x40, 0x87, 0xdf, 0xfe, 0xff,
  0xff, 0x1f, 0xd6, 0xfb, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x00, 0x41, 0x0b, 0x7b, 0xfe, 0xff, 0xff, 0x1f,
  0xd0, 0xe1, 0xb7, 0xff, 0xff, 0xff, 0x87, 0x16, 0xff, 0xff, 0xff, 0x1f,
  0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xd0, 0xa2,
  0x9e, 0xff, 0xff, 0xff, 0x07, 0x74, 0xf8, 0xed, 0xff, 0xff, 0xff, 0x81,
  0xc5, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x10, 0xb4, 0xa0, 0xe7, 0xff, 0xff, 0xff, 0x01, 0x1d, 0x7e,
  0xfb, 0xff, 0xff, 0x7f, 0x58, 0xef, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00,
  0xa0, 0x5a, 0x00, 0xc0, 0x8c, 0x01, 0xe1, 0x36, 0x0b, 0x1f, 0xc0, 0xcd,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x69, 0xe1, 0xcf, 0xff, 0xff,
  0xff, 0x43, 0x3a, 0xf8, 0xf6, 0xff, 0xff, 0xff, 0x60, 0xe2, 0xff, 0xff,
  0xff, 0xc3, 0x8c, 0x01, 0xa1, 0x36, 0xe1, 0xc0, 0x07, 0x70, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x48, 0x5a, 0xf8, 0xf3, 0xff, 0xff, 0xff,
  0x90, 0x0e, 0xbd, 0xfd, 0xff, 0xff, 0x3f, 0x98, 0xf8, 0xff, 0xff, 0xff,
  0x30, 0x63, 0x40, 0xd8, 0x4d, 0x2c, 0xe4, 0xc1, 0xdb, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x01, 0x92, 0x16, 0xfe, 0xfc, 0xff, 0xff, 0x3f, 0xa4,
  0xc3, 0x6e, 0xff, 0xff, 0xff, 0x0f, 0x26, 0xfe, 0xff, 0xff, 0x3f, 0xcc,
  0x18, 0x10, 0x71, 0xb0, 0xb8, 0x01, 0x40, 0xb6, 0x00, 0x80, 0x19, 0x03,
  0xe2, 0x6d, 0x02, 0x3e, 0x80, 0x1b, 0xba, 0x05, 0x00, 0xcc, 0x18, 0x10,
  0x79, 0x13, 0xe4, 0xc1, 0xdb, 0x10, 0x2e, 0x00, 0x60, 0xc6, 0x80, 0xa0,
  0x03, 0xc6, 0x0d, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xd8,
  0xa2, 0xb7, 0xff, 0xff, 0xff, 0x07, 0x76, 0xd8, 0xed, 0xff, 0xff, 0xff,
  0x21, 0xc5, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0x38, 0xa2, 0x0c,
  0xcc, 0xc1, 0xf9, 0x66, 0x0c, 0x88, 0x3a, 0xc0, 0x72, 0x06, 0x18, 0x6e,
  0x08, 0x60, 0x22, 0x0c, 0x26, 0x0c, 0x80, 0xe1, 0x86, 0x20, 0x26, 0xc2,
  0x60, 0xc2, 0x00, 0x98, 0x65, 0x18, 0x88, 0x60, 0xc6, 0x80, 0xa8, 0x83,
  0xc4, 0x0d, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x28, 0x03, 0xb2,
  0x28, 0x89, 0x5a, 0xe8, 0x89, 0x19, 0x03, 0xe2, 0x0e, 0x4c, 0x41, 0x67,
  0x80, 0xd1, 0x84, 0x00, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0x00, 0x89, 0x0b, 0x7e, 0xfe, 0xff, 0xff, 0x1f, 0xe2, 0xe1, 0xb7,
  0xff, 0xff, 0xff, 0x07, 0x1b, 0xff, 0xff, 0xff, 0x1f, 0x66, 0x0c, 0x08,
  0xc8, 0x16, 0x74, 0x61, 0x67, 0xc8, 0x17, 0x00, 0x30, 0x63, 0x40, 0xdc,
  0x01, 0xa6, 0x33, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x72,
  0x51, 0xeb, 0xff, 0xff, 0xff, 0x83, 0x3c, 0xf8, 0xf6, 0xff, 0xff, 0xff,
  0xf0, 0xe2, 0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x01, 0xa9, 0x83, 0x2e,
  0xec, 0xcc, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x72, 0xd1, 0xcf,
  0xff, 0xff, 0xff, 0x83, 0x3c, 0x80, 0xf7, 0xff, 0xff, 0xff, 0x70, 0xe3,
  0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x01, 0xd9, 0x82, 0x2e, 0xec, 0xcc,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x72, 0x01, 0xd2, 0xff, 0xff,
  0xff, 0x83, 0x3c, 0xf4, 0xf6, 0xff, 0xff, 0xff, 0x70, 0xe3, 0xff, 0xff,
  0xff, 0xc3, 0x8c, 0x01, 0x01, 0xf9, 0x81, 0x2e, 0xec, 0xcc, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x20, 0x72, 0xf1, 0xcf, 0xff, 0xff, 0xff, 0x83,
  0x3c, 0xf4, 0xf6, 0xff, 0xff, 0xff, 0x60, 0xe3, 0xff, 0xff, 0xff, 0xc3,
  0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0x5c, 0xf8,
  0xf3, 0xff, 0xff, 0xff, 0x20, 0x0f, 0xbd, 0xfd, 0xff, 0xff, 0x3f, 0xd4,
  0xf7, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x01, 0x22, 0x17, 0x20, 0xfd, 0xff, 0xff, 0x3f, 0xc8, 0x43, 0x6f,
  0xff, 0xff, 0xff, 0x0f, 0x37, 0xfe, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0xc8, 0xc5, 0x3f, 0xff, 0xff,
  0xff, 0x0f, 0xf2, 0xd0, 0xdb, 0xff, 0xff, 0xff, 0x83, 0x8d, 0xff, 0xff,
  0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20,
  0x72, 0xe1, 0xcf, 0xff, 0xff, 0xff, 0x83, 0x3c, 0xf4, 0xf6, 0xff, 0xff,
  0xff, 0x50, 0xdf, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x88, 0x5c, 0xcc, 0xf4, 0xff, 0xff, 0xff, 0x20,
  0x0f, 0xbb, 0xfd, 0xff, 0xff, 0x3f, 0xdc, 0xf8, 0xff, 0xff, 0xff, 0x30,
  0x63, 0x40, 0x40, 0x67, 0xa0, 0x0b, 0x3b, 0x33, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x88, 0x5c, 0xc8, 0xf4, 0xff, 0xff, 0xff, 0x20, 0x0f, 0xbb,
  0xfd, 0xff, 0xff, 0x3f, 0xd8, 0xf8, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00,
  0xd0, 0x2f, 0x00, 0x60, 0xc6, 0x80, 0xa0, 0x0e, 0x5d, 0xd8, 0x99, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xe6, 0x22, 0xa4, 0xff, 0xff, 0xff,
  0x87, 0x79, 0xd8, 0xed, 0xff, 0xff, 0xff, 0x01, 0xc7, 0xff, 0xff, 0xff,
  0x87, 0x19, 0x03, 0x62, 0x92, 0x74, 0x61, 0x67, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x00, 0x99, 0x0b, 0x90, 0xfe, 0xff, 0xff, 0x1f, 0xe6, 0x61,
  0xb7, 0xff, 0xff, 0xff, 0x87, 0x1b, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c,
  0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xe6, 0xe2, 0x9f, 0xff,
  0xff, 0xff, 0x87, 0x79, 0xd8, 0xed, 0xff, 0xff, 0xff, 0xc1, 0xbe, 0xff,
  0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x90, 0xb9, 0x08, 0xe9, 0xff, 0xff, 0xff, 0x61, 0x1e, 0x76, 0xfb, 0xff,
  0xff, 0x7f, 0xc0, 0xf1, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x64, 0x2e, 0x40, 0xfa, 0xff, 0xff, 0x7f,
  0x98, 0x87, 0xdd, 0xfe, 0xff, 0xff, 0x1f, 0x6e, 0xfc, 0xff, 0xff, 0x7f,
  0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x99, 0x8b,
  0x7f, 0xfe, 0xff, 0xff, 0x1f, 0xe6, 0x61, 0xb7, 0xff, 0xff, 0xff, 0x07,
  0xfb, 0xfe, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x00, 0x4b, 0x07, 0x48, 0x3e,
  0x33, 0x06, 0xc4, 0x95, 0xe9, 0xc2, 0xce, 0x98, 0x3a, 0x40, 0xf2, 0x99,
  0x30, 0x00, 0x6c, 0x1d, 0x20, 0xf9, 0x4c, 0x18, 0x00, 0x36, 0x98, 0x03,
  0x7c, 0x66, 0x0c, 0x88, 0xab, 0xd3, 0x85, 0x9d, 0xb1, 0xc1, 0x1c, 0xe0,
  0x33, 0x61, 0x00, 0xd8, 0x60, 0x0e, 0xf0, 0x99, 0x30, 0x00, 0xc8, 0x1c,
  0x00, 0x30, 0x63, 0x40, 0x5c, 0x8c, 0x2e, 0xec, 0xcc, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x7a, 0x41, 0xd2, 0xff, 0xff, 0xff, 0x83, 0x3e,
  0x80, 0xf7, 0xff, 0xff, 0xff, 0xf0, 0xe3, 0xff, 0xff, 0xff, 0xc3, 0x84,
  0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0x5e, 0x8c, 0xf4,
  0xff, 0xff, 0xff, 0xa0, 0x0f, 0xe0, 0xfd, 0xff, 0xff, 0x3f, 0xf8, 0xf8,
  0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x01, 0xa2, 0x17, 0x22, 0xfd, 0xff, 0xff, 0x3f, 0xe8, 0x03, 0x78, 0xff,
  0xff, 0xff, 0x0f, 0xfd, 0xfd, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0xe8, 0x05, 0x49, 0xff, 0xff, 0xff,
  0x0f, 0xfa, 0x00, 0xde, 0xff, 0xff, 0xff, 0xc3, 0x8f, 0xff, 0xff, 0xff,
  0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x7a,
  0x31, 0xd2, 0xff, 0xff, 0xff, 0x83, 0x3e, 0x80, 0xf7, 0xff, 0xff, 0xff,
  0xe0, 0xe3, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x88, 0x5e, 0x88, 0xf4, 0xff, 0xff, 0xff, 0xa0, 0x0f,
  0xe0, 0xfd, 0xff, 0xff, 0x3f, 0xf4, 0xf7, 0xff, 0xff, 0xff, 0x30, 0x61,
  0x00, 0x98, 0x25, 0xc8, 0x67, 0xc6, 0x80, 0xc0, 0x26, 0x5d, 0xd8, 0x19,
  0xb3, 0x08, 0xf9, 0x4c, 0x18, 0x00, 0x26, 0x04, 0xf1, 0x99, 0x30, 0x00,
  0x0c, 0x3b, 0xe4, 0x33, 0x61, 0x00, 0xd8, 0x66, 0xc8, 0x67, 0xc2, 0x00,
  0x30, 0x21, 0x88, 0xcf, 0x84, 0x01, 0x60, 0x5d, 0x22, 0x9f, 0x09, 0x03,
  0xc0, 0xba, 0x45, 0x3e, 0x13, 0x06, 0x80, 0x09, 0x41, 0x7c, 0x26, 0x0c,
  0x80, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0xc8, 0xfa, 0xa2, 0x26, 0x0e,
  0x22, 0x38, 0x88, 0x60, 0xc6, 0x80, 0xc0, 0x12, 0x5d, 0xd8, 0x99, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0xb8, 0xfe, 0xa2, 0x26, 0x82, 0x09, 0x03,
  0xc0, 0x92, 0x40, 0x3e, 0x13, 0x06, 0x80, 0x1d, 0x82, 0x7c, 0x26, 0x0c,
  0x00, 0x2b, 0x06, 0xf9, 0x4c, 0x18, 0x00, 0x54, 0x0f, 0x00, 0x98, 0x31,
  0x20, 0xb0, 0x43, 0x17, 0x76, 0x66, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x90, 0xd4, 0x80, 0xe9, 0xff, 0xff, 0xff, 0x21, 0x25, 0xda, 0xfb, 0xff,
  0xff, 0x7f, 0x70, 0xf3, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x98, 0x1e,
  0x5d, 0xd8, 0x99, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0x52, 0xe3,
  0xa5, 0xff, 0xff, 0xff, 0x87, 0x94, 0x68, 0xef, 0xff, 0xff, 0xff, 0xa1,
  0xcd, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x90, 0xd4, 0x70, 0xe9, 0xff, 0xff, 0xff, 0x21, 0x25, 0xda,
  0xfb, 0xff, 0xff, 0x7f, 0x60, 0xf1, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x24, 0x35, 0x60, 0xfa, 0xff,
  0xff, 0x7f, 0x48, 0x89, 0xf6, 0xfe, 0xff, 0xff, 0x1f, 0xdc, 0xfc, 0xff,
  0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00,
  0x49, 0x8d, 0x97, 0xfe, 0xff, 0xff, 0x1f, 0x52, 0xa2, 0xbd, 0xff, 0xff,
  0xff, 0x87, 0x36, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x40, 0x52, 0xc3, 0xa5, 0xff, 0xff, 0xff, 0x87,
  0x94, 0x68, 0xef, 0xff, 0xff, 0xff, 0x81, 0xc5, 0xff, 0xff, 0xff, 0x87,
  0x09, 0x03, 0xc0, 0x06, 0x32, 0x90, 0xcf, 0x8c, 0x01, 0x91, 0x25, 0xba,
  0xb0, 0x33, 0x36, 0x98, 0x81, 0x7c, 0x26, 0x0c, 0x00, 0x13, 0x82, 0xf8,
  0x4c, 0x18, 0x00, 0x56, 0xa4, 0x81, 0x7c, 0x26, 0x0c, 0x00, 0x43, 0xd0,
  0x40, 0x3e, 0x13, 0x06, 0x80, 0x09, 0x41, 0x7c, 0x26, 0x0c, 0x00, 0x53,
  0xd6, 0x40, 0x3e, 0x13, 0x06, 0x80, 0x29, 0x6d, 0x20, 0x9f, 0x09, 0x03,
  0xc0, 0x84, 0x20, 0x3e, 0x13, 0x06, 0x00, 0xfd, 0x03, 0x00, 0x66, 0x0c,
  0x88, 0xec, 0xd0, 0x85, 0x9d, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0x64, 0x36, 0x6e, 0xfa, 0xff, 0xff, 0x7f, 0x98, 0x89, 0xfa, 0xfe, 0xff,
  0xff, 0x1f, 0xf0, 0xfc, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0x26, 0x46,
  0x17, 0x76, 0x66, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x90, 0xd9, 0xb0,
  0xe9, 0xff, 0xff, 0xff, 0x61, 0x26, 0xea, 0xfb, 0xff, 0xff, 0x7f, 0xb8,
  0xf3, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x03, 0x64, 0x36, 0x6a, 0xfa, 0xff, 0xff, 0x7f, 0x98, 0x89, 0xfa,
  0xfe, 0xff, 0xff, 0x1f, 0x6c, 0xfc, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00,
  0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x0c, 0x50, 0x23, 0x2d, 0xf2,
  0x61, 0x34, 0x66, 0x0c, 0x08, 0x32, 0xa0, 0x03, 0xf1, 0xd9, 0x99, 0xd1,
  0x84, 0x60, 0x98, 0x30, 0x00, 0xaa, 0x0c, 0x02, 0x98, 0x31, 0x20, 0xc8,
  0xe0, 0x0d, 0xc4, 0x67, 0x67, 0x2a, 0x30, 0x8d, 0x98, 0x31, 0x20, 0xc8,
  0x40, 0x15, 0xc4, 0x67, 0x67, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0,
  0x0c, 0x58, 0xa3, 0x2d, 0xfa, 0xe1, 0x34, 0x66, 0x0c, 0x08, 0x32, 0xa0,
  0x05, 0xf1, 0xd9, 0x99, 0xd1, 0x84, 0x60, 0x98, 0x30, 0x00, 0x6a, 0x08,
  0x66, 0xc6, 0x80, 0x20, 0x83, 0x57, 0x10, 0x9f, 0x9d, 0xa1, 0x93, 0x00,
  0xc0, 0x8c, 0x01, 0x41, 0x06, 0x8e, 0xf8, 0xec, 0xcc, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x20, 0xbb, 0xc1, 0xd3, 0xff, 0xff, 0xff, 0xc3, 0x4e,
  0xe8, 0xf7, 0xff, 0xff, 0xff, 0x80, 0xe7, 0xff, 0xff, 0xff, 0xc3, 0x84,
  0x01, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x65, 0x00, 0x1b, 0x71,
  0x11, 0x12, 0xab, 0x31, 0x63, 0x40, 0x94, 0x81, 0x1b, 0x88, 0xcf, 0xce,
  0x8c, 0x26, 0x04, 0xc3, 0x84, 0x01, 0x50, 0x22, 0x11, 0xcc, 0x8c, 0x01,
  0x51, 0x06, 0x69, 0x20, 0x3e, 0x3b, 0x53, 0x22, 0x21, 0xcc, 0x84, 0x01,
  0x40, 0x2c, 0x01, 0x80, 0x19, 0x03, 0xa2, 0x0c, 0x1e, 0xf1, 0xd9, 0x99,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xc0, 0x03, 0xac, 0xff, 0xff,
  0xff, 0x07, 0xb0, 0xe8, 0xef, 0xff, 0xff, 0xff, 0xa1, 0xd4, 0xff, 0xff,
  0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10,
  0xf0, 0xf8, 0xe9, 0xff, 0xff, 0xff, 0x01, 0x2c, 0xfa, 0xfb, 0xff, 0xff,
  0x7f, 0x20, 0xf5, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0x04, 0x3c, 0xc0, 0xfa, 0xff, 0xff, 0x7f, 0x00,
  0x8b, 0xfe, 0xfe, 0xff, 0xff, 0x1f, 0x4a, 0xfd, 0xff, 0xff, 0x7f, 0x98,
  0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x01, 0x8f, 0x9f,
  0xfe, 0xff, 0xff, 0x1f, 0xc0, 0xa2, 0xbf, 0xff, 0xff, 0xff, 0x07, 0x52,
  0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x28, 0x83, 0xda, 0xb0, 0x0b, 0x93, 0x80, 0x8d, 0x19, 0x03, 0x42,
  0x0d, 0xdc, 0x40, 0x7c, 0x76, 0x66, 0x34, 0x21, 0x18, 0x26, 0x0c, 0x80,
  0x2a, 0x02, 0x99, 0x31, 0x20, 0xd4, 0x20, 0x0d, 0xc4, 0x67, 0x67, 0xaa,
  0x10, 0x64, 0xc2, 0x00, 0xa0, 0x98, 0x00, 0xc0, 0x8c, 0x01, 0xa1, 0x06,
  0x8f, 0xf8, 0xec, 0xcc, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0xe5,
  0x31, 0xd6, 0xff, 0xff, 0xff, 0x43, 0x59, 0x80, 0xf8, 0xff, 0xff, 0xff,
  0xa0, 0xea, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x48, 0x79, 0x88, 0xf5, 0xff, 0xff, 0xff, 0x50, 0x16,
  0x20, 0xfe, 0xff, 0xff, 0x3f, 0xa4, 0xfa, 0xff, 0xff, 0xff, 0x30, 0x61,
  0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x52, 0x1e, 0x63, 0xfd,
  0xff, 0xff, 0x3f, 0x94, 0x05, 0x88, 0xff, 0xff, 0xff, 0x0f, 0xaa, 0xfe,
  0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x80, 0x94, 0x87, 0x58, 0xff, 0xff, 0xff, 0x0f, 0x65, 0x01, 0xe2, 0xff,
  0xff, 0xff, 0x43, 0xaa, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88,
  0x41, 0x03, 0x80, 0x20, 0x18, 0x70, 0xbe, 0x41, 0x17, 0x2d, 0x31, 0x1b,
  0x83, 0xa0, 0x17, 0x7a, 0xa1, 0x17, 0x7a, 0x31, 0x63, 0x40, 0xac, 0xc1,
  0x19, 0x88, 0xcf, 0xce, 0x8c, 0x26, 0x04, 0xc0, 0x84, 0x01, 0x30, 0x9a,
  0x20, 0x04, 0x13, 0x06, 0xc0, 0x68, 0xc2, 0x20, 0x4c, 0x18, 0x00, 0x64,
  0x13, 0x00, 0x98, 0x31, 0x20, 0xd6, 0x00, 0x12, 0x9f, 0x9d, 0x19, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x44, 0x3d, 0xcc, 0xfa, 0xff, 0xff, 0x7f,
  0x50, 0x8b, 0x11, 0xff, 0xff, 0xff, 0x1f, 0x5e, 0xfd, 0xff, 0xff, 0x7f,
  0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x51, 0x8f,
  0xb2, 0xfe, 0xff, 0xff, 0x1f, 0xd4, 0x62, 0xc4, 0xff, 0xff, 0xff, 0x07,
  0x57, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x40, 0xd4, 0x83, 0xac, 0xff, 0xff, 0xff, 0x07, 0xb5, 0x18,
  0xf1, 0xff, 0xff, 0xff, 0xa1, 0xcd, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03,
  0xa0, 0x98, 0x48, 0x66, 0x0c, 0x08, 0x36, 0x68, 0x03, 0xf1, 0xd9, 0x99,
  0x0a, 0x1c, 0x98, 0x31, 0x20, 0xd8, 0x00, 0x14, 0xc4, 0x67, 0x67, 0x2e,
  0xa0, 0x6a, 0xc6, 0x80, 0x60, 0x03, 0x4f, 0x7c, 0x76, 0x86, 0x74, 0x02,
  0x00, 0x33, 0x06, 0x04, 0x1b, 0xcc, 0x82, 0xf8, 0xec, 0xcc, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x20, 0xee, 0xa1, 0xd6, 0xff, 0xff, 0xff, 0x83,
  0x5b, 0x94, 0xf8, 0xff, 0xff, 0xff, 0x30, 0xeb, 0xff, 0xff, 0xff, 0xc3,
  0x8c, 0x01, 0xe1, 0x3a, 0xd3, 0x2f, 0xb4, 0xcf, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x20, 0xee, 0x91, 0xd6, 0xff, 0xff, 0xff, 0x83, 0x5b, 0x94,
  0xf8, 0xff, 0xff, 0xff, 0x20, 0xeb, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0x7b, 0xa0, 0xf5, 0xff,
  0xff, 0xff, 0xe0, 0x16, 0x25, 0xfe, 0xff, 0xff, 0x3f, 0xc4, 0xf9, 0xff,
  0xff, 0xff, 0x30, 0x61, 0x00, 0x18, 0x32, 0x16, 0xf2, 0x99, 0x31, 0x20,
  0x60, 0xe7, 0xf9, 0x85, 0xf6, 0x31, 0x84, 0x2c, 0xe4, 0x33, 0x61, 0x00,
  0x18, 0x52, 0x16, 0xf2, 0x99, 0x30, 0x00, 0x6c, 0x28, 0x0b, 0xf8, 0xcc,
  0x18, 0x10, 0xb0, 0xa3, 0xfd, 0x42, 0xfb, 0xd8, 0x60, 0x16, 0xf0, 0x99,
  0x30, 0x00, 0x6c, 0x38, 0x0b, 0xf8, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x70, 0xbd, 0xc7, 0x69, 0x0c, 0x33, 0x06, 0x04, 0xec,
  0x24, 0xbf, 0xd0, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x70, 0xc1,
  0x07, 0x6a, 0x0c, 0x13, 0x06, 0xc0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x5c, 0xf1, 0x91, 0x1a, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0xc8, 0x7d, 0xc0, 0xf5, 0xff, 0xff, 0xff, 0x70, 0x17, 0x2e,
  0xfe, 0xff, 0xff, 0x3f, 0xf0, 0xfa, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40,
  0xb8, 0xce, 0xf4, 0x0b, 0xed, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0xc8, 0x7d, 0xbc, 0xf5, 0xff, 0xff, 0xff, 0x70, 0x17, 0x2e, 0xfe, 0xff,
  0xff, 0x3f, 0xec, 0xfa, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x01, 0x72, 0x1f, 0x6e, 0xfd, 0xff, 0xff, 0x3f,
  0xdc, 0x85, 0x8b, 0xff, 0xff, 0xff, 0x0f, 0x7a, 0xfe, 0xff, 0xff, 0x3f,
  0x4c, 0x18, 0x00, 0x36, 0xa8, 0x85, 0x7c, 0x66, 0x0c, 0x88, 0xd8, 0x39,
  0x7e, 0xa1, 0x7d, 0x6c, 0x58, 0x0b, 0xf9, 0x4c, 0x18, 0x00, 0x36, 0xb0,
  0x85, 0x7c, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40,
  0xf4, 0x03, 0xae, 0xff, 0xff, 0xff, 0x07, 0xbd, 0x88, 0xf1, 0xff, 0xff,
  0xff, 0xe1, 0xd7, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0xc2, 0x75, 0xa6,
  0x5f, 0x68, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xf4, 0xe3,
  0xad, 0xff, 0xff, 0xff, 0x07, 0xbd, 0x88, 0xf1, 0xff, 0xff, 0xff, 0xc1,
  0xd7, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x10, 0xfd, 0x70, 0xeb, 0xff, 0xff, 0xff, 0x41, 0x2f, 0x62,
  0xfc, 0xff, 0xff, 0x7f, 0xe8, 0xf3, 0xff, 0xff, 0xff, 0x61, 0xc2, 0x00,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x44, 0x3f, 0xe0, 0xfa, 0xff,
  0xff, 0x7f, 0xd0, 0x8b, 0x18, 0xff, 0xff, 0xff, 0x1f, 0x7e, 0xfd, 0xff,
  0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00,
  0xd1, 0x8f, 0xb7, 0xfe, 0xff, 0xff, 0x1f, 0xf4, 0x22, 0xc6, 0xff, 0xff,
  0xff, 0x07, 0x5f, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x40, 0xf4, 0xc3, 0xad, 0xff, 0xff, 0xff, 0x07,
  0xbd, 0x88, 0xf1, 0xff, 0xff, 0xff, 0xa1, 0xcf, 0xff, 0xff, 0xff, 0x87,
  0x09, 0x03, 0xc0, 0x06, 0x41, 0x3e, 0x33, 0x06, 0x84, 0xec, 0x50, 0xbf,
  0xd0, 0x3e, 0x16, 0x08, 0xf2, 0x99, 0x31, 0x20, 0x64, 0x07, 0xfb, 0x85,
  0xf6, 0xb1, 0x82, 0x80, 0xcf, 0x8c, 0x01, 0x21, 0x3b, 0x62, 0xf0, 0x0b,
  0xed, 0x63, 0x01, 0x01, 0x9f, 0x19, 0x03, 0x42, 0x76, 0xd0, 0xe0, 0x17,
  0xda, 0xc7, 0x86, 0x40, 0x3e, 0x33, 0x06, 0x84, 0xec, 0x70, 0xbf, 0xd0,
  0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x70, 0xe9, 0x87, 0x6c, 0x04,
  0x33, 0x06, 0x84, 0xec, 0x30, 0xbf, 0xd0, 0x3e, 0xd4, 0x16, 0x00, 0x98,
  0x31, 0x20, 0x64, 0xa7, 0xf8, 0x85, 0xf6, 0xb1, 0x4a, 0x90, 0xcf, 0x8c,
  0x01, 0xc1, 0x06, 0xb1, 0x20, 0x3e, 0x3b, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x65, 0x70, 0x1f, 0xb8, 0x81, 0x16, 0xf2, 0x31, 0x63, 0x40,
  0xb0, 0xc1, 0x3c, 0x88, 0xcf, 0xce, 0x8c, 0x26, 0x04, 0xc0, 0x84, 0x01,
  0x70, 0x01, 0x55, 0x33, 0x06, 0x04, 0x1b, 0xc0, 0x83, 0xf8, 0xec, 0x8c,
  0x11, 0x01, 0x7c, 0x66, 0x0c, 0x08, 0x36, 0x70, 0x07, 0xf1, 0xd9, 0x99,
  0x0b, 0x80, 0x99, 0x31, 0x20, 0xd8, 0xc0, 0x13, 0x9f, 0x9d, 0x21, 0xba,
  0x00, 0xc0, 0x8c, 0x01, 0xc1, 0x06, 0x8e, 0xf8, 0xec, 0xcc, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x20, 0x28, 0xb2, 0xd7, 0xff, 0xff, 0xff, 0x03,
  0x6a, 0xf0, 0xf8, 0xff, 0xff, 0xff, 0x50, 0xee, 0xff, 0xff, 0xff, 0xc3,
  0x84, 0x01, 0x40, 0x75, 0x01, 0x80, 0x19, 0x03, 0xa2, 0x0d, 0x32, 0xf1,
  0xd9, 0x99, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0x52, 0x84, 0xaf,
  0xff, 0xff, 0xff, 0x87, 0xd4, 0xe0, 0xf1, 0xff, 0xff, 0xff, 0xc1, 0xdc,
  0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x62, 0xd2, 0xd0, 0x21, 0x7e, 0x6a,
  0x78, 0x0d, 0x9e, 0x31, 0x20, 0x2e, 0x0b, 0x1d, 0xe2, 0xa7, 0x08, 0xfa,
  0xc0, 0x19, 0x03, 0xe2, 0x22, 0x03, 0x74, 0x88, 0x9f, 0x12, 0x02, 0x9e,
  0x31, 0x20, 0x2e, 0x0e, 0x1d, 0xe2, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x10, 0x16, 0xf1, 0xeb, 0xff, 0xff, 0xff, 0x81, 0x35, 0x7e, 0xfc,
  0xff, 0xff, 0x7f, 0x48, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x98,
  0x34, 0x74, 0x88, 0x9f, 0x0a, 0xf0, 0x43, 0x66, 0x0c, 0x08, 0xcc, 0x41,
  0x87, 0xf8, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x45, 0xfc,
  0xfa, 0xff, 0xff, 0x7f, 0x68, 0x0d, 0x30, 0xff, 0xff, 0xff, 0x1f, 0xd4,
  0xfd, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0x26, 0x0d, 0x1d, 0xe2, 0xa7,
  0x02, 0xff, 0xc0, 0x19, 0x03, 0x22, 0xeb, 0xd0, 0x21, 0x7e, 0x4a, 0x08,
  0x78, 0xc6, 0x80, 0xc8, 0x2a, 0x74, 0x88, 0x9f, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x40, 0x5e, 0xe4, 0xaf, 0xff, 0xff, 0xff, 0x87, 0xd7, 0x10,
  0xf3, 0xff, 0xff, 0xff, 0x81, 0xdd, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03,
  0x62, 0xd2, 0xd0, 0x21, 0x7e, 0x2a, 0xa0, 0x0d, 0x99, 0x31, 0x20, 0x34,
  0x07, 0x1d, 0xe2, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x18,
  0xf9, 0xeb, 0xff, 0xff, 0xff, 0x01, 0x36, 0xc6, 0xfc, 0xff, 0xff, 0x7f,
  0x68, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x98, 0x34, 0x74, 0x88,
  0x9f, 0x0a, 0x68, 0x03, 0x67, 0x0c, 0x88, 0xad, 0x43, 0x87, 0xf8, 0x29,
  0x21, 0xe0, 0x19, 0x03, 0x62, 0xab, 0xd0, 0x21, 0x7e, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x00, 0x91, 0x11, 0xd0, 0xfe, 0xff, 0xff, 0x1f, 0x64,
  0xa3, 0xcc, 0xff, 0xff, 0xff, 0x87, 0x77, 0xff, 0xff, 0xff, 0x1f, 0x66,
  0x0c, 0x88, 0x49, 0x43, 0x87, 0xf8, 0xa1, 0xbf, 0x00, 0xc0, 0x8c, 0x01,
  0xc1, 0x25, 0xe8, 0x10, 0x3f, 0x04, 0x1a, 0x00, 0x98, 0x31, 0x20, 0xda,
  0xc0, 0x11, 0x9f, 0x9d, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x84,
  0x46, 0x44, 0xfb, 0xff, 0xff, 0x7f, 0xa0, 0x0d, 0x32, 0xff, 0xff, 0xff,
  0x1f, 0xe2, 0xfd, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xc0, 0x80, 0xc3,
  0x07, 0xfb, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x84, 0x46, 0x44,
  0xfb, 0xff, 0xff, 0x7f, 0xa0, 0x0d, 0x30, 0xff, 0xff, 0xff, 0x1f, 0xe2,
  0xfd, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xd4, 0xe0, 0xa3, 0x87, 0xfa,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x84, 0x46, 0x44, 0xfb, 0xff,
  0xff, 0x7f, 0xa0, 0x8d, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xe2, 0xfd, 0xff,
  0xff, 0x7f, 0x98, 0x31, 0x20, 0xee, 0x80, 0x7b, 0x07, 0xfa, 0x19, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x84, 0x46, 0x44, 0xfb, 0xff, 0xff, 0x7f,
  0xa0, 0x0d, 0x32, 0xff, 0xff, 0xff, 0x1f, 0xe2, 0xfd, 0xff, 0xff, 0x7f,
  0x98, 0x31, 0x20, 0xc0, 0x80, 0xc3, 0x87, 0xfd, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x84, 0x46, 0x44, 0xfb, 0xff, 0xff, 0x7f, 0xa0, 0x0d,
  0x30, 0xff, 0xff, 0xff, 0x1f, 0xe2, 0xfd, 0xff, 0xff, 0x7f, 0x98, 0x31,
  0x20, 0xd4, 0xe0, 0xa3, 0x07, 0xfd, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x03, 0x84, 0x46, 0x44, 0xfb, 0xff, 0xff, 0x7f, 0xa0, 0x8d, 0x1f, 0xff,
  0xff, 0xff, 0x1f, 0xe2, 0xfd, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xee,
  0x80, 0x7b, 0x87, 0xfc, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x84,
  0x46, 0x44, 0xfb, 0xff, 0xff, 0x7f, 0xa0, 0x0d, 0x1d, 0xff, 0xff, 0xff,
  0x1f, 0xe2, 0xfd, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xda, 0xc0, 0x11,
  0x9f, 0x9d, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x32, 0x48, 0x11,
  0xf5, 0xd0, 0x0b, 0x12, 0x99, 0x31, 0x20, 0xde, 0xa0, 0x0e, 0xc4, 0x67,
  0x67, 0x46, 0x13, 0x02, 0x61, 0xc2, 0x00, 0xa8, 0xc0, 0x44, 0x62, 0xc6,
  0x80, 0x78, 0x83, 0x51, 0x10, 0x9f, 0x9d, 0x21, 0xd2, 0x00, 0xc0, 0x8c,
  0x01, 0xf1, 0x06, 0x99, 0xf8, 0xec, 0xcc, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x20, 0x38, 0x52, 0xda, 0xff, 0xff, 0xff, 0x03, 0x6e, 0xf0, 0xf8,
  0xff, 0xff, 0xff, 0x50, 0xef, 0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x71,
  0x07, 0x74, 0xf0, 0x0e, 0xf9, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x08, 0x8e, 0xec, 0xfd, 0xff, 0xff, 0xff, 0x80, 0x1b, 0x3a, 0xfe, 0xff,
  0xff, 0x3f, 0xd4, 0xfb, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0xdc, 0x01,
  0x1a, 0xbc, 0x43, 0xfe, 0x94, 0x60, 0x22, 0x31, 0x63, 0x40, 0xe4, 0x41,
  0x1a, 0xbc, 0x43, 0xfe, 0x54, 0x90, 0x22, 0x30, 0x63, 0x40, 0xe4, 0x41,
  0x1c, 0xbc, 0x43, 0xfe, 0x5c, 0x40, 0xd5, 0x8c, 0x01, 0x91, 0x07, 0x63,
  0xf0, 0x0e, 0xf9, 0x43, 0xa8, 0x01, 0x80, 0x19, 0x03, 0x22, 0x0f, 0xf0,
  0xe0, 0x1d, 0xf2, 0x87, 0x52, 0x03, 0x00, 0x33, 0x06, 0x04, 0x1b, 0x94,
  0x01, 0x3d, 0xe8, 0x4f, 0x31, 0xea, 0x71, 0x33, 0x06, 0xc4, 0x18, 0x64,
  0xf8, 0xb0, 0x3f, 0xd5, 0x04, 0x3c, 0x63, 0x40, 0x8c, 0xc1, 0x83, 0x0f,
  0xfb, 0x43, 0xac, 0x01, 0x80, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x10, 0x30, 0x61, 0xed, 0xff, 0xff, 0xff, 0x01, 0x3c, 0xe0,
  0xfc, 0xff, 0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80,
  0x00, 0x03, 0x0e, 0x1f, 0xec, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x10, 0x30, 0x61, 0xed, 0xff, 0xff, 0xff, 0x01, 0x3c, 0xd8, 0xfc, 0xff,
  0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x50, 0x83,
  0x8f, 0x1e, 0xea, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x30,
  0x61, 0xed, 0xff, 0xff, 0xff, 0x01, 0x3c, 0xd6, 0xfc, 0xff, 0xff, 0x7f,
  0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0xb8, 0x03, 0xee, 0x1d,
  0xe8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x30, 0x61, 0xed,
  0xff, 0xff, 0xff, 0x01, 0x3c, 0xe0, 0xfc, 0xff, 0xff, 0x7f, 0xe8, 0xf7,
  0xff, 0xff, 0xff, 0x61, 0xc6, 0x80, 0x00, 0x03, 0x0e, 0x1f, 0xf6, 0x67,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x30, 0x61, 0xed, 0xff, 0xff,
  0xff, 0x01, 0x3c, 0xd8, 0xfc, 0xff, 0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff,
  0xff, 0x61, 0xc6, 0x80, 0x50, 0x83, 0x8f, 0x1e, 0xf4, 0x67, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x10, 0x30, 0x61, 0xed, 0xff, 0xff, 0xff, 0x01,
  0x3c, 0xd6, 0xfc, 0xff, 0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61,
  0xc6, 0x80, 0xb8, 0x03, 0xee, 0x1d, 0xf2, 0x67, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x10, 0x30, 0x61, 0xed, 0xff, 0xff, 0xff, 0x01, 0x3c, 0xcc,
  0xfc, 0xff, 0xff, 0x7f, 0xe8, 0xf7, 0xff, 0xff, 0xff, 0x61, 0xc6, 0x80,
  0x68, 0x03, 0x47, 0x7c, 0x76, 0xa6, 0x04, 0xf6, 0xc0, 0x19, 0x03, 0x82,
  0x0c, 0x32, 0x7c, 0xd8, 0x9f, 0x1a, 0x02, 0x9e, 0x31, 0x20, 0xc8, 0xe0,
  0xc1, 0x87, 0xfd, 0xa1, 0xd7, 0x00, 0xc0, 0x84, 0x01, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xc8, 0x98, 0xb8, 0xf6, 0xff, 0xff, 0xff, 0x30,
  0x1e, 0x73, 0xfe, 0xff, 0xff, 0x3f, 0x80, 0xfc, 0xff, 0xff, 0xff, 0x30,
  0x63, 0x40, 0x80, 0x01, 0x87, 0x0f, 0xf6, 0x33, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0xc8, 0x98, 0xb8, 0xf6, 0xff, 0xff, 0xff, 0x30, 0x1e, 0x6f,
  0xfe, 0xff, 0xff, 0x3f, 0x80, 0xfc, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40,
  0xa8, 0xc1, 0x47, 0x0f, 0xf5, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0xc8, 0x98, 0xb8, 0xf6, 0xff, 0xff, 0xff, 0x30, 0x1e, 0x6e, 0xfe, 0xff,
  0xff, 0x3f, 0x80, 0xfc, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0xdc, 0x01,
  0xf7, 0x0e, 0xf4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x98,
  0xb8, 0xf6, 0xff, 0xff, 0xff, 0x30, 0x1e, 0x73, 0xfe, 0xff, 0xff, 0x3f,
  0x80, 0xfc, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x80, 0x01, 0x87, 0x0f,
  0xfb, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x98, 0xb8, 0xf6,
  0xff, 0xff, 0xff, 0x30, 0x1e, 0x6f, 0xfe, 0xff, 0xff, 0x3f, 0x80, 0xfc,
  0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0xa8, 0xc1, 0x47, 0x0f, 0xfa, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x98, 0xb8, 0xf6, 0xff, 0xff,
  0xff, 0x30, 0x1e, 0x6e, 0xfe, 0xff, 0xff, 0x3f, 0x80, 0xfc, 0xff, 0xff,
  0xff, 0x30, 0x63, 0x40, 0xdc, 0x01, 0xf7, 0x0e, 0xf9, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xc8, 0x98, 0xb8, 0xf6, 0xff, 0xff, 0xff, 0x30,
  0x1e, 0x69, 0xfe, 0xff, 0xff, 0x3f, 0x80, 0xfc, 0xff, 0xff, 0xff, 0x30,
  0x63, 0x40, 0xb4, 0x81, 0x23, 0x3e, 0x3b, 0x53, 0x02, 0x8c, 0xdc, 0x8c,
  0x01, 0x51, 0x06, 0x19, 0x3e, 0xec, 0x4f, 0x0d, 0x01, 0xcf, 0x18, 0x10,
  0x65, 0xf0, 0xe0, 0xc3, 0xfe, 0x90, 0x6c, 0x00, 0x60, 0xc2, 0x00, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x4c, 0x60, 0xfb, 0xff, 0xff,
  0x7f, 0x30, 0x0f, 0x3b, 0xff, 0xff, 0xff, 0x1f, 0x46, 0xfe, 0xff, 0xff,
  0x7f, 0x98, 0x31, 0x20, 0xc0, 0x80, 0xc3, 0x07, 0xfb, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0xc4, 0x4c, 0x60, 0xfb, 0xff, 0xff, 0x7f, 0x30,
  0x0f, 0x39, 0xff, 0xff, 0xff, 0x1f, 0x46, 0xfe, 0xff, 0xff, 0x7f, 0x98,
  0x31, 0x20, 0xd4, 0xe0, 0xa3, 0x87, 0xfa, 0x19, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x03, 0xc4, 0x4c, 0x60, 0xfb, 0xff, 0xff, 0x7f, 0x30, 0x8f, 0x38,
  0xff, 0xff, 0xff, 0x1f, 0x46, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20,
  0xee, 0x80, 0x7b, 0x07, 0xfa, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0xc4, 0x4c, 0x60, 0xfb, 0xff, 0xff, 0x7f, 0x30, 0x0f, 0x3b, 0xff, 0xff,
  0xff, 0x1f, 0x46, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xc0, 0x80,
  0xc3, 0x87, 0xfd, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x4c,
  0x60, 0xfb, 0xff, 0xff, 0x7f, 0x30, 0x0f, 0x39, 0xff, 0xff, 0xff, 0x1f,
  0x46, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xd4, 0xe0, 0xa3, 0x07,
  0xfd, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x4c, 0x60, 0xfb,
  0xff, 0xff, 0x7f, 0x30, 0x8f, 0x38, 0xff, 0xff, 0xff, 0x1f, 0x46, 0xfe,
  0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xee, 0x80, 0x7b, 0x87, 0xfc, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x4c, 0x60, 0xfb, 0xff, 0xff,
  0x7f, 0x30, 0x0f, 0x36, 0xff, 0xff, 0xff, 0x1f, 0x46, 0xfe, 0xff, 0xff,
  0x7f, 0x98, 0x31, 0x20, 0xda, 0xc0, 0x11, 0x9f, 0x9d, 0xa1, 0xd9, 0x00,
  0xc0, 0x8c, 0x01, 0x61, 0x06, 0x09, 0x3e, 0xec, 0x4f, 0x0d, 0x33, 0x82,
  0x33, 0x06, 0x04, 0x1b, 0xcc, 0x01, 0x3d, 0xe8, 0x4f, 0xcd, 0x47, 0xb0,
  0x33, 0x06, 0x04, 0x1b, 0x8c, 0x01, 0x3d, 0xe8, 0xcf, 0x05, 0xd4, 0xce,
  0x18, 0x10, 0x6c, 0x00, 0xd1, 0x83, 0xfe, 0x58, 0x30, 0x1e, 0xf1, 0x99,
  0x31, 0x20, 0xd8, 0x20, 0x0f, 0xe8, 0x41, 0x7f, 0x08, 0x37, 0x00, 0x30,
  0x63, 0x40, 0xb0, 0x41, 0x42, 0x0f, 0xfa, 0x63, 0x92, 0x20, 0x9f, 0x19,
  0x03, 0x22, 0x0f, 0xec, 0xe0, 0x1d, 0xf2, 0xe7, 0x02, 0x60, 0x66, 0x0c,
  0x88, 0x3c, 0xe8, 0xde, 0x21, 0x7f, 0x8a, 0x47, 0x02, 0x98, 0x31, 0x20,
  0xf2, 0xc0, 0x7a, 0x87, 0xfc, 0x21, 0xde, 0x00, 0xc0, 0x8c, 0x01, 0x91,
  0x07, 0xc9, 0x3b, 0xe4, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x94,
  0x41, 0x99, 0x98, 0x88, 0x6d, 0x80, 0xc9, 0x8c, 0x01, 0xf1, 0x06, 0xad,
  0x20, 0x3e, 0x3b, 0x33, 0x9a, 0x10, 0x04, 0x13, 0x06, 0x40, 0x11, 0x81,
  0xcc, 0x18, 0x10, 0x6f, 0x80, 0x0a, 0xe2, 0xb3, 0x33, 0x04, 0x1e, 0x00,
  0x98, 0x31, 0x20, 0xde, 0xe0, 0x12, 0x9f, 0x9d, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x84, 0x4e, 0x7a, 0xfb, 0xff, 0xff, 0x7f, 0xa0, 0x0f,
  0x3a, 0xff, 0xff, 0xff, 0x1f, 0x62, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31,
  0x20, 0x38, 0x45, 0x17, 0x76, 0x66, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xca, 0x20, 0x4d, 0x54, 0x44, 0x37, 0xc8, 0x64, 0xc6, 0x80, 0x90, 0x83,
  0x38, 0x10, 0x9f, 0x9d, 0x19, 0x4d, 0x08, 0x86, 0x09, 0x03, 0xa0, 0x76,
  0x23, 0xa8, 0x19, 0x03, 0x42, 0x0e, 0xd8, 0x40, 0x7c, 0x76, 0xa6, 0x76,
  0x43, 0xa8, 0x09, 0x03, 0x80, 0xca, 0x03, 0x00, 0x33, 0x06, 0x84, 0x1c,
  0x3c, 0xe2, 0xb3, 0x33, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0xe4,
  0x49, 0x78, 0xff, 0xff, 0xff, 0x0f, 0xf9, 0x71, 0xe7, 0xff, 0xff, 0xff,
  0x83, 0xcf, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x79, 0x02, 0xde, 0xff, 0xff, 0xff, 0x43, 0x7e,
  0xdc, 0xf9, 0xff, 0xff, 0xff, 0xd0, 0xf3, 0xff, 0xff, 0xff, 0xc3, 0x84,
  0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x48, 0x9e, 0x84, 0xf7,
  0xff, 0xff, 0xff, 0x90, 0x1f, 0x77, 0xfe, 0xff, 0xff, 0x3f, 0xf8, 0xfc,
  0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x01, 0x92, 0x27, 0xe0, 0xfd, 0xff, 0xff, 0x3f, 0xe4, 0xc7, 0x9d, 0xff,
  0xff, 0xff, 0x0f, 0x3d, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0x06, 0x6e, 0xf2, 0x22, 0xbf, 0x91,
  0x26, 0x33, 0x06, 0xc4, 0x1c, 0xcc, 0x81, 0xf8, 0xec, 0xcc, 0x68, 0x42,
  0x30, 0x4c, 0x18, 0x00, 0x45, 0x04, 0x32, 0x63, 0x40, 0xcc, 0x81, 0x1b,
  0x88, 0xcf, 0xce, 0x54, 0x60, 0xc0, 0x8c, 0x01, 0x31, 0x07, 0xa9, 0x20,
  0x3e, 0x3b, 0x43, 0xea, 0x01, 0x80, 0x19, 0x03, 0x62, 0x0e, 0x1c, 0xf1,
  0xd9, 0x99, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xfc, 0x84, 0xbc,
  0xff, 0xff, 0xff, 0x07, 0xff, 0xd0, 0xf3, 0xff, 0xff, 0xff, 0x61, 0xe7,
  0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xca, 0x60, 0x4e, 0x68, 0x84, 0x3c, 0xdc, 0x64, 0xc6, 0x80, 0xb8,
  0x83, 0x31, 0x10, 0x9f, 0x9d, 0x19, 0x4d, 0x08, 0x86, 0x09, 0x03, 0x60,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xca, 0xa0, 0x4e, 0x6c, 0xc4, 0x3c,
  0xe0, 0x64, 0xc6, 0x80, 0xb8, 0x03, 0x3f, 0x10, 0x9f, 0x9d, 0x19, 0x4d,
  0x08, 0x86, 0x09, 0x03, 0xa0, 0x86, 0x40, 0x66, 0x0c, 0x88, 0x3b, 0xc8,
  0x03, 0xf1, 0xd9, 0x19, 0x82, 0x0f, 0x00, 0xcc, 0x18, 0x10, 0x77, 0xe0,
  0x88, 0xcf, 0xce, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x2a,
  0xe9, 0xfd, 0xff, 0xff, 0x3f, 0x90, 0x88, 0x9f, 0xff, 0xff, 0xff, 0x0f,
  0x61, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x25, 0xd0, 0x49, 0xcc,
  0x18, 0x10, 0x78, 0xe0, 0x0a, 0xe2, 0xb3, 0x33, 0x24, 0x1f, 0x00, 0x98,
  0x31, 0x20, 0xf0, 0xa0, 0x0c, 0xc4, 0x67, 0x67, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x00, 0x31, 0x15, 0xf5, 0xfe, 0xff, 0xff, 0x1f, 0x4c, 0x44,
  0xd5, 0xff, 0xff, 0xff, 0x87, 0xb1, 0xff, 0xff, 0xff, 0x1f, 0x66, 0x0c,
  0x88, 0x3b, 0xa0, 0x83, 0x77, 0xa0, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x40, 0x4c, 0x25, 0xfd, 0xff, 0xff, 0xff, 0x07, 0x13, 0x41, 0xf5,
  0xff, 0xff, 0xff, 0x61, 0xec, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0xe2,
  0x0e, 0xd0, 0xe0, 0x1d, 0xe8, 0xa7, 0x04, 0x3a, 0x89, 0x19, 0x03, 0x22,
  0x0f, 0xd2, 0xe0, 0x1d, 0xe8, 0xa7, 0x82, 0x3b, 0x81, 0x19, 0x03, 0x22,
  0x0f, 0xe2, 0xe0, 0x1d, 0xe8, 0xe7, 0x02, 0xaa, 0x66, 0x0c, 0x88, 0x3c,
  0x18, 0x83, 0x77, 0xa0, 0x1f, 0xb2, 0x0f, 0x00, 0xcc, 0x18, 0x10, 0x79,
  0x80, 0x07, 0xef, 0x40, 0x3f, 0x74, 0x1f, 0x00, 0x98, 0x31, 0x20, 0xd8,
  0xa0, 0x0c, 0xe8, 0xa1, 0x7e, 0xea, 0x0c, 0x70, 0xe4, 0x66, 0x0c, 0x88,
  0x31, 0xc8, 0xf0, 0xc1, 0x7e, 0x0a, 0x0d, 0x02, 0x9e, 0x31, 0x20, 0xc6,
  0xe0, 0xc1, 0x07, 0xfb, 0x21, 0xfd, 0x00, 0xc0, 0x84, 0x01, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0xab, 0xc4, 0xf7, 0xff, 0xff, 0xff,
  0xe0, 0x22, 0xbe, 0xfe, 0xff, 0xff, 0x3f, 0xac, 0xfd, 0xff, 0xff, 0xff,
  0x30, 0x63, 0x40, 0x80, 0x01, 0x87, 0x0f, 0xf6, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x88, 0xab, 0xc4, 0xf7, 0xff, 0xff, 0xff, 0xe0, 0x22,
  0xba, 0xfe, 0xff, 0xff, 0x3f, 0xac, 0xfd, 0xff, 0xff, 0xff, 0x30, 0x63,
  0x40, 0xa8, 0xc1, 0x47, 0x0f, 0xf5, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x88, 0xab, 0xc4, 0xf7, 0xff, 0xff, 0xff, 0xe0, 0x22, 0xb9, 0xfe,
  0xff, 0xff, 0x3f, 0xac, 0xfd, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0xdc,
  0x01, 0xf7, 0x0e, 0xf4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88,
  0xab, 0xc4, 0xf7, 0xff, 0xff, 0xff, 0xe0, 0x22, 0xbe, 0xfe, 0xff, 0xff,
  0x3f, 0xac, 0xfd, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0x80, 0x01, 0x87,
  0x0f, 0xfb, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0xab, 0xc4,
  0xf7, 0xff, 0xff, 0xff, 0xe0, 0x22, 0xba, 0xfe, 0xff, 0xff, 0x3f, 0xac,
  0xfd, 0xff, 0xff, 0xff, 0x30, 0x63, 0x40, 0xa8, 0xc1, 0x47, 0x0f, 0xfa,
  0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0xab, 0xc4, 0xf7, 0xff,
  0xff, 0xff, 0xe0, 0x22, 0xb9, 0xfe, 0xff, 0xff, 0x3f, 0xac, 0xfd, 0xff,
  0xff, 0xff, 0x30, 0x63, 0x40, 0xdc, 0x01, 0xf7, 0x0e, 0xf9, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0xab, 0xc4, 0xf7, 0xff, 0xff, 0xff,
  0xe0, 0x22, 0xb4, 0xfe, 0xff, 0xff, 0x3f, 0xac, 0xfd, 0xff, 0xff, 0xff,
  0x30, 0x63, 0x40, 0xb4, 0x81, 0x23, 0x3e, 0x3b, 0x53, 0x82, 0x8e, 0xe0,
  0x8c, 0x01, 0x41, 0x06, 0x19, 0x3e, 0xd8, 0x4f, 0x0d, 0x01, 0xcf, 0x18,
  0x10, 0x64, 0xf0, 0xe0, 0x83, 0xfd, 0x50, 0x7f, 0x00, 0x60, 0xc2, 0x00,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x24, 0x56, 0xe6, 0xfb, 0xff,
  0xff, 0x7f, 0x88, 0x91, 0x70, 0xff, 0xff, 0xff, 0x1f, 0xdc, 0xfe, 0xff,
  0xff, 0x7f, 0x98, 0x31, 0x20, 0xc0, 0x80, 0xc3, 0x07, 0xfb, 0x19, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x24, 0x56, 0xe6, 0xfb, 0xff, 0xff, 0x7f,
  0x88, 0x91, 0x5e, 0xff, 0xff, 0xff, 0x1f, 0xdc, 0xfe, 0xff, 0xff, 0x7f,
  0x98, 0x31, 0x20, 0xd4, 0xe0, 0xa3, 0x87, 0xfa, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0x24, 0x56, 0xe6, 0xfb, 0xff, 0xff, 0x7f, 0x88, 0x11,
  0x5e, 0xff, 0xff, 0xff, 0x1f, 0xdc, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31,
  0x20, 0xee, 0x80, 0x7b, 0x07, 0xfa, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x03, 0x24, 0x56, 0xe6, 0xfb, 0xff, 0xff, 0x7f, 0x88, 0x91, 0x70, 0xff,
  0xff, 0xff, 0x1f, 0xdc, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xc0,
  0x80, 0xc3, 0x87, 0xfd, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x24,
  0x56, 0xe6, 0xfb, 0xff, 0xff, 0x7f, 0x88, 0x91, 0x5e, 0xff, 0xff, 0xff,
  0x1f, 0xdc, 0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xd4, 0xe0, 0xa3,
  0x07, 0xfd, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x24, 0x56, 0xe6,
  0xfb, 0xff, 0xff, 0x7f, 0x88, 0x11, 0x5e, 0xff, 0xff, 0xff, 0x1f, 0xdc,
  0xfe, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xee, 0x80, 0x7b, 0x87, 0xfc,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x24, 0x56, 0xe6, 0xfb, 0xff,
  0xff, 0x7f, 0x88, 0x91, 0x5b, 0xff, 0xff, 0xff, 0x1f, 0xdc, 0xfe, 0xff,
  0xff, 0x7f, 0x98, 0x31, 0x20, 0xda, 0xc0, 0x11, 0x9f, 0x9d, 0x29, 0xc1,
  0x4f, 0x6e, 0xc6, 0x80, 0x28, 0x83, 0x0c, 0x1f, 0xec, 0xa7, 0x86, 0x80,
  0x67, 0x0c, 0x88, 0x32, 0x78, 0xf0, 0xc1, 0x7e, 0x08, 0x44, 0x00, 0x30,
  0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x2b, 0xf5,
  0xfd, 0xff, 0xff, 0x3f, 0xd0, 0x08, 0xb9, 0xff, 0xff, 0xff, 0x0f, 0x71,
  0xff, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0x60, 0xc0, 0xe1, 0x83, 0xfd,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x2b, 0xf5, 0xfd, 0xff,
  0xff, 0x3f, 0xd0, 0x08, 0xb8, 0xff, 0xff, 0xff, 0x0f, 0x71, 0xff, 0xff,
  0xff, 0x3f, 0xcc, 0x18, 0x10, 0x6a, 0xf0, 0xd1, 0x43, 0xfd, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x2b, 0xf5, 0xfd, 0xff, 0xff, 0x3f,
  0xd0, 0xc8, 0xaf, 0xff, 0xff, 0xff, 0x0f, 0x71, 0xff, 0xff, 0xff, 0x3f,
  0xcc, 0x18, 0x10, 0x77, 0xc0, 0xbd, 0x03, 0xfd, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x01, 0x42, 0x2b, 0xf5, 0xfd, 0xff, 0xff, 0x3f, 0xd0, 0x08,
  0xb9, 0xff, 0xff, 0xff, 0x0f, 0x71, 0xff, 0xff, 0xff, 0x3f, 0xcc, 0x18,
  0x10, 0x60, 0xc0, 0xe1, 0xc3, 0xfe, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x01, 0x42, 0x2b, 0xf5, 0xfd, 0xff, 0xff, 0x3f, 0xd0, 0x08, 0xb8, 0xff,
  0xff, 0xff, 0x0f, 0x71, 0xff, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0x6a,
  0xf0, 0xd1, 0x83, 0xfe, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42,
  0x2b, 0xf5, 0xfd, 0xff, 0xff, 0x3f, 0xd0, 0xc8, 0xaf, 0xff, 0xff, 0xff,
  0x0f, 0x71, 0xff, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0x77, 0xc0, 0xbd,
  0x43, 0xfe, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x2b, 0xf5,
  0xfd, 0xff, 0xff, 0x3f, 0xd0, 0x88, 0xae, 0xff, 0xff, 0xff, 0x0f, 0x71,
  0xff, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0x6d, 0xe0, 0x88, 0xcf, 0xce,
  0x50, 0x88, 0x00, 0x60, 0xc6, 0x80, 0x30, 0x83, 0x04, 0x1f, 0xec, 0xa7,
  0x86, 0x50, 0xc1, 0x19, 0x03, 0x82, 0x0d, 0xe6, 0x80, 0x1e, 0xea, 0xa7,
  0xc2, 0x24, 0xd8, 0x19, 0x03, 0x82, 0x0d, 0xc6, 0x80, 0x1e, 0xea, 0xe7,
  0x02, 0x6a, 0x67, 0x0c, 0x08, 0x36, 0x80, 0xe8, 0xa1, 0x7e, 0x2c, 0x88,
  0x91, 0xf8, 0xcc, 0x18, 0x10, 0x6c, 0x90, 0x07, 0xf4, 0x50, 0x3f, 0x64,
  0x22, 0x00, 0x98, 0x31, 0x20, 0xd8, 0x20, 0xa1, 0x87, 0xfa, 0x31, 0x49,
  0x90, 0xcf, 0x8c, 0x01, 0x91, 0x07, 0x76, 0xf0, 0x0e, 0xf4, 0x73, 0x01,
  0x30, 0x33, 0x06, 0x44, 0x1e, 0x74, 0xef, 0x40, 0x3f, 0xa5, 0x2a, 0x01,
  0xcc, 0x18, 0x10, 0x79, 0x60, 0xbd, 0x03, 0xfd, 0x90, 0x8a, 0x00, 0x60,
  0xc6, 0x80, 0xc8, 0x83, 0xe4, 0x1d, 0xe8, 0xa7, 0xc4, 0x40, 0x80, 0x19,
  0x03, 0x02, 0x0f, 0xc6, 0x40, 0x7c, 0x76, 0xa6, 0x82, 0x56, 0x81, 0x19,
  0x03, 0x02, 0x0f, 0x66, 0x41, 0x7c, 0x76, 0x86, 0x5a, 0x04, 0x00, 0x33,
  0x06, 0x04, 0x1e, 0x50, 0xe2, 0xb3, 0x33, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x80, 0x84, 0x4b, 0x88, 0xff, 0xff, 0xff, 0x0f, 0x61, 0x92, 0xeb,
  0xff, 0xff, 0xff, 0x83, 0xdf, 0xff, 0xff, 0xff, 0x0f, 0x33, 0x06, 0x44,
  0xa7, 0xe8, 0xc2, 0xce, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x19,
  0xd8, 0xca, 0x9d, 0x9c, 0x48, 0xac, 0xcc, 0x18, 0x10, 0x7c, 0x30, 0x0a,
  0xba, 0xb0, 0x33, 0xa3, 0x09, 0x41, 0x30, 0x61, 0x00, 0x14, 0x11, 0xd4,
  0x8c, 0x01, 0xc1, 0x07, 0x7e, 0xa0, 0x0b, 0x3b, 0x53, 0x72, 0x10, 0xc0,
  0x8c, 0x01, 0xc1, 0x07, 0x70, 0xa0, 0x0b, 0x3b, 0x33, 0x62, 0xa0, 0x00,
  0x20, 0x08, 0x06, 0x5e, 0xaf, 0xa0, 0x89, 0x8b, 0x04, 0xb3, 0x12, 0x26,
  0xb6, 0x32, 0x63, 0x40, 0xf0, 0x81, 0x2d, 0xe8, 0xc2, 0xce, 0x8c, 0x26,
  0x04, 0xc0, 0x84, 0x01, 0x30, 0x9a, 0x20, 0x04, 0x13, 0x06, 0xc0, 0x68,
  0xc2, 0x20, 0x4c, 0x18, 0x00, 0x64, 0x23, 0x00, 0x98, 0x31, 0x20, 0xf8,
  0x80, 0xd1, 0x85, 0x9d, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x44,
  0x5d, 0x52, 0xfc, 0xff, 0xff, 0x7f, 0x50, 0x13, 0x70, 0xff, 0xff, 0xff,
  0x1f, 0x5e, 0xff, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x00, 0x51, 0x17, 0x14, 0xff, 0xff, 0xff, 0x1f, 0xd4,
  0x04, 0xdc, 0xff, 0xff, 0xff, 0x07, 0xd7, 0xff, 0xff, 0xff, 0x1f, 0x26,
  0x0c, 0x80, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xd4, 0xe5, 0xc4,
  0xff, 0xff, 0xff, 0x07, 0x35, 0x01, 0xf7, 0xff, 0xff, 0xff, 0xa1, 0xed,
  0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0xc0, 0x88, 0x9f, 0x90, 0xcf, 0x8c,
  0x01, 0xd1, 0x07, 0x6e, 0xa0, 0x0b, 0x3b, 0x63, 0x45, 0x4f, 0xc8, 0x67,
  0xc2, 0x00, 0x30, 0x63, 0x27, 0xe4, 0x33, 0x61, 0x00, 0x98, 0x81, 0x16,
  0xf2, 0x99, 0x31, 0x20, 0xfa, 0xa0, 0x0f, 0x74, 0x61, 0x67, 0xec, 0x40,
  0x0b, 0xf9, 0x4c, 0x18, 0x00, 0x86, 0xa0, 0x85, 0x7c, 0x26, 0x0c, 0x00,
  0x33, 0x06, 0xf8, 0xcc, 0x18, 0x10, 0x7d, 0x20, 0x07, 0xba, 0xb0, 0x33,
  0x66, 0x0c, 0xf0, 0x99, 0x30, 0x00, 0xcc, 0x18, 0xe0, 0x33, 0x61, 0x00,
  0xd8, 0x02, 0x1b, 0xf2, 0x99, 0x31, 0x20, 0xfa, 0x80, 0x15, 0x74, 0x61,
  0x67, 0x8c, 0x81, 0x0d, 0xf9, 0x4c, 0x18, 0x00, 0xd6, 0xc0, 0x86, 0x7c,
  0x26, 0x0c, 0x00, 0x33, 0x06, 0xf8, 0xcc, 0x18, 0x10, 0x7d, 0x10, 0x0a,
  0xba, 0xb0, 0x33, 0x66, 0x0c, 0xf0, 0x99, 0x30, 0x00, 0xcc, 0x18, 0xe0,
  0x33, 0x61, 0x00, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x41, 0x36, 0x2f,
  0xab, 0x32, 0x08, 0xc1, 0x20, 0x04, 0x33, 0x06, 0x44, 0x1f, 0x6c, 0xba,
  0xb0, 0x33, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x70, 0xd5, 0xcb, 0xaa,
  0x04, 0x13, 0x06, 0x80, 0x15, 0x81, 0x7c, 0x26, 0x0c, 0x00, 0x2b, 0x04,
  0xf9, 0x4c, 0x18, 0x00, 0x56, 0x0c, 0xf2, 0x99, 0x30, 0x00, 0x68, 0x4d,
  0x00, 0x30, 0x63, 0x40, 0xf4, 0x01, 0xa3, 0x0b, 0x3b, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xc8, 0xbf, 0xec, 0xf8, 0xff, 0xff, 0xff, 0xf0,
  0x27, 0xf4, 0xfe, 0xff, 0xff, 0x3f, 0x90, 0xff, 0xff, 0xff, 0xff, 0x30,
  0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0xf2, 0x2f, 0x3a,
  0xfe, 0xff, 0xff, 0x3f, 0xfc, 0x09, 0xbd, 0xff, 0xff, 0xff, 0x0f, 0xe3,
  0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x80, 0xfc, 0x4b, 0x8e, 0xff, 0xff, 0xff, 0x0f, 0x7f, 0x42, 0xef,
  0xff, 0xff, 0xff, 0x83, 0xe8, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0x00,
  0xb1, 0x09, 0x00, 0x66, 0x0c, 0x88, 0x3f, 0x28, 0x74, 0x61, 0x67, 0xa8,
  0x4d, 0x00, 0x30, 0x63, 0x40, 0xdc, 0x81, 0xa5, 0x33, 0xc0, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x20, 0x21, 0xd3, 0xe3, 0xff, 0xff, 0xff, 0x43,
  0xa8, 0xc0, 0xfd, 0xff, 0xff, 0xff, 0x60, 0xfe, 0xff, 0xff, 0xff, 0xc3,
  0x8c, 0x01, 0x41, 0x07, 0x8c, 0x1b, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x80, 0x84, 0x0c, 0x8f, 0xff, 0xff, 0xff, 0x0f, 0xa1, 0x02, 0xf7,
  0xff, 0xff, 0xff, 0x43, 0xf9, 0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0xc0,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x21, 0xb3, 0xe3, 0xff, 0xff,
  0xff, 0x43, 0xa8, 0xc0, 0xfd, 0xff, 0xff, 0xff, 0x40, 0xfa, 0xff, 0xff,
  0xff, 0xc3, 0x84, 0x01, 0x30, 0x4b, 0x40, 0xcc, 0x18, 0x10, 0x78, 0x50,
  0xe8, 0x0c, 0x30, 0x50, 0x41, 0x31, 0x83, 0x3d, 0x09, 0x03, 0x15, 0x14,
  0x33, 0xe0, 0x93, 0x30, 0x50, 0x41, 0x31, 0x83, 0x3e, 0x09, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x80, 0x90, 0x4c, 0x8f, 0xff, 0xff, 0xff, 0x0f,
  0xa4, 0x32, 0xf7, 0xff, 0xff, 0xff, 0x43, 0xfa, 0xff, 0xff, 0xff, 0x0f,
  0x33, 0x06, 0x04, 0x1d, 0x30, 0x6e, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x01, 0x42, 0x32, 0x3c, 0xfe, 0xff, 0xff, 0x3f, 0x90, 0xca, 0xdc,
  0xff, 0xff, 0xff, 0x0f, 0xe8, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x90, 0xcc, 0x8e, 0xff, 0xff,
  0xff, 0x0f, 0xa4, 0x32, 0xf7, 0xff, 0xff, 0xff, 0xc3, 0xe9, 0xff, 0xff,
  0xff, 0x0f, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20,
  0x24, 0xd3, 0xe3, 0xff, 0xff, 0xff, 0x03, 0xa9, 0xcc, 0xfd, 0xff, 0xff,
  0xff, 0x90, 0xfe, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x08, 0xc9, 0xf0, 0xf8, 0xff, 0xff, 0xff, 0x40,
  0x2a, 0x73, 0xff, 0xff, 0xff, 0x3f, 0xa0, 0xff, 0xff, 0xff, 0xff, 0x30,
  0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x32, 0x3b,
  0xfe, 0xff, 0xff, 0x3f, 0x90, 0xca, 0xdc, 0xff, 0xff, 0xff, 0x0f, 0xa7,
  0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x14, 0x27, 0x00, 0x98, 0x31,
  0x20, 0xf4, 0x40, 0x0d, 0xdc, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x03, 0xa4, 0x64, 0x74, 0xfd, 0xff, 0xff, 0x7f, 0x28, 0x95, 0x7c, 0xff,
  0xff, 0xff, 0x1f, 0xc4, 0xff, 0xff, 0xff, 0x7f, 0x98, 0x31, 0x20, 0xe2,
  0x66, 0x0e, 0xfa, 0x01, 0x86, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00,
  0x29, 0x19, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0x4a, 0xe5, 0xde, 0xff, 0xff,
  0xff, 0x07, 0xf5, 0xff, 0xff, 0xff, 0x1f, 0x66, 0x0c, 0x88, 0xb8, 0x11,
  0x83, 0x7e, 0x80, 0xa1, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0x4a,
  0xa6, 0xc7, 0xff, 0xff, 0xff, 0x87, 0x52, 0xb9, 0xf7, 0xff, 0xff, 0xff,
  0x21, 0xfd, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x90, 0x92, 0xe1, 0xf1, 0xff, 0xff, 0xff, 0xa1, 0x54,
  0xee, 0xfd, 0xff, 0xff, 0x7f, 0x40, 0xfd, 0xff, 0xff, 0xff, 0x61, 0xc2,
  0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x64, 0x7c, 0xfc,
  0xff, 0xff, 0x7f, 0x28, 0x95, 0x7b, 0xff, 0xff, 0xff, 0x1f, 0xd4, 0xff,
  0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0x00, 0x29, 0x99, 0x1e, 0xff, 0xff, 0xff, 0x1f, 0x4a, 0xe5, 0xde, 0xff,
  0xff, 0xff, 0x87, 0xf4, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0x4a, 0x86, 0xc7, 0xff, 0xff, 0xff,
  0x87, 0x52, 0xb9, 0xf7, 0xff, 0xff, 0xff, 0x01, 0xf5, 0xff, 0xff, 0xff,
  0x87, 0x09, 0x03, 0x80, 0xe4, 0x04, 0x00, 0x33, 0x06, 0xc4, 0xdc, 0x30,
  0xfd, 0x00, 0x43, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x98, 0xcc,
  0xae, 0xff, 0xff, 0xff, 0x0f, 0xa6, 0x72, 0xef, 0xff, 0xff, 0xff, 0xc3,
  0xf8, 0xff, 0xff, 0xff, 0x0f, 0x33, 0x06, 0x84, 0xd8, 0xe8, 0x01, 0x48,
  0xcc, 0xd0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x26, 0xf3, 0xe3,
  0xff, 0xff, 0xff, 0x83, 0xa9, 0xd4, 0xfb, 0xff, 0xff, 0xff, 0xb0, 0xfe,
  0xff, 0xff, 0xff, 0xc3, 0x8c, 0x01, 0x21, 0x36, 0x69, 0x00, 0x12, 0x33,
  0x34, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0xc9, 0xf8, 0xf8, 0xff,
  0xff, 0xff, 0x60, 0x2a, 0xf5, 0xfe, 0xff, 0xff, 0x3f, 0xa8, 0xff, 0xff,
  0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01,
  0x62, 0x32, 0x3d, 0xfe, 0xff, 0xff, 0x3f, 0x98, 0x4a, 0xbd, 0xff, 0xff,
  0xff, 0x0f, 0xa9, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x80, 0x98, 0xcc, 0x8f, 0xff, 0xff, 0xff, 0x0f,
  0xa6, 0x52, 0xef, 0xff, 0xff, 0xff, 0xc3, 0xfa, 0xff, 0xff, 0xff, 0x0f,
  0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x26, 0xe3,
  0xe3, 0xff, 0xff, 0xff, 0x83, 0xa9, 0xd4, 0xfb, 0xff, 0xff, 0xff, 0xa0,
  0xfe, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x88, 0xc9, 0xf4, 0xf8, 0xff, 0xff, 0xff, 0x60, 0x2a, 0xf5,
  0xfe, 0xff, 0xff, 0x3f, 0xa4, 0xfe, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00,
  0xd0, 0x9c, 0x00, 0x60, 0xc6, 0x80, 0x20, 0x1b, 0x34, 0x00, 0x89, 0x19,
  0x1a, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xe4, 0x64, 0xc0, 0xfc, 0xff,
  0xff, 0x7f, 0x38, 0x95, 0x7a, 0xff, 0xff, 0xff, 0x1f, 0xd8, 0xff, 0xff,
  0xff, 0x7f, 0x98, 0x31, 0x20, 0x60, 0x85, 0x2b, 0x09, 0x1b, 0x1a, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0xe4, 0x64, 0x7e, 0xfc, 0xff, 0xff, 0x7f,
  0x38, 0x95, 0x7a, 0xff, 0xff, 0xff, 0x1f, 0xd6, 0xff, 0xff, 0xff, 0x7f,
  0x98, 0x30, 0x00, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x39, 0x19,
  0x1f, 0xff, 0xff, 0xff, 0x1f, 0x4e, 0xa5, 0xde, 0xff, 0xff, 0xff, 0x07,
  0xd5, 0xff, 0xff, 0xff, 0x1f, 0x26, 0x0c, 0x80, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x40, 0x4e, 0x06, 0xcc, 0xff, 0xff, 0xff, 0x87, 0x53, 0xa9,
  0xf7, 0xff, 0xff, 0xff, 0x81, 0xfd, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x93, 0xf9, 0xf1, 0xff,
  0xff, 0xff, 0xe1, 0x54, 0xea, 0xfd, 0xff, 0xff, 0x7f, 0x58, 0xff, 0xff,
  0xff, 0xff, 0x61, 0xc2, 0x00, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0xe4, 0x64, 0x7c, 0xfc, 0xff, 0xff, 0x7f, 0x38, 0x95, 0x7a, 0xff, 0xff,
  0xff, 0x1f, 0x54, 0xff, 0xff, 0xff, 0x7f, 0x98, 0x30, 0x00, 0x46, 0x0c,
  0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x12, 0x19, 0x7b, 0x31, 0x66, 0x0c, 0x08,
  0x59, 0x59, 0x4a, 0xc2, 0x86, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0,
  0x1a, 0x99, 0x7b, 0x31, 0x66, 0x0c, 0x08, 0x59, 0xb1, 0x4a, 0xc2, 0x86,
  0x4c, 0x08, 0xe0, 0x33, 0x63, 0x40, 0xc8, 0x0a, 0x55, 0x12, 0x36, 0x34,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x57, 0xc9, 0xe4, 0xcb, 0x31, 0x63,
  0x40, 0xc8, 0x4a, 0x18, 0x94, 0x84, 0x0d, 0x99, 0x10, 0xc0, 0x67, 0xc6,
  0x80, 0x90, 0x95, 0xaf, 0x24, 0x6c, 0xc8, 0x96, 0x80, 0x3e, 0x33, 0x06,
  0x84, 0xac, 0x1c, 0x25, 0x61, 0x43, 0xb6, 0x08, 0xf4, 0x99, 0x30, 0x00,
  0x6c, 0x19, 0xe8, 0x33, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x01, 0xf2, 0x32, 0x65, 0xfe, 0xff, 0xff, 0x3f, 0xbc, 0x4a, 0xbf, 0xff,
  0xff, 0xff, 0x0f, 0xf4, 0xff, 0xff, 0xff, 0x3f, 0xcc, 0x18, 0x10, 0xb0,
  0xc2, 0x95, 0x84, 0x0d, 0x8d, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0xf2,
  0x32, 0x64, 0xfe, 0xff, 0xff, 0x3f, 0xbc, 0x4a, 0xbf, 0xff, 0xff, 0xff,
  0x0f, 0xf3, 0xff, 0xff, 0xff, 0x3f, 0x4c, 0x18, 0x00, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x80, 0xbc, 0xcc, 0x98, 0xff, 0xff, 0xff, 0x0f, 0xaf,
  0xd2, 0xef, 0xff, 0xff, 0xff, 0x83, 0xec, 0xff, 0xff, 0xff, 0x0f, 0x13,
  0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x2f, 0x53, 0xe6,
  0xff, 0xff, 0xff, 0xc3, 0xab, 0xf4, 0xfb, 0xff, 0xff, 0xff, 0x40, 0xff,
  0xff, 0xff, 0xff, 0xc3, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xc8, 0xcb, 0x90, 0xf9, 0xff, 0xff, 0xff, 0xf0, 0x2a, 0xfd, 0xfe,
  0xff, 0xff, 0x3f, 0xcc, 0xff, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0xf2, 0x32, 0x63, 0xfe, 0xff, 0xff,
  0x3f, 0xbc, 0x4a, 0xbf, 0xff, 0xff, 0xff, 0x0f, 0xb2, 0xff, 0xff, 0xff,
  0x3f, 0x4c, 0x18, 0x00, 0xc3, 0x11, 0x41, 0xaa, 0x0c, 0xdf, 0x8c, 0x01,
  0x31, 0x2b, 0x50, 0x49, 0xd8, 0x10, 0xf5, 0x09, 0x00, 0x66, 0x0c, 0x88,
  0x59, 0x01, 0x83, 0x92, 0xb0, 0xa1, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x40, 0x62, 0xe6, 0xcc, 0xff, 0xff, 0xff, 0x87, 0x58, 0xe9, 0xf7, 0xff,
  0xff, 0xff, 0xc1, 0xfe, 0xff, 0xff, 0xff, 0x87, 0x19, 0x03, 0x42, 0x55,
  0x2e, 0x95, 0xc0, 0xa1, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0x62,
  0xc6, 0xcc, 0xff, 0xff, 0xff, 0x87, 0x58, 0xe9, 0xf7, 0xff, 0xff, 0xff,
  0xa1, 0xfe, 0xff, 0xff, 0xff, 0x87, 0x09, 0x03, 0x60, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x2e, 0x96, 0x01, 0x19, 0x62, 0xc6, 0x80, 0x60, 0x95,
  0x49, 0x25, 0x70, 0x68, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xae, 0x96,
  0x09, 0x19, 0x63, 0xc2, 0x00, 0x30, 0x56, 0x11, 0xe2, 0x33, 0x63, 0x40,
  0xb0, 0x4a, 0xa4, 0x12, 0x38, 0x64, 0xad, 0x22, 0xc4, 0x67, 0xc2, 0x00,
  0x18, 0x8e, 0x48, 0x5e, 0x65, 0xf8, 0x66, 0x0c, 0x08, 0x56, 0x31, 0x03,
  0x95, 0xc0, 0xa1, 0xe1, 0x88, 0x04, 0x56, 0x86, 0x6f, 0xc2, 0x00, 0x98,
  0x6e, 0x18, 0x15, 0x51, 0x11, 0x66, 0x0c, 0x08, 0x56, 0x09, 0x03, 0x95,
  0xc0, 0xa1, 0xe9, 0x06, 0x52, 0x19, 0x15, 0x61, 0xc2, 0x00, 0x38, 0x81,
  0xba, 0x19, 0x03, 0x82, 0x55, 0xc0, 0x40, 0x25, 0x70, 0xe8, 0x04, 0xea,
  0x26, 0x0c, 0x00, 0x43, 0x04, 0xf9, 0xcc, 0x18, 0x10, 0xac, 0xe2, 0xa9,
  0x04, 0x0e, 0x19, 0x22, 0xc8, 0x67, 0xc2, 0x00, 0x20, 0x55, 0x01, 0xc0,
  0x8c, 0x01, 0xc1, 0x2a, 0x85, 0x4a, 0xe0, 0xd0, 0x74, 0x83, 0x34, 0x3c,
  0x33, 0x06, 0xc4, 0xac, 0x30, 0x25, 0x61, 0x43, 0xd3, 0x0d, 0xd2, 0x00,
  0x4d, 0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x80, 0xcd,
  0x9c, 0xff, 0xff, 0xff, 0x0f, 0xe0, 0xe2, 0xf2, 0xff, 0xff, 0xff, 0x43,
  0x31, 0x63, 0x40, 0xc0, 0x0a, 0x57, 0x12, 0x36, 0x34, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x08, 0xd8, 0xd4, 0xf9, 0xff, 0xff, 0xff, 0x00, 0x2e,
  0x2e, 0xff, 0xff, 0xff, 0x3f, 0x10, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x60, 0x43, 0xe7, 0xff, 0xff, 0xff, 0x03, 0xb8,
  0xb8, 0xfc, 0xff, 0xff, 0xff, 0x30, 0xfe, 0xff, 0xff, 0xff, 0xc3, 0x84,
  0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x08, 0xd8, 0xcc, 0xf9,
  0xff, 0xff, 0xff, 0x00, 0x2e, 0x2e, 0xff, 0xff, 0xff, 0x3f, 0x14, 0x13,
  0x06, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x60, 0x23, 0xe7,
  0xff, 0xff, 0xff, 0x03, 0xb8, 0xb8, 0xfc, 0xff, 0xff, 0xff, 0x40, 0x4c,
  0x18, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x80, 0x0d, 0x9d,
  0xff, 0xff, 0xff, 0x0f, 0xe0, 0xe2, 0xf2, 0xff, 0xff, 0xff, 0xc3, 0xf8,
  0xff, 0xff, 0xff, 0x0f, 0x13, 0x06, 0x80, 0x09, 0xb7, 0x22, 0x9f, 0x19,
  0x03, 0x82, 0x56, 0xa2, 0x92, 0xb0, 0x21, 0x13, 0x70, 0x45, 0x3e, 0x13,
  0x06, 0x80, 0x09, 0xb9, 0x02, 0x9f, 0x19, 0x03, 0x82, 0x56, 0xae, 0x92,
  0xb0, 0x21, 0x13, 0x74, 0x05, 0x3e, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x64, 0x53, 0xe7, 0xff, 0xff, 0xff, 0x03, 0xb9,
  0xc8, 0xfc, 0xff, 0xff, 0xff, 0x90, 0xcc, 0x18, 0x10, 0xb0, 0xc2, 0x95,
  0x84, 0x0d, 0x8d, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x42, 0x36, 0x76,
  0xfe, 0xff, 0xff, 0x3f, 0x90, 0x8b, 0xcc, 0xff, 0xff, 0xff, 0x0f, 0xc8,
  0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x08, 0xd9, 0xe0,
  0xf9, 0xff, 0xff, 0xff, 0x40, 0x2e, 0x32, 0xff, 0xff, 0xff, 0x3f, 0x9c,
  0xff, 0xff, 0xff, 0xff, 0x30, 0x61, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x01, 0x42, 0x36, 0x75, 0xfe, 0xff, 0xff, 0x3f, 0x90, 0x8b, 0xcc,
  0xff, 0xff, 0xff, 0x0f, 0xc9, 0x84, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x08, 0xd9, 0xd0, 0xf9, 0xff, 0xff, 0xff, 0x40, 0x2e, 0x32,
  0xff, 0xff, 0xff, 0x3f, 0x20, 0x13, 0x06, 0xc0, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x20, 0x64, 0x83, 0xe7, 0xff, 0xff, 0xff, 0x03, 0xb9, 0xc8,
  0xfc, 0xff, 0xff, 0xff, 0x70, 0xfe, 0xff, 0xff, 0xff, 0xc3, 0x84, 0x01,
  0x40, 0xb1, 0x02, 0x80, 0x19, 0x03, 0xa2, 0x56, 0x8a, 0x92, 0xb0, 0x21,
  0x92, 0x15, 0x00, 0xcc, 0x18, 0x10, 0x64, 0xc3, 0x80, 0xc4, 0x0c, 0x8d,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x62, 0x36, 0x77, 0xfe, 0xff, 0xff,
  0x3f, 0x98, 0x0b, 0xcc, 0xff, 0xff, 0xff, 0x0f, 0xcb, 0x84, 0x01, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x88, 0xd9, 0xd8, 0xf9, 0xff, 0xff,
  0xff, 0x60, 0x2e, 0x30, 0xff, 0xff, 0xff, 0x3f, 0x28, 0x13, 0x06, 0xc0,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x20, 0x66, 0xb3, 0xef, 0xff, 0xff,
  0xff, 0x83, 0xb9, 0xc0, 0xfc, 0xff, 0xff, 0xff, 0x90, 0xfe, 0xff, 0xff,
  0xff, 0xc3, 0x84, 0x01, 0x40, 0xb3, 0x02, 0x80, 0x19, 0x03, 0xa2, 0x6c,
  0x18, 0x90, 0x98, 0xa1, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xce,
  0x06, 0xcf, 0xff, 0xff, 0xff, 0x87, 0x73, 0x81, 0xf9, 0xff, 0xff, 0xff,
  0x81, 0x99, 0x31, 0x20, 0x42, 0x06, 0x0c, 0x5e, 0x62, 0x87, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x00, 0x39, 0x9b, 0x3b, 0xff, 0xff, 0xff, 0x1f,
  0xce, 0x05, 0xe6, 0xff, 0xff, 0xff, 0x87, 0x65, 0xc2, 0x00, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0xe4, 0x6c, 0xf8, 0xfd, 0xff, 0xff, 0x7f,
  0x38, 0x17, 0x98, 0xff, 0xff, 0xff, 0x1f, 0xd4, 0xff, 0xff, 0xff, 0x7f,
  0x98, 0x30, 0x00, 0x88, 0x56, 0x00, 0x30, 0x63, 0x40, 0x8c, 0x8c, 0xf3,
  0x12, 0x3b, 0x34, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x08, 0xda, 0xe4,
  0xf9, 0xff, 0xff, 0xff, 0x80, 0x2e, 0x2f, 0xff, 0xff, 0xff, 0x3f, 0x14,
  0x33, 0x06, 0xc4, 0xb9, 0x68, 0x34, 0xd1, 0x43, 0x66, 0x80, 0x8b, 0x7c,
  0x66, 0x0c, 0x88, 0x74, 0xd1, 0x68, 0xa2, 0x87, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0x22, 0x9b, 0x79, 0x09, 0x66, 0x0c, 0x88, 0x74, 0x91,
  0x68, 0xa2, 0x87, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40, 0x0c, 0xc0,
  0x66, 0x5e, 0x02, 0x72, 0x99, 0x31, 0x20, 0xd2, 0x85, 0xa1, 0x89, 0x1e,
  0x1a, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x31, 0x08, 0x9b, 0x79, 0x09,
  0xc6, 0x65, 0xc2, 0x00, 0xb8, 0x00, 0x98, 0x09, 0x03, 0x80, 0x74, 0x05,
  0x00, 0x33, 0x06, 0x44, 0xba, 0x14, 0x34, 0xd1, 0x43, 0xb4, 0x2b, 0x00,
  0x98, 0x31, 0x20, 0x46, 0x46, 0x79, 0x89, 0x1d, 0x1a, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x03, 0xe4, 0x6d, 0xfc, 0xfc, 0xff, 0xff, 0x7f, 0x78, 0x17,
  0x9a, 0xff, 0xff, 0xff, 0x1f, 0x98, 0x09, 0x03, 0x80, 0x78, 0x05, 0x00,
  0x33, 0x06, 0x04, 0xc9, 0x38, 0x2f, 0xb1, 0x43, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x80, 0xc0, 0x0d, 0xa8, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0x72,
  0xf3, 0xff, 0xff, 0xff, 0x43, 0x33, 0x63, 0x40, 0x9c, 0x8b, 0x46, 0x13,
  0x3f, 0x64, 0x0d, 0xba, 0xc8, 0x67, 0xc6, 0x80, 0x48, 0x17, 0x8d, 0x26,
  0x7e, 0x68, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x2e, 0xb6, 0xd9, 0x97,
  0x60, 0xc6, 0x80, 0x48, 0x17, 0x89, 0x26, 0x7e, 0x68, 0xc4, 0xe0, 0x00,
  0x40, 0x10, 0x0c, 0xc4, 0x00, 0x6d, 0xf6, 0x25, 0x60, 0x97, 0x19, 0x03,
  0x22, 0x5d, 0x18, 0x9a, 0xf8, 0xa1, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0x10, 0x83, 0xb4, 0xd9, 0x97, 0x60, 0x5d, 0x26, 0x0c, 0x80, 0x0b, 0x80,
  0x99, 0x30, 0x00, 0x48, 0x5c, 0x00, 0x30, 0x63, 0x40, 0xa4, 0x4b, 0x41,
  0x13, 0x3f, 0x54, 0x42, 0xcf, 0xdc, 0x8c, 0x01, 0x41, 0x32, 0x63, 0xf0,
  0x12, 0x3b, 0x44, 0xe4, 0x02, 0x80, 0x19, 0x03, 0x82, 0x64, 0x94, 0x97,
  0xd8, 0xa1, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x40, 0xf0, 0xc6, 0xd4,
  0xff, 0xff, 0xff, 0x07, 0x7c, 0xd9, 0xf9, 0xff, 0xff, 0xff, 0xa1, 0x9a,
  0x30, 0x00, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0x0c, 0xde, 0x46,
  0x5f, 0xe2, 0x64, 0xc6, 0x80, 0x28, 0x19, 0xe7, 0x25, 0x76, 0xa8, 0x82,
  0xb1, 0xb9, 0x19, 0x03, 0xa2, 0x64, 0xbc, 0x97, 0xd8, 0x21, 0x3a, 0x17,
  0x00, 0xcc, 0x18, 0x10, 0x25, 0xa3, 0xbc, 0xc4, 0x0e, 0x8d, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x01, 0xb2, 0x37, 0xa8, 0xfe, 0xff, 0xff, 0x3f, 0xec,
  0x4b, 0xcf, 0xff, 0xff, 0xff, 0x0f, 0xd8, 0x84, 0x01, 0x50, 0x4f, 0xb1,
  0x33, 0x06, 0x84, 0xc9, 0x38, 0x2f, 0xb1, 0x43, 0x15, 0x0c, 0x3b, 0x63,
  0x40, 0x98, 0x8c, 0xf4, 0x12, 0x3b, 0x44, 0xea, 0x02, 0x80, 0x19, 0x03,
  0xc2, 0x64, 0x8a, 0x97, 0xd8, 0x21, 0x5a, 0x17, 0x00, 0xcc, 0x18, 0x10,
  0x65, 0x53, 0x80, 0xc4, 0x0c, 0x11, 0xbb, 0x00, 0x60, 0xc6, 0x80, 0x98,
  0x9b, 0xa2, 0x1f, 0x60, 0x68, 0xc4, 0xc0, 0x01, 0x40, 0x10, 0x0c, 0x1e,
  0xbf, 0x09, 0x19, 0x75, 0x29, 0x17, 0x72, 0xa9, 0x19, 0x82, 0x20, 0x88,
  0x7d, 0x99, 0x31, 0x20, 0xf4, 0x00, 0x0d, 0xdc, 0x00, 0xa0, 0x76, 0x01,
  0xc0, 0x8c, 0x01, 0xb1, 0x07, 0x81, 0x1b, 0x00, 0x38, 0x61, 0x00, 0x84,
  0x03, 0x01, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x76, 0x39, 0x60, 0xf8,
  0x08, 0x5d, 0xd3, 0xb4, 0x6d, 0x0e, 0x18, 0x3e, 0x42, 0xd7, 0xf4, 0x6d,
  0x9d, 0x03, 0x86, 0x8f, 0xd0, 0x35, 0x9d, 0x9b, 0xe8, 0x80, 0xe1, 0x23,
  0x74, 0x4d, 0xf3, 0x46, 0x3a, 0x60, 0xf8, 0x08, 0x5d, 0xd7, 0xb6, 0x39,
  0x06, 0x14, 0x3e, 0x42, 0xdb, 0xb5, 0x41, 0x06, 0x14, 0x3e, 0x42, 0xdb,
  0xb8, 0x69, 0x06, 0x14, 0x3e, 0x42, 0xdb, 0xbc, 0x7d, 0x06, 0x14, 0x3e,
  0x42, 0xdf, 0xb5, 0x95, 0x06, 0x14, 0x3e, 0x42, 0xdf, 0xb7, 0xd5, 0x06,
  0x14, 0x3e, 0x42, 0xdf, 0xba, 0xe1, 0x06, 0x14, 0x3e, 0x42, 0xe3, 0xb6,
  0x1d, 0x07, 0x14, 0x3e, 0x42, 0xe3, 0xbb, 0x7d, 0x07, 0x14, 0x3e, 0x42,
  0xe7, 0xb4, 0x91, 0x07, 0x14, 0x3e, 0x42, 0xe7, 0xb6, 0xc1, 0x07, 0x14,
  0x3e, 0x42, 0xe7, 0xb9, 0xcd, 0x07, 0x14, 0x3e, 0x42, 0xeb, 0xb5, 0xe5,
  0x07, 0x14, 0x3e, 0x42, 0xeb, 0xbb, 0xe1, 0x0a, 0x14, 0x3e, 0x42, 0xef,
  0xb6, 0xb1, 0x0b, 0x14, 0x3e, 0x42, 0xef, 0xb8, 0xbd, 0x0b, 0x14, 0x3e,
  0x42, 0xef, 0xbb, 0xc9, 0x0b, 0x14, 0x3e, 0x42, 0xf3, 0xb4, 0xd5, 0x0b,
  0x14, 0x3e, 0x42, 0xf3, 0xb7, 0xe1, 0x0b, 0x14, 0x3e, 0x42, 0xf3, 0xba,
  0xf5, 0x0b, 0x14, 0x3e, 0x42, 0xf3, 0xbd, 0x39, 0x0e, 0x14, 0x3e, 0x42,
  0xf7, 0xb6, 0x55, 0x0e, 0x14, 0x3e, 0x42, 0xf7, 0xba, 0x61, 0x0e, 0x18,
  0x3e, 0x52, 0xd7, 0xb4, 0x6d, 0x9c, 0x03, 0x86, 0x8f, 0xd4, 0x35, 0x8d,
  0x9b, 0xe7, 0x80, 0xe1, 0x23, 0x75, 0x4d, 0xeb, 0x36, 0x3a, 0x60, 0xf8,
  0x48, 0x5d, 0xd7, 0xb4, 0x95, 0x0e, 0x18, 0x3e, 0x52, 0xd7, 0x35, 0x6e,
  0x8f, 0x01, 0x85, 0x8f, 0xd4, 0xb6, 0x6d, 0x91, 0x01, 0x85, 0x8f, 0xd4,
  0xb6, 0x6e, 0x9b, 0x01, 0x85, 0x8f, 0xd4, 0x37, 0x6d, 0xa0, 0x01, 0x85,
  0x8f, 0xd4, 0xb7, 0x6d, 0xa6, 0x01, 0x85, 0x8f, 0xd4, 0x37, 0x6e, 0xb6,
  0x01, 0x85, 0x8f, 0xd4, 0x37, 0x6f, 0xb9, 0x01, 0x85, 0x8f, 0xd4, 0x38,
  0x6e, 0xc8, 0x01, 0x85, 0x8f, 0xd4, 0x38, 0x6f, 0xe0, 0x01, 0x85, 0x8f,
  0xd4, 0x79, 0x6d, 0xe5, 0x01, 0x85, 0x8f, 0xd4, 0xf9, 0x6d, 0xf1, 0x01,
  0x85, 0x8f, 0xd4, 0xf9, 0x6e, 0xf4, 0x01, 0x85, 0x8f, 0xd4, 0xfa, 0x6d,
  0xfa, 0x01, 0x85, 0x8f, 0xd4, 0x7a, 0x6f, 0xb9, 0x02, 0x85, 0x8f, 0xd4,
  0xfb, 0x6d, 0xed, 0x02, 0x85, 0x8f, 0xd4, 0x7b, 0x6e, 0xf0, 0x02, 0x85,
  0x8f, 0xd4, 0x3b, 0x6f, 0xf3, 0x02, 0x85, 0x8f, 0xd4, 0x7c, 0x6d, 0xf6,
  0x02, 0x85, 0x8f, 0xd4, 0x3c, 0x6e, 0xf9, 0x02, 0x85, 0x8f, 0xd4, 0xfc,
  0x6e, 0xfe, 0x02, 0x85, 0x8f, 0xd4, 0x3d, 0x6d, 0x8f, 0x03, 0x85, 0x8f,
  0xd4, 0xfd, 0x6d, 0x96, 0x03, 0x85, 0x8f, 0xd4, 0x3d, 0x6f, 0xa7, 0x01,
  0x83, 0x8f, 0xd8, 0x76, 0x1b, 0x50, 0xf8, 0x88, 0x8d, 0xd3, 0xa6, 0x1b,
  0x50, 0xf8, 0x88, 0x8d, 0xeb, 0x96, 0x1c, 0x50, 0xf8, 0x88, 0x8d, 0xf7,
  0x26, 0x1f, 0x50, 0xf8, 0x88, 0x9d, 0xf7, 0x56, 0x1f, 0x50, 0xf8, 0x88,
  0xad, 0xe7, 0xb6, 0x1f, 0x50, 0xf8, 0x88, 0xbd, 0xd7, 0xe6, 0x2e, 0x50,
  0xf8, 0x88, 0xbd, 0xeb, 0x16, 0x2f, 0x50, 0xf8, 0x88, 0xbd, 0xf7, 0x46,
  0x2f, 0x50, 0xf8, 0x88, 0xcd, 0xdb, 0x76, 0x2f, 0x50, 0xf8, 0x88, 0xcd,
  0xe7, 0xa6, 0x2f, 0x50, 0xf8, 0x88, 0xcd, 0xf3, 0xf6, 0x2f, 0x50, 0xf8,
  0x88, 0xdd, 0xd7, 0x06, 0x39, 0x50, 0xf8, 0x88, 0xdd, 0xe3, 0x46, 0x07,
  0x75, 0x2d, 0x32, 0x7c, 0xd4, 0xb2, 0xac, 0x84, 0xe4, 0xd3, 0x3e, 0x42,
  0x5b, 0x1d, 0xd4, 0xb5, 0xc8, 0xf0, 0x51, 0xcb, 0xb2, 0x12, 0x92, 0x4f,
  0xfb, 0x48, 0x6d, 0x8c, 0x03, 0xc4, 0xa7, 0x05, 0x92, 0x4d, 0x0e, 0x18,
  0x9f, 0x16, 0x48, 0xb5, 0x6e, 0x94, 0x03, 0xc6, 0xa7, 0x05, 0x52, 0xbd,
  0x9b, 0xe2, 0x40, 0xf1, 0x69, 0x81, 0xa4, 0x5b, 0xe2, 0x40, 0xf1, 0x69,
  0x81, 0xb4, 0x1b, 0x65, 0x40, 0xf1, 0x69, 0x81, 0xc4, 0x9b, 0x64, 0x40,
  0xf1, 0x69, 0x81, 0xd4, 0x1b, 0xed, 0x00, 0xf1, 0x99, 0xc0, 0x65, 0xac,
  0x03, 0xc6, 0x67, 0x02, 0x57, 0xcd, 0x5b, 0xed, 0x00, 0xf1, 0x99, 0x48,
  0x63, 0xad, 0x03, 0xc6, 0x67, 0x22, 0x4d, 0xdd, 0x5b, 0xa0, 0xc0, 0xf0,
  0x45, 0x82, 0xd9, 0x07, 0x14, 0x5f, 0x24, 0xd4, 0xb4, 0xdd, 0x07, 0x14,
  0x5f, 0x24, 0xd4, 0xb5, 0xe1, 0x07, 0x14, 0x5f, 0x24, 0xd4, 0xb6, 0x25,
  0x06, 0x38, 0x25, 0x61, 0x00, 0x02, 0xf6, 0xd5, 0x7a, 0xeb, 0x7c, 0xb7,
  0x6d, 0xba, 0x03, 0x4e, 0x49, 0x18, 0x80, 0x80, 0x7d, 0xb7, 0xdd, 0x3a,
  0x5f, 0xad, 0xdb, 0xb9, 0x40, 0xb3, 0x02, 0xd6, 0x46, 0x15, 0x05, 0x11,
  0x95, 0x0e, 0x30, 0xd8, 0xec, 0x00, 0xb2, 0x3a, 0x54, 0x33, 0xfc, 0x0d,
  0x61, 0xab, 0x03, 0xc9, 0xea, 0x50, 0xcd, 0xf0, 0x37, 0x44, 0x6e, 0xfc,
  0x02, 0xc5, 0x2a, 0x41, 0xd1, 0x64, 0xc6, 0x01, 0xc7, 0x2a, 0x41, 0xd1,
  0x54, 0xdf, 0x46, 0x1a, 0x70, 0xac, 0x12, 0x14, 0x4d, 0x35, 0x6e, 0x98,
  0x01, 0x08, 0x0b, 0x4c, 0x54, 0x04, 0x4c, 0x84, 0xd9, 0x2d, 0x2d, 0x71,
  0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xd8, 0x79, 0x40, 0xd3, 0x12, 0xd7,
  0x44, 0x45, 0x44, 0xe9, 0x00, 0x43, 0x9d, 0x1b, 0x97, 0x22, 0x04, 0xbf,
  0x10, 0x50, 0x45, 0x41, 0x44, 0x86, 0x35, 0x06, 0xc6, 0x1f, 0x4d, 0x2b,
  0x80, 0x49, 0x1d, 0x12, 0x11, 0xc2, 0x84, 0x38, 0x0d, 0x1a, 0x21, 0x06,
  0xd2, 0x74, 0xc4, 0x33, 0x1d, 0xbf, 0xab, 0xbd, 0xbf, 0x3d, 0x58, 0x96,
  0x67, 0xfc, 0x12, 0xc0, 0x3c, 0x0b, 0xc1, 0x12, 0x93, 0xf4, 0x4f, 0xc4,
  0x35, 0x51, 0x11, 0xf1, 0x4b, 0x53, 0x44, 0x09, 0x53, 0x40, 0x15, 0xa6,
  0x15, 0x06, 0xc6, 0x3f, 0x11, 0xd7, 0x0a, 0x60, 0x68, 0x84, 0x18, 0x48,
  0x93, 0x3a, 0x12, 0x32, 0x21, 0x4e, 0xf3, 0x4f, 0xc4, 0x35, 0x51, 0x11,
  0xf1, 0xdb, 0x83, 0x6d, 0xad, 0x81, 0xf1, 0x4f, 0xc4, 0xb5, 0x02, 0x18,
  0x1a, 0x21, 0x06, 0xd2, 0xb0, 0x54, 0x54, 0x00, 0x02, 0x71, 0x3a, 0x11,
  0x03, 0x2c, 0x1d, 0xf1, 0x4c, 0xc7, 0x3f, 0x11, 0xd7, 0x44, 0x45, 0xc4,
  0x6f, 0x0f, 0x36, 0x38, 0x10, 0x45, 0x00, 0xd6, 0x21, 0x11, 0x21, 0x4c,
  0x88, 0xd3, 0xf8, 0xb4, 0x8f, 0xd0, 0x46, 0x38, 0x10, 0x45, 0x00, 0xd6,
  0x21, 0x11, 0x21, 0x4c, 0x88, 0xd3, 0xf8, 0xb4, 0x8f, 0xd4, 0x56, 0x38,
  0x10, 0x45, 0x00, 0xd6, 0x21, 0x11, 0x21, 0x4c, 0x88, 0xd3, 0xf8, 0xb4,
  0x8f, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0xd8, 0x0a, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00,
  0xb6, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xc0, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xad, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xe4, 0xc1, 0x1c, 0x01, 0x18, 0x64, 0x00, 0x40, 0xc1, 0x08, 0x40,
  0x09, 0x06, 0x22, 0xca, 0x00, 0x00, 0x00, 0x19, 0x73, 0x04, 0x08, 0x21,
  0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b,
  0x81, 0x82, 0xa4, 0x2c, 0x03, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0xd0, 0x72, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2,
  0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x8a, 0xd2,
  0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0xcc, 0x00, 0x94, 0x01,
  0x02, 0x00, 0x8a, 0xca, 0x00, 0x01, 0x10, 0x4d, 0x05, 0x81, 0x00, 0x08,
  0x82, 0x20, 0x08, 0xa2, 0xea, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24,
  0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x01, 0x41, 0x10,
  0x04, 0x14, 0xe5, 0x02, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x2b,
  0xc7, 0x05, 0x28, 0x00, 0x80, 0x00, 0xa4, 0x95, 0x01, 0x00, 0x20, 0xe2,
  0x0a, 0x01, 0x01, 0x10, 0x44, 0xde, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x00,
  0x00, 0x00, 0x28, 0x04, 0x08, 0x28, 0x00, 0x85, 0x73, 0x04, 0x41, 0x31,
  0x14, 0x00, 0x01, 0x80, 0x91, 0xc8, 0x81, 0x80, 0x99, 0xd0, 0x60, 0x1c,
  0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f,
  0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e,
  0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c, 0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c,
  0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f, 0xf4, 0x40, 0x0f, 0xda, 0x21, 0x1d,
  0xe0, 0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0x01, 0x05,
  0xc0, 0x4c, 0xdd, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01,
  0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01,
  0x29, 0xf0, 0x41, 0x3d, 0xb8, 0xc3, 0x3c, 0xa4, 0xc3, 0x39, 0xb8, 0x43,
  0x39, 0x90, 0x03, 0x18, 0xa4, 0x83, 0x3b, 0xd0, 0x83, 0x1f, 0x20, 0x01,
  0x38, 0x09, 0x1d, 0x46, 0x20, 0xa0, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21,
  0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1,
  0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61,
  0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21,
  0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40,
  0x0f, 0xf4, 0xa0, 0x1d, 0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21,
  0x1f, 0xe0, 0xa1, 0x1c, 0x50, 0x00, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e,
  0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f,
  0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e,
  0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e,
  0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07,
  0x48, 0x50, 0x57, 0x62, 0x87, 0x11, 0x06, 0xe8, 0xc0, 0x40, 0x9a, 0x22,
  0x4a, 0x98, 0x7c, 0x6d, 0x41, 0x8c, 0x86, 0x18, 0x42, 0x82, 0x41, 0xa4,
  0xe7, 0x20, 0x22, 0x82, 0x05, 0x98, 0x67, 0x21, 0xee, 0x0e, 0x09, 0x2e,
  0x30, 0x53, 0x1c, 0x8c, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b,
  0xcc, 0x02, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xd4, 0x83, 0x3c,
  0x94, 0x03, 0x39, 0x88, 0x42, 0x3d, 0x98, 0x83, 0x39, 0x94, 0x83, 0x3c,
  0xf0, 0x41, 0x28, 0xb0, 0x43, 0x3a, 0x9c, 0x83, 0x3b, 0x94, 0x03, 0x39,
  0xa0, 0x42, 0x39, 0xb4, 0x43, 0x3a, 0xcc, 0x03, 0x3c, 0xa0, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xcc, 0x42, 0x38, 0xb4, 0x03, 0x3c, 0xb0, 0x43, 0x39,
  0xcc, 0x01, 0x29, 0xf8, 0x01, 0x0a, 0x5e, 0x82, 0x67, 0xfa, 0xc6, 0x81,
  0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x64, 0xe1, 0x16, 0x68, 0xa1,
  0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81,
  0x0f, 0xea, 0xc1, 0x1d, 0xe6, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81,
  0x1c, 0xc0, 0x20, 0x1d, 0xdc, 0x81, 0x1e, 0xfc, 0x00, 0x05, 0x00, 0xc9,
  0xc3, 0x08, 0x02, 0x70, 0x9b, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x2b, 0x80,
  0x81, 0x44, 0xc3, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0xb4, 0x51, 0x45, 0x41,
  0x44, 0xe8, 0xa0, 0x01, 0x00, 0x00, 0x00, 0xe0, 0x04, 0x21, 0x40, 0x41,
  0x4d, 0xf6, 0x1c, 0x01, 0x28, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x25, 0x40, 0x00, 0x1e,
  0xdc, 0x60, 0x0c, 0x79, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x18, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x59, 0x80, 0x00, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x30, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x27, 0x02, 0x02, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x04, 0x04,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0a,
  0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c,
  0x18, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0x34, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0xf2, 0x70, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x30, 0xe4, 0xf1, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0x13, 0x06, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x21, 0x03, 0x20, 0x00, 0x06, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x0c, 0x46,
  0x00, 0x8a, 0xa1, 0x08, 0x4a, 0xa1, 0x24, 0x0a, 0xa3, 0x40, 0x0a, 0xa8,
  0x1c, 0x0a, 0xa2, 0x10, 0x0a, 0xa5, 0x60, 0x0a, 0xa7, 0x28, 0x05, 0x4a,
  0xbc, 0xa0, 0x84, 0x4a, 0x8a, 0xf0, 0x52, 0xa1, 0x71, 0x04, 0x80, 0xd2,
  0x19, 0x00, 0x6a, 0x67, 0x00, 0xe8, 0x9d, 0x01, 0x20, 0x78, 0x06, 0x80,
  0xe2, 0x19, 0x00, 0x9a, 0x67, 0x00, 0xa8, 0x9e, 0x01, 0x20, 0x7b, 0x06,
  0x80, 0xee, 0x19, 0x00, 0x0a, 0x46, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0xe5, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0xc0, 0x99, 0x20, 0x00, 0xcf, 0x06, 0x61, 0x20, 0x26, 0x08, 0x00, 0xb4,
  0x41, 0x30, 0x0c, 0x0a, 0x63, 0x73, 0x13, 0x04, 0x20, 0xda, 0x30, 0x20,
  0x09, 0x31, 0x41, 0x48, 0x03, 0x32, 0x20, 0x18, 0x9c, 0x7d, 0xd1, 0x95,
  0xe1, 0x49, 0x85, 0xe5, 0x3d, 0xc9, 0xa5, 0x9d, 0xa5, 0xb9, 0x4d, 0xd5,
  0xc9, 0x99, 0x85, 0x8d, 0x95, 0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1, 0x11,
  0x95, 0xc1, 0xd1, 0xa1, 0x4d, 0x10, 0x00, 0x69, 0x82, 0x00, 0x4c, 0x1b,
  0x04, 0xc3, 0xd9, 0x90, 0x18, 0x0b, 0x63, 0x18, 0x43, 0x63, 0x3c, 0x13,
  0x84, 0x36, 0x28, 0x03, 0x5a, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x52, 0x61,
  0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x13, 0x04, 0x80, 0xda, 0x20, 0x18, 0xd3, 0x86, 0x64,
  0x88, 0x24, 0x63, 0x18, 0x1a, 0x83, 0x9a, 0x20, 0xc4, 0x01, 0x1a, 0x90,
  0x39, 0xfb, 0x9a, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x9b, 0x2a, 0xa3, 0x9b,
  0x9b, 0x20, 0x00, 0xd5, 0x04, 0x01, 0xb0, 0x36, 0x08, 0x43, 0xb6, 0x21,
  0x69, 0xac, 0xcb, 0x20, 0x06, 0xcc, 0xd0, 0x36, 0x0c, 0x50, 0xb5, 0x4d,
  0x10, 0xe6, 0x20, 0x0d, 0xc8, 0x9d, 0x7d, 0xc9, 0xd1, 0x49, 0x85, 0xe5,
  0xcd, 0x11, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9, 0x3d, 0xc9,
  0xa5, 0x9d, 0xa5, 0xb9, 0x11, 0x95, 0xc1, 0xd1, 0xa1, 0x4d, 0x10, 0xc6,
  0x60, 0x0c, 0x36, 0x2c, 0x46, 0xe7, 0x19, 0xc6, 0xd0, 0x7c, 0xdf, 0xf7,
  0x6c, 0x08, 0xc0, 0x60, 0x82, 0x70, 0x07, 0x6c, 0x40, 0x61, 0x4c, 0x6c,
  0x82, 0x00, 0x5c, 0x1b, 0x10, 0x43, 0x0c, 0xc6, 0xc0, 0x30, 0x06, 0x32,
  0x00, 0x36, 0x04, 0x65, 0xb0, 0x81, 0xe0, 0xc2, 0xc0, 0x0c, 0x80, 0x09,
  0x42, 0x1d, 0xa8, 0x01, 0x15, 0xba, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0x32,
  0xa2, 0xb4, 0xb6, 0x09, 0x02, 0x80, 0x6d, 0x30, 0x92, 0x34, 0x20, 0x0c,
  0x35, 0x70, 0xb8, 0x91, 0xbd, 0x0d, 0xa1, 0x95, 0x8d, 0xad, 0x95, 0xc9,
  0x89, 0xbd, 0x85, 0xc9, 0x91, 0x49, 0x85, 0xe5, 0x1d, 0x95, 0xb9, 0x95,
  0xc9, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0x4d, 0x10, 0x80, 0x6c, 0x82, 0x00,
  0x68, 0x1b, 0x8c, 0x84, 0x0d, 0x88, 0x36, 0x50, 0x03, 0x37, 0x60, 0x19,
  0x8c, 0xa1, 0x95, 0x8d, 0xad, 0x95, 0xc9, 0x89, 0xbd, 0x85, 0xc9, 0x91,
  0x1d, 0x95, 0xb9, 0x95, 0xc9, 0x85, 0xd1, 0x95, 0x49, 0x85, 0xe5, 0xcd,
  0x19, 0xbd, 0xc9, 0x15, 0xd9, 0x95, 0xb9, 0x41, 0xa5, 0xe1, 0x95, 0xb1,
  0xcd, 0x6d, 0x30, 0x12, 0x38, 0x20, 0x30, 0x35, 0x70, 0x03, 0x12, 0x73,
  0x65, 0x65, 0x64, 0x1b, 0x8c, 0x44, 0x0e, 0x88, 0x4c, 0x0d, 0x1c, 0x42,
  0x6e, 0x75, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x50, 0x65,
  0x72, 0x53, 0x65, 0x74, 0x13, 0x04, 0x60, 0xdb, 0x60, 0x24, 0x74, 0x40,
  0xd4, 0x81, 0x1a, 0x38, 0x6c, 0xdc, 0xea, 0xda, 0xa6, 0xc2, 0xda, 0xe0,
  0xd8, 0xca, 0xa6, 0xca, 0xe8, 0xe6, 0x26, 0x08, 0x00, 0xb7, 0xc1, 0x48,
  0xee, 0x80, 0xc0, 0x03, 0x35, 0x70, 0x58, 0xb9, 0xd5, 0xb5, 0x41, 0xa5,
  0xe1, 0x95, 0xb1, 0xcd, 0x41, 0x95, 0xc9, 0x11, 0xa5, 0xb5, 0x41, 0x95,
  0xc9, 0x4d, 0x95, 0xd1, 0x4d, 0x10, 0x80, 0x6e, 0x83, 0x91, 0xe8, 0x01,
  0xb1, 0x07, 0x6a, 0xe0, 0x6c, 0x40, 0xc8, 0x60, 0x0d, 0xde, 0x20, 0x0e,
  0xe6, 0xc0, 0x0e, 0xf2, 0x80, 0x0f, 0x26, 0x08, 0x70, 0x70, 0x06, 0x0c,
  0xd0, 0x36, 0x10, 0xc9, 0x1f, 0x10, 0xc6, 0x04, 0xe1, 0x0d, 0xcc, 0x60,
  0x83, 0x60, 0x84, 0xc2, 0x86, 0x40, 0x14, 0x36, 0x08, 0xc6, 0x28, 0x6c,
  0x18, 0x32, 0x50, 0x20, 0x05, 0x16, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1b,
  0x8c, 0xc4, 0x14, 0x08, 0x43, 0x0d, 0x26, 0x1e, 0x70, 0x61, 0x64, 0x64,
  0x69, 0x6e, 0x67, 0x1b, 0x8c, 0x04, 0x15, 0x08, 0x4c, 0x0d, 0x9c, 0x0d,
  0x43, 0x76, 0x0a, 0xa9, 0x30, 0x41, 0xb0, 0x83, 0x35, 0xd8, 0x40, 0x24,
  0x63, 0x40, 0x18, 0x1b, 0x04, 0x32, 0x60, 0x85, 0x0d, 0x89, 0x81, 0x06,
  0x7d, 0xe0, 0x07, 0xa5, 0x10, 0x0a, 0xaa, 0xb0, 0x0a, 0xad, 0x30, 0x41,
  0x28, 0x82, 0x0d, 0xc0, 0x86, 0xc1, 0x80, 0x05, 0x58, 0xd8, 0x10, 0xc4,
  0xc2, 0x86, 0x61, 0x78, 0x05, 0x59, 0x20, 0xd1, 0x16, 0x96, 0xe6, 0x36,
  0x41, 0xc0, 0x03, 0x31, 0xd8, 0x30, 0xb4, 0x41, 0x1b, 0x0c, 0x1b, 0x08,
  0xa3, 0x16, 0xdc, 0xc0, 0x16, 0x36, 0x14, 0xaf, 0x40, 0x0b, 0xc0, 0x19,
  0xdc, 0x02, 0x11, 0x31, 0xb9, 0x30, 0xb7, 0x31, 0xb4, 0xb2, 0x39, 0x1a,
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x13, 0x04, 0xc0, 0x63, 0x91, 0xe6,
  0x36, 0x47, 0x37, 0x37, 0x41, 0x00, 0x3e, 0x12, 0x69, 0x6e, 0x74, 0x73,
  0x13, 0x04, 0x00, 0x0c, 0x88, 0xd0, 0x95, 0xe1, 0x7d, 0xb1, 0xbd, 0x85,
  0x91, 0x31, 0xa1, 0x2b, 0xc3, 0xfb, 0x9a, 0xa3, 0x7b, 0x93, 0x2b, 0x63,
  0x51, 0x97, 0xe6, 0x46, 0x37, 0x37, 0x41, 0x00, 0xc2, 0x60, 0x83, 0x93,
  0x0b, 0x8d, 0x2e, 0xec, 0x02, 0x2f, 0xf4, 0x82, 0x2f, 0xfc, 0x02, 0x38,
  0x10, 0xe1, 0x30, 0x88, 0xc3, 0x38, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73,
  0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c,
  0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32,
  0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81, 0x51, 0x87,
  0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac,
  0x8c, 0x6d, 0x4a, 0x90, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b,
  0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x98, 0x41, 0x25, 0x32, 0x3c,
  0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba,
  0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x42, 0x2b, 0xc8, 0x42, 0x1d, 0x32, 0x3c,
  0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9,
  0x29, 0xc1, 0x2d, 0x74, 0x21, 0xc3, 0x73, 0x19, 0x7b, 0xab, 0x73, 0xa3,
  0x2b, 0x93, 0x9b, 0x9b, 0x12, 0x8c, 0x03, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x06, 0xc0, 0x0c, 0x97, 0xdf, 0x38, 0xd3, 0x81, 0x34, 0x86, 0x0f, 0xd8,
  0x02, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x6d, 0x0c, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14,
  0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72, 0xdb,
  0xd6, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84,
  0x40, 0x33, 0x2c, 0x84, 0x1d, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38,
  0xd3, 0xed, 0x17, 0xb7, 0x6d, 0x05, 0xd4, 0x70, 0xf9, 0xce, 0xe3, 0x2f,
  0x84, 0x01, 0x08, 0xd8, 0x57, 0xeb, 0xad, 0xf3, 0xdd, 0xb6, 0x29, 0x50,
  0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x10, 0x06, 0x20, 0x60, 0xdf, 0x6d, 0xb7,
  0xce, 0x57, 0xeb, 0x96, 0x70, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x04, 0x58,
  0x1b, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x08,
  0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a,
  0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x04, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f,
  0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x23, 0xb7, 0x6d, 0x03,
  0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e,
  0x4e, 0x44, 0xf8, 0xc8, 0x6d, 0x9b, 0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0xd3, 0x11, 0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x66, 0xf0, 0x0c,
  0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x01,
  0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00,
  0x38, 0x32, 0x34, 0x64, 0x64, 0x36, 0x34, 0x63, 0x35, 0x37, 0x37, 0x31,
  0x66, 0x64, 0x35, 0x36, 0x35, 0x63, 0x39, 0x36, 0x33, 0x39, 0x31, 0x33,
  0x37, 0x36, 0x64, 0x36, 0x33, 0x35, 0x31, 0x37, 0x2e, 0x70, 0x64, 0x62,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x82, 0x4d, 0xd6, 0x4c, 0x57, 0x71, 0xfd, 0x56,
  0x5c, 0x96, 0x39, 0x13, 0x76, 0xd6, 0x35, 0x17, 0x44, 0x58, 0x49, 0x4c,
  0x64, 0x10, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00, 0x19, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x4c, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x10, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0xa9, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf0, 0xc1, 0x1c,
  0x01, 0x18, 0x64, 0x00, 0x40, 0xc1, 0x08, 0x40, 0x09, 0x06, 0x22, 0xca,
  0x00, 0x00, 0x00, 0x19, 0x73, 0x04, 0x08, 0x21, 0xf7, 0x0c, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x82, 0xa4, 0x2c,
  0x03, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xd0, 0x72, 0xd3, 0x70,
  0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x3e, 0x72,
  0xdb, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x8a, 0xd2, 0x00, 0x0a, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe4, 0xcc, 0x00, 0x94, 0x01, 0x02, 0x00, 0x8a, 0xca,
  0x00, 0x01, 0x10, 0x4d, 0x05, 0x81, 0x00, 0x08, 0x82, 0x20, 0x08, 0xa2,
  0xea, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95,
  0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x01, 0x41, 0x10, 0x04, 0x14, 0xe5, 0x02,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x2b, 0xc7, 0x05, 0x28, 0x00,
  0x80, 0x00, 0xa4, 0x95, 0x01, 0x00, 0x20, 0xe2, 0x0a, 0x01, 0x01, 0x10,
  0x44, 0xde, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51,
  0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x00, 0x00, 0x00, 0x28, 0x04,
  0x08, 0x28, 0x00, 0x85, 0x73, 0x04, 0x41, 0x31, 0x14, 0x00, 0x01, 0x80,
  0x91, 0xc8, 0x81, 0x80, 0x99, 0xd0, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6,
  0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4,
  0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2,
  0xe1, 0x1c, 0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8,
  0xc1, 0x0f, 0xf4, 0x40, 0x0f, 0xda, 0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e,
  0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0x01, 0x05, 0xc0, 0x4c, 0xdd, 0x38,
  0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e,
  0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x41, 0x3d,
  0xb8, 0xc3, 0x3c, 0xa4, 0xc3, 0x39, 0xb8, 0x43, 0x39, 0x90, 0x03, 0x18,
  0xa4, 0x83, 0x3b, 0xd0, 0x83, 0x1f, 0x20, 0x01, 0x38, 0x09, 0x1d, 0x46,
  0x20, 0xa0, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d,
  0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d,
  0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40, 0x0f, 0xf4, 0xa0, 0x1d,
  0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21, 0x1f, 0xe0, 0xa1, 0x1c,
  0x50, 0x00, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef,
  0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c,
  0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x48, 0x50, 0x57, 0x62,
  0x87, 0x11, 0x06, 0xe8, 0xc0, 0x40, 0x9a, 0x22, 0x4a, 0x98, 0x7c, 0x6d,
  0x41, 0x8c, 0x86, 0x18, 0x42, 0x82, 0x41, 0xa4, 0xe7, 0x20, 0x22, 0x82,
  0x05, 0x98, 0x67, 0x21, 0xee, 0x0e, 0x09, 0x2e, 0x30, 0x53, 0x1c, 0x8c,
  0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xcc, 0x02, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x03, 0x39, 0x88,
  0x42, 0x3d, 0x98, 0x83, 0x39, 0x94, 0x83, 0x3c, 0xf0, 0x41, 0x28, 0xb0,
  0x43, 0x3a, 0x9c, 0x83, 0x3b, 0x94, 0x03, 0x39, 0xa0, 0x42, 0x39, 0xb4,
  0x43, 0x3a, 0xcc, 0x03, 0x3c, 0xa0, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xcc,
  0x42, 0x38, 0xb4, 0x03, 0x3c, 0xb0, 0x43, 0x39, 0xcc, 0x01, 0x29, 0xf8,
  0x01, 0x0a, 0x5e, 0x82, 0x67, 0xfa, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e,
  0xe6, 0xc1, 0x0d, 0x64, 0xe1, 0x16, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e,
  0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xea, 0xc1, 0x1d,
  0xe6, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81, 0x1c, 0xc0, 0x20, 0x1d,
  0xdc, 0x81, 0x1e, 0xfc, 0x00, 0x05, 0x00, 0xc9, 0xc3, 0x08, 0x02, 0x70,
  0x9b, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x2b, 0x80, 0x81, 0x44, 0xc3, 0x39,
  0x8d, 0x34, 0x01, 0xcd, 0xb4, 0x51, 0x45, 0x41, 0x44, 0xe8, 0xa0, 0x01,
  0x00, 0x00, 0x00, 0xe0, 0x04, 0x21, 0x40, 0x41, 0x4d, 0xf6, 0x1c, 0x01,
  0x28, 0x10, 0x30, 0x05, 0x30, 0x04, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x25, 0x40, 0x00, 0x1e,
  0xc4, 0x60, 0x0c, 0x79, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x18, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x59, 0x80, 0x00, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x30, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x27, 0x02, 0x02, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x04, 0x04,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0a,
  0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c,
  0x18, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0x34, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0xf2, 0x70, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x30, 0xe4, 0xf1, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0x13, 0x06, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x21, 0x03, 0x20, 0x00, 0x06, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x4a, 0xa0, 0x0c, 0x8a,
  0x61, 0x04, 0xa0, 0x08, 0x4a, 0xa1, 0x24, 0x0a, 0xa3, 0x40, 0x0a, 0xa8,
  0x10, 0x0a, 0x82, 0xf0, 0x52, 0xa1, 0x71, 0x04, 0x80, 0xd2, 0x19, 0x00,
  0x6a, 0x67, 0x00, 0x28, 0x9e, 0x01, 0xa0, 0x79, 0x06, 0x80, 0xee, 0x19,
  0x00, 0x0a, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0xc0, 0x99, 0x20, 0x00, 0xcf, 0x06, 0x61, 0x20, 0x26, 0x08, 0x00, 0xb4,
  0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06, 0xc4, 0x20, 0x26, 0x08,
  0x40, 0x34, 0x41, 0x48, 0x03, 0x8e, 0xc0, 0x04, 0x01, 0x90, 0x26, 0x08,
  0xc0, 0xb4, 0x41, 0x50, 0x9c, 0x0d, 0x89, 0xb2, 0x30, 0x8a, 0x32, 0x34,
  0xca, 0x33, 0x41, 0x68, 0x83, 0x6e, 0x82, 0x00, 0x50, 0x1b, 0x04, 0x45,
  0xda, 0x90, 0x0c, 0x11, 0xa3, 0x0c, 0x43, 0xa3, 0x4c, 0x13, 0x84, 0x38,
  0xf0, 0x26, 0x08, 0x40, 0x35, 0x41, 0x00, 0xac, 0x0d, 0xc2, 0x70, 0x6d,
  0x48, 0x9a, 0x8a, 0x51, 0x88, 0xc1, 0x52, 0xb0, 0x0d, 0x03, 0x44, 0x65,
  0x13, 0x84, 0x39, 0xf8, 0x26, 0x08, 0x63, 0xb0, 0x6d, 0x58, 0x94, 0x8d,
  0x51, 0x94, 0xa1, 0xe1, 0x38, 0xee, 0xd9, 0x10, 0x74, 0x13, 0x84, 0x3b,
  0x00, 0x83, 0x09, 0x02, 0x70, 0x6d, 0x40, 0x94, 0x8f, 0x51, 0x94, 0x01,
  0x0c, 0x80, 0x0d, 0x41, 0x18, 0x6c, 0x20, 0x34, 0x4f, 0x0c, 0x80, 0x09,
  0x42, 0x11, 0x90, 0x68, 0x0b, 0x4b, 0x73, 0x9b, 0x20, 0xe0, 0x81, 0x36,
  0x41, 0x00, 0xb0, 0x09, 0x02, 0x90, 0x6d, 0x18, 0xd0, 0x00, 0x0d, 0x86,
  0x0d, 0x84, 0x62, 0x06, 0x67, 0x90, 0x06, 0x1b, 0x0a, 0x32, 0x28, 0x03,
  0x60, 0x0c, 0xd4, 0xa0, 0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a, 0x59,
  0x99, 0x1b, 0xdd, 0x94, 0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57, 0x26,
  0x37, 0x97, 0xf6, 0xe6, 0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9, 0xd8,
  0x85, 0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78, 0x2e,
  0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53,
  0x02, 0xa4, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d, 0xdc,
  0x58, 0xd9, 0xdc, 0x94, 0x40, 0x0c, 0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9,
  0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0xd4,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x0c, 0x97,
  0xdf, 0x38, 0xd3, 0x81, 0x34, 0x86, 0x0f, 0xd8, 0x02, 0x34, 0x5c, 0xbe,
  0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x0c, 0xdb,
  0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0,
  0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72, 0xdb, 0xd6, 0x20, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84,
  0x1d, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7,
  0x6d, 0x05, 0xd4, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x84, 0x01, 0x08, 0xd8,
  0x57, 0xeb, 0xad, 0xf3, 0xdd, 0xb6, 0x29, 0x50, 0xc3, 0xe5, 0x3b, 0x8f,
  0xbf, 0x10, 0x06, 0x20, 0x60, 0xdf, 0x6d, 0xb7, 0xce, 0x57, 0xeb, 0x96,
  0x70, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x04, 0x58, 0x1b, 0x55, 0x14, 0x44,
  0x54, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x08, 0xd5, 0x70, 0xf9, 0xce,
  0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7,
  0x6d, 0x04, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11,
  0x51, 0x3a, 0xc0, 0xe0, 0x23, 0xb7, 0x6d, 0x03, 0xd6, 0x70, 0xf9, 0xce,
  0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8, 0xc8,
  0x6d, 0x9b, 0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11, 0xc0,
  0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x66, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e,
  0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x01, 0x04, 0x03, 0x20, 0x0d,
  0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0xf7, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x45, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x04, 0x94, 0xdd, 0x0c, 0x40, 0xc9, 0x15, 0x4b, 0xb9, 0x95, 0x4c, 0xe9,
  0x06, 0x14, 0x61, 0x40, 0xf9, 0x0f, 0x94, 0x46, 0x89, 0x14, 0x20, 0x20,
  0x20, 0xfe, 0x41, 0xd1, 0x94, 0x51, 0x21, 0x95, 0xa1, 0x40, 0x39, 0x94,
  0x5e, 0x69, 0xb3, 0x9e, 0xf6, 0x13, 0x94, 0x47, 0x59, 0x0a, 0x14, 0xa1,
  0x40, 0x19, 0x06, 0x10, 0x32, 0x02, 0x50, 0x02, 0x45, 0x50, 0x0e, 0xe5,
  0x41, 0xd0, 0x08, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x8d, 0x11,
  0x80, 0x20, 0xe8, 0xdf, 0x61, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x7f,
  0x63, 0x04, 0x3a, 0x6b, 0xce, 0xe9, 0x37, 0x46, 0x40, 0xb2, 0x7e, 0xa9,
  0x7e, 0x63, 0x04, 0xad, 0x39, 0xe7, 0xbc, 0x37, 0x46, 0x00, 0x82, 0x20,
  0x8c, 0x83, 0xc1, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x06, 0x63, 0x04,
  0x20, 0x08, 0x82, 0x20, 0x28, 0x8c, 0x11, 0xb0, 0x2f, 0x0d, 0xcf, 0xbf,
  0x30, 0x46, 0x90, 0x86, 0xb7, 0x0f, 0x7f, 0x63, 0x04, 0xfb, 0x58, 0xf2,
  0xea, 0x2f, 0x50, 0x3e, 0xd4, 0x11, 0x08, 0x00, 0x10, 0x01, 0x11, 0xed,
  0x63, 0x04, 0x20, 0x08, 0x82, 0x20, 0x08, 0x82, 0x20, 0xc8, 0xff, 0xc3,
  0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x82, 0x20, 0x08, 0xf2, 0xff, 0x02,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40, 0x06, 0xa1, 0xa0, 0x06, 0x54,
  0x1f, 0xf4, 0xc1, 0x1c, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x19,
  0x88, 0xc2, 0x1a, 0x58, 0x7d, 0x00, 0x0a, 0x74, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x64, 0x30, 0x0a, 0x6c, 0x70, 0x89, 0x82, 0x28, 0xd4,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x90, 0x01, 0x29, 0xb4, 0x01,
  0x06, 0x0a, 0xa0, 0x60, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40,
  0x06, 0xa5, 0xe0, 0x06, 0x57, 0x28, 0x84, 0xc2, 0x1d, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x81, 0x11, 0x0b, 0x6b, 0x20, 0x0a, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x60, 0xc8, 0x02, 0x1b, 0x98, 0x02, 0x29, 0x00, 0x18,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x30, 0x50, 0x05, 0x3a, 0x20, 0x4a,
  0x61, 0x34, 0x21, 0x10, 0x86, 0x1b, 0x82, 0x53, 0x08, 0x83, 0x59, 0x86,
  0x40, 0x08, 0xc8, 0x01, 0x40, 0x19, 0xac, 0xa0, 0xc3, 0x0d, 0x81, 0x2a,
  0x80, 0xc1, 0x70, 0x43, 0x10, 0x0a, 0x61, 0x70, 0x01, 0x10, 0x34, 0x01,
  0x60, 0xb8, 0x41, 0x70, 0x85, 0x30, 0xb8, 0x00, 0x88, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0x08, 0x83, 0x5a, 0xf8, 0x83, 0x07, 0x16, 0x46, 0x13,
  0x82, 0x61, 0xb8, 0x61, 0x08, 0xc2, 0x60, 0xb8, 0x21, 0x48, 0x85, 0x30,
  0xb8, 0x00, 0x08, 0xda, 0x00, 0x50, 0x54, 0x2d, 0x48, 0x05, 0x03, 0x90,
  0x07, 0x80, 0x59, 0x02, 0x61, 0xa0, 0x02, 0x20, 0x02, 0x37, 0x00, 0x06,
  0x2a, 0x00, 0x37, 0x08, 0xdc, 0x00, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04,
  0x03, 0x07, 0x1d, 0x46, 0x61, 0xdb, 0x05, 0x21, 0x48, 0x85, 0x54, 0x48,
  0x85, 0x54, 0x18, 0x4d, 0x08, 0x00, 0x1a, 0x03, 0x00, 0x10, 0x19, 0x00,
  0x80, 0xca, 0x00, 0x00, 0x64, 0x06, 0x00, 0xa8, 0x02, 0x15, 0xf4, 0x02,
  0xa8, 0x2c, 0xa0, 0x03, 0xfa, 0x90, 0x1a, 0x00, 0x80, 0xd6, 0x00, 0x00,
  0xa5, 0xf8, 0x02, 0x52, 0x1b, 0x00, 0xa0, 0x84, 0x57, 0xd0, 0x0b, 0xa0,
  0xb2, 0x60, 0x0f, 0xe8, 0x43, 0x71, 0x00, 0x00, 0x92, 0x03, 0x00, 0x54,
  0x84, 0x0e, 0x38, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x91, 0x3e, 0xb8,
  0x42, 0x40, 0x75, 0x00, 0x00, 0xb2, 0x03, 0x00, 0xd0, 0x1d, 0x00, 0x80,
  0xf0, 0x00, 0x00, 0x06, 0xf9, 0x81, 0x7c, 0x4c, 0xf9, 0x03, 0xf9, 0x98,
  0x70, 0x0a, 0xf1, 0x31, 0x01, 0x15, 0xe2, 0x33, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x93, 0x48, 0xe0, 0x83, 0x60, 0xaa, 0x10, 0xc4, 0x67, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0x26, 0x92, 0xd0, 0x87, 0xc1, 0x84, 0x20,
  0x3e, 0x14, 0x0a, 0x00, 0x30, 0x53, 0x10, 0xe2, 0x33, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x13, 0x4a, 0xf0, 0x42, 0x40, 0xa4, 0x00, 0x80, 0xe1,
  0x08, 0x45, 0x16, 0x86, 0x6f, 0x38, 0x42, 0x99, 0x85, 0xe1, 0xb3, 0x55,
  0x20, 0xe2, 0x33, 0xdd, 0x10, 0x14, 0xc3, 0x74, 0x83, 0x60, 0x0c, 0xf6,
  0x08, 0xf0, 0xb1, 0x47, 0x80, 0x0f, 0xb1, 0x02, 0x00, 0xa8, 0x15, 0x00,
  0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x95, 0x4c, 0xcc, 0x03, 0x31,
  0x38, 0xc4, 0xe0, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x44, 0x13,
  0xf3, 0x10, 0x98, 0x11, 0xc8, 0xc7, 0x0c, 0x41, 0x3e, 0x26, 0x0d, 0xf2,
  0xa1, 0x59, 0x00, 0x00, 0xd1, 0x02, 0x00, 0xa8, 0x16, 0x00, 0x40, 0xb6,
  0x00, 0x00, 0xba, 0x05, 0x00, 0x10, 0x2e, 0x00, 0x60, 0x38, 0xa2, 0x0c,
  0xcc, 0xc1, 0xf9, 0x86, 0x1b, 0x02, 0x95, 0x08, 0x83, 0xe1, 0x86, 0x60,
  0x25, 0xc2, 0x60, 0x96, 0x61, 0x20, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x08, 0x83, 0x9d, 0x28, 0x89, 0x5a, 0xb0, 0x89, 0xd1, 0x84, 0x00,
  0x20, 0x5f, 0x00, 0x00, 0xfd, 0x02, 0x00, 0x2c, 0x1d, 0x20, 0xf9, 0x98,
  0x3a, 0x40, 0xf2, 0xb1, 0x75, 0x80, 0xe4, 0x63, 0x83, 0x39, 0xc0, 0xc7,
  0x06, 0x73, 0x80, 0x8f, 0x0d, 0xe6, 0x00, 0x1f, 0x32, 0x07, 0x00, 0x98,
  0x25, 0xc8, 0xc7, 0x2c, 0x42, 0x3e, 0x26, 0x04, 0xf1, 0x31, 0xec, 0x90,
  0x8f, 0x6d, 0x86, 0x7c, 0x4c, 0x08, 0xe2, 0x63, 0x5d, 0x22, 0x1f, 0xeb,
  0x16, 0xf9, 0x98, 0x10, 0xc4, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c,
  0x2a, 0xba, 0xa8, 0x89, 0x83, 0x08, 0x0e, 0x22, 0x18, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x83, 0xc9, 0x2e, 0x6a, 0x22, 0xb0, 0x24, 0x90, 0x8f, 0x1d,
  0x82, 0x7c, 0xac, 0x18, 0xe4, 0x43, 0xf5, 0x00, 0x00, 0x1b, 0xc8, 0x40,
  0x3e, 0x36, 0x98, 0x81, 0x7c, 0x4c, 0x08, 0xe2, 0x63, 0x45, 0x1a, 0xc8,
  0xc7, 0x10, 0x34, 0x90, 0x8f, 0x09, 0x41, 0x7c, 0x4c, 0x59, 0x03, 0xf9,
  0x98, 0xd2, 0x06, 0xf2, 0x31, 0x21, 0x88, 0x0f, 0xfd, 0x03, 0x00, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0c, 0xfe, 0x22, 0x2d, 0xf2, 0xa1,
  0x2f, 0x46, 0x13, 0x82, 0xa1, 0xca, 0x20, 0x80, 0x0a, 0x40, 0x23, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0c, 0x46, 0xa3, 0x2d, 0xfa, 0x21,
  0x34, 0x46, 0x13, 0x82, 0xa1, 0x86, 0x60, 0xe8, 0x24, 0x00, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x61, 0x70, 0x1a, 0x71, 0x11, 0x12, 0xa5,
  0x31, 0x9a, 0x10, 0x0c, 0x25, 0x12, 0xc1, 0x94, 0x48, 0x08, 0x43, 0x2c,
  0x01, 0x80, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x08, 0x03, 0xd6, 0xb0,
  0x0b, 0x93, 0x50, 0x8d, 0xd1, 0x84, 0x60, 0xa8, 0x22, 0x90, 0x2a, 0x04,
  0xa1, 0x98, 0x00, 0xc0, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x60, 0xb5,
  0x41, 0x17, 0x2d, 0xc1, 0x1a, 0x83, 0xa0, 0x17, 0x7a, 0xa1, 0x17, 0x7a,
  0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x64,
  0x13, 0x00, 0x28, 0x26, 0x92, 0x0a, 0x1c, 0xb8, 0x00, 0x2a, 0xd2, 0x09,
  0x00, 0x18, 0x32, 0x16, 0xf2, 0x31, 0x84, 0x2c, 0xe4, 0x63, 0x48, 0x59,
  0xc8, 0xc7, 0x86, 0xb2, 0x80, 0x8f, 0x0d, 0x66, 0x01, 0x1f, 0x1b, 0xce,
  0x02, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x30, 0x99, 0xc7, 0x69,
  0x0c, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x30, 0x9d, 0x07, 0x6a, 0x0c,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x30, 0xa1, 0x47, 0x6a, 0x0c, 0x36,
  0xa8, 0x85, 0x7c, 0x6c, 0x58, 0x0b, 0xf9, 0xd8, 0xc0, 0x16, 0xf2, 0xb1,
  0x41, 0x90, 0x8f, 0x05, 0x82, 0x7c, 0xac, 0x20, 0xe0, 0x63, 0x01, 0x01,
  0x1f, 0x1b, 0x02, 0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x14,
  0x1f, 0xb2, 0x11, 0x50, 0x5b, 0x00, 0xc0, 0x2a, 0x41, 0x3e, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0x10, 0x06, 0xee, 0x81, 0x1b, 0x68, 0xc1, 0x1e,
  0xa3, 0x09, 0x01, 0x70, 0x01, 0x54, 0x46, 0x04, 0xf0, 0xb9, 0x00, 0x18,
  0xa2, 0x0b, 0x00, 0x50, 0x5d, 0x00, 0xa0, 0x06, 0xd7, 0xe0, 0x22, 0xd8,
  0x03, 0x4b, 0x08, 0xb8, 0x02, 0xf8, 0x90, 0x0a, 0xda, 0x03, 0x4b, 0x08,
  0xb8, 0x82, 0xd9, 0x90, 0x0a, 0x66, 0x03, 0x4b, 0x08, 0x98, 0xfe, 0x02,
  0x00, 0x04, 0x1a, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x30,
  0x00, 0x11, 0xf5, 0xd0, 0x0b, 0xff, 0x18, 0x4d, 0x08, 0x84, 0x0a, 0x40,
  0x24, 0x88, 0x34, 0x00, 0x50, 0xc2, 0x7f, 0x44, 0x05, 0x23, 0x02, 0x17,
  0x40, 0x45, 0xa8, 0x01, 0x00, 0x4a, 0x0d, 0x00, 0x14, 0xa3, 0x1e, 0x57,
  0x4d, 0xc0, 0xc4, 0x1a, 0x00, 0x28, 0x81, 0x3d, 0xb0, 0x86, 0x80, 0xe9,
  0x35, 0x00, 0x50, 0x02, 0x8a, 0x5c, 0x0d, 0x01, 0x93, 0x6c, 0x00, 0x80,
  0x66, 0x03, 0x00, 0x35, 0xac, 0x08, 0xd6, 0x7c, 0x04, 0x7b, 0x01, 0xb4,
  0x16, 0x8c, 0x47, 0x7c, 0x08, 0x37, 0x00, 0x60, 0x92, 0x20, 0x9f, 0x0b,
  0x80, 0xa9, 0x1a, 0x09, 0x80, 0x78, 0x03, 0x00, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x10, 0x06, 0x3c, 0x62, 0x22, 0xb6, 0xa1, 0x23, 0xa3, 0x09,
  0x41, 0x50, 0x44, 0x20, 0x04, 0x1e, 0x00, 0x18, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x83, 0x30, 0x00, 0x13, 0x15, 0xd1, 0x0d, 0x1f, 0x19, 0x4d, 0x08,
  0x86, 0xda, 0x8d, 0xa0, 0x6a, 0x37, 0x84, 0xa2, 0xf2, 0x00, 0xc0, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x84, 0x41, 0x99, 0xbc, 0xc8, 0x6f, 0x8c,
  0xc9, 0x68, 0x42, 0x30, 0x14, 0x11, 0x48, 0x05, 0x06, 0x90, 0x7a, 0x00,
  0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc2, 0x40, 0x4d, 0x68, 0x84,
  0x3c, 0xd0, 0x64, 0x34, 0x21, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0x20, 0x0c, 0xd8, 0xc4, 0x46, 0xcc, 0x43, 0x4d, 0x46, 0x13, 0x82, 0xa1,
  0x86, 0x40, 0x08, 0x3e, 0x00, 0x50, 0x82, 0x9b, 0x04, 0xc9, 0x07, 0x00,
  0x4a, 0x68, 0x93, 0xa8, 0x20, 0x4e, 0xe0, 0x02, 0xa8, 0xc8, 0x3e, 0x00,
  0x40, 0xf7, 0x01, 0x80, 0x3a, 0x03, 0x1c, 0xb9, 0x42, 0x83, 0x80, 0x49,
  0x3f, 0x00, 0x50, 0x82, 0x8e, 0x60, 0x0d, 0x01, 0x53, 0x7f, 0x00, 0xa0,
  0x04, 0x3b, 0xb9, 0x1a, 0x02, 0x26, 0x10, 0x01, 0x00, 0x85, 0x08, 0x00,
  0x6a, 0xc8, 0x13, 0xac, 0x30, 0x09, 0xf6, 0x02, 0x68, 0x2d, 0x88, 0x91,
  0xf8, 0x90, 0x89, 0x00, 0xc0, 0x24, 0x41, 0x3e, 0x17, 0x00, 0x53, 0xa3,
  0x12, 0x00, 0xa9, 0x08, 0x00, 0x4a, 0x0c, 0x04, 0xa8, 0xc0, 0x54, 0x80,
  0x5a, 0x04, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0x06, 0xad,
  0x72, 0x27, 0x27, 0xb2, 0x2a, 0xa3, 0x09, 0x41, 0x50, 0x44, 0x50, 0x25,
  0x07, 0x01, 0x8c, 0x18, 0x28, 0x00, 0x08, 0x82, 0x81, 0x46, 0x2b, 0x67,
  0xe2, 0x22, 0x01, 0xab, 0x84, 0x49, 0xa9, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0x02, 0xd9, 0x08, 0x00, 0x8c, 0xf8, 0x09,
  0xf9, 0x58, 0xd1, 0x13, 0xf2, 0x31, 0x63, 0x27, 0xe4, 0x63, 0x06, 0x5a,
  0xc8, 0xc7, 0x0e, 0xb4, 0x90, 0x8f, 0x21, 0x68, 0x21, 0x1f, 0x33, 0x06,
  0xf8, 0x98, 0x31, 0xc0, 0xc7, 0x8c, 0x01, 0x3e, 0xb6, 0xc0, 0x86, 0x7c,
  0x8c, 0x81, 0x0d, 0xf9, 0x58, 0x03, 0x1b, 0xf2, 0x31, 0x63, 0x80, 0x8f,
  0x19, 0x03, 0x7c, 0xcc, 0x18, 0xe0, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08,
  0x06, 0x95, 0xba, 0xac, 0xca, 0x20, 0x04, 0x83, 0x10, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0xc1, 0xc4, 0x2e, 0xab, 0x12, 0x58, 0x11, 0xc8, 0xc7,
  0x0a, 0x41, 0x3e, 0x56, 0x0c, 0xf2, 0xa1, 0x35, 0x01, 0x00, 0xb1, 0x09,
  0x00, 0xa8, 0x4d, 0x00, 0x30, 0x4b, 0x40, 0x0c, 0x54, 0x40, 0xcc, 0x60,
  0x4f, 0xc2, 0x40, 0x05, 0xc4, 0x0c, 0xf8, 0x24, 0x0c, 0x54, 0x40, 0xcc,
  0xa0, 0x4f, 0x02, 0xc5, 0x09, 0x00, 0x48, 0x4e, 0x00, 0x40, 0x73, 0x02,
  0x80, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x98, 0xf2, 0xe5, 0x5d, 0x8c,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x98, 0xf4, 0x05, 0x5e, 0x0c, 0x13,
  0x02, 0xf8, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0xc4, 0x2f, 0xf2,
  0x72, 0x98, 0x10, 0xc0, 0xc7, 0x96, 0x80, 0x3e, 0xb6, 0x08, 0xf4, 0xb1,
  0x65, 0xa0, 0xcf, 0x70, 0x44, 0x90, 0x2a, 0xc3, 0x47, 0x7d, 0x02, 0x80,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x98, 0x46, 0x26, 0x5f, 0x88, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x98, 0x48, 0x46, 0x5f, 0x0c, 0x63, 0x15,
  0x21, 0x3e, 0xd6, 0x2a, 0x42, 0x7c, 0x86, 0x23, 0x92, 0x57, 0x19, 0xbe,
  0xe1, 0x88, 0x04, 0x56, 0x86, 0x6f, 0xba, 0x61, 0x54, 0x44, 0x45, 0x98,
  0x6e, 0x20, 0x95, 0x51, 0x11, 0x4e, 0x80, 0xee, 0x04, 0xe8, 0x0c, 0x11,
  0xe4, 0x63, 0x88, 0x20, 0x1f, 0x52, 0x15, 0x00, 0x4c, 0x37, 0x48, 0xc3,
  0x33, 0xdd, 0x20, 0x0d, 0x90, 0x09, 0xb7, 0x22, 0x1f, 0x13, 0x70, 0x45,
  0x3e, 0x26, 0xe4, 0x0a, 0x7c, 0x4c, 0xd0, 0x15, 0xf8, 0x50, 0xac, 0x00,
  0x80, 0x64, 0x05, 0x00, 0x34, 0x2b, 0x00, 0x20, 0x5a, 0x01, 0x80, 0x19,
  0xe0, 0x22, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x98, 0x76, 0x66,
  0x5e, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xf0, 0x6e, 0x66, 0x5e,
  0x02, 0x72, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x0f, 0x67, 0xe6,
  0x25, 0x18, 0x97, 0x0b, 0x80, 0x21, 0x5d, 0x01, 0x00, 0xed, 0x0a, 0x00,
  0x88, 0x57, 0x00, 0x60, 0x0d, 0xba, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0xa6, 0xb1, 0xd9, 0x97, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xbc, 0x9f, 0xd9, 0x97, 0x80, 0x5d, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0xc0, 0x03, 0x9b, 0x7d, 0x09, 0xd6, 0xe5, 0x02, 0x60, 0x48, 0x5c,
  0x00, 0x50, 0x42, 0xcd, 0x1c, 0x91, 0x0b, 0x00, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x80, 0x33, 0x9b, 0x7c, 0x89, 0x93, 0x0a, 0x76, 0xe6, 0xe8,
  0x5c, 0x00, 0x50, 0x4f, 0xb1, 0x15, 0x0c, 0x4b, 0xea, 0x02, 0x00, 0x5a,
  0x17, 0x00, 0x10, 0xbb, 0x00, 0x60, 0xc4, 0xc0, 0x01, 0x40, 0x10, 0x0c,
  0x96, 0xba, 0x01, 0x19, 0x75, 0x29, 0x17, 0x72, 0xa9, 0x19, 0x82, 0x20,
  0x88, 0x7d, 0xa1, 0x76, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00
};
